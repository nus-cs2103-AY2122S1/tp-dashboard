[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"# DonnaFin.io","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"![CI Status](https://github.com/AY2122S1-CS2103T-W16-1/tp/actions/workflows/runAllChecks.yml/badge.svg)","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W16-1/tp/branch/master/graph/badge.svg?token\u003dTI96BI7OBN)](https://codecov.io/gh/AY2122S1-CS2103T-W16-1/tp)","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"* This is **a project targeted towards financial advisors**.\u003cbr\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"* The project simulates an ongoing software project for a desktop application (called _DonnaFin.io_) used for client management.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"* This project is named `DonnaFin.io` (`Donna` for short).","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"  * `Donna` is named after _Donna Paulsen_, the **amazing secretary** from _Suits_, whom this project aspires to emulate.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"  * `Fin` stands for financial advisor, our target audience.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"  * `.io` is a reflection of our belief that you deserve a faster workflow for input and output.","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"* For the detailed documentation of this project, see the **[DonnaFin Product Website](https://ay2122s1-cs2103t-w16-1.github.io/tp/)**.","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"_This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)._","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"sheehui":13,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"import org.gradle.api.tasks.testing.logging.TestLogEvent","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"mainClassName \u003d \u0027donnafin.Main\u0027","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"run {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"    enableAssertions(true);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"clean.doFirst {","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"    delete \"${rootDir}/data/\"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"    delete \"${rootDir}/config.json\"","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"    delete \"${rootDir}/preferences.json\"","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"    String testFxVersion \u003d \u00274.0.15-alpha\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"    testImplementation group: \u0027org.testfx\u0027, name: \u0027testfx-core\u0027, version: testFxVersion","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"    testRuntimeOnly group: \u0027org.testfx\u0027, name: \u0027openjfx-monocle\u0027, version: \u0027jdk-12.0.1+2\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"    archiveName \u003d \u0027donnafin.jar\u0027","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"bharathcs"},"content":"task(guiTests)","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"bharathcs"},"content":"task(nonGuiTests)","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"bharathcs"},"content":"// Run `test` task if `guiTests` or `nonGuiTests` is specified","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"guiTests.dependsOn test","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"nonGuiTests.dependsOn test","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"task(allTests)","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"// `allTests` implies both `guiTests` and `nonGuiTests`","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"allTests.dependsOn guiTests","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"allTests.dependsOn nonGuiTests","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"test {","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"    systemProperty \u0027testfx.setup.timeout\u0027, \u002760000\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"    testLogging {","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"        events TestLogEvent.FAILED, TestLogEvent.SKIPPED","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"bharathcs"},"content":"        // Prints the currently running test\u0027s name in the CI\u0027s build log,","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"bharathcs"},"content":"        // so that we can check if tests are being silently skipped or","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"bharathcs"},"content":"        // stalling the build.","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"bharathcs"},"content":"        if (System.env.\u0027CI\u0027) {","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"bharathcs"},"content":"            events \u003c\u003c TestLogEvent.STARTED","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"bharathcs"},"content":"    doFirst {","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"bharathcs"},"content":"        boolean runGuiTests \u003d gradle.taskGraph.hasTask(guiTests)","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"bharathcs"},"content":"        boolean runNonGuiTests \u003d gradle.taskGraph.hasTask(nonGuiTests)","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"bharathcs"},"content":"        if (!runGuiTests \u0026\u0026 !runNonGuiTests) {","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"bharathcs"},"content":"            runGuiTests \u003d true","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"bharathcs"},"content":"            runNonGuiTests \u003d true","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"bharathcs"},"content":"        if (runNonGuiTests) {","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"bharathcs"},"content":"            test.include \u0027donnafin/**\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"bharathcs"},"content":"        if (runGuiTests) {","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"bharathcs"},"content":"            test.include \u0027donnafin/ui/**\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"bharathcs"},"content":"        if (!runGuiTests) {","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"bharathcs"},"content":"            test.exclude \u0027donnafin/ui/**\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"bharathcs"},"content":"defaultTasks \u0027clean\u0027, \u0027allTests\u0027","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"bharathcs":66,"sheehui":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"### Tan Shee Hui","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"\u003cimg src\u003d\"images/sheehui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"[[github](https://github.com/sheehui)]","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"[[portfolio](team/sheehui.md)]","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"* Role: Team Lead","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"* Responsibilities: Storage + Scheduling and Deliverables","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"### Bharath Chandra Sudheer","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"\u003cimg src\u003d\"images/bharathcs.png\" alt\u003d\"Bharath\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"[[github](http://github.com/bharathcs)]","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"[[portfolio](team/bharathcs.md)]","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"* Role: Developer, Git Expert","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"* Responsibilities: Model layer, CI/CD, Code Quality","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"### Mrinal Ganesh","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"\u003cimg src\u003d\"images/mrmrinal.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"[[github](http://github.com/mrmrinal)] [[portfolio](team/mrmrinal.md)]","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"* Role: Developer, In charge of Documentation","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"* Responsibilities: In charge of UI","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Bluntsord"},"content":"### Tee Chin","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Bluntsord"},"content":"\u003cimg src\u003d\"images/bluntsord.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Bluntsord"},"content":"[[github](http://github.com/Bluntsord)]","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"Bluntsord"},"content":"[[portfolio](team/bluntsord.md)]","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"* Role: Developer, Architect,","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"Bluntsord"},"content":"* Responsibilities: UI layer and commons, Architecture","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"DonnyS57"},"content":"### Donny Suriyanto","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"DonnyS57"},"content":"\u003cimg src\u003d\"images/donnys57.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"DonnyS57"},"content":"[[github](http://github.com/DonnyS57)]","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"DonnyS57"},"content":"[[portfolio](team/donny.md)]","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"DonnyS57"},"content":"* Responsibilities: Logic Layer","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"bharathcs":6,"DonnyS57":5,"sheehui":5,"mrmrinal":5,"Bluntsord":7,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"Code Reuse","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"* [SE-EDU: Address Book 3](https://github.com/se-edu/addressbook-level3/) - served as the foundation of this project","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"* [SE-EDU: Address Book 4](https://github.com/se-edu/addressbook-level4/) - adapted their automated GUI tests for use here.","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"Libraries / Framework","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"* [JavaFX](https://github.com/openjdk/jfx) - front-end Java framework","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"* [ShadowJAR](https://github.com/johnrengelman/shadow) - generating fat JARs","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"* [Jackson](https://github.com/FasterXML/jackson) - file parsing framework for `.json`","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"* [JUnit](https://junit.org/) - testing framework","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"* [TestFX](https://testfx.github.io/TestFX/) - automated GUI testing framework","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"\u003cimg alt\u003d\"Architecture Diagram\" src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"\u003cimg alt\u003d\"Architecture Sequence Diagram\" src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"mrmrinal"},"content":"Here is an explanation of what takes place when the user enters the command `delete 1`","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"mrmrinal"},"content":"* The `UI` takes in the command inputted from the user and passes it to the `Logic` component that is responsible for parsing the input.","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"mrmrinal"},"content":"* The `Logic` component parses the command and the `deletePerson` method is called which engages the `Model` component.","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"mrmrinal"},"content":"* The `Model` component then deletes the `Person` object p from the `addressBook`.","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"mrmrinal"},"content":"* The `Logic` component then calls the `saveAddressBook` method to save the updated `addressBook` with the deleted person.","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"mrmrinal"},"content":"* The `Model` component then calls `saveAddressBook` method that engages the `Storage` component to save the updated changes to storage locally.","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"\u003cimg alt\u003d\"Component Managers\" src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"bharathcs"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java) specifies the API of this component.","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel` in home view and `CommandBox`, `ResultDisplay`, and `ClientPanel` in client view. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"bharathcs"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\" alt\u003d\"Logic Class Diagram\"/\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"sheehui"},"content":"1. When `Logic` is called upon to execute a command, it chooses an `ABCParser` class e.g `AddressBookParser`, `ContactTabParser` etc., ","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"sheehui"},"content":"to parse the user command.","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"sheehui"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"sheehui"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"sheehui"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"bharathcs"},"content":"\u003cimg alt\u003d\"Parser Classes\" src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"Bluntsord"},"content":"\u003cimg alt\u003d\"Parser Strategy\" src\u003d\"images/ParserStrategy.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"Bluntsord"},"content":"* `ParserContext` holds a reference to a `ParserStrategy` that is set based on the current tab the user is on etc.","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"Bluntsord"},"content":"* When ParserContext calls upon the current ParserStrategy to parse a user command, the `ABCParser` (`ABC` is a placeholder for the specific parser strategy e.g.,`ContactTabParser`) creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"sheehui"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` abstract class so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"Bluntsord"},"content":"* `ClientViewParser` and `AddressBookParser` inherit from `ParserStrategy` while the tab specific parsers inherit from `ClientViewParser` inherit.","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"Bluntsord"},"content":"\u003cimg alt\u003d\"SwitchTabExecution\" src\u003d\"images/SwitchTabExecutionSequenceDiagram.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"Bluntsord"},"content":"How the `ABCParser` in ParserContext is updated:","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"sheehui"},"content":"1. When a `XYZCommand` class (e.g. `HomeCommand`, `ViewCommand`,...) is executed, it returns a `CommandResult` object containing a logic action if the `XYZCommand` requires a change in tab or view.","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"Bluntsord"},"content":"2. `LogicManager` accepts this `CommandResult` object and executes the logic action if present. `LogicManager` is a facade that is able to set and change the current `ParserStrategy`.","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"sheehui"},"content":"3. `ParserContext` in `LogicManager` is updated to contain the `ABCParser` of the new view or tab.","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"bharathcs"},"content":"There is also another noteworthy Logic class, `PersonAdapter`, that serves as a wrapper for the Model class `Person`.","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"bharathcs"},"content":"The key differences are that `Person` is immutable and does not support edits, while the `PersonAdapter` effectively supports edits by wrapping a single `Person` object and replacing it with an edited copy as and when necessary.","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"bharathcs"},"content":"Such an implementation supports the user viewing and controlling a single client like with the `ViewCommand`.","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"bharathcs"},"content":"\u003cimg alt\u003d\"Model Class Diagram\" src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"DonnyS57"},"content":"* stores `Storage` object and communicates with it to save address book to user files.","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"bharathcs"},"content":"\u003cimg alt\u003d\"Storage Class Diagram\" src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"sheehui"},"content":"Classes used by multiple components are in the `donnafin.commons` package.","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"sheehui"},"content":"* Financial Advisor","lastModifiedDate":"2021-09-25"},{"lineNumber":196,"author":{"gitId":"DonnyS57"},"content":"* Has a need to manage a significant number of clients","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"sheehui"},"content":"  * Keep track of their financial and personal information","lastModifiedDate":"2021-09-25"},{"lineNumber":198,"author":{"gitId":"sheehui"},"content":"* Prefer desktop apps over other types","lastModifiedDate":"2021-09-25"},{"lineNumber":199,"author":{"gitId":"sheehui"},"content":"* Tech-savvy, comfortable with keyboard shortcuts (CLI apps)","lastModifiedDate":"2021-09-25"},{"lineNumber":200,"author":{"gitId":"sheehui"},"content":"* Can type fast","lastModifiedDate":"2021-09-25"},{"lineNumber":201,"author":{"gitId":"sheehui"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2021-09-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":204,"author":{"gitId":"sheehui"},"content":"**Value proposition**: manage customers faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-09-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":206,"author":{"gitId":"sheehui"},"content":"The product provides financial advisors with a clean, easy to use interface to prepare","lastModifiedDate":"2021-09-25"},{"lineNumber":207,"author":{"gitId":"bharathcs"},"content":"them for meetings and maintain good relationships with their clients. On a per-client basis,","lastModifiedDate":"2021-10-22"},{"lineNumber":208,"author":{"gitId":"sheehui"},"content":"DonnaFin keeps track and displays client’s financial details, their contact details, and","lastModifiedDate":"2021-10-22"},{"lineNumber":209,"author":{"gitId":"sheehui"},"content":"any notes about the client. In the main page, it collates all clients for easy access. In the","lastModifiedDate":"2021-10-22"},{"lineNumber":210,"author":{"gitId":"sheehui"},"content":"client information page, financial details of the specific client selected is neatly segmented into ","lastModifiedDate":"2021-10-22"},{"lineNumber":211,"author":{"gitId":"sheehui"},"content":"tabs for convenient and quick access.","lastModifiedDate":"2021-10-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":213,"author":{"gitId":"sheehui"},"content":"The product will not help them with work relations with other Financial Advisors as the","lastModifiedDate":"2021-09-25"},{"lineNumber":214,"author":{"gitId":"sheehui"},"content":"product’s scope only covers the personal use of the product. It does not link with any","lastModifiedDate":"2021-09-25"},{"lineNumber":215,"author":{"gitId":"sheehui"},"content":"financial calculators, financial databases or cover market information.","lastModifiedDate":"2021-10-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"Bluntsord"},"content":"Priorities: (must have) - `HIGH`, Medium (nice to have) - `MEDIUM`, Low (unlikely to have) - `LOW`","lastModifiedDate":"2021-10-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"| Priority | As a …​                                  | I want to …​               | So that I can…​                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"Bluntsord"},"content":"| `HIGH`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2021-10-22"},{"lineNumber":225,"author":{"gitId":"Bluntsord"},"content":"| `HIGH`  | user                                       | add a new client               | add new clients to my list                                             |","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"Bluntsord"},"content":"| `HIGH`  | user                                       | delete a client                | remove clients that I no longer have                                   |","lastModifiedDate":"2021-10-22"},{"lineNumber":227,"author":{"gitId":"Bluntsord"},"content":"| `HIGH`  | efficient user                                       | find a client by name          | locate details of clients without having to go through the entire list |","lastModifiedDate":"2021-10-22"},{"lineNumber":228,"author":{"gitId":"Bluntsord"},"content":"| `HIGH`  | user                                       | view a client\u0027s personal info  | find out the personal information about the client |","lastModifiedDate":"2021-10-22"},{"lineNumber":229,"author":{"gitId":"bharathcs"},"content":"| `HIGH`  | user                                       |  return to home window from client\u0027s information | move on to view my other clients instead of the current client that I am viewing |","lastModifiedDate":"2021-10-29"},{"lineNumber":230,"author":{"gitId":"Bluntsord"},"content":"| `HIGH`  | new user                                       | clear all clients   | delete all clients and reset all my contacts for the application |","lastModifiedDate":"2021-10-22"},{"lineNumber":231,"author":{"gitId":"Bluntsord"},"content":"| `HIGH`  |  user                                      |  edit a client\u0027s contact information  |  keep up to date with the clients information for further usage|","lastModifiedDate":"2021-10-22"},{"lineNumber":232,"author":{"gitId":"Bluntsord"},"content":"| `HIGH`  |  user                                      |  add a policy to the client\u0027s list of policies |  update the current policies the client has should a new policy be purchased| ","lastModifiedDate":"2021-10-22"},{"lineNumber":233,"author":{"gitId":"Bluntsord"},"content":"| `HIGH`  |  user                                      |  delete a policy to the client\u0027s list of policies |  update the current policies the client has |  ","lastModifiedDate":"2021-10-22"},{"lineNumber":234,"author":{"gitId":"Bluntsord"},"content":"| `HIGH`  |  user                                      |  add an asset to the client\u0027s  list of assets |   update the current assets the client has|  ","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"Bluntsord"},"content":"| `HIGH`  |  user                                      |  delete an asset from the client\u0027s list of assets |   update the current assets the client has|  ","lastModifiedDate":"2021-10-22"},{"lineNumber":236,"author":{"gitId":"Bluntsord"},"content":"| `HIGH`  |  efficient user                                      |   view the total value of all assets |   make decisions regarding the assets and inform the client about his aggregated asset value easily|  ","lastModifiedDate":"2021-10-22"},{"lineNumber":237,"author":{"gitId":"Bluntsord"},"content":"| `HIGH`  |   user                                      |    add a liability to the client\u0027s list of liabilities | update the current liabilities that the client has   |   ","lastModifiedDate":"2021-10-22"},{"lineNumber":238,"author":{"gitId":"Bluntsord"},"content":"| `HIGH`  |   user                                      |    delete a liability from the client\u0027s list of liabilities | update the current liabilities that the client has   |   ","lastModifiedDate":"2021-10-22"},{"lineNumber":239,"author":{"gitId":"Bluntsord"},"content":"| `MEDIUM`  |  efficient user                                      |   view the total value of liabilities |   make decisions regarding liabilities with more useful information |  ","lastModifiedDate":"2021-10-29"},{"lineNumber":240,"author":{"gitId":"Bluntsord"},"content":"| `MEDIUM`  |  user                                       |  jot down quick notes regarding the client | keep track of general information regarding the client |","lastModifiedDate":"2021-10-29"},{"lineNumber":241,"author":{"gitId":"Bluntsord"},"content":"| `MEDIUM`  | organised user                                       | switch between different tabs of client information, e.g financial information or personal information | have access to all the information of the client easily |","lastModifiedDate":"2021-10-29"},{"lineNumber":242,"author":{"gitId":"Bluntsord"},"content":"| `LOW`      | new user                                   | follow a tutorial when adding my first client | learn how to add a new client                           |","lastModifiedDate":"2021-10-22"},{"lineNumber":243,"author":{"gitId":"Bluntsord"},"content":"| `LOW`      | new user                                   | follow a tutorial when deleting a client       | learn how to remove a client that I do not want to keep track of    |","lastModifiedDate":"2021-10-22"},{"lineNumber":244,"author":{"gitId":"Bluntsord"},"content":"| `LOW`      | new user                                   | follow a tutorial to view a client\u0027s personal information      |  learn how to view a specific client\u0027s contact information   |","lastModifiedDate":"2021-10-22"},{"lineNumber":245,"author":{"gitId":"Bluntsord"},"content":"| `LOW`      | new user                                   |  follow a tutorial to switch between a client\u0027s information information tabs |   learn how to view all information regarding a specific client   |","lastModifiedDate":"2021-10-22"},{"lineNumber":246,"author":{"gitId":"Bluntsord"},"content":"| `LOW`      | new user                                   | follow a tutorial when adding policies to a client\u0027s list of policies       |  learn how to add policies to the list of policies of a specific client   |","lastModifiedDate":"2021-10-22"},{"lineNumber":247,"author":{"gitId":"Bluntsord"},"content":"| `LOW`      | new user                                   | follow a tutorial when deleting policies from a client\u0027s list of policies       |  learn how to delete policies from the list of policies of a specific client   |","lastModifiedDate":"2021-10-22"},{"lineNumber":248,"author":{"gitId":"Bluntsord"},"content":"| `LOW`      | new user                                   | follow a tutorial when adding assets to a client\u0027s list of assets      |   learn how to add assets to the list of assets of a specific client  |","lastModifiedDate":"2021-10-22"},{"lineNumber":249,"author":{"gitId":"Bluntsord"},"content":"| `LOW`      | new user                                   | follow a tutorial when adding delete from a client\u0027s list of asssets   |   learn how to delete assets from the list of assets of a specific client  |","lastModifiedDate":"2021-10-22"},{"lineNumber":250,"author":{"gitId":"Bluntsord"},"content":"| `LOW`      | new user                                   | follow a tutorial when adding liabilities to a client\u0027s list of liabilities      |   learn how to add liabilities to the list of liabilities of a specific client  |","lastModifiedDate":"2021-10-22"},{"lineNumber":251,"author":{"gitId":"Bluntsord"},"content":"| `LOW`      | new user                                   | follow a tutorial when deleting liabilities from a client\u0027s list of liabilities      |   learn how to delete liabilities from the list of liabilities of a specific client  |","lastModifiedDate":"2021-10-22"},{"lineNumber":252,"author":{"gitId":"bharathcs"},"content":"| `LOW`      | new user                                   | follow a tutorial when jotting down notes for a client |   learn how to jot down quick notes regarding general information of the client |","lastModifiedDate":"2021-10-22"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"DonnyS57"},"content":"(For all use cases below, the **System** is the `DonnaFin` application and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-30"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":260,"author":{"gitId":"DonnyS57"},"content":"**UC01: Adding a client to DonnaFin** \\","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"bharathcs"},"content":"State: Home Window","lastModifiedDate":"2021-10-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"DonnyS57"},"content":"1.  User requests to add client along with the relevant details.","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"DonnyS57"},"content":"2.  DonnaFin announces that the client has been successfully added.\\","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"DonnyS57"},"content":"    Use Case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"DonnyS57"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":270,"author":{"gitId":"DonnyS57"},"content":"* 1a. The user types the command using the wrong syntax.","lastModifiedDate":"2021-09-30"},{"lineNumber":271,"author":{"gitId":"DonnyS57"},"content":"  * 1a1. DonnaFin shows an error message and displays the correct format for the user to use and a correct example.\\","lastModifiedDate":"2021-10-21"},{"lineNumber":272,"author":{"gitId":"DonnyS57"},"content":"         Use Case resumes from step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":274,"author":{"gitId":"DonnyS57"},"content":"**UC02: Deleting a client from DonnaFin** \\","lastModifiedDate":"2021-10-21"},{"lineNumber":275,"author":{"gitId":"bharathcs"},"content":"State: Home Window","lastModifiedDate":"2021-10-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"DonnyS57"},"content":"1. User requests to delete a client from DonnaFin using the right syntax.","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"DonnyS57"},"content":"2. DonnaFin announces that the client has been successfully deleted.\\","lastModifiedDate":"2021-10-21"},{"lineNumber":281,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"DonnyS57"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"DonnyS57"},"content":"    * 1a1. DonnaFin shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":288,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"DonnyS57"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"DonnyS57"},"content":"**UC03: Finding a client by name** \\","lastModifiedDate":"2021-10-21"},{"lineNumber":292,"author":{"gitId":"bharathcs"},"content":"State: Home Window","lastModifiedDate":"2021-10-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":294,"author":{"gitId":"DonnyS57"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":295,"author":{"gitId":"DonnyS57"},"content":"1. User chooses to find a client within DonnaFin using the right syntax.","lastModifiedDate":"2021-10-21"},{"lineNumber":296,"author":{"gitId":"DonnyS57"},"content":"2. DonnaFin displays the clients that match the keyword inputted.","lastModifiedDate":"2021-10-21"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"DonnyS57"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":299,"author":{"gitId":"DonnyS57"},"content":"* 1a. The user types the command using the wrong syntax.","lastModifiedDate":"2021-09-30"},{"lineNumber":300,"author":{"gitId":"DonnyS57"},"content":"  * 1a1. DonnaFin shows an error message.\\","lastModifiedDate":"2021-09-30"},{"lineNumber":301,"author":{"gitId":"DonnyS57"},"content":"         Use Case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":302,"author":{"gitId":"DonnyS57"},"content":"* 1b. The keyword does not match any client.","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"DonnyS57"},"content":"  * 1b1. DonnaFin does not display any client.\\","lastModifiedDate":"2021-10-21"},{"lineNumber":304,"author":{"gitId":"DonnyS57"},"content":"         Use Case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":306,"author":{"gitId":"DonnyS57"},"content":"**UC04: Viewing the details of a client** \\","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"bharathcs"},"content":"State: Home Window","lastModifiedDate":"2021-10-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":309,"author":{"gitId":"DonnyS57"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":310,"author":{"gitId":"DonnyS57"},"content":"1. User requests to view a client using the right syntax.","lastModifiedDate":"2021-10-21"},{"lineNumber":311,"author":{"gitId":"bharathcs"},"content":"2. DonnaFin displays details on the client.","lastModifiedDate":"2021-10-13"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":313,"author":{"gitId":"DonnyS57"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":314,"author":{"gitId":"DonnyS57"},"content":"* 1a. The user types the command using the wrong syntax.","lastModifiedDate":"2021-09-30"},{"lineNumber":315,"author":{"gitId":"DonnyS57"},"content":"    * 1a1. DonnaFin shows an error message.\\","lastModifiedDate":"2021-09-30"},{"lineNumber":316,"author":{"gitId":"DonnyS57"},"content":"      Use Case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":317,"author":{"gitId":"DonnyS57"},"content":"* 1b. The given index is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":318,"author":{"gitId":"DonnyS57"},"content":"    * 1b1. DonnaFin shows an error message.\\","lastModifiedDate":"2021-09-30"},{"lineNumber":319,"author":{"gitId":"DonnyS57"},"content":"      Use Case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":322,"author":{"gitId":"DonnyS57"},"content":"**UC05: Getting help** \\","lastModifiedDate":"2021-10-21"},{"lineNumber":323,"author":{"gitId":"bharathcs"},"content":"State: Works on both Home and Client Window","lastModifiedDate":"2021-10-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"DonnyS57"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":326,"author":{"gitId":"DonnyS57"},"content":"1. User requests for help to get assistance on commands.","lastModifiedDate":"2021-09-30"},{"lineNumber":327,"author":{"gitId":"DonnyS57"},"content":"2. DonnaFin displays a window with the user guide for the DonnaFin application.","lastModifiedDate":"2021-09-30"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"DonnyS57"},"content":"**UC06: Listing all clients** \\","lastModifiedDate":"2021-10-21"},{"lineNumber":330,"author":{"gitId":"bharathcs"},"content":"State: Home Window","lastModifiedDate":"2021-10-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":332,"author":{"gitId":"DonnyS57"},"content":"**MSS**","lastModifiedDate":"2021-10-21"},{"lineNumber":333,"author":{"gitId":"DonnyS57"},"content":"1. User requests for the list of all the registered clients.","lastModifiedDate":"2021-10-21"},{"lineNumber":334,"author":{"gitId":"DonnyS57"},"content":"2. DonnaFin displays all the clients that has been registered within DonnaFin.","lastModifiedDate":"2021-10-21"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":336,"author":{"gitId":"DonnyS57"},"content":"**UC07: Exiting the application** \\","lastModifiedDate":"2021-10-21"},{"lineNumber":337,"author":{"gitId":"bharathcs"},"content":"State: Works on both Home and Client Window","lastModifiedDate":"2021-10-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":340,"author":{"gitId":"DonnyS57"},"content":"**MSS**","lastModifiedDate":"2021-10-21"},{"lineNumber":341,"author":{"gitId":"DonnyS57"},"content":"1. User requests to exit the application.","lastModifiedDate":"2021-10-21"},{"lineNumber":342,"author":{"gitId":"DonnyS57"},"content":"2. DonnaFin closes itself.","lastModifiedDate":"2021-10-21"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":344,"author":{"gitId":"DonnyS57"},"content":"**UC08: Switching to other tabs** \\","lastModifiedDate":"2021-10-21"},{"lineNumber":345,"author":{"gitId":"bharathcs"},"content":"State: Client Window","lastModifiedDate":"2021-10-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":347,"author":{"gitId":"DonnyS57"},"content":"**MSS**","lastModifiedDate":"2021-10-21"},{"lineNumber":348,"author":{"gitId":"bharathcs"},"content":"1. User requests to view another tab within the client Window.","lastModifiedDate":"2021-10-29"},{"lineNumber":349,"author":{"gitId":"DonnyS57"},"content":"2. DonnaFin switches the current tab to the requested tab.","lastModifiedDate":"2021-10-21"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":351,"author":{"gitId":"DonnyS57"},"content":"**Extensions**","lastModifiedDate":"2021-10-21"},{"lineNumber":352,"author":{"gitId":"DonnyS57"},"content":"* 1a. The user types the wrong command.","lastModifiedDate":"2021-10-21"},{"lineNumber":353,"author":{"gitId":"DonnyS57"},"content":"  * 1a1. DonnaFin shows an error message. \\","lastModifiedDate":"2021-10-21"},{"lineNumber":354,"author":{"gitId":"DonnyS57"},"content":"         Use case resumes at step 1.","lastModifiedDate":"2021-10-21"},{"lineNumber":355,"author":{"gitId":"DonnyS57"},"content":"* 1b. The user types the wrong tab title.","lastModifiedDate":"2021-10-21"},{"lineNumber":356,"author":{"gitId":"DonnyS57"},"content":"  * 1b1. DonnaFin shows an error message and tells the user that the tab they request does not match any existing tab. \\","lastModifiedDate":"2021-10-21"},{"lineNumber":357,"author":{"gitId":"DonnyS57"},"content":"         Use case resumes at step 1.","lastModifiedDate":"2021-10-21"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":359,"author":{"gitId":"bharathcs"},"content":"**UC09: Returning to Home Window**","lastModifiedDate":"2021-10-29"},{"lineNumber":360,"author":{"gitId":"bharathcs"},"content":"State: Client Window","lastModifiedDate":"2021-10-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":362,"author":{"gitId":"DonnyS57"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":364,"author":{"gitId":"bharathcs"},"content":"1. User requests to return to home window.","lastModifiedDate":"2021-10-29"},{"lineNumber":365,"author":{"gitId":"bharathcs"},"content":"2. DonnaFin switches the view back to home window.","lastModifiedDate":"2021-10-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":367,"author":{"gitId":"DonnyS57"},"content":"**Extensions**","lastModifiedDate":"2021-10-21"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":369,"author":{"gitId":"DonnyS57"},"content":"* 1a. The user types the wrong command.","lastModifiedDate":"2021-10-21"},{"lineNumber":370,"author":{"gitId":"DonnyS57"},"content":"  * 1a1. DonnaFin shows an error message. \\","lastModifiedDate":"2021-10-21"},{"lineNumber":371,"author":{"gitId":"DonnyS57"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2021-10-21"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":373,"author":{"gitId":"mrmrinal"},"content":"**UC10: Editing a client\u0027s contact information**","lastModifiedDate":"2021-10-22"},{"lineNumber":374,"author":{"gitId":"bharathcs"},"content":"State: Client Window (Contact Tab)","lastModifiedDate":"2021-10-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":376,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-10-22"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":378,"author":{"gitId":"mrmrinal"},"content":"1. User requests to edit client\u0027s contact information","lastModifiedDate":"2021-10-22"},{"lineNumber":379,"author":{"gitId":"bharathcs"},"content":"2. Field is edited and client window with the updated field is shown","lastModifiedDate":"2021-10-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":381,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-10-22"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":383,"author":{"gitId":"mrmrinal"},"content":"* 1a. The user types the wrong command.","lastModifiedDate":"2021-10-22"},{"lineNumber":384,"author":{"gitId":"mrmrinal"},"content":"    * 1a1. DonnaFin shows an error message. \\","lastModifiedDate":"2021-10-22"},{"lineNumber":385,"author":{"gitId":"mrmrinal"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-10-22"},{"lineNumber":386,"author":{"gitId":"mrmrinal"},"content":"* 1b. The user types in the new field with the unsupported format.","lastModifiedDate":"2021-10-22"},{"lineNumber":387,"author":{"gitId":"mrmrinal"},"content":"    * 1b1. Contact is not updated and DonnaFin shows an error message. \\","lastModifiedDate":"2021-10-22"},{"lineNumber":388,"author":{"gitId":"mrmrinal"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-10-22"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"DonnyS57"},"content":"4.  A novice with no coding background should be able to use the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":397,"author":{"gitId":"DonnyS57"},"content":"5.  The system should respond within 100 milliseconds.","lastModifiedDate":"2021-09-30"},{"lineNumber":398,"author":{"gitId":"DonnyS57"},"content":"6.  The size of the application should be no more than 100 MB.","lastModifiedDate":"2021-09-30"},{"lineNumber":399,"author":{"gitId":"DonnyS57"},"content":"7.  All data should be stored locally.","lastModifiedDate":"2021-09-30"},{"lineNumber":400,"author":{"gitId":"DonnyS57"},"content":"8.  The application should not need a remote server to function.","lastModifiedDate":"2021-09-30"},{"lineNumber":401,"author":{"gitId":"DonnyS57"},"content":"9.  The application should not require any installer to start functioning.","lastModifiedDate":"2021-09-30"},{"lineNumber":402,"author":{"gitId":"DonnyS57"},"content":"10. The GUI should appear fine for screen resolutions 1920x1080 and higher.","lastModifiedDate":"2021-09-30"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"DonnyS57"},"content":"* **Private client detail**: A client detail that is not meant to be shared with others","lastModifiedDate":"2021-10-21"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"bharathcs"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample clients. The window size may not be optimised for your display.","lastModifiedDate":"2021-10-29"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"bharathcs"},"content":"### Deleting a client","lastModifiedDate":"2021-10-29"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"bharathcs"},"content":"1. Deleting a client while all clients are being shown (home window)","lastModifiedDate":"2021-10-29"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"DonnyS57"},"content":"      Expected: First client is deleted from the list. Details of the deleted client shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-10-21"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"bharathcs"},"content":"      Expected: No client is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-29"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"bharathcs"},"content":"### Viewing and editing a client","lastModifiedDate":"2021-10-29"},{"lineNumber":455,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":456,"author":{"gitId":"bharathcs"},"content":"1. Enter client window","lastModifiedDate":"2021-10-29"},{"lineNumber":457,"author":{"gitId":"bharathcs"},"content":"    ","lastModifiedDate":"2021-10-29"},{"lineNumber":458,"author":{"gitId":"bharathcs"},"content":"    1. Prerequisites: Currently in the home window","lastModifiedDate":"2021-10-29"},{"lineNumber":459,"author":{"gitId":"bharathcs"},"content":"    ","lastModifiedDate":"2021-10-29"},{"lineNumber":460,"author":{"gitId":"bharathcs"},"content":"    1. Test case: `view 1`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":461,"author":{"gitId":"bharathcs"},"content":"       Expected: client window will be shown, and you can inspect the details of the client.","lastModifiedDate":"2021-10-29"},{"lineNumber":462,"author":{"gitId":"bharathcs"},"content":"   ","lastModifiedDate":"2021-10-29"},{"lineNumber":463,"author":{"gitId":"bharathcs"},"content":"    1. Test case: `view -4`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":464,"author":{"gitId":"bharathcs"},"content":"       Expected: As it is not a valid index, you will remain in the home window with an error command output.","lastModifiedDate":"2021-10-29"},{"lineNumber":465,"author":{"gitId":"bharathcs"},"content":"       ","lastModifiedDate":"2021-10-29"},{"lineNumber":466,"author":{"gitId":"bharathcs"},"content":"    1. Test case: editing fields","lastModifiedDate":"2021-10-29"},{"lineNumber":467,"author":{"gitId":"bharathcs"},"content":"       Expected: Switching tabs and editing fields with the commands listed in the user guide [here](./UserGuide.md#Client-Window-Commands) works correctly.","lastModifiedDate":"2021-10-29"},{"lineNumber":468,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":469,"author":{"gitId":"bharathcs"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2021-10-29"},{"lineNumber":470,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":471,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bharathcs":62,"DonnyS57":74,"mrmrinal":14,"sheehui":26,"Bluntsord":37,"-":264}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"   1. Run the `Main` and try a few commands.","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"sheehui":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.commons.StringUtilTest`","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"sheehui"},"content":"   e.g. `StorageManagerTest`","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"sheehui"},"content":"   e.g. `LogicManagerTest`","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"sheehui":2,"-":34}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"DonnaFin.io is a desktop application used by financial advisors to keep track of their ","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"client information and related tasks. This is a Java program with about 10 kloc with ","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"a JavaFX GUI. The \u0027.io\u0027 in our name is a reflection of our belief that you deserve a ","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"faster workflow for input and output. If you can type fast, you can use our CLI-like ","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"commands to manage your client information and view your notes much faster ","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"than your typical customer relationship manager apps.","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"Note: From here on we shall refer to DonnaFin.io as DonnaFin for your readability.","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"1. Download the latest `donnafin.jar` from [here](https://github.com/AY2122S1-CS2103T-W16-1/tp/releases).","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your DonnaFin app.","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the DonnaFin.","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"sheehui"},"content":"* The format given for monetary parameters includes `$`, you should add it or the input will be rejected. \u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"sheehui"},"content":"  e.g. A valid input for `v/$ASSET_VALUE` is `v/$1000`. `v/1000` will not be accepted by DonnaFin.","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"sheehui"},"content":"### Global Commands","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"sheehui"},"content":"These commands can be accessed from any window of DonnaFin.","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"sheehui"},"content":"#### Viewing help : `help`","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"sheehui"},"content":"\u003cimg alt\u003d\"help message\" src\u003d\"./images/helpMessage.png\" width\u003d\"1232\"/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"sheehui"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"sheehui"},"content":"Exits the program.","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"sheehui"},"content":"Format: `exit`","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"sheehui"},"content":"### Home Window Commands","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"sheehui"},"content":"These commands are exclusive to Home Window the default ","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"sheehui"},"content":"window that pops up when DonnaFin is opened.","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"sheehui"},"content":"#### Adding a Client : `add`","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"mrmrinal"},"content":"Adds a person to the DonnaFin.","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"sheehui"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"sheehui"},"content":"* `add n/Betsy Crowe e/betsycrowe@example.com a/Newgate Prison p/1234567`","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"sheehui"},"content":"#### Deleting a Client : `delete`","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"sheehui"},"content":"Deletes the specified person from the DonnaFin.","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"sheehui"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"sheehui"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"sheehui"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"sheehui"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"sheehui"},"content":"Examples:","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"sheehui"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the DonnaFin.","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"sheehui"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"sheehui"},"content":"#### Listing All Clients : `list`","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"mrmrinal"},"content":"Shows a list of all persons in the DonnaFin.","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"sheehui"},"content":"#### Locating Clients by Name: `find`","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"sheehui"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"mrmrinal"},"content":"Clears all entries from the DonnaFin.","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"sheehui"},"content":"#### View Client Information : `view`","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"sheehui"},"content":"Access client information in a \u0027client view\u0027 mode where all data on the client is presented to you. Once in the page, you can see each field in detail and edit existing information.","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":148,"author":{"gitId":"sheehui"},"content":"Format: view INDEX","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"sheehui"},"content":"* Edits the client at the specified INDEX. The index refers to the index number shown in the displayed person list. ","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"sheehui"},"content":"* The index **must be a positive integer** 1, 2, 3, ...​","lastModifiedDate":"2021-10-28"},{"lineNumber":152,"author":{"gitId":"sheehui"},"content":"* The view screen will switch to the client window.","lastModifiedDate":"2021-10-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"sheehui"},"content":"* `view 1`","lastModifiedDate":"2021-10-28"},{"lineNumber":156,"author":{"gitId":"sheehui"},"content":"* This will open a new view mode, where the client\u0027s data is present in field-value pairs as such:","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"sheehui"},"content":"* ![Client View Mockup](./images/ClientViewNew.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"sheehui"},"content":"* The information related to the client is separated to different tabs.","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"sheehui"},"content":"* Each tab contains information closely related to the title of the tab.","lastModifiedDate":"2021-10-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":162,"author":{"gitId":"sheehui"},"content":"### Client Window Commands","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"sheehui"},"content":"These commands are exclusive to client window. They give access and writing privileges for any client information","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"sheehui"},"content":"fields. You can access these commands once you have entered the Client Window using our `view` command.","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"sheehui"},"content":"#### Switching Tabs : `tab`","lastModifiedDate":"2021-10-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"mrmrinal"},"content":"Allows user to navigate to a different tab.","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"sheehui"},"content":"* There are 5 tabs: Contacts, Policies, Assets, Liabilities and Notes.","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"DonnyS57"},"content":"Format: `tab KEYWORD`","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"sheehui"},"content":"##### Contacts Tab","lastModifiedDate":"2021-10-28"},{"lineNumber":175,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":176,"author":{"gitId":"sheehui"},"content":"Switches from any tab in Client Window to `Contact` tab.","lastModifiedDate":"2021-10-28"},{"lineNumber":177,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":178,"author":{"gitId":"bharathcs"},"content":"Keywords: `c`, `contact` or `contacts` (case insensitive)","lastModifiedDate":"2021-11-01"},{"lineNumber":179,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":180,"author":{"gitId":"sheehui"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"sheehui"},"content":"* `tab c`","lastModifiedDate":"2021-10-28"},{"lineNumber":182,"author":{"gitId":"sheehui"},"content":"* `tab contact`","lastModifiedDate":"2021-10-28"},{"lineNumber":183,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"sheehui"},"content":"##### Policies Tab","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"sheehui"},"content":"Switches from any tab in Client Window to `Policies` tab.","lastModifiedDate":"2021-10-28"},{"lineNumber":187,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"bharathcs"},"content":"Keywords: `p`, `policy` or `policies` (case insensitive)","lastModifiedDate":"2021-11-01"},{"lineNumber":189,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"sheehui"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"sheehui"},"content":"* `tab p`","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"sheehui"},"content":"* `tab policy`","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"sheehui"},"content":"##### Assets Tab","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"sheehui"},"content":"Switches from any tab in Client Window to `Assets` tab.","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"bharathcs"},"content":"Keywords: `a`, `asset` or `assets` (case insensitive)","lastModifiedDate":"2021-11-01"},{"lineNumber":199,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"sheehui"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"sheehui"},"content":"* `tab a`","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"sheehui"},"content":"* `tab asset`","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"sheehui"},"content":"##### Liabilities Tab","lastModifiedDate":"2021-10-28"},{"lineNumber":205,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"sheehui"},"content":"Switches from any tab in Client Window to `Liabilities` tab.","lastModifiedDate":"2021-10-28"},{"lineNumber":207,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"bharathcs"},"content":"Keywords: `l`, `liability` or `liabilities` (case insensitive)","lastModifiedDate":"2021-11-01"},{"lineNumber":209,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"DonnyS57"},"content":"Examples:","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"sheehui"},"content":"* `tab l`","lastModifiedDate":"2021-10-28"},{"lineNumber":212,"author":{"gitId":"sheehui"},"content":"* `tab liability`","lastModifiedDate":"2021-10-28"},{"lineNumber":213,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":214,"author":{"gitId":"sheehui"},"content":"##### Notes Tab","lastModifiedDate":"2021-10-28"},{"lineNumber":215,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":216,"author":{"gitId":"sheehui"},"content":"Switches from any tab in Client Window to `Notes` tab.","lastModifiedDate":"2021-10-28"},{"lineNumber":217,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":218,"author":{"gitId":"bharathcs"},"content":"Keywords:  `n`, or `note` or `notes` (case insensitive)","lastModifiedDate":"2021-11-01"},{"lineNumber":219,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":220,"author":{"gitId":"sheehui"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":221,"author":{"gitId":"sheehui"},"content":"* `tab n`","lastModifiedDate":"2021-10-28"},{"lineNumber":222,"author":{"gitId":"sheehui"},"content":"* `tab note`","lastModifiedDate":"2021-10-28"},{"lineNumber":223,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":224,"author":{"gitId":"sheehui"},"content":"#### Edit Contacts: `edit`","lastModifiedDate":"2021-10-29"},{"lineNumber":225,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":226,"author":{"gitId":"sheehui"},"content":"Edit your client field in contacts. You should be in `Contacts` tab to use these commands.","lastModifiedDate":"2021-10-29"},{"lineNumber":227,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":228,"author":{"gitId":"sheehui"},"content":"##### Edit Client Name","lastModifiedDate":"2021-10-29"},{"lineNumber":229,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":230,"author":{"gitId":"sheehui"},"content":"Edits the name of the client you are currently viewing.","lastModifiedDate":"2021-10-29"},{"lineNumber":231,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":232,"author":{"gitId":"sheehui"},"content":"Format: `edit n/NAME`","lastModifiedDate":"2021-10-29"},{"lineNumber":233,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":234,"author":{"gitId":"sheehui"},"content":"Example: `edit n/Allison Wang`","lastModifiedDate":"2021-10-29"},{"lineNumber":235,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":236,"author":{"gitId":"sheehui"},"content":"##### Edit Client Phone Number","lastModifiedDate":"2021-10-29"},{"lineNumber":237,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":238,"author":{"gitId":"sheehui"},"content":"Edits the phone number of the client you are currently viewing.","lastModifiedDate":"2021-10-29"},{"lineNumber":239,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":240,"author":{"gitId":"sheehui"},"content":"Format: `edit p/PHONE_NUMBER`","lastModifiedDate":"2021-10-29"},{"lineNumber":241,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":242,"author":{"gitId":"sheehui"},"content":"Example: `edit p/81753076`","lastModifiedDate":"2021-10-29"},{"lineNumber":243,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":244,"author":{"gitId":"sheehui"},"content":"##### Edit Client Address","lastModifiedDate":"2021-10-29"},{"lineNumber":245,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":246,"author":{"gitId":"sheehui"},"content":"Edits the address of the client you are currently viewing.","lastModifiedDate":"2021-10-29"},{"lineNumber":247,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":248,"author":{"gitId":"sheehui"},"content":"Format: `edit a/ADDRESS`","lastModifiedDate":"2021-10-29"},{"lineNumber":249,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":250,"author":{"gitId":"sheehui"},"content":"Example: `edit a/#12-123 Phua Chu Kang Ave 7`","lastModifiedDate":"2021-10-29"},{"lineNumber":251,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":252,"author":{"gitId":"sheehui"},"content":"##### Edit Client Email","lastModifiedDate":"2021-10-29"},{"lineNumber":253,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":254,"author":{"gitId":"sheehui"},"content":"Edits the email of the client you are currently viewing.","lastModifiedDate":"2021-10-29"},{"lineNumber":255,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":256,"author":{"gitId":"sheehui"},"content":"Format: `edit e/EMAIL`","lastModifiedDate":"2021-10-29"},{"lineNumber":257,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":258,"author":{"gitId":"sheehui"},"content":"Example: `edit e/allison@gmail.com`","lastModifiedDate":"2021-10-29"},{"lineNumber":259,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":260,"author":{"gitId":"sheehui"},"content":"#### Add an Asset: `append`","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"sheehui"},"content":"Adds a new asset to the current client you are viewing. You must be in the `Assets` tab.","lastModifiedDate":"2021-10-28"},{"lineNumber":263,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"sheehui"},"content":"* `$ASSET_VALUE` is a monetary value. DonnaFin will only accept whole numbers and","lastModifiedDate":"2021-11-01"},{"lineNumber":265,"author":{"gitId":"sheehui"},"content":"  values in 2 decimal places (i.e. $120 and $120.20 are valid. $120.2 is invalid).","lastModifiedDate":"2021-11-01"},{"lineNumber":266,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":267,"author":{"gitId":"sheehui"},"content":"Format: `append n/ASSET_NAME ty/ASSET_TYPE v/$ASSET_VALUE r/REMARKS_ON_ASSET`","lastModifiedDate":"2021-10-28"},{"lineNumber":268,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":269,"author":{"gitId":"sheehui"},"content":"Example:","lastModifiedDate":"2021-10-28"},{"lineNumber":270,"author":{"gitId":"sheehui"},"content":"* `append n/Good Class Bungalow ty/Property v/$10000000 r/newly bought with bank loan`","lastModifiedDate":"2021-10-28"},{"lineNumber":271,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":272,"author":{"gitId":"sheehui"},"content":"#### Remove an Asset: `remove`","lastModifiedDate":"2021-10-28"},{"lineNumber":273,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":274,"author":{"gitId":"sheehui"},"content":"Remove an existing asset from the current client you are viewing. You must be in the `Assets` tab.","lastModifiedDate":"2021-10-28"},{"lineNumber":275,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":276,"author":{"gitId":"sheehui"},"content":"* Removes the asset at the specified `INDEX`.","lastModifiedDate":"2021-10-28"},{"lineNumber":277,"author":{"gitId":"sheehui"},"content":"* The index refers to the index number shown in the displayed asset list.","lastModifiedDate":"2021-10-28"},{"lineNumber":278,"author":{"gitId":"sheehui"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-28"},{"lineNumber":279,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":280,"author":{"gitId":"sheehui"},"content":"Format: `remove INDEX`","lastModifiedDate":"2021-10-28"},{"lineNumber":281,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":282,"author":{"gitId":"sheehui"},"content":"Example:","lastModifiedDate":"2021-10-28"},{"lineNumber":283,"author":{"gitId":"sheehui"},"content":"* `remove 1`","lastModifiedDate":"2021-10-28"},{"lineNumber":284,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"sheehui"},"content":"#### Add a Liability: `append`","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"sheehui"},"content":"Adds a new liability to the current client you are viewing. You must be in the `Liabilities` tab.","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":289,"author":{"gitId":"sheehui"},"content":"* `$LIABILITY_VALUE` is a monetary value. DonnaFin will only accept whole numbers and","lastModifiedDate":"2021-11-01"},{"lineNumber":290,"author":{"gitId":"sheehui"},"content":"  values in 2 decimal places (i.e. $120 and $120.20 are valid. $120.2 is invalid).","lastModifiedDate":"2021-11-01"},{"lineNumber":291,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":292,"author":{"gitId":"sheehui"},"content":"Format: `append n/LIABILITY_NAME ty/LIABILITY_TYPE v/$LIABILITY_VALUE r/REMARKS_ON_LIABILITY`","lastModifiedDate":"2021-10-28"},{"lineNumber":293,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":294,"author":{"gitId":"sheehui"},"content":"Example:","lastModifiedDate":"2021-10-28"},{"lineNumber":295,"author":{"gitId":"sheehui"},"content":"* `append n/Property debt with DBS ty/debt v/$100000 r/10% annual interest`","lastModifiedDate":"2021-10-28"},{"lineNumber":296,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":297,"author":{"gitId":"sheehui"},"content":"#### Remove a Liability: `remove`","lastModifiedDate":"2021-10-28"},{"lineNumber":298,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":299,"author":{"gitId":"sheehui"},"content":"Remove an existing liability from the current client you are viewing. You must be in the `Liabilities` tab.","lastModifiedDate":"2021-10-28"},{"lineNumber":300,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":301,"author":{"gitId":"sheehui"},"content":"* Removes the liability at the specified `INDEX`.","lastModifiedDate":"2021-10-28"},{"lineNumber":302,"author":{"gitId":"sheehui"},"content":"* The index refers to the index number shown in the displayed liability list.","lastModifiedDate":"2021-10-28"},{"lineNumber":303,"author":{"gitId":"sheehui"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-28"},{"lineNumber":304,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":305,"author":{"gitId":"sheehui"},"content":"Format: `remove INDEX`","lastModifiedDate":"2021-10-28"},{"lineNumber":306,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":307,"author":{"gitId":"sheehui"},"content":"Example:","lastModifiedDate":"2021-10-28"},{"lineNumber":308,"author":{"gitId":"sheehui"},"content":"* `remove 1`","lastModifiedDate":"2021-10-28"},{"lineNumber":309,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":310,"author":{"gitId":"sheehui"},"content":"#### Add a Policy: `append`","lastModifiedDate":"2021-10-28"},{"lineNumber":311,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":312,"author":{"gitId":"sheehui"},"content":"Adds a new policy to the current client you are viewing. You must be in the `Policies` tab.","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"sheehui"},"content":"* `$INSURED_VALUE`, `$YEARLY_PREMIUM` and `$COMMISSION` are monetary values. DonnaFin will only accept whole numbers and","lastModifiedDate":"2021-11-01"},{"lineNumber":315,"author":{"gitId":"sheehui"},"content":"values in 2 decimal places (i.e. $120 and $120.20 are valid. $120.2 is invalid).","lastModifiedDate":"2021-11-01"},{"lineNumber":316,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":317,"author":{"gitId":"bharathcs"},"content":"Format: `append n/POLICY_NAME i/INSURER iv/$INSURED_VALUE pr/$YEARLY_PREMIUM c/$COMMISSION`","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":319,"author":{"gitId":"sheehui"},"content":"Example:","lastModifiedDate":"2021-10-28"},{"lineNumber":320,"author":{"gitId":"bharathcs"},"content":"* `append n/Diamond Policy i/AIA iv/$10000 pr/$200 c/$1000`","lastModifiedDate":"2021-10-28"},{"lineNumber":321,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":322,"author":{"gitId":"sheehui"},"content":"#### Remove a Policy: `remove`","lastModifiedDate":"2021-10-28"},{"lineNumber":323,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"sheehui"},"content":"Remove an existing policy from the current client you are viewing. You must be in the `Policies` tab.","lastModifiedDate":"2021-10-28"},{"lineNumber":325,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":326,"author":{"gitId":"sheehui"},"content":"* Removes the liability at the specified `INDEX`.","lastModifiedDate":"2021-10-28"},{"lineNumber":327,"author":{"gitId":"sheehui"},"content":"* The index refers to the index number shown in the displayed policy list.","lastModifiedDate":"2021-10-28"},{"lineNumber":328,"author":{"gitId":"sheehui"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-28"},{"lineNumber":329,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":330,"author":{"gitId":"sheehui"},"content":"Format: `remove INDEX`","lastModifiedDate":"2021-10-28"},{"lineNumber":331,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":332,"author":{"gitId":"sheehui"},"content":"Example:","lastModifiedDate":"2021-10-28"},{"lineNumber":333,"author":{"gitId":"sheehui"},"content":"* `remove 1`","lastModifiedDate":"2021-10-28"},{"lineNumber":334,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":335,"author":{"gitId":"sheehui"},"content":"#### Edit Notes","lastModifiedDate":"2021-10-28"},{"lineNumber":336,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":337,"author":{"gitId":"sheehui"},"content":"You can simply add your changes inside the notes field inside `Notes` tab and DonnaFin will automatically save your data.","lastModifiedDate":"2021-10-28"},{"lineNumber":338,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":339,"author":{"gitId":"sheehui"},"content":"#### Returning to Home Window: `home`","lastModifiedDate":"2021-10-28"},{"lineNumber":340,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":341,"author":{"gitId":"sheehui"},"content":"Allows the user to return to the home window.","lastModifiedDate":"2021-10-28"},{"lineNumber":342,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":343,"author":{"gitId":"DonnyS57"},"content":"Format: `home`","lastModifiedDate":"2021-10-21"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":345,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"mrmrinal"},"content":"DonnaFin data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":351,"author":{"gitId":"sheehui"},"content":"DonnaFin\u0027s data is saved as a JSON file `[JAR file location]/data/donnafin.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-11-03"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":353,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":354,"author":{"gitId":"Bluntsord"},"content":"If your changes to the data file makes its format invalid, Donnafin will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-11-03"},{"lineNumber":355,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":356,"author":{"gitId":"Bluntsord"},"content":"Original `donnafin.json` format           |  Invalid `donnafin.json` format due to direct editing","lastModifiedDate":"2021-11-03"},{"lineNumber":357,"author":{"gitId":"Bluntsord"},"content":":-------------------------:|:-------------------------:","lastModifiedDate":"2021-11-01"},{"lineNumber":358,"author":{"gitId":"Bluntsord"},"content":"![DataSetAlexYeoh](images/DataSetAlexYeoh.png) | ![DataSetAlexYeohWrongFormat](./images/DataSetAlexYeohWrongFormat.png)","lastModifiedDate":"2021-11-01"},{"lineNumber":359,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":360,"author":{"gitId":"Bluntsord"},"content":"As seen in the above side by side comparsion, the first figure show the original .json data ","lastModifiedDate":"2021-11-01"},{"lineNumber":361,"author":{"gitId":"Bluntsord"},"content":"regarding the client Alex Yeoh. All attributes are in the correct format. However, if you do tamper with the ","lastModifiedDate":"2021-11-01"},{"lineNumber":362,"author":{"gitId":"Bluntsord"},"content":"json file directly and change one of the attributes to an invalid format, in this case the ","lastModifiedDate":"2021-11-01"},{"lineNumber":363,"author":{"gitId":"Bluntsord"},"content":"total value of assets(supposed to be prefixed with a $ to indicate that it is a monetary value), DonnaFin will","lastModifiedDate":"2021-11-01"},{"lineNumber":364,"author":{"gitId":"Bluntsord"},"content":"discard all the data and start with an empty data file as seen below.","lastModifiedDate":"2021-11-01"},{"lineNumber":365,"author":{"gitId":"Bluntsord"},"content":"When this happens however, to prevent total loss of your data, we do not delete it right away.","lastModifiedDate":"2021-11-02"},{"lineNumber":366,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":367,"author":{"gitId":"sheehui"},"content":"User Interface for DonnaFin           |  `donnafin.json`","lastModifiedDate":"2021-11-03"},{"lineNumber":368,"author":{"gitId":"Bluntsord"},"content":":-------------------------:|:-------------------------:","lastModifiedDate":"2021-11-02"},{"lineNumber":369,"author":{"gitId":"Bluntsord"},"content":"![NoUser](images/EmptyGUIForDonnaFin.png) | ![NoUserJson](./images/DataSetFullAlexYeoh.png)","lastModifiedDate":"2021-11-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":371,"author":{"gitId":"Bluntsord"},"content":"The follow error message is displayed as well:","lastModifiedDate":"2021-11-02"},{"lineNumber":372,"author":{"gitId":"Bluntsord"},"content":"![InvalidFormat](images/InvalidFormatError.png)","lastModifiedDate":"2021-11-01"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":374,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":375,"author":{"gitId":"sheehui"},"content":"When *any* valid command is run, DonnaFin will assume that the intended action is to clear your data and proceed to cleanly wipe","lastModifiedDate":"2021-11-03"},{"lineNumber":376,"author":{"gitId":"sheehui"},"content":"donnafin.json and execute your command.","lastModifiedDate":"2021-11-03"},{"lineNumber":377,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":378,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":379,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":381,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"mrmrinal"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous DonnaFin home folder.","lastModifiedDate":"2021-09-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"bharathcs"},"content":"**Q**: I have multiple clients with the same name, but your application won\u0027t let me add them! What do I do?\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":389,"author":{"gitId":"bharathcs"},"content":"**A**: We realise some names are common, but we decided to prioritise your ability to instantly recognise a client over letting you keep the accuracy of the name. For that reason, we suggest adding other identifying nicknames or words in the name e.g. \"John Walker (Bartender)\" and \"John Walker (Johnny)\".","lastModifiedDate":"2021-10-30"},{"lineNumber":390,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":391,"author":{"gitId":"bharathcs"},"content":"**Q**: My clients have assets and policies valued in USD / RMB / AUD / other currency. How can I show this in the table?\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":392,"author":{"gitId":"bharathcs"},"content":"**A**: We plan to have multi-currency support in future developments. However, currently we only accept dollar (\u0027$\u0027) currencies and formats that are compatible with the Singapore Dollar. For now, please use only a single currency and convert as appropriate.","lastModifiedDate":"2021-10-30"},{"lineNumber":393,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":394,"author":{"gitId":"bharathcs"},"content":"**Q**: I want to write with non-latin alphabets. Do you have support for internationalization (e.g. Chinese, Hindi, Malay)\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":395,"author":{"gitId":"bharathcs"},"content":"**A**: While it may not break our system, we have developed this application with latin script in mind, and cannot guarantee a bug-free experience.","lastModifiedDate":"2021-10-30"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":397,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"bharathcs"},"content":"| Action     | Format                                                                | Examples","lastModifiedDate":"2021-09-29"},{"lineNumber":402,"author":{"gitId":"bharathcs"},"content":"| ---------- | --------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-09-29"},{"lineNumber":403,"author":{"gitId":"sheehui"},"content":"| **Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`                | `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665`","lastModifiedDate":"2021-10-30"},{"lineNumber":404,"author":{"gitId":"sheehui"},"content":"| **Clear**  | `clear`                                                                | `clear`","lastModifiedDate":"2021-10-28"},{"lineNumber":405,"author":{"gitId":"bharathcs"},"content":"| **Delete** | `delete`                                                               | `delete 3`","lastModifiedDate":"2021-09-29"},{"lineNumber":406,"author":{"gitId":"sheehui"},"content":"| **Edit Name**   | `edit n/NAME` | `edit n/James Lee`","lastModifiedDate":"2021-10-28"},{"lineNumber":407,"author":{"gitId":"sheehui"},"content":"| **Edit Address**   | `edit a/ADDRESS` | `edit a/blk 123 bukit batok ave 4`","lastModifiedDate":"2021-10-31"},{"lineNumber":408,"author":{"gitId":"sheehui"},"content":"| **Edit Email**   | `edit e/EMAIL` | `edit e/jameslee@donnafin.com`","lastModifiedDate":"2021-10-28"},{"lineNumber":409,"author":{"gitId":"sheehui"},"content":"| **Edit Phone Number**   | `edit p/PHONE_NUMBER` | `edit p/98374283`","lastModifiedDate":"2021-10-28"},{"lineNumber":410,"author":{"gitId":"bharathcs"},"content":"| **View**   | `view INDEX`                                                           | `view 2`","lastModifiedDate":"2021-09-29"},{"lineNumber":411,"author":{"gitId":"bharathcs"},"content":"| **Find**   | `find KEYWORD`                                                         | `find James Jake`","lastModifiedDate":"2021-09-29"},{"lineNumber":412,"author":{"gitId":"sheehui"},"content":"| **List**   | `list`                                                                 | `list`","lastModifiedDate":"2021-10-28"},{"lineNumber":413,"author":{"gitId":"sheehui"},"content":"| **Help**   | `help`                                                                 | `help`","lastModifiedDate":"2021-10-28"},{"lineNumber":414,"author":{"gitId":"sheehui"},"content":"| **Home**   | `home`                                                                 | `home`","lastModifiedDate":"2021-10-28"},{"lineNumber":415,"author":{"gitId":"sheehui"},"content":"| **View**   | `view INDEX`                                                                 | `view 1`","lastModifiedDate":"2021-10-28"},{"lineNumber":416,"author":{"gitId":"sheehui"},"content":"| **Append Asset**   | `append n/ASSET_NAME ty/ASSET_TYPE v/$ASSET_VALUE r/REMARKS_ON_ASSET`| `append n/Good Class Bungalow ty/Property v/$10000000 r/newly bought with bank loan`","lastModifiedDate":"2021-10-28"},{"lineNumber":417,"author":{"gitId":"sheehui"},"content":"| **Append Liability**   | `append n/LIABILITY_NAME ty/LIABILITY_TYPE v/$LIABILITY_VALUE r/REMARKS_ON_LIABILITY`| `append n/Property debt with DBS ty/debt v/$100000 r/10% annual interest`","lastModifiedDate":"2021-10-28"},{"lineNumber":418,"author":{"gitId":"sheehui"},"content":"| **Append Policy**   | `append n/ASSET_NAME ty/ASSET_TYPE v/$ASSET_VALUE r/REMARKS_ON_ASSET`| `append n/Good Class Bungalow ty/Property v/$10000000 r/newly bought with bank loan`","lastModifiedDate":"2021-10-28"},{"lineNumber":419,"author":{"gitId":"sheehui"},"content":"| **Remove Asset/Liability/Policy**   | `remove INDEX`                                                                 | `remove 1`","lastModifiedDate":"2021-10-28"},{"lineNumber":420,"author":{"gitId":"bharathcs"},"content":"| **Switch to Contacts tab**   | `tab KEYWORD`                                                                 | `tab c`","lastModifiedDate":"2021-11-01"},{"lineNumber":421,"author":{"gitId":"bharathcs"},"content":"| **Switch to Policies tab**   | `tab KEYWORD`                                                                 | `tab p`","lastModifiedDate":"2021-11-01"},{"lineNumber":422,"author":{"gitId":"bharathcs"},"content":"| **Switch to Assets tab**   | `tab KEYWORD`                                                                 | `tab a`","lastModifiedDate":"2021-11-01"},{"lineNumber":423,"author":{"gitId":"bharathcs"},"content":"| **Switch to Liabilities tab**   | `tab KEYWORD`                                                                 | `tab l`","lastModifiedDate":"2021-11-01"},{"lineNumber":424,"author":{"gitId":"bharathcs"},"content":"| **Switch to Notes tab**   | `tab KEYWORD`                                                                 | `tab n`","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"bharathcs":27,"DonnyS57":15,"sheehui":224,"mrmrinal":7,"Bluntsord":20,"-":131}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"logic -[LOGIC_COLOR]\u003e model : saveAddressBook()","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"model -[MODEL_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"storage --[STORAGE_COLOR]\u003e model","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"model --[MODEL_COLOR]\u003e logic","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"deactivate model","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bharathcs":8,"-":36}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"Class ABCParser","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"Class \"{abstract}\\nParserStrategy\" as ParserStrategy","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"Class ParserContext","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"class PersonAdapter","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"LogicManager --\u003e\"1\" ParserContext","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"ParserContext --\u003e\"*\" ParserStrategy","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"ABCParser *-up-\u003e ParserStrategy","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"ABCParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"XYZCommand  .up.\u003e PersonAdapter : creates \u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"PersonAdapter  .down[hidden]. ABCParser","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"PersonAdapter -up-\u003e Model","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"note left of ABCParser : ABCParser \u003d AddressBookParser, \\nContactTabParser, etc","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bharathcs":11,"Bluntsord":1,"-":37}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"Class Policy","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"Class Asset","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"Class Liability","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"package Storage{","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"package Logic{","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"AddressBook --\u003e Storage","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"Person --\u003e Logic","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"Person *--\u003e \"*\" Policy","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"Person *--\u003e \"*\" Asset","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"Person *--\u003e \"*\" Liability","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"Email -[hidden]right-\u003e Policy","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"Policy -[hidden]right-\u003e Asset","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"Asset -[hidden]right-\u003e Liability","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bharathcs":17,"-":52}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"Class ParserContext","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"Class \"{abstract}\\nParserStrategy\" as ParserStrategy","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"Class ABCParser","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"ParserContext .left.\u003e ParserStrategy","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"ABCParser -up-|\u003e ParserStrategy","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"ABCParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"ABCParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"bharathcs":7,"-":34}},{"path":"docs/diagrams/ParserStrategy.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"@startuml","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"!include style.puml","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"package ParserContext {","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"Class ParserContext","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"Class \"{abstract}\\nParserStrategy\" as ParserStrategy","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"Class AddressBookParser","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"Class \"{abstract}\\nClientViewParser\" as ClientViewParser","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"Class ContactTabParser","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"Class PolicyTabParser","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"Class AssetTabParser","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"Class LiabilitiesTabParser","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"Class NotesTabParser","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"ParserContext --\u003e ParserStrategy","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"AddressBookParser -up-|\u003e ParserStrategy","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"ClientViewParser -up-|\u003e ParserStrategy","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"ContactTabParser -up-|\u003e ClientViewParser","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"PolicyTabParser -up-|\u003e ClientViewParser","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"AssetTabParser -up-|\u003e ClientViewParser","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"LiabilitiesTabParser -up-|\u003e ClientViewParser","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"NotesTabParser -up-|\u003e ClientViewParser","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"LogicManager --\u003e ParserContext","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"@enduml","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"Bluntsord":29}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"Class JsonAdaptedPolicy","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"Class JsonAdaptedAsset","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"Class JsonAdaptedLiability","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedPolicy","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedAsset","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedLiability","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bharathcs":6,"-":41}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"Class ClientPanel","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"Class AttributePanel","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"Class AttributeTable","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"MainWindow *--\u003e \"0..1\" ClientPanel","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"ClientPanel --\u003e \"*\" AttributeTable","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"ClientPanel --\u003e \"*\" AttributePanel","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"ClientPanel --|\u003e UiPart","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"ClientPanel .right.\u003e Logic","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"AttributeTable ..\u003e Model","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"Model -[hidden]left- ClientPanel","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"Model -[hidden]down- AttributePanel","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"ClientPanel -[hidden]left- PersonListPanel","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"PersonListPanel -[hidden]up- Logic","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"PersonCard -[hidden]right- AttributePanel","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"PersonCard -[hidden]down- AttributePanel","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"PersonCard -[hidden]down- AttributeTable","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bharathcs":17,"-":55}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"Participant \":ClientViewParser\" as cvp LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"Participant \":TabParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"logic -\u003e cvp ++: parseCommand(commandText)","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"cvp -\u003e ecp","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"cvp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"ecp -\u003e ec ++: index, editPersonDescriptor","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"ecp --\u003e cvp --: command","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"cvp --\u003e logic --: command","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"bharathcs":7,"-":14}},{"path":"docs/diagrams/tracing/SwitchTabExecutionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"!include ../style.puml","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"mainframe **sd** Switch Tab Command execution sequence","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"Participant \":ParserContext\" as pc LOGIC_COLOR","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"Participant \":ClientViewParser\" as cvp LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"Participant \":ParserUtil\" as pu LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"Participant \":SwitchTabCommand\" as stc LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"[-\u003e logic : execute","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"activate logic","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"logic -\u003e pc ++: parseCommand(commandText)","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"pc -\u003e cvp ++: executeParserStrategy(commandText)","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"cvp -\u003e pu ++: parseTab(argument)","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"pu --\u003e cvp --: tab","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"create stc","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"cvp -\u003e stc ++: SwitchTabCommand(tab)","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"stc --\u003e cvp --","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"cvp --\u003e pc --: command","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"pc --\u003e logic --: command","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"logic -\u003e stc ++: execute(model)","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"stc --\u003e logic --: commandResult","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"destroy stc","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"bharathcs":21,"Bluntsord":5}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"title: DonnaFin.io","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"![CI Status](https://github.com/AY2122S1-CS2103T-W16-1/tp/actions/workflows/runAllChecks.yml/badge.svg)","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W16-1/tp/branch/master/graph/badge.svg?token\u003dTI96BI7OBN)](https://codecov.io/gh/AY2122S1-CS2103T-W16-1/tp)","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"**DonnaFin is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"* If you are interested in using DonnaFin, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"* If you are interested about developing DonnaFin, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Bluntsord":5,"-":14}},{"path":"docs/team/bharathcs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"layout: page","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"title: Bharath\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"### Project: DonnaFin.io","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"DonnaFin.io is a desktop address book application used by financial advisors to keep track of their client information and related tasks.","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"This is a Java program with about 10 kloc with a JavaFX GUI.","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"The \u0027.io\u0027 in our name is a reflection of our belief that you deserve a faster workflow for input and output.","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"If you can type fast, you can use our CLI-like commands to manage and view your notes, upcoming meetings and todo lists much faster than your typical customer relationship manager apps.","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"    * What it does:","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"    * Justification:","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"    * Highlights:","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"* Support passing instructions to `Ui` from `Commands`","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"  * Uses functional programming to hand a callback from the result of command execution (`CommandResult.uiAction : Consumer\u003cUi\u003e`) that can perform the necessary side effect in `Ui`","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"  * Our application\u0027s front end is getting steadily more complex and our commands need to be able to execute actual functions on `Ui`. However, other solutions would require global variables or drilling down a reference to `Ui` into `Command`. A simpler and cleaner workaround was to use functions as a first class object to instruct `Ui` on the appropriate actions (show help / exit / show client view, etc)","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"  * Created when it was necessary to implement the `ClientView` mode in UI (Showing a single client\u0027s information in a dedicated view for the user to edit and interact with). [#67](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/67)","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"* Allow user to edit information directly in the Client View","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"  * The user must be able to cycle through the different attributes (presented in a row format), and edit as necessary.","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    * Heavily refactor `ClientPanel` to support actual interactions with the `AttributePanel`s [#90](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/90)","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"    * Support user focus (highlight row when tabbing through) [#92](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/92)","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"    * Show user in an alert whenever edit fails, and for what field (e.g. put letters in the phone number field) [#95](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/95)","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"  * As this is a critical part of our functionality, we need this to be intuitive and easy to use.","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"  * Using `EventHandler`s to great effect within text fields to support highlighting outer parent elements.","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"* Add `SwitchTabCommand` that allows for CLI navigation through the different tabs. [#148](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/148)","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"  * User must easily be able to cycle through contact information, policy table, asset table etc","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"  * Needs to be a simple and easy to use command in the command bar.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"* Create a generic class to create tables for Client View tabs on Polices, Assets, Liabilities to support future extension. [#125](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/125), [#154](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/154), [#156](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/156)","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"  * Create a JavaFX component that can create a fully functional and rich table for any data class.","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"  * Made the entire front end for the yet-to-be-completed `Policy`, `Asset` and `Liability` classes as they all share a similar format of being represented in a table.","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"  * Makes good use of software engineering principles:","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"    * Open-Closed Principle: Open for configuring and extension but closed to modification. All instances of `AttributeTable` is configured by `TableConfig` and `ColumnConfig` and `Aggregator` to accept any manner of data classes.","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"    * Encapsulate and support creation of configuration data class in a manner similar to many open source modules (e.g. JavaScript modules like axios);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"* Re-organise application architecture by separating `Storage` and `Logic` [#18](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/18), [#17](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/17)","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"  * Improves overall architecture by decoupling `Storage` and `Logic` ensuring all `Storage` calls go through `Model` layer to follow the layered architecture style[^layeredArchi]","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"  * The layered architecture design pattern was chosen over the current Model-View-Controller architecture in a previous team meeting to reduce complexity, simplify working on components and improve testability.","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"* Add automated GUI tests for DonnaFin ","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"  * Automated checks can be run on Gradle builds Github CI/CD to confirm validity of `.fxml` files and GUI logic.","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"  * Prevents unusable GUI changes from being added to the codebase.","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"  * Required spending a significant amount of time learning and understanding Java GUI testing with TestFx, adapting boilerplate and common functions from SE-EDU AB4. At all steps, this needed to support the new file structure and dependencies. [#132](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/132) [#134](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/134)","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"  * Adapted from the SE-EDU: Address Book 4 codebase","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"[^layeredArchi]: [_O\u0027 Reilly_ Chapter 1. Layered Architecture](https://www.oreilly.com/library/view/software-architecture-patterns/9781491971437/ch01.html)","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dbharathcs\u0026tabRepo\u003dAY2122S1-CS2103T-W16-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"* **Project management**:","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"  * Manage CI / CD to consistently check and ensure repo code quality and automated testing success","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"    * Gradle improvements:","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"      * Have Gradle test commands run only if code / CI changes. [#1](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/1)","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"      * Enable assertions for every Gradle run [#151](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/151)","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"      * Have Gradle automatically wipe the `./data/` folder to ensure clean starts [#135](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/135)","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"    * Conduct the minimal repo-wide checks for non-code changes (EOF, EOL, illegal characters) [#37](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/37)","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"    * Update Github CI / CD to support feature / branch workflow [#35](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/35)","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"  * Provided constructive feedback to PRs","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"    * Improving code quality [#69](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/69), [#57](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/57), [#157](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/157)","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"    * Minor changes for CheckStyle \u0026 CI [#63](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/63)","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"    * Constructive feedback on code quality [#179](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/179)","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"    * Pair programming \u0026 support for difficult tasks [#155](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/155)","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"  * Improve UI for user.","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"    * Enable responsive resizing of `AttributePanel` when window size changes in `ClientView` [#99](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/99)","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"    * Show the user a focus indicator when the tabs are being selected in `ClientView` [#101](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/101)","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"    * Have the \u0027button-like\u0027 tab buttons trigger the \u0027switch tab\u0027 command (e.g. clicking \u0027Policies\u0027 tab should be same as typing `tab p`) [#148](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/148)","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"    * Fix weird and obscure JavaFX lab with use of asynchronous programming [#166](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/166)","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"    ","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"  * Add additional tests","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"bharathcs"},"content":"    * For notes [#123](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/123)","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"    * For `SampleDataUtils` to ensure poisoned clean starts / data inputs will be caught early [#177](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/177)","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"bharathcs"},"content":"  ","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"bharathcs"},"content":"  * Create additional tools that help developers","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"bharathcs"},"content":"    * Make a `Money` data class (very similar to the existing `Index` class) [#141](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/141)","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"bharathcs"},"content":"    * Add static configurations for `AttributeTable` to be easily called for `Asset`, `Liability` and `Policy` [#146](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/146)","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"bharathcs"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"    * User Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"      * Update commands [#27](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/27), [#42](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/42/)","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"      * Storage - Logic link updates: Sequence diagrams, Class Diagrams, [#21](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/21)","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"      * `PersonAdapter`, `Person`, Architecture Sequence Diagram, cleanup [#103](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/103)","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"      * Update UML class for v1.2b - v1.3 [#165](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/165)","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"      * New sequence diagrams for `SwitchTabCommand` [#170](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/170)","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"* **Community**:","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"  * Explaining why I think Java\u0027s Stream implementation makes using multiple Scanners very bug-prone ([#78](https://github.com/nus-cs2103-AY2122S1/forum/issues/78#issuecomment-908386678))","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"  * Clarifying the difference between `Platform.exit()` and `System.exit` in JavaFX ([#174](https://github.com/nus-cs2103-AY2122S1/forum/issues/174#issuecomment-912537867))","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"  * Optimising CI tasks to run only on Linux where helpful ([#200](https://github.com/nus-cs2103-AY2122S1/forum/issues/200#issuecomment-914049272))","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"  * Reminding people of checkstyle gaps ([#169](https://github.com/nus-cs2103-AY2122S1/forum/issues/169#issuecomment-914045772))","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"  * Offering a tip for people who like to make many commits ([#139](https://github.com/nus-cs2103-AY2122S1/forum/issues/139#issuecomment-908866902))","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"bharathcs"},"content":"* **Tools**:","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"bharathcs"},"content":"  * Used Figma to wireframe the user pathway to \u0027single client view\u0027.","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"bharathcs"},"content":"  * Automatically trim trailing spaces with a Github action [#111](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/111)","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"bharathcs":111}},{"path":"docs/team/bluntsord.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"layout: page","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"title: Tee Chin\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"DonnaFin.io is a desktop address book application used by financial advisors to keep track of their client information and related tasks.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"* What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"* Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"* Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"* Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"* **Project management**:","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"  * User Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"  * Developer Guide: Update architecture diagram (Pull requests [\\#23](https://github.com/AY2122S1-CS2103T-W16-1/tp/pull/23))","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"  * AboutUs","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"* **Community**:","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"* **Tools**:","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"Bluntsord":35}},{"path":"docs/team/donny.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DonnyS57"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"DonnyS57"},"content":"layout: page","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"DonnyS57"},"content":"title: Donny\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"DonnyS57"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"DonnyS57"},"content":"### Project: DonnaFin.io","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"DonnyS57"},"content":"DonnaFin.io is a desktop address book application used by financial advisors to keep track of their client information and related tasks.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"DonnyS57"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"DonnyS57"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"DonnyS57"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"DonnyS57"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"DonnyS57"},"content":"    * What it does:","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"DonnyS57"},"content":"    * Justification:","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"DonnyS57"},"content":"    * Highlights:","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"DonnyS57"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"DonnyS57"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"DonnyS57"},"content":"* **Project management**:","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"DonnyS57"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"DonnyS57"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"DonnyS57"},"content":"    * User Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"DonnyS57"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"DonnyS57"},"content":"* **Community**:","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"DonnyS57"},"content":"* **Tools**:","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"DonnyS57":35}},{"path":"docs/team/mrmrinal.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"layout: page","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"title: Mrinal\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"### Project: DonnaFin.io","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"DonnaFin.io is a desktop address book application used by financial advisors to keep track of their client information and related tasks.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"The user has a command line interface to interact with the application, and the output is displayed using a javaFX GUI.","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"    * What it does:","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"    * Justification:","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"    * Highlights:","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"* **Project management**:","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"    * User Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"* **Community**:","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"* **Tools**:","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"mrmrinal":36}},{"path":"docs/team/sheehui.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"sheehui"},"content":"layout: page","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"title: Shee Hui\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"### Project: DonnaFin.io","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"DonnaFin.io is a desktop address book application used by financial advisors to keep track of their client information and related tasks.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"    * What it does:","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"    * Justification:","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"    * Highlights:","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"* **Project management**:","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"    * User Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"sheehui"},"content":"* **Community**:","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"sheehui"},"content":"* **Tools**:","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"sheehui":36}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"import Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"sheehui"},"content":"import static CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"sheehui"},"content":"Simply add the following to [`PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-10-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"sheehui":3,"-":398}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"The `address` field in `Person` is actually an instance of the `Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"sheehui":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"sheehui"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `Logic`.","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"sheehui"},"content":"A quick look at the `Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"sheehui":2,"-":297}},{"path":"src/main/java/donnafin/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.util.FileUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"sheehui":3,"-":61}},{"path":"src/main/java/donnafin/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"sheehui":1,"-":24}},{"path":"src/main/java/donnafin/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.Config;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.Version;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.util.ConfigUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.util.StringUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.Logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.LogicManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"import donnafin.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"import donnafin.storage.AddressBookStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"import donnafin.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"import donnafin.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"import donnafin.storage.Storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"import donnafin.storage.StorageManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"import donnafin.storage.UserPrefsStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"sheehui"},"content":"import donnafin.ui.UiManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"        logic \u003d new LogicManager(model);","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"bharathcs"},"content":"            if (addressBookOptional.isEmpty()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"        return new ModelManager(initialData, userPrefs, storage);","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":176,"author":{"gitId":"bharathcs"},"content":"        Set\u003cSet\u003cPerson\u003e\u003e weakDuplicatesSets \u003d model.getWeakDuplicatesAllClients();","lastModifiedDate":"2021-11-01"},{"lineNumber":177,"author":{"gitId":"bharathcs"},"content":"        if (weakDuplicatesSets !\u003d null) {","lastModifiedDate":"2021-11-01"},{"lineNumber":178,"author":{"gitId":"bharathcs"},"content":"            String listDuplicates \u003d weakDuplicatesSets.stream()","lastModifiedDate":"2021-11-01"},{"lineNumber":179,"author":{"gitId":"bharathcs"},"content":"                    .map(weakDuplicatesSet -\u003e weakDuplicatesSet.stream()","lastModifiedDate":"2021-11-01"},{"lineNumber":180,"author":{"gitId":"bharathcs"},"content":"                            .map(p -\u003e \"\u0027\" + p.getName() + \"\u0027, \")","lastModifiedDate":"2021-11-01"},{"lineNumber":181,"author":{"gitId":"bharathcs"},"content":"                            .reduce(\"\", (a, b) -\u003e a + b))","lastModifiedDate":"2021-11-01"},{"lineNumber":182,"author":{"gitId":"bharathcs"},"content":"                    .map(duplicateSetStr -\u003e \"---\\n\" + duplicateSetStr + \"\\n\")","lastModifiedDate":"2021-11-01"},{"lineNumber":183,"author":{"gitId":"bharathcs"},"content":"                    .reduce(\"\", (a, b) -\u003e a + b);","lastModifiedDate":"2021-11-01"},{"lineNumber":184,"author":{"gitId":"bharathcs"},"content":"            if (listDuplicates.length() \u003e 0) {","lastModifiedDate":"2021-11-01"},{"lineNumber":185,"author":{"gitId":"bharathcs"},"content":"                String duplicateWarning \u003d String.format(","lastModifiedDate":"2021-11-01"},{"lineNumber":186,"author":{"gitId":"bharathcs"},"content":"                        \"%s\\nHint: REMOVE command can be useful to remove duplicates.\",","lastModifiedDate":"2021-11-01"},{"lineNumber":187,"author":{"gitId":"bharathcs"},"content":"                        listDuplicates","lastModifiedDate":"2021-11-01"},{"lineNumber":188,"author":{"gitId":"bharathcs"},"content":"                );","lastModifiedDate":"2021-11-01"},{"lineNumber":189,"author":{"gitId":"bharathcs"},"content":"                ui.showAlertDialogAndWait(","lastModifiedDate":"2021-11-01"},{"lineNumber":190,"author":{"gitId":"bharathcs"},"content":"                        Alert.AlertType.WARNING, \"Warning: Possible duplicates read from storage.\",","lastModifiedDate":"2021-11-01"},{"lineNumber":191,"author":{"gitId":"bharathcs"},"content":"                        \"Clients with similar names found.\", duplicateWarning","lastModifiedDate":"2021-11-01"},{"lineNumber":192,"author":{"gitId":"bharathcs"},"content":"                );","lastModifiedDate":"2021-11-01"},{"lineNumber":193,"author":{"gitId":"bharathcs"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":194,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bharathcs":26,"sheehui":24,"-":156}},{"path":"src/main/java/donnafin/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheehui":1,"-":62}},{"path":"src/main/java/donnafin/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"    private static final double DEFAULT_HEIGHT \u003d 720;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"    private static final double DEFAULT_WIDTH \u003d 1024;","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bharathcs":2,"sheehui":1,"-":76}},{"path":"src/main/java/donnafin/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"    private static final String LOG_FILE \u003d \"donnafin.log\";","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheehui":2,"-":110}},{"path":"src/main/java/donnafin/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.EditCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_INVALID_PERSON_INDEX \u003d \"The client index provided is invalid!\";","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"    public static final String MESSAGE_PERSON_LISTED_OVERVIEW \u003d \"1 person listed!\";","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"    public static final String MESSAGE_NO_PERSON_LISTED_OVERVIEW \u003d \"No person listed!\";","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_USE_HELP_COMMAND \u003d String.format(","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"            \"Invalid command format! Try using the help command. \\n%1$s\", HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_COMMAND_NOT_IN_HOMEWINDOW \u003d \"This is a client window command and is not \"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"            + \"available in home window!\\nTry using the view command to access client window commands.\"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"            + \"\\nRefer to our user guide for more info.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_COMMAND_NOT_IN_CLIENTWINDOW \u003d \"This is a home window command and is not \"","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"            + \"available in client window!\\nTry using the home command to access home window commands.\"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"            + \"\\nRefer to our user guide for more info.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_EDIT_COMMAND_UNAVAILABLE \u003d \"Editing is not supported in current version of \"","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"            + \"DonnaFin.\\nSupport for editing will be coming soon!\";","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_EDIT_COMMAND_SUPPORTED \u003d String.format(","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"            \"Append and Remove commands are unavailable but the Edit command is supported for Contacts.\\n%1$s\",","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"            EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_NO_CLIENTWINDOW_COMMANDS_SUPPORTED \u003d \"Append, Remove and Edit commands are \"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"            + \"not supported in the Notes tab.\\nYou may add your changes directly in the text box below.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sheehui":20,"mrmrinal":2,"-":10}},{"path":"src/main/java/donnafin/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheehui":1,"-":115}},{"path":"src/main/java/donnafin/commons/core/types/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.commons.core.types;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"bharathcs":1,"-":53}},{"path":"src/main/java/donnafin/commons/core/types/Money.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.commons.core.types;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"public class Money {","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"    public static final String MONEY_ARITHMETIC_OVERFLOW \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"            \"Unable to calculate due to Integer limitations.\";","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Monetary value fields should start with \u0027$\u0027 followed by digits.\"","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"            + \" 2 digits preceded by a \u0027.\u0027 may be added at the end to indicate cents\";","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"    private static final String CURRENCY_SYMBOL \u003d \"$\";","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"    private static final int CURRENCY_EXPONENT \u003d 2;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"    private final long value;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"     * Create a Money object with value and currency as specified.","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"     * @param valueInSmallestUnit integer value of the currency in its smallest unit (e.g. cent)","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"    public Money(long valueInSmallestUnit) throws MoneyException {","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"        if (valueInSmallestUnit \u003c 0) {","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"            throw new MoneyException(\"Negative monetary values are not supported\");","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"        this.value \u003d valueInSmallestUnit;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"    public long getValue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"        return value;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"        long divisor \u003d (long) Math.pow(10, CURRENCY_EXPONENT);","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"        String biggerUnitValue \u003d \"\" + value / divisor;","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"        int numDigitsSmallerValue \u003d value % divisor !\u003d 0","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"                ? (int) Math.floor(Math.log10(value % divisor)) + 1","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"                : 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"        String smallerUnitValue \u003d \"0\".repeat(Math.max(0, CURRENCY_EXPONENT - numDigitsSmallerValue));","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"        smallerUnitValue +\u003d value % divisor;","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"        return String.format(\"%s %s.%s\", CURRENCY_SYMBOL, biggerUnitValue, smallerUnitValue);","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"        if (!(o instanceof Money)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"        Money other \u003d (Money) o;","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"        return value \u003d\u003d other.value;","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"        return Objects.hash(value);","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"     * Perform addition on Money objects.","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"     * @return result of adding two Money objects of the same currency.","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"     * @throws MoneyException if the Money objects involved are of different currencies or","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"     *                        results in an ArithmeticError (Integer overflow).","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"    public static Money add(Money a, Money b) throws MoneyException {","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"            return new Money(Math.addExact(a.value, b.value));","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"        } catch (ArithmeticException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"            throw new MoneyException(Money.MONEY_ARITHMETIC_OVERFLOW);","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"     * Perform subtraction on Money objects.","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"     * @return result of adding two Money objects of the same currency.","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"bharathcs"},"content":"     * @throws MoneyException if the Money objects involved are of different currencies or","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"     *                        results in an ArithmeticError (Integer overflow).","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"bharathcs"},"content":"    public static Money subtract(Money a, Money b) throws MoneyException {","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"bharathcs"},"content":"            if (b.getValue() \u003e b.getValue()) {","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"                throw new ArithmeticException(\"Negative result after subtraction\");","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"bharathcs"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"            return new Money(Math.subtractExact(a.value, b.value));","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"        } catch (ArithmeticException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"            throw new MoneyException(Money.MONEY_ARITHMETIC_OVERFLOW);","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"    public static class MoneyException extends IllegalValueException {","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"        /**","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"         * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"         */","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"        public MoneyException(String message) {","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"            super(message);","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"bharathcs":106}},{"path":"src/main/java/donnafin/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheehui":1,"-":10}},{"path":"src/main/java/donnafin/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sheehui":1,"-":20}},{"path":"src/main/java/donnafin/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.MainApp;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sheehui":3,"-":40}},{"path":"src/main/java/donnafin/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sheehui":1,"-":34}},{"path":"src/main/java/donnafin/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.Config;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"sheehui":3,"-":20}},{"path":"src/main/java/donnafin/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheehui":1,"-":82}},{"path":"src/main/java/donnafin/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheehui":3,"-":140}},{"path":"src/main/java/donnafin/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheehui":2,"-":66}},{"path":"src/main/java/donnafin/logic/InvalidFieldException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":" * An error thrown when  the input format is not formatted according to the specifications.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"public class InvalidFieldException extends Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"    public InvalidFieldException(PersonAdapter.PersonField field) {","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"        super(\"The following field: \" + field.toString() + \" was specified incorrectly\");","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"sheehui":1,"mrmrinal":9}},{"path":"src/main/java/donnafin/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.ParserStrategy;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"     * @see Model#getAddressBook()","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"    void setParserStrategy(ParserStrategy strategyParser);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bharathcs":1,"sheehui":9,"Bluntsord":2,"-":42}},{"path":"src/main/java/donnafin/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.AddressBookParser;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.ParserContext;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.ParserStrategy;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"    private final ParserContext parserContext;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"    public LogicManager(Model model) {","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"        parserContext \u003d new ParserContext(new AddressBookParser());","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"Bluntsord"},"content":"        Command command \u003d parserContext.executeParserStrategyCommand(commandText);","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"Bluntsord"},"content":"        //Implement any changes logic that needs to happen","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Bluntsord"},"content":"        Consumer\u003cLogic\u003e logicAction \u003d commandResult.getLogicAction();","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"        assert !logicAction.equals(null) : \"commandResult.uiAction was set as null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Bluntsord"},"content":"        if (!logicAction.equals(null)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Bluntsord"},"content":"            logicAction.accept(this);","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"            model.saveAddressBook();","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"Bluntsord"},"content":"    Function to change the strategyParser in parserContext","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"    public void setParserStrategy(ParserStrategy strategyParser) {","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"Bluntsord"},"content":"        parserContext.setCurrentParserStrategy(strategyParser);","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bharathcs":3,"sheehui":11,"Bluntsord":19,"-":60}},{"path":"src/main/java/donnafin/logic/PersonAdapter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Address;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Asset;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Attribute;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Liability;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Notes;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Policy;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"public class PersonAdapter {","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    private final Model model;","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"    private Person subject;","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"    public enum PersonField {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"        NAME,","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"        PHONE,","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"        EMAIL,","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"        ADDRESS,","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"        NOTES,","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"        POLICIES,","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"        LIABILITIES,","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"        ASSETS","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"DonnyS57"},"content":"     * Constructor for the PersonAdapter.","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"DonnyS57"},"content":"     * @param model the model of the current DonnaFin application.","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"DonnyS57"},"content":"     * @param subject person that you want to work on.","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"DonnyS57"},"content":"    public PersonAdapter(Model model, Person subject) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"    /** Get the immutable Person object. */","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"    public Person getSubject() {","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"        return this.subject;","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"sheehui"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"sheehui"},"content":"     * Get all attributes from Person.","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"sheehui"},"content":"     * @return Observable list of attributes","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"sheehui"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"    public ObservableList\u003cAttribute\u003e getContactAttributesList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"        return subject.getContactAttributesList();","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"DonnyS57"},"content":"     * Method to edit the client\u0027s name.","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"DonnyS57"},"content":"     * @param newName new name for the client.","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"DonnyS57"},"content":"    public void edit(Name newName) {","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"DonnyS57"},"content":"        Person curr \u003d this.subject;","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"DonnyS57"},"content":"        Person personToEdit \u003d new Person(","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"sheehui"},"content":"                newName,","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"DonnyS57"},"content":"                curr.getPhone(),","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"DonnyS57"},"content":"                curr.getEmail(),","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"DonnyS57"},"content":"                curr.getAddress(),","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"DonnyS57"},"content":"                curr.getNotes(),","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"DonnyS57"},"content":"                curr.getPolicies(),","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"DonnyS57"},"content":"                curr.getLiabilities(),","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"DonnyS57"},"content":"                curr.getAssets()","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"DonnyS57"},"content":"        );","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"DonnyS57"},"content":"        this.subject \u003d personToEdit;","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"DonnyS57"},"content":"        model.setPerson(curr, personToEdit);","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"DonnyS57"},"content":"     * Method to edit the client\u0027s phone number.","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"DonnyS57"},"content":"     * @param newPhone new phone number for the client.","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"DonnyS57"},"content":"    public void edit(Phone newPhone) {","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"DonnyS57"},"content":"        Person curr \u003d this.subject;","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"DonnyS57"},"content":"        Person personToEdit \u003d new Person(","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"DonnyS57"},"content":"                curr.getName(),","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"sheehui"},"content":"                newPhone,","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"DonnyS57"},"content":"                curr.getEmail(),","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"DonnyS57"},"content":"                curr.getAddress(),","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"DonnyS57"},"content":"                curr.getNotes(),","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"DonnyS57"},"content":"                curr.getPolicies(),","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"DonnyS57"},"content":"                curr.getLiabilities(),","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"DonnyS57"},"content":"                curr.getAssets()","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"DonnyS57"},"content":"        this.subject \u003d personToEdit;","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"DonnyS57"},"content":"        model.setPerson(curr, personToEdit);","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"DonnyS57"},"content":"     * Method to edit the client\u0027s email.","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"DonnyS57"},"content":"     * @param newEmail new email for the client.","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"DonnyS57"},"content":"    public void edit(Email newEmail) {","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"DonnyS57"},"content":"        Person curr \u003d this.subject;","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"DonnyS57"},"content":"        Person personToEdit \u003d new Person(","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"DonnyS57"},"content":"                curr.getName(),","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"DonnyS57"},"content":"                curr.getPhone(),","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"sheehui"},"content":"                newEmail,","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"DonnyS57"},"content":"                curr.getAddress(),","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"DonnyS57"},"content":"                curr.getNotes(),","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"DonnyS57"},"content":"                curr.getPolicies(),","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"DonnyS57"},"content":"                curr.getLiabilities(),","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"DonnyS57"},"content":"                curr.getAssets()","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"DonnyS57"},"content":"        );","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"DonnyS57"},"content":"        this.subject \u003d personToEdit;","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"DonnyS57"},"content":"        model.setPerson(curr, personToEdit);","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"DonnyS57"},"content":"     * Method to edit the client\u0027s address.","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"DonnyS57"},"content":"     * @param newAddress new address for the client.","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"DonnyS57"},"content":"    public void edit(Address newAddress) {","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"DonnyS57"},"content":"        Person curr \u003d this.subject;","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"DonnyS57"},"content":"        Person personToEdit \u003d new Person(","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"DonnyS57"},"content":"                curr.getName(),","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"DonnyS57"},"content":"                curr.getPhone(),","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"DonnyS57"},"content":"                curr.getEmail(),","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"sheehui"},"content":"                newAddress,","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"DonnyS57"},"content":"                curr.getNotes(),","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"DonnyS57"},"content":"                curr.getPolicies(),","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"DonnyS57"},"content":"                curr.getLiabilities(),","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"DonnyS57"},"content":"                curr.getAssets()","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"DonnyS57"},"content":"        );","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"DonnyS57"},"content":"        this.subject \u003d personToEdit;","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"DonnyS57"},"content":"        model.setPerson(curr, personToEdit);","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"DonnyS57"},"content":"     * Method to edit the client\u0027s notes.","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"DonnyS57"},"content":"     * @param newNotes new notes for the client.","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"DonnyS57"},"content":"    public void edit(Notes newNotes) {","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"DonnyS57"},"content":"        Person curr \u003d this.subject;","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"DonnyS57"},"content":"        Person personToEdit \u003d new Person(","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"DonnyS57"},"content":"                curr.getName(),","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"DonnyS57"},"content":"                curr.getPhone(),","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"DonnyS57"},"content":"                curr.getEmail(),","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"DonnyS57"},"content":"                curr.getAddress(),","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"sheehui"},"content":"                newNotes,","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"DonnyS57"},"content":"                curr.getPolicies(),","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"DonnyS57"},"content":"                curr.getLiabilities(),","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"DonnyS57"},"content":"                curr.getAssets()","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"DonnyS57"},"content":"        );","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"DonnyS57"},"content":"        this.subject \u003d personToEdit;","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"DonnyS57"},"content":"        model.setPerson(curr, personToEdit);","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"DonnyS57"},"content":"     * Method to edit the client\u0027s policies.","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"DonnyS57"},"content":"     * @param newPolicies new policies for the client.","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"DonnyS57"},"content":"    public void editPolicies(Set\u003cPolicy\u003e newPolicies) {","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"DonnyS57"},"content":"        Person curr \u003d this.subject;","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"DonnyS57"},"content":"        Person personToEdit \u003d new Person(","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"DonnyS57"},"content":"                curr.getName(),","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"DonnyS57"},"content":"                curr.getPhone(),","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"DonnyS57"},"content":"                curr.getEmail(),","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"DonnyS57"},"content":"                curr.getAddress(),","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"DonnyS57"},"content":"                curr.getNotes(),","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"sheehui"},"content":"                newPolicies,","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"DonnyS57"},"content":"                curr.getLiabilities(),","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"DonnyS57"},"content":"                curr.getAssets()","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"DonnyS57"},"content":"        );","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"DonnyS57"},"content":"        this.subject \u003d personToEdit;","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"DonnyS57"},"content":"        model.setPerson(curr, personToEdit);","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"DonnyS57"},"content":"     * Method to edit the client\u0027s liabilities.","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"DonnyS57"},"content":"     * @param newLiabilities new liabilities for the client.","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"DonnyS57"},"content":"    public void editLiabilities(Set\u003cLiability\u003e newLiabilities) {","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"DonnyS57"},"content":"        Person curr \u003d this.subject;","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"DonnyS57"},"content":"        Person personToEdit \u003d new Person(","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"DonnyS57"},"content":"                curr.getName(),","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"DonnyS57"},"content":"                curr.getPhone(),","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"DonnyS57"},"content":"                curr.getEmail(),","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"DonnyS57"},"content":"                curr.getAddress(),","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"DonnyS57"},"content":"                curr.getNotes(),","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"DonnyS57"},"content":"                curr.getPolicies(),","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"sheehui"},"content":"                newLiabilities,","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"DonnyS57"},"content":"                curr.getAssets()","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"DonnyS57"},"content":"        );","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"DonnyS57"},"content":"        this.subject \u003d personToEdit;","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"DonnyS57"},"content":"        model.setPerson(curr, personToEdit);","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":197,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"DonnyS57"},"content":"     * Method to edit the client\u0027s assets.","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"DonnyS57"},"content":"     * @param newAssets new assets for the client.","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"DonnyS57"},"content":"    public void editAssets(Set\u003cAsset\u003e newAssets) {","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"DonnyS57"},"content":"        Person curr \u003d this.subject;","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"DonnyS57"},"content":"        Person personToEdit \u003d new Person(","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"DonnyS57"},"content":"                curr.getName(),","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"DonnyS57"},"content":"                curr.getPhone(),","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"DonnyS57"},"content":"                curr.getEmail(),","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"DonnyS57"},"content":"                curr.getAddress(),","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"DonnyS57"},"content":"                curr.getNotes(),","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"DonnyS57"},"content":"                curr.getPolicies(),","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"DonnyS57"},"content":"                curr.getLiabilities(),","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"DonnyS57"},"content":"                newAssets","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"DonnyS57"},"content":"        );","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"DonnyS57"},"content":"        this.subject \u003d personToEdit;","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"DonnyS57"},"content":"        model.setPerson(curr, personToEdit);","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":216,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":217,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"bharathcs":25,"DonnyS57":145,"sheehui":24,"mrmrinal":17,"Bluntsord":6}},{"path":"src/main/java/donnafin/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client to DonnaFin. \"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \";","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This client already exists in the DonnaFin\";","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"        Set\u003cPerson\u003e weakDuplicatesSet \u003d model.getWeakDuplicates(toAdd);","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"        String duplicateWarning \u003d \"\";","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"        if (weakDuplicatesSet !\u003d null \u0026\u0026 weakDuplicatesSet.size() !\u003d 0) {","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"            String listDuplicates \u003d weakDuplicatesSet.stream()","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"                    .filter(x -\u003e !toAdd.equals(x))","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"                    .map(p -\u003e p.getName() + \"\\n\")","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"                    .reduce(\"\", (a, b) -\u003e a + b);","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"            duplicateWarning \u003d String.format(","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"                    \"\\nWARNING: Found %d other clients who could be duplicate(s):\\n%s\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"                    + \"Hint: REMOVE command can be useful to remove duplicates.\",","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"                    weakDuplicatesSet.size(),","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"                    listDuplicates","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"            );","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd) + duplicateWarning);","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"sheehui"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd, true));","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bharathcs":19,"sheehui":11,"Bluntsord":1,"-":50}},{"path":"src/main/java/donnafin/logic/commands/AppendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DonnyS57"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_COMMISSION;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_INSURED_VALUE;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_INSURER;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_REMARKS;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_VALUE;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_YEARLY_PREMIUM;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"DonnyS57"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"DonnyS57"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"DonnyS57"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"DonnyS57"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"DonnyS57"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Asset;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Liability;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Policy;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"DonnyS57"},"content":"public class AppendCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"DonnyS57"},"content":"    public static final String COMMAND_WORD \u003d \"append\";","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"DonnyS57"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \"notes down a policy/asset/liability owned by a client. \"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"DonnyS57"},"content":"        + \"Parameters (For Policies): \"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"DonnyS57"},"content":"        + PREFIX_NAME + \"POLICY NAME \"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"DonnyS57"},"content":"        + PREFIX_INSURER + \"INSURER \"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"DonnyS57"},"content":"        + PREFIX_INSURED_VALUE + \"INSURED VALUE \"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"DonnyS57"},"content":"        + PREFIX_YEARLY_PREMIUM + \"YEARLY PREMIUM \"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"DonnyS57"},"content":"        + PREFIX_COMMISSION + \"COMMISSION \\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"DonnyS57"},"content":"        + \"Parameters (For Assets/Liabilities): \"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"DonnyS57"},"content":"        + PREFIX_NAME + \"ASSET/LIABILITY NAME \"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"DonnyS57"},"content":"        + PREFIX_TYPE + \"TYPE \"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"DonnyS57"},"content":"        + PREFIX_VALUE + \"VALUE \"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"DonnyS57"},"content":"        + PREFIX_REMARKS + \"REMARKS \";","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"DonnyS57"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New policy/asset/liability added\";","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"DonnyS57"},"content":"    private final Consumer\u003cPersonAdapter\u003e editor;","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"    private final PersonAdapter personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"    private final Object hashableNewValue;","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"DonnyS57"},"content":"     * The append command used to add a new policy associated with the client.","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"DonnyS57"},"content":"     * @param personAdapter the client being edited.","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"DonnyS57"},"content":"     * @param policy the new policy being added.","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"DonnyS57"},"content":"    public AppendCommand(PersonAdapter personAdapter, Policy policy) {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"DonnyS57"},"content":"        this.personAdapter \u003d personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"        this.hashableNewValue \u003d policy;","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"DonnyS57"},"content":"        this.editor \u003d pa -\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"            Set\u003cPolicy\u003e policies \u003d new HashSet\u003c\u003e(pa.getSubject().getPolicies());","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"DonnyS57"},"content":"            policies.add(policy);","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"DonnyS57"},"content":"            pa.editPolicies(policies);","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"DonnyS57"},"content":"        };","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"DonnyS57"},"content":"     * The append command used to add a new liability associated with the client.","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"DonnyS57"},"content":"     * @param personAdapter the client being edited.","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"DonnyS57"},"content":"     * @param liability the new liability being added.","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"DonnyS57"},"content":"    public AppendCommand(PersonAdapter personAdapter, Liability liability) {","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"DonnyS57"},"content":"        this.personAdapter \u003d personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"        this.hashableNewValue \u003d liability;","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"DonnyS57"},"content":"        this.editor \u003d pa -\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"            Set\u003cLiability\u003e liabilities \u003d new HashSet\u003c\u003e(pa.getSubject().getLiabilities());","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"DonnyS57"},"content":"            liabilities.add(liability);","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"DonnyS57"},"content":"            pa.editLiabilities(liabilities);","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"DonnyS57"},"content":"        };","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"DonnyS57"},"content":"     * The append command used to add a new asset associated with the client.","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"DonnyS57"},"content":"     * @param personAdapter the client being edited.","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"DonnyS57"},"content":"     * @param asset the new asset being added.","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"DonnyS57"},"content":"    public AppendCommand(PersonAdapter personAdapter, Asset asset) {","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"DonnyS57"},"content":"        this.personAdapter \u003d personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"bharathcs"},"content":"        this.hashableNewValue \u003d asset;","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"DonnyS57"},"content":"        this.editor \u003d pa -\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"            Set\u003cAsset\u003e assets \u003d new HashSet\u003c\u003e(pa.getSubject().getAssets());","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"DonnyS57"},"content":"            assets.add(asset);","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"DonnyS57"},"content":"            pa.editAssets(assets);","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"DonnyS57"},"content":"        };","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"DonnyS57"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"DonnyS57"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"DonnyS57"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"DonnyS57"},"content":"        editor.accept(this.personAdapter);","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"Bluntsord"},"content":"        //Used to refresh UI to display new attribute added","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"Bluntsord"},"content":"        Consumer\u003cUi\u003e refresh \u003d x -\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"Bluntsord"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"Bluntsord"},"content":"                x.switchClientViewTab(x.getUiState());","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"Bluntsord"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"Bluntsord"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"Bluntsord"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"Bluntsord"},"content":"        };","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"Bluntsord"},"content":"        return new CommandResult(MESSAGE_SUCCESS, refresh);","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"DonnyS57"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"bharathcs"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"bharathcs"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"bharathcs"},"content":"            return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"bharathcs"},"content":"        } else if (!(o instanceof AppendCommand)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"bharathcs"},"content":"            return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"bharathcs"},"content":"        return ((AppendCommand) o).personAdapter.equals(personAdapter)","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"bharathcs"},"content":"                \u0026\u0026 ((AppendCommand) o).hashableNewValue.hashCode() \u003d\u003d this.hashableNewValue.hashCode();","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"bharathcs"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"bharathcs"},"content":"        return Objects.hash(personAdapter, hashableNewValue);","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"DonnyS57"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"bharathcs":23,"DonnyS57":92,"Bluntsord":13}},{"path":"src/main/java/donnafin/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"DonnaFin has been cleared!\";","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sheehui":4,"-":19}},{"path":"src/main/java/donnafin/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sheehui":3,"-":17}},{"path":"src/main/java/donnafin/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.Logic;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"    private final Consumer\u003cUi\u003e uiAction;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"    private final Consumer\u003cLogic\u003e logicAction;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"    public CommandResult(String feedbackToUser, Consumer\u003cUi\u003e uiAction, Consumer\u003cLogic\u003e logicAction) {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"        this.uiAction \u003d uiAction;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"        this.logicAction \u003d logicAction;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"    public CommandResult(String feedbackToUser, Consumer\u003cUi\u003e uiAction) {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"        this(feedbackToUser, uiAction, logic -\u003e {/* do nothing */});","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"        this(feedbackToUser, (ui -\u003e { /* do nothing; */ }));","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser);","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"        // it is no longer possible to compare it on the basis of show help or exit","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"        // due to the nature of lambdas.","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"        return Objects.hash(feedbackToUser);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"        // it is no longer possible to compare it on the basis of show help or exit","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"        // due to the nature of lambdas.","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"Bluntsord"},"content":"    public Consumer\u003cUi\u003e getUiAction() {","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"Bluntsord"},"content":"        return uiAction;","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"Bluntsord"},"content":"    public Consumer\u003cLogic\u003e getLogicAction() {","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"Bluntsord"},"content":"        return logicAction;","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bharathcs":11,"sheehui":2,"Bluntsord":19,"-":49}},{"path":"src/main/java/donnafin/logic/commands/ContactTabParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.ClientViewParser;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.parser.EditCommandParser;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"public class ContactTabParser extends ClientViewParser {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"    public ContactTabParser(PersonAdapter personAdapter) {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"        super(personAdapter);","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"    protected Command tabSpecificHandler(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"            return new EditCommandParser(personAdapter).parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"        case AppendCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"            //fallthrough","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"        case RemoveCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"            throw new ParseException(Messages.MESSAGE_EDIT_COMMAND_SUPPORTED);","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"bharathcs":3,"sheehui":7,"Bluntsord":21}},{"path":"src/main/java/donnafin/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"            + \": Deletes the client identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Client: %1$s\";","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_INDEX);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bharathcs":2,"sheehui":7,"-":44}},{"path":"src/main/java/donnafin/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DonnyS57"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"DonnyS57"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"DonnyS57"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"DonnyS57"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"DonnyS57"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"DonnyS57"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"DonnyS57"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"DonnyS57"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"DonnyS57"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"DonnyS57"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edit details of the client identified \"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"DonnyS57"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"DonnyS57"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"DonnyS57"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"DonnyS57"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"DonnyS57"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"sheehui"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS]\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"sheehui"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"DonnyS57"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"DonnyS57"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Successful edit.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"DonnyS57"},"content":"    private final PersonAdapter personAdapter;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"    private final Consumer\u003cPersonAdapter\u003e editor;","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"DonnyS57"},"content":"     * @param personAdapter of the person in the filtered person list to edit","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"Bluntsord"},"content":"     * @param editor new editor for the contact.","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"    public EditCommand(PersonAdapter personAdapter, Consumer\u003cPersonAdapter\u003e editor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"DonnyS57"},"content":"        requireNonNull(personAdapter);","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"        requireNonNull(editor);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"DonnyS57"},"content":"        this.personAdapter \u003d personAdapter;","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"        this.editor \u003d editor;","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"DonnyS57"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"DonnyS57"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"DonnyS57"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"        editor.accept(personAdapter);","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"        //Used to refresh UI to display new attribute added","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"        Consumer\u003cUi\u003e refresh \u003d x -\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"            try {","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"                x.switchClientViewTab(x.getUiState());","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"        };","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"        return new CommandResult(MESSAGE_EDIT_PERSON_SUCCESS, refresh);","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"DonnyS57"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"bharathcs":19,"DonnyS57":48,"sheehui":4,"Bluntsord":1}},{"path":"src/main/java/donnafin/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting DonnaFin as requested ...\";","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, (Ui::beginExit));","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"bharathcs":1,"sheehui":4,"-":14}},{"path":"src/main/java/donnafin/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all clients whose names contain any of \"","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"        if (model.getFilteredPersonList().size() \u003c 1) {","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"            return new CommandResult(","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"                    String.format(Messages.MESSAGE_NO_PERSON_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"        } else if (model.getFilteredPersonList().size() \u003d\u003d 1) {","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"            return new CommandResult(","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"                    String.format(Messages.MESSAGE_PERSON_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"sheehui":5,"mrmrinal":7,"-":37}},{"path":"src/main/java/donnafin/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, (Ui::showHelp));","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bharathcs":1,"sheehui":3,"-":18}},{"path":"src/main/java/donnafin/logic/commands/HomeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.Logic;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.AddressBookParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"public class HomeCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"    public static final String COMMAND_WORD \u003d \"home\";","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Currently viewing home window.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"        Consumer\u003cUi\u003e uiAction \u003d Ui::showHome;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"        Consumer\u003cLogic\u003e logicAction \u003d logic -\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"            logic.setParserStrategy(new AddressBookParser());","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"        };","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"        return new CommandResult(MESSAGE_SUCCESS, uiAction, logicAction);","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"bharathcs":2,"sheehui":4,"Bluntsord":23}},{"path":"src/main/java/donnafin/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All clients listed!\";","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sheehui":4,"-":19}},{"path":"src/main/java/donnafin/logic/commands/NotesTabParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.ClientViewParser;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"public class NotesTabParser extends ClientViewParser {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"    public NotesTabParser(PersonAdapter personAdapter) {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"        super(personAdapter);","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"    protected Command tabSpecificHandler(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"        case AppendCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"            //fallthrough","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"        case RemoveCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"            //fallthrough","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"            throw new ParseException(Messages.MESSAGE_NO_CLIENTWINDOW_COMMANDS_SUPPORTED);","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"sheehui":9,"Bluntsord":21}},{"path":"src/main/java/donnafin/logic/commands/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DonnyS57"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"DonnyS57"},"content":"import donnafin.commons.core.types.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"DonnyS57"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.PersonAdapter.PersonField;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Asset;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Liability;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Policy;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"    public static final String COMMAND_WORD \u003d \"remove\";","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"            + \": removes a row from the attribute table. \"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"            + \"Example: remove 3\";","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Successfully removed row.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"DonnyS57"},"content":"    private final PersonAdapter personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"    private final PersonField field;","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"    private final Index index;","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"    /** Constructor for {@code RemoveCommand}. */","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"    public RemoveCommand(PersonAdapter personAdapter, PersonField field, Index index) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"DonnyS57"},"content":"        this.personAdapter \u003d personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"        this.field \u003d field;","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"            switch (field) {","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"            case POLICIES:","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"                Set\u003cPolicy\u003e newPolicies \u003d removeWithOrder(personAdapter.getSubject().getPolicies(), index);","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"                personAdapter.editPolicies(newPolicies);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"                break;","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"            case LIABILITIES:","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"                Set\u003cLiability\u003e newLiabilities \u003d removeWithOrder(personAdapter.getSubject().getLiabilities(), index);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"                personAdapter.editLiabilities(newLiabilities);","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"                break;","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"            case ASSETS:","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"                Set\u003cAsset\u003e newAssets \u003d removeWithOrder(personAdapter.getSubject().getAssets(), index);","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"                personAdapter.editAssets(newAssets);","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"                break;","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"            default:","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"                throw new ParseException(\"Invalid tab for append\");","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"            throw new CommandException(\"No such index found.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"Bluntsord"},"content":"        //Used to refresh ui to display remove attribute","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"Bluntsord"},"content":"        Consumer\u003cUi\u003e refresh \u003d x -\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"Bluntsord"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"Bluntsord"},"content":"                x.switchClientViewTab(x.getUiState());","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"Bluntsord"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"Bluntsord"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"Bluntsord"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"Bluntsord"},"content":"        };","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"Bluntsord"},"content":"        return new CommandResult(MESSAGE_SUCCESS, refresh);","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"bharathcs"},"content":"    private \u003cT\u003e Set\u003cT\u003e removeWithOrder(Set\u003cT\u003e original, Index index) {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"bharathcs"},"content":"        List\u003cT\u003e newSet \u003d original.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"bharathcs"},"content":"            .sorted(Comparator.comparing(Object::toString))","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"bharathcs"},"content":"        newSet.remove(index.getZeroBased()); // can throw IndexOutOfBoundsException","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"        return new HashSet\u003c\u003e(newSet);","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"            return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"            return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"        RemoveCommand that \u003d (RemoveCommand) o;","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"        return personAdapter.equals(that.personAdapter) \u0026\u0026 field \u003d\u003d that.field \u0026\u0026 index.equals(that.index);","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"bharathcs"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"bharathcs"},"content":"        return Objects.hash(personAdapter, field, index);","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"DonnyS57"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"bharathcs":88,"DonnyS57":10,"Bluntsord":13}},{"path":"src/main/java/donnafin/logic/commands/SwitchTabCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.Logic;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.AssetsTabParser;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.LiabilitiesTabParser;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.PolicyTabParser;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"public class SwitchTabCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"    public static final String COMMAND_WORD \u003d \"tab\";","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Switched tab\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"    private final Ui.ViewFinderState tab;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"    private final PersonAdapter personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"     * Constructor for switchTabCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"     * @param tab {@tab} which is passed to switch tab command","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"     * @param personAdapter {@personAdapeter} which is used to pass personAdapter to other","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"     * parsers later","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"    public SwitchTabCommand(Ui.ViewFinderState tab, PersonAdapter personAdapter) {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"        this.tab \u003d tab;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"        this.personAdapter \u003d personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Bluntsord"},"content":"        Consumer\u003cUi\u003e uiAction \u003d ui -\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"Bluntsord"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"                ui.switchClientViewTab(tab);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Bluntsord"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Bluntsord"},"content":"                //This is sufficient as its only an exception due to switch","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"Bluntsord"},"content":"                //Handling all cases normally and still having a default","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Bluntsord"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Bluntsord"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Bluntsord"},"content":"        };","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"        Consumer\u003cLogic\u003e logicAction \u003d logic -\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"Bluntsord"},"content":"            switch (tab) {","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"Bluntsord"},"content":"            case CONTACT:","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Bluntsord"},"content":"                logic.setParserStrategy(new ContactTabParser(personAdapter));","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"Bluntsord"},"content":"                break;","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"Bluntsord"},"content":"            case POLICIES:","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"Bluntsord"},"content":"                logic.setParserStrategy(new PolicyTabParser(personAdapter));","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"Bluntsord"},"content":"                break;","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"Bluntsord"},"content":"            case LIABILITIES:","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Bluntsord"},"content":"                logic.setParserStrategy(new LiabilitiesTabParser(personAdapter));","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Bluntsord"},"content":"                break;","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"Bluntsord"},"content":"            case ASSETS:","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Bluntsord"},"content":"                logic.setParserStrategy(new AssetsTabParser(personAdapter));","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"Bluntsord"},"content":"                break;","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"Bluntsord"},"content":"            case NOTES:","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"Bluntsord"},"content":"                logic.setParserStrategy(new NotesTabParser(personAdapter));","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"Bluntsord"},"content":"                break;","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"Bluntsord"},"content":"            default:","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"Bluntsord"},"content":"                // Should throw an error and should never reach here","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"                throw new RuntimeException(\"Invalid enum for ViewFinderState\");","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"Bluntsord"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"        };","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"        return new CommandResult(MESSAGE_SUCCESS, uiAction, logicAction);","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"bharathcs":35,"Bluntsord":45}},{"path":"src/main/java/donnafin/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"DonnyS57"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"DonnyS57"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"DonnyS57"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"DonnyS57"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"DonnyS57"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"            + \": Views a client in more detail.\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"DonnyS57"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"DonnyS57"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_VIEW_PERSON_SUCCESS \u003d \"Viewing Client: %1$s\";","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"DonnyS57"},"content":"    private final Index index;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"DonnyS57"},"content":"     * The Constructor for the view command.","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"DonnyS57"},"content":"     * @param index index of the person that you want to view.","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"DonnyS57"},"content":"    public ViewCommand(Index index) {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"DonnyS57"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"DonnyS57"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"DonnyS57"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"DonnyS57"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"DonnyS57"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"DonnyS57"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"DonnyS57"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_INDEX);","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"DonnyS57"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"DonnyS57"},"content":"        Person person \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"DonnyS57"},"content":"        PersonAdapter personToView \u003d new PersonAdapter(model, person);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"        String feedbackToUser \u003d String.format(MESSAGE_VIEW_PERSON_SUCCESS, person.getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Bluntsord"},"content":"            feedbackToUser,","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Bluntsord"},"content":"            ui -\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"Bluntsord"},"content":"                ui.showClientView(personToView);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Bluntsord"},"content":"            },","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"Bluntsord"},"content":"            logic -\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"Bluntsord"},"content":"                logic.setParserStrategy(new ContactTabParser(personToView));","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"            });","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"DonnyS57"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"DonnyS57"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"DonnyS57"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"DonnyS57"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"DonnyS57"},"content":"                \u0026\u0026 index.equals(((ViewCommand) other).index)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"DonnyS57"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"bharathcs":4,"DonnyS57":43,"sheehui":10,"Bluntsord":7}},{"path":"src/main/java/donnafin/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"sheehui":1,"-":16}},{"path":"src/main/java/donnafin/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.AddCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Address;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Asset;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Liability;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Notes;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Policy;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"sheehui"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":"        // Should check that all are present accept for the non required fields, policy and assets","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"sheehui"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"        Set\u003cPolicy\u003e policySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"sheehui"},"content":"        Set\u003cLiability\u003e liabilitySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Bluntsord"},"content":"        Set\u003cAsset\u003e assetSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"DonnyS57"},"content":"        Notes notes \u003d new Notes(\"\");","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"        Person person \u003d new Person(","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"sheehui"},"content":"                name, phone, email, address, notes, policySet, liabilitySet, assetSet);","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"bharathcs":1,"DonnyS57":2,"sheehui":17,"Bluntsord":7,"-":40}},{"path":"src/main/java/donnafin/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.AddCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.AppendCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.EditCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.FindCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.HomeCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.ListCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.RemoveCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.SwitchTabCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"public final class AddressBookParser extends ParserStrategy {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"     * Parse the user input given the command word and arguments.","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"     * @param arguments a single string containing all the remaining arguments to user input.","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"    public Command parseCommand(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"sheehui"},"content":"            return !arguments.equals(\"\") ? throwsInvalidInputMsg() : new ClearCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"sheehui"},"content":"            return !arguments.equals(\"\") ? throwsInvalidInputMsg() : new ListCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"sheehui"},"content":"            return !arguments.equals(\"\") ? throwsInvalidInputMsg() : new ExitCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"DonnyS57"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"DonnyS57"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":55,"author":{"gitId":"sheehui"},"content":"            return !arguments.equals(\"\") ? throwsInvalidInputMsg() : new HelpCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":57,"author":{"gitId":"sheehui"},"content":"        case HomeCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"sheehui"},"content":"            return !arguments.equals(\"\") ? throwsInvalidInputMsg() : new HomeCommand();","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"sheehui"},"content":"        case AppendCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"sheehui"},"content":"            //fallthrough","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"sheehui"},"content":"        case RemoveCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"sheehui"},"content":"            //fallthrough","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"sheehui"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"sheehui"},"content":"            //fallthrough","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"sheehui"},"content":"        case SwitchTabCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"sheehui"},"content":"            throw new ParseException(Messages.MESSAGE_COMMAND_NOT_IN_HOMEWINDOW);","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":73,"author":{"gitId":"sheehui"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bharathcs":4,"DonnyS57":3,"sheehui":37,"-":32}},{"path":"src/main/java/donnafin/logic/parser/AppendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_COMMISSION;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_INSURED_VALUE;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_INSURER;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_REMARKS;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_VALUE;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_YEARLY_PREMIUM;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"DonnyS57"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"DonnyS57"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"DonnyS57"},"content":"import donnafin.commons.core.types.Money;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"DonnyS57"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"DonnyS57"},"content":"import donnafin.logic.commands.AppendCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"DonnyS57"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Asset;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Liability;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Policy;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"public class AppendCommandParser implements Parser\u003cAppendCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"    private final Ui.ViewFinderState currentTab;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"DonnyS57"},"content":"    private final Prefix[] prefixes;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    private final PersonAdapter personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"DonnyS57"},"content":"     * Constructor for parser for append command.","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"    public AppendCommandParser(Ui.ViewFinderState currentTab, PersonAdapter personAdapter) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"        this.currentTab \u003d currentTab;","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"        this.personAdapter \u003d personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"        switch (currentTab) {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Bluntsord"},"content":"        case POLICIES:","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"            prefixes \u003d new Prefix[]{","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"                PREFIX_NAME,","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"                PREFIX_INSURER,","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"                PREFIX_INSURED_VALUE,","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"                PREFIX_YEARLY_PREMIUM,","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"                PREFIX_COMMISSION","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"            };","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Bluntsord"},"content":"        case ASSETS:","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"            // fallthrough","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"        case LIABILITIES:","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"            prefixes \u003d new Prefix[]{ PREFIX_NAME, PREFIX_TYPE, PREFIX_VALUE, PREFIX_REMARKS };","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"            throw new ParseException(\"Invalid tab for append.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"DonnyS57"},"content":"     * @param args","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"    public AppendCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"        Objects.requireNonNull(args);","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, prefixes);","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"        switch (currentTab) {","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Bluntsord"},"content":"        case POLICIES:","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"            return parsePolicy(argMultimap);","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"Bluntsord"},"content":"        case ASSETS:","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"            return parseAsset(argMultimap);","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"Bluntsord"},"content":"        case LIABILITIES:","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"            return parseLiability(argMultimap);","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"            throw new ParseException(\"Invalid tab for append.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"    private AppendCommand parseAsset(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"        String name;","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"        String type;","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"        Money value;","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"        String remarks;","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"bharathcs"},"content":"            name \u003d argMultimap.getValue(PREFIX_NAME).orElseThrow();","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"bharathcs"},"content":"            type \u003d argMultimap.getValue(PREFIX_TYPE).orElseThrow();","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"bharathcs"},"content":"            value \u003d ParserUtil.parseMoney(argMultimap.getValue(PREFIX_VALUE).orElseThrow());","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"bharathcs"},"content":"            remarks \u003d argMultimap.getValue(PREFIX_REMARKS).orElse(\"\");","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"bharathcs"},"content":"            throw new ParseException(Asset.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"        Asset newAsset \u003d new Asset(name, type, value.toString(), remarks);","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"        return new AppendCommand(personAdapter, newAsset);","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"    private AppendCommand parseLiability(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"        String name;","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"        String type;","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"        Money value;","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"        String remarks;","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"            name \u003d argMultimap.getValue(PREFIX_NAME).orElseThrow();","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"            type \u003d argMultimap.getValue(PREFIX_TYPE).orElseThrow();","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"bharathcs"},"content":"            value \u003d ParserUtil.parseMoney(argMultimap.getValue(PREFIX_VALUE).orElseThrow());","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"bharathcs"},"content":"            remarks \u003d argMultimap.getValue(PREFIX_REMARKS).orElse(\"\");","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"bharathcs"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"bharathcs"},"content":"            throw new ParseException(Liability.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"DonnyS57"},"content":"        Liability newLiability \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"DonnyS57"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"DonnyS57"},"content":"            newLiability \u003d new Liability(name, type, value.toString(), remarks);","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"sheehui"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"DonnyS57"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"DonnyS57"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"bharathcs"},"content":"        return new AppendCommand(personAdapter, newLiability);","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"bharathcs"},"content":"    private AppendCommand parsePolicy(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"        String name;","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"bharathcs"},"content":"        String insurer;","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"bharathcs"},"content":"        Money insuredValue;","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"bharathcs"},"content":"        Money premium;","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"bharathcs"},"content":"        Money commission;","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"bharathcs"},"content":"            name \u003d argMultimap.getValue(PREFIX_NAME).orElseThrow();","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"bharathcs"},"content":"            insurer \u003d argMultimap.getValue(PREFIX_INSURER).orElseThrow();","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"bharathcs"},"content":"            insuredValue \u003d ParserUtil.parseMoney(argMultimap.getValue(PREFIX_INSURED_VALUE).orElseThrow());","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"bharathcs"},"content":"            premium \u003d ParserUtil.parseMoney(argMultimap.getValue(PREFIX_YEARLY_PREMIUM).orElseThrow());","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"bharathcs"},"content":"            commission \u003d ParserUtil.parseMoney(argMultimap.getValue(PREFIX_COMMISSION).orElseThrow());","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"bharathcs"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"bharathcs"},"content":"            throw new ParseException(Policy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"bharathcs"},"content":"        Policy newPolicy \u003d new Policy(","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"bharathcs"},"content":"                name, insurer, insuredValue.toString(), premium.toString(), commission.toString());","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"bharathcs"},"content":"        return new AppendCommand(personAdapter, newPolicy);","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"bharathcs":110,"DonnyS57":21,"sheehui":1,"Bluntsord":9}},{"path":"src/main/java/donnafin/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"sheehui":1,"-":59}},{"path":"src/main/java/donnafin/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"sheehui":1,"-":147}},{"path":"src/main/java/donnafin/logic/parser/AssetsTabParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.AppendCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.Command;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.EditCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.RemoveCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"public class AssetsTabParser extends ClientViewParser {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"    public AssetsTabParser(PersonAdapter personAdapter) {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"        super(personAdapter);","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"    protected Command tabSpecificHandler(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"        case AppendCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"            return new AppendCommandParser(Ui.ViewFinderState.ASSETS, super.personAdapter).parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"        case RemoveCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"            return new RemoveCommandParser(Ui.ViewFinderState.ASSETS, super.personAdapter).parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"            throw new ParseException(Messages.MESSAGE_EDIT_COMMAND_UNAVAILABLE);","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"        default:","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"sheehui":7,"Bluntsord":27}},{"path":"src/main/java/donnafin/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"DonnyS57"},"content":"    public static final Prefix PREFIX_VALUE \u003d new Prefix(\"v/\");","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"DonnyS57"},"content":"    public static final Prefix PREFIX_REMARKS \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DonnyS57"},"content":"    public static final Prefix PREFIX_INSURER \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DonnyS57"},"content":"    public static final Prefix PREFIX_INSURED_VALUE \u003d new Prefix(\"iv/\");","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"    public static final Prefix PREFIX_YEARLY_PREMIUM \u003d new Prefix(\"pr/\");","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"DonnyS57"},"content":"    public static final Prefix PREFIX_COMMISSION \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"DonnyS57"},"content":"    public static final Prefix PREFIX_TYPE \u003d new Prefix(\"ty/\");","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    // TODO: change type to \u0027t/\u0027 prefix","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"bharathcs":2,"DonnyS57":6,"sheehui":1,"-":13}},{"path":"src/main/java/donnafin/logic/parser/ClientViewParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.AddCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.ClearCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.DeleteCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.FindCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.HomeCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.ListCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.commands.SwitchTabCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.ViewCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"public abstract class ClientViewParser extends ParserStrategy {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"    protected final PersonAdapter personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"    public ClientViewParser(PersonAdapter personAdapter) {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"        this.personAdapter \u003d personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"     * Parse the user input given the command word and arguments.","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"     * @param arguments a single string containing all the remaining arguments to user input.","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"    public Command parseCommand(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"Bluntsord"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"sheehui"},"content":"            return !arguments.equals(\"\") ? throwsInvalidInputMsg() : new HelpCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Bluntsord"},"content":"        case HomeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"sheehui"},"content":"            return !arguments.equals(\"\") ? throwsInvalidInputMsg() : new HomeCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"Bluntsord"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"sheehui"},"content":"            return !arguments.equals(\"\") ? throwsInvalidInputMsg() : new ExitCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"        case SwitchTabCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Bluntsord"},"content":"            return new SwitchTabCommand(ParserUtil.parseTab(arguments), personAdapter);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"sheehui"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"sheehui"},"content":"            //fallthrough","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"sheehui"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"sheehui"},"content":"            //fallthrough","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"sheehui"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"sheehui"},"content":"            //fallthrough","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"sheehui"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"sheehui"},"content":"            //fallthrough","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"sheehui"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"sheehui"},"content":"            //fallthrough","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"sheehui"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"sheehui"},"content":"            throw new ParseException(Messages.MESSAGE_COMMAND_NOT_IN_CLIENTWINDOW);","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"Bluntsord"},"content":"        default:","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"Bluntsord"},"content":"            return tabSpecificHandler(commandWord, arguments);","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"Bluntsord"},"content":"    protected abstract Command tabSpecificHandler(String commandWord, String arguments) throws ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"Bluntsord"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"Bluntsord"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"Bluntsord"},"content":"            return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"Bluntsord"},"content":"        if (o \u003d\u003d null || !(o instanceof ClientViewParser)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"Bluntsord"},"content":"            return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"Bluntsord"},"content":"        ClientViewParser that \u003d (ClientViewParser) o;","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"Bluntsord"},"content":"        return Objects.equals(personAdapter.getSubject(), that.personAdapter.getSubject());","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"Bluntsord"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"Bluntsord"},"content":"        return Objects.hash(personAdapter);","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"bharathcs":9,"sheehui":28,"Bluntsord":53}},{"path":"src/main/java/donnafin/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"        if (args.trim().equals(\"\")) {","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"            throw new ParseException(","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"            ParserUtil.checkIntegerMax(args);","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_PERSON_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"sheehui"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"bharathcs":1,"sheehui":14,"-":22}},{"path":"src/main/java/donnafin/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"DonnyS57"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"DonnyS57"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.commands.EditCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Address;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Email;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Name;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Phone;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"    private final PersonAdapter personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"    public EditCommandParser(PersonAdapter personAdapter) {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"        this.personAdapter \u003d personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"DonnyS57"},"content":"     * @param args","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"        Objects.requireNonNull(args);","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"                args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"        Function\u003cPersonAdapter, PersonAdapter\u003e fn \u003d pa -\u003e pa;","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"DonnyS57"},"content":"            fn \u003d fn.compose(pa -\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"DonnyS57"},"content":"                pa.edit(name);","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"DonnyS57"},"content":"                return pa;","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"DonnyS57"},"content":"            });","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"            Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"DonnyS57"},"content":"            fn \u003d fn.compose(pa -\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"DonnyS57"},"content":"                pa.edit(phone);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"DonnyS57"},"content":"                return pa;","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"DonnyS57"},"content":"            });","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"            Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"DonnyS57"},"content":"            fn \u003d fn.compose(pa -\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"DonnyS57"},"content":"                pa.edit(email);","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"DonnyS57"},"content":"                return pa;","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"DonnyS57"},"content":"            });","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"            Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"DonnyS57"},"content":"            fn \u003d fn.compose(pa -\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"DonnyS57"},"content":"                pa.edit(address);","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"DonnyS57"},"content":"                return pa;","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"DonnyS57"},"content":"            });","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"Bluntsord"},"content":"        // Checks if at least one prefix is present","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"        if (List.of(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS).stream().allMatch(","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"Bluntsord"},"content":"            prefix -\u003e argMultimap.getValue(prefix).isEmpty())","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"Bluntsord"},"content":"        ) {","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"Bluntsord"},"content":"            throw new ParseException(\"Please enter a valid prefix\");","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"        return new EditCommand(personAdapter, fn::apply);","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"bharathcs":45,"DonnyS57":25,"Bluntsord":9}},{"path":"src/main/java/donnafin/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.FindCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"sheehui":6,"-":26}},{"path":"src/main/java/donnafin/logic/parser/LiabilitiesTabParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.AppendCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.Command;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.EditCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.RemoveCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"public class LiabilitiesTabParser extends ClientViewParser {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"    public LiabilitiesTabParser(PersonAdapter personAdapter) {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"        super(personAdapter);","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"    protected Command tabSpecificHandler(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"        case AppendCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"            return new AppendCommandParser(Ui.ViewFinderState.LIABILITIES, super.personAdapter).parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"        case RemoveCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"            return new RemoveCommandParser(Ui.ViewFinderState.LIABILITIES, super.personAdapter).parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"            throw new ParseException(Messages.MESSAGE_EDIT_COMMAND_UNAVAILABLE);","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"        default:","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"sheehui":8,"Bluntsord":27}},{"path":"src/main/java/donnafin/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"sheehui":3,"-":13}},{"path":"src/main/java/donnafin/logic/parser/ParserContext.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"import donnafin.commons.core.LogsCenter;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"import donnafin.ui.UiManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"public class ParserContext {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"    private ParserStrategy currentParserStrategy;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"    Constructor for context","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"    public ParserContext(ParserStrategy parser) {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"        logger.info(\"Init context\");","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"        this.currentParserStrategy \u003d parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"    Changes the currentParserStrategy with a parserStrategy of choice","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"    public void setCurrentParserStrategy(ParserStrategy parserStrategy) {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"        requireNonNull(parserStrategy);","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"        logger.info(\"Setting ParserStrategy to \" + parserStrategy.getClass().getSimpleName());","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"        this.currentParserStrategy \u003d parserStrategy;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"    Executes the currentParserStrategy parse command","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Bluntsord"},"content":"    public Command executeParserStrategyCommand(String userInput) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"Bluntsord"},"content":"        logger.info(\"ParserContext executing strategyParserCommand\");","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":"        return currentParserStrategy.parseCommand(userInput);","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Bluntsord"},"content":"    public ParserStrategy getCurrentParserStrategy() {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Bluntsord"},"content":"        return this.currentParserStrategy;","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"Bluntsord":44}},{"path":"src/main/java/donnafin/logic/parser/ParserStrategy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"Interface to declare all strategic parser needs to have parseCommand command","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"public abstract class ParserStrategy {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"    /** Used for initial separation of command word and args. */","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"     * @param userInput full user input string","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\").toLowerCase();","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"        return parseCommand(commandWord, arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"    public abstract Command parseCommand(String commandWord, String arguments) throws ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"    protected Command throwsInvalidInputMsg() throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"        throw new ParseException(Messages.MESSAGE_USE_HELP_COMMAND);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"bharathcs":33,"Bluntsord":9}},{"path":"src/main/java/donnafin/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import java.math.BigInteger;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Money;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.util.StringUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Address;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Asset;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Liability;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Policy;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"import donnafin.ui.Ui.ViewFinderState;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"    private static final String ATTRIBUTE_DELIMITER \u003d \";;;\";","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"sheehui"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"sheehui"},"content":"     * Checks {@code indexString} if it is larger than Max Integer Value.","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"sheehui"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"sheehui"},"content":"     * @throws NumberFormatException if specified index string is larger than max Integer.","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"sheehui"},"content":"     * @throws ParseException if specified index string is non-integer.","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"sheehui"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"sheehui"},"content":"    public static void checkIntegerMax(String indexString) throws NumberFormatException, ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"sheehui"},"content":"        String trimmedIndex \u003d indexString.trim();","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"sheehui"},"content":"        BigInteger maxInt \u003d BigInteger.valueOf(Integer.MAX_VALUE);","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"sheehui"},"content":"        BigInteger value;","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"sheehui"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"sheehui"},"content":"            value \u003d new BigInteger(trimmedIndex);","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"sheehui"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"sheehui"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"sheehui"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"sheehui"},"content":"        if (value.compareTo(maxInt) \u003e 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"sheehui"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"sheehui"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"sheehui"},"content":"     * Parses a {@code String policy} into a {@code Policy}.","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"Bluntsord"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"Bluntsord"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"sheehui"},"content":"     * @throws ParseException if the given {@code policy} is invalid.","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"Bluntsord"},"content":"    public static Policy parsePolicy(String policy) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"sheehui"},"content":"        String[] details \u003d policy.split(ATTRIBUTE_DELIMITER);","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"bharathcs"},"content":"        if (details.length !\u003d 5) {","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"bharathcs"},"content":"            throw new ParseException(Policy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"bharathcs"},"content":"            return new Policy(details[0], details[1], details[2], details[3], details[4]);","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"bharathcs"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"Bluntsord"},"content":"            throw new ParseException(Policy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"Bluntsord"},"content":"     * Parses {@code Collection\u003cString\u003e policy} into a {@code Set\u003cPolicy\u003e}.","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"Bluntsord"},"content":"    public static Set\u003cPolicy\u003e parsePolicies(Collection\u003cString\u003e policies) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"Bluntsord"},"content":"        requireNonNull(policies);","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"Bluntsord"},"content":"        final Set\u003cPolicy\u003e policySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"Bluntsord"},"content":"        for (String policyName : policies) {","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"Bluntsord"},"content":"            policySet.add(parsePolicy(policyName));","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"Bluntsord"},"content":"        return policySet;","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"sheehui"},"content":"     * Parses a {@code String asset} into a {@code Asset}.","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"Bluntsord"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"Bluntsord"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"sheehui"},"content":"     * @throws ParseException if the given {@code asset} is invalid.","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"Bluntsord"},"content":"    public static Asset parseAsset(String asset) throws ParseException {","lastModifiedDate":"2021-10-15"},{"lineNumber":168,"author":{"gitId":"sheehui"},"content":"        String[] details \u003d asset.split(ATTRIBUTE_DELIMITER);","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"bharathcs"},"content":"        if (details.length !\u003d 4) {","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"Bluntsord"},"content":"            throw new ParseException(Asset.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-15"},{"lineNumber":172,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"bharathcs"},"content":"            return new Asset(details[0], details[1], details[2], details[3]);","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"bharathcs"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"bharathcs"},"content":"            throw new ParseException(Policy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"sheehui"},"content":"     * Parses {@code Collection\u003cString\u003e assets} into a {@code Set\u003cAsset\u003e}.","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"Bluntsord"},"content":"    public static Set\u003cAsset\u003e parseAssets(Collection\u003cString\u003e assets) throws ParseException {","lastModifiedDate":"2021-10-15"},{"lineNumber":184,"author":{"gitId":"Bluntsord"},"content":"        requireNonNull(assets);","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"Bluntsord"},"content":"        final Set\u003cAsset\u003e assetSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":186,"author":{"gitId":"Bluntsord"},"content":"        for (String assetName : assets) {","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"Bluntsord"},"content":"            assetSet.add(parseAsset(assetName));","lastModifiedDate":"2021-10-15"},{"lineNumber":188,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"Bluntsord"},"content":"        return assetSet;","lastModifiedDate":"2021-10-15"},{"lineNumber":191,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"sheehui"},"content":"     * Parses a {@code String liability} into a {@code Liability}.","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"Bluntsord"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"Bluntsord"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"sheehui"},"content":"     * @throws ParseException if the given {@code liability} is invalid.","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"Bluntsord"},"content":"    public static Liability parseLiability(String liability) throws ParseException {","lastModifiedDate":"2021-10-15"},{"lineNumber":201,"author":{"gitId":"sheehui"},"content":"        String[] details \u003d liability.split(ATTRIBUTE_DELIMITER);","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"bharathcs"},"content":"        if (details.length !\u003d 4) {","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"bharathcs"},"content":"            throw new ParseException(Asset.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":205,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"bharathcs"},"content":"            return new Liability(details[0], details[1], details[2], details[3]);","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"sheehui"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":209,"author":{"gitId":"Bluntsord"},"content":"            throw new ParseException(Liability.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-15"},{"lineNumber":210,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"sheehui"},"content":"     * Parses {@code Collection\u003cString\u003e liabilities} into a {@code Set\u003cLiability\u003e}.","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"sheehui"},"content":"    public static Set\u003cLiability\u003e parseLiabilities(Collection\u003cString\u003e liabilities) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":217,"author":{"gitId":"sheehui"},"content":"        requireNonNull(liabilities);","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"sheehui"},"content":"        final Set\u003cLiability\u003e liabilitySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":220,"author":{"gitId":"sheehui"},"content":"        for (String liabilityName : liabilities) {","lastModifiedDate":"2021-10-18"},{"lineNumber":221,"author":{"gitId":"sheehui"},"content":"            liabilitySet.add(parseLiability(liabilityName));","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":224,"author":{"gitId":"sheehui"},"content":"        return liabilitySet;","lastModifiedDate":"2021-10-18"},{"lineNumber":225,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":228,"author":{"gitId":"bharathcs"},"content":"     * Parses a {@code String money} into a {@code Money}.","lastModifiedDate":"2021-10-18"},{"lineNumber":229,"author":{"gitId":"bharathcs"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-18"},{"lineNumber":230,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"bharathcs"},"content":"     * @throws ParseException if the given {@code String money} is invalid.","lastModifiedDate":"2021-10-18"},{"lineNumber":232,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":233,"author":{"gitId":"bharathcs"},"content":"    public static Money parseMoney(String money) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":234,"author":{"gitId":"bharathcs"},"content":"        requireNonNull(money);","lastModifiedDate":"2021-10-18"},{"lineNumber":235,"author":{"gitId":"bharathcs"},"content":"        String trimmedInput \u003d money.trim();","lastModifiedDate":"2021-10-30"},{"lineNumber":236,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":237,"author":{"gitId":"bharathcs"},"content":"        // Handling Default currency $XYZ or $XYZ.AB","lastModifiedDate":"2021-10-18"},{"lineNumber":238,"author":{"gitId":"bharathcs"},"content":"        final String regexDollarCents \u003d \"^\\\\s*\\\\$\\\\s*\\\\d+(\\\\.\\\\d{2})?$\";","lastModifiedDate":"2021-10-30"},{"lineNumber":239,"author":{"gitId":"bharathcs"},"content":"        final String dollarCentsPrefix \u003d \"$\";","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":241,"author":{"gitId":"bharathcs"},"content":"        if (!trimmedInput.matches(regexDollarCents)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":242,"author":{"gitId":"bharathcs"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-30"},{"lineNumber":243,"author":{"gitId":"bharathcs"},"content":"                    String.format(","lastModifiedDate":"2021-10-30"},{"lineNumber":244,"author":{"gitId":"bharathcs"},"content":"                            \"Input string \u0027%s\u0027 does not match monetary value format. %s\",","lastModifiedDate":"2021-10-30"},{"lineNumber":245,"author":{"gitId":"bharathcs"},"content":"                            trimmedInput,","lastModifiedDate":"2021-10-30"},{"lineNumber":246,"author":{"gitId":"bharathcs"},"content":"                            Money.MESSAGE_CONSTRAINTS)","lastModifiedDate":"2021-10-30"},{"lineNumber":247,"author":{"gitId":"bharathcs"},"content":"            );","lastModifiedDate":"2021-10-30"},{"lineNumber":248,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":249,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":250,"author":{"gitId":"bharathcs"},"content":"        String decimalString \u003d trimmedInput.replace(dollarCentsPrefix, \"\").replace(\" \", \"\");","lastModifiedDate":"2021-10-30"},{"lineNumber":251,"author":{"gitId":"bharathcs"},"content":"        if (!decimalString.contains(\".\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"bharathcs"},"content":"            decimalString +\u003d \".00\";","lastModifiedDate":"2021-10-27"},{"lineNumber":253,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"bharathcs"},"content":"            long value \u003d Long.parseLong(decimalString.replace(\".\", \"\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":256,"author":{"gitId":"bharathcs"},"content":"            return new Money(value);","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"bharathcs"},"content":"        } catch (Money.MoneyException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":258,"author":{"gitId":"bharathcs"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2021-10-30"},{"lineNumber":259,"author":{"gitId":"bharathcs"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"Bluntsord"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-25"},{"lineNumber":261,"author":{"gitId":"bharathcs"},"content":"                String.format(\"\u0027%s\u0027 exceeds maximum monetary value (~$92 quadrillion).\", trimmedInput));","lastModifiedDate":"2021-10-30"},{"lineNumber":262,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":263,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":264,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":266,"author":{"gitId":"bharathcs"},"content":"     * Parse a string that is expected to describe a tab in {@code ClientView} into","lastModifiedDate":"2021-10-20"},{"lineNumber":267,"author":{"gitId":"Bluntsord"},"content":"     * the {@code Ui.ViewFinderState} enum.","lastModifiedDate":"2021-10-25"},{"lineNumber":268,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":269,"author":{"gitId":"Bluntsord"},"content":"    public static ViewFinderState parseTab(String tabName) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":270,"author":{"gitId":"bharathcs"},"content":"        Objects.requireNonNull(tabName);","lastModifiedDate":"2021-10-20"},{"lineNumber":271,"author":{"gitId":"bharathcs"},"content":"        tabName \u003d tabName.trim().toUpperCase();","lastModifiedDate":"2021-10-20"},{"lineNumber":272,"author":{"gitId":"bharathcs"},"content":"        switch (tabName) {","lastModifiedDate":"2021-10-20"},{"lineNumber":273,"author":{"gitId":"bharathcs"},"content":"        case \"C\":","lastModifiedDate":"2021-10-20"},{"lineNumber":274,"author":{"gitId":"bharathcs"},"content":"            // fallthrough","lastModifiedDate":"2021-10-20"},{"lineNumber":275,"author":{"gitId":"bharathcs"},"content":"        case \"CONTACT\":","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"bharathcs"},"content":"            // fallthrough","lastModifiedDate":"2021-10-20"},{"lineNumber":277,"author":{"gitId":"bharathcs"},"content":"        case \"CONTACTS\":","lastModifiedDate":"2021-10-20"},{"lineNumber":278,"author":{"gitId":"Bluntsord"},"content":"            return Ui.ViewFinderState.CONTACT;","lastModifiedDate":"2021-10-25"},{"lineNumber":279,"author":{"gitId":"bharathcs"},"content":"        case \"P\":","lastModifiedDate":"2021-10-20"},{"lineNumber":280,"author":{"gitId":"bharathcs"},"content":"            // fallthrough","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"bharathcs"},"content":"        case \"POLICY\":","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"bharathcs"},"content":"            // fallthrough","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"bharathcs"},"content":"        case \"POLICIES\":","lastModifiedDate":"2021-10-19"},{"lineNumber":284,"author":{"gitId":"Bluntsord"},"content":"            return ViewFinderState.POLICIES;","lastModifiedDate":"2021-10-25"},{"lineNumber":285,"author":{"gitId":"bharathcs"},"content":"        case \"A\":","lastModifiedDate":"2021-10-20"},{"lineNumber":286,"author":{"gitId":"bharathcs"},"content":"            // fallthrough","lastModifiedDate":"2021-10-20"},{"lineNumber":287,"author":{"gitId":"bharathcs"},"content":"        case \"ASSET\":","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"bharathcs"},"content":"            // fallthrough","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"bharathcs"},"content":"        case \"ASSETS\":","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"Bluntsord"},"content":"            return ViewFinderState.ASSETS;","lastModifiedDate":"2021-10-25"},{"lineNumber":291,"author":{"gitId":"bharathcs"},"content":"        case \"L\":","lastModifiedDate":"2021-10-20"},{"lineNumber":292,"author":{"gitId":"bharathcs"},"content":"            // fallthrough","lastModifiedDate":"2021-10-20"},{"lineNumber":293,"author":{"gitId":"bharathcs"},"content":"        case \"LIABILITY\":","lastModifiedDate":"2021-10-19"},{"lineNumber":294,"author":{"gitId":"bharathcs"},"content":"            // fallthrough","lastModifiedDate":"2021-10-19"},{"lineNumber":295,"author":{"gitId":"bharathcs"},"content":"        case \"LIABILITIES\":","lastModifiedDate":"2021-10-19"},{"lineNumber":296,"author":{"gitId":"Bluntsord"},"content":"            return ViewFinderState.LIABILITIES;","lastModifiedDate":"2021-10-25"},{"lineNumber":297,"author":{"gitId":"bharathcs"},"content":"        case \"N\":","lastModifiedDate":"2021-10-20"},{"lineNumber":298,"author":{"gitId":"bharathcs"},"content":"            // fallthrough","lastModifiedDate":"2021-10-20"},{"lineNumber":299,"author":{"gitId":"bharathcs"},"content":"        case \"NOTE\":","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"bharathcs"},"content":"            // fallthrough","lastModifiedDate":"2021-10-19"},{"lineNumber":301,"author":{"gitId":"bharathcs"},"content":"        case \"NOTES\":","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"Bluntsord"},"content":"            return Ui.ViewFinderState.NOTES;","lastModifiedDate":"2021-10-25"},{"lineNumber":303,"author":{"gitId":"bharathcs"},"content":"        default:","lastModifiedDate":"2021-10-19"},{"lineNumber":304,"author":{"gitId":"bharathcs"},"content":"            throw new ParseException(String.format(\"Input command is invalid: \u0027%s\u0027 does not match any tab\", tabName));","lastModifiedDate":"2021-10-20"},{"lineNumber":305,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"bharathcs":92,"sheehui":57,"Bluntsord":69,"-":89}},{"path":"src/main/java/donnafin/logic/parser/PolicyTabParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.AppendCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.Command;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.EditCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.RemoveCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"public class PolicyTabParser extends ClientViewParser {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"    public PolicyTabParser(PersonAdapter personAdapter) {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"        super(personAdapter);","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"    protected Command tabSpecificHandler(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"        case AppendCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"            return new AppendCommandParser(Ui.ViewFinderState.POLICIES, super.personAdapter).parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"        case RemoveCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"            return new RemoveCommandParser(Ui.ViewFinderState.POLICIES, super.personAdapter).parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"            throw new ParseException(Messages.MESSAGE_EDIT_COMMAND_UNAVAILABLE);","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"        default:","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"sheehui":8,"Bluntsord":27}},{"path":"src/main/java/donnafin/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":" * E.g. \u0027n/\u0027 in \u0027edit 1 n/ Bharathie\u0027.","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"sheehui":2,"-":37}},{"path":"src/main/java/donnafin/logic/parser/RemoveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"DonnyS57"},"content":"import donnafin.logic.PersonAdapter.PersonField;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.commands.RemoveCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"public class RemoveCommandParser {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"    private final PersonAdapter personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"DonnyS57"},"content":"    private final PersonField field;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"DonnyS57"},"content":"     * The parser used to parse the input for the remove command.","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"DonnyS57"},"content":"     * @param currentTab the current tab that the user is viewing when the command is used.","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"DonnyS57"},"content":"     * @param personAdapter the person the user is currently viewing.","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"     * @throws ParseException if it is called in the wrong tab.","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"    public RemoveCommandParser(Ui.ViewFinderState currentTab, PersonAdapter personAdapter) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"        this.personAdapter \u003d personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"        switch (currentTab) {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"        case POLICIES:","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"DonnyS57"},"content":"            field \u003d PersonField.POLICIES;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"        case ASSETS:","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"DonnyS57"},"content":"            field \u003d PersonField.ASSETS;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"        case LIABILITIES:","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"DonnyS57"},"content":"            field \u003d PersonField.LIABILITIES;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"            throw new ParseException(\"Invalid tab for append.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"    public RemoveCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"sheehui"},"content":"        if (args.trim().equals(\"\")) {","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"sheehui"},"content":"            throw new ParseException(","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"sheehui"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, RemoveCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"sheehui"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"sheehui"},"content":"            ParserUtil.checkIntegerMax(args);","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"DonnyS57"},"content":"            return new RemoveCommand(personAdapter, field, index);","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"sheehui"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"sheehui"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_PERSON_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, RemoveCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"bharathcs":38,"DonnyS57":11,"sheehui":9,"Bluntsord":5}},{"path":"src/main/java/donnafin/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"DonnyS57"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"DonnyS57"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"DonnyS57"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"DonnyS57"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"DonnyS57"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"DonnyS57"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"DonnyS57"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"DonnyS57"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"        if (args.trim().equals(\"\")) {","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"            throw new ParseException(","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"DonnyS57"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"            ParserUtil.checkIntegerMax(args);","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"DonnyS57"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"DonnyS57"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_PERSON_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"DonnyS57"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"DonnyS57"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"sheehui"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"DonnyS57"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"DonnyS57"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"bharathcs":1,"DonnyS57":21,"sheehui":14}},{"path":"src/main/java/donnafin/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"sheehui":2,"-":15}},{"path":"src/main/java/donnafin/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.UniquePersonList;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheehui":3,"-":117}},{"path":"src/main/java/donnafin/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"    void saveAddressBook() throws IOException;","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"     * Find possible user errors (very similar clients of the same name).","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"     * Weak duplicates refer to comparing {@code Person} and ignoring case and white space.","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"     * @param target compare list against this {@code Person}.","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"     * @return a set of sets where each set contains weak duplicates together.","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"    Set\u003cPerson\u003e getWeakDuplicates(Person target);","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"     * Find possible user errors (very similar clients of the same name).","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"     * Weak duplicates refer to comparing {@code Person} and ignoring case and white space.","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"     * @return result of running {@code getWeakDuplicates} on each clients.","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"bharathcs"},"content":"    Set\u003cSet\u003cPerson\u003e\u003e getWeakDuplicatesAllClients();","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bharathcs":22,"sheehui":3,"-":84}},{"path":"src/main/java/donnafin/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.storage.Storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, Storage storage) {","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"     * Returns the AddressBook","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"    public void saveAddressBook() throws IOException {","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"        assert this.storage !\u003d null : \"ModelManager created without storage cannot save.\";","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"        storage.saveAddressBook(getAddressBook());","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":122,"author":{"gitId":"sheehui"},"content":"        CollectionUtil.requireAllNonNull(target, editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":145,"author":{"gitId":"bharathcs"},"content":"    public Set\u003cPerson\u003e getWeakDuplicates(Person target) {","lastModifiedDate":"2021-11-01"},{"lineNumber":146,"author":{"gitId":"bharathcs"},"content":"        return getAddressBook().getPersonList().stream()","lastModifiedDate":"2021-11-01"},{"lineNumber":147,"author":{"gitId":"bharathcs"},"content":"                .filter(p -\u003e p.isPossibleDuplicate(target))","lastModifiedDate":"2021-11-01"},{"lineNumber":148,"author":{"gitId":"bharathcs"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-11-01"},{"lineNumber":149,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":150,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":151,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":152,"author":{"gitId":"bharathcs"},"content":"    public Set\u003cSet\u003cPerson\u003e\u003e getWeakDuplicatesAllClients() {","lastModifiedDate":"2021-11-01"},{"lineNumber":153,"author":{"gitId":"bharathcs"},"content":"        return getAddressBook().getPersonList().stream()","lastModifiedDate":"2021-11-01"},{"lineNumber":154,"author":{"gitId":"bharathcs"},"content":"                .map(this::getWeakDuplicates)","lastModifiedDate":"2021-11-01"},{"lineNumber":155,"author":{"gitId":"bharathcs"},"content":"                .filter(set -\u003e set.size() !\u003d 1)","lastModifiedDate":"2021-11-01"},{"lineNumber":156,"author":{"gitId":"bharathcs"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-11-01"},{"lineNumber":157,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":158,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bharathcs":30,"sheehui":8,"-":140}},{"path":"src/main/java/donnafin/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheehui":2,"-":15}},{"path":"src/main/java/donnafin/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"sheehui":2,"-":14}},{"path":"src/main/java/donnafin/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"donnafin.json\");","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheehui":3,"-":84}},{"path":"src/main/java/donnafin/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"public class Address implements Attribute {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"    public boolean isPossibleDuplicate(Attribute other) {","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"        return (other instanceof Address) \u0026\u0026 other.toString().replaceAll(\"\\\\s\\\\s+\", \" \")","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"                .equalsIgnoreCase(toString().replaceAll(\"\\\\s\\\\s+\", \" \"));","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bharathcs":5,"sheehui":2,"Bluntsord":1,"-":54}},{"path":"src/main/java/donnafin/model/person/Asset.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_REMARKS;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_VALUE;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import java.math.BigInteger;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Money;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"import donnafin.ui.AttributeTable;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":" * Represents a Person\u0027s assets in DonnaFin.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"public class Asset implements Attribute {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Assets must be specified with \"","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"            + \"a name (non-empty string) \"","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"            + \"a type (non-empty string) \"","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"            + \"a value (positive monetary value) \"","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"            + \"a remark (non-empty string) \"","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"            + \"\\nE.g. \"","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"            + PREFIX_NAME + \"GCB at Dempsey Rd \"","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"            + PREFIX_TYPE + \"Property \"","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"            + PREFIX_VALUE + \"$10000000 \"","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"            + PREFIX_REMARKS + \"unoccupied\";","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"sheehui"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"    public static final AttributeTable.TableConfig\u003cAsset\u003e TABLE_CONFIG \u003d new AttributeTable.TableConfig\u003c\u003e(","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"        \"Assets\",","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"        List.of(","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"                new AttributeTable.ColumnConfig(\"Asset Name\", \"name\", 300, 500),","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"                new AttributeTable.ColumnConfig(\"Type\", \"type\", 100, 250),","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"                new AttributeTable.ColumnConfig(\"Value\", \"valueToString\", 100, 250),","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"                new AttributeTable.ColumnConfig(\"Remarks\", \"remarks\", 100, 250)","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"        ),","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"        assetCol -\u003e assetCol.stream()","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"            .map(Asset::getValue)","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"            .map(Money::getValue)","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"            .map(BigInteger::valueOf)","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"            .reduce(BigInteger::add)","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"            .map(i -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"                BigInteger unit \u003d BigInteger.valueOf(100);","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"                String cents \u003d i.mod(unit).add(unit).toString().substring(1);","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"                String dollars \u003d i.divide(unit).toString();","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"                return String.format(\"Total Asset Value: $%s.%s\", dollars, cents);","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"            }).orElse(\"\")","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"    );","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"    private final String name;","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"    private final String type;","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"    private final Money value;","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"    private final String remarks;","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Bluntsord"},"content":"     * Constructs a {@code Asset}.","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"Bluntsord"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"sheehui"},"content":"     * @param name A valid Asset name.","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"sheehui"},"content":"     * @param type An Asset type.","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"sheehui"},"content":"     * @param value An Asset\u0027s worth.","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"sheehui"},"content":"     * @param remarks A remark on Asset.","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"sheehui"},"content":"    public Asset(String name, String type, String value, String remarks) {","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"sheehui"},"content":"        requireAllNonNull(name, type, value, remarks);","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"sheehui"},"content":"        checkArgument(isValidVariable(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"sheehui"},"content":"        checkArgument(isValidVariable(type), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"sheehui"},"content":"        checkArgument(isValidVariable(remarks), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"sheehui"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"sheehui"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"            this.value \u003d ParserUtil.parseMoney(value);","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"sheehui"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"sheehui"},"content":"     * Returns true if a given string is a valid policy field.","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"sheehui"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"sheehui"},"content":"    public static boolean isValidVariable(String test) {","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"sheehui"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Bluntsord"},"content":"    public String toString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"sheehui"},"content":"        return \"Asset{\"","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"                + \"name\u003d\u0027\" + getName() + \u0027\\\u0027\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"                + \", type\u003d\u0027\" + getType() + \u0027\\\u0027\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"                + \", value\u003d\u0027\" + getValue() + \u0027\\\u0027\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"                + \", remarks\u003d\u0027\" + getRemarks() + \u0027\\\u0027\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"sheehui"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"sheehui"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"sheehui"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"sheehui"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"sheehui"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"sheehui"},"content":"        if (!(o instanceof Asset)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"sheehui"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"sheehui"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"sheehui"},"content":"        Asset asset \u003d (Asset) o;","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"bharathcs"},"content":"        return getName().equals(asset.getName())","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"bharathcs"},"content":"                \u0026\u0026 getType().equals(asset.getType())","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"bharathcs"},"content":"                \u0026\u0026 getValue().equals(asset.getValue())","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"bharathcs"},"content":"                \u0026\u0026 getRemarks().equals(asset.getRemarks());","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"Bluntsord"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"bharathcs"},"content":"        return Objects.hash(getName(), getType(), getValue(), getRemarks());","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"bharathcs"},"content":"    public boolean isPossibleDuplicate(Attribute other) {","lastModifiedDate":"2021-11-01"},{"lineNumber":125,"author":{"gitId":"bharathcs"},"content":"        // TODO: @Donny","lastModifiedDate":"2021-11-01"},{"lineNumber":126,"author":{"gitId":"bharathcs"},"content":"        return equals(other);","lastModifiedDate":"2021-11-01"},{"lineNumber":127,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":128,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":129,"author":{"gitId":"bharathcs"},"content":"    public String getName() {","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"bharathcs"},"content":"        return name;","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"bharathcs"},"content":"    public String getType() {","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"bharathcs"},"content":"        return type;","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"bharathcs"},"content":"    public Money getValue() {","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"bharathcs"},"content":"        return value;","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"bharathcs"},"content":"    public String getValueToString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"bharathcs"},"content":"        return value.toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"bharathcs"},"content":"    public String getRemarks() {","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"bharathcs"},"content":"        return remarks;","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"bharathcs":85,"sheehui":38,"Bluntsord":25}},{"path":"src/main/java/donnafin/model/person/Attribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":" * The fields in the person class should implement these attributes","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"public interface Attribute {","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"    String toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"    boolean equals(Object other);","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"    int hashCode();","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"    boolean isPossibleDuplicate(Attribute other);","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"bharathcs":1,"sheehui":5,"Bluntsord":6}},{"path":"src/main/java/donnafin/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"public class Email implements Attribute {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)+\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"    public boolean isPossibleDuplicate(Attribute other) {","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"        return equals(other);","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bharathcs":6,"sheehui":2,"Bluntsord":1,"-":67}},{"path":"src/main/java/donnafin/model/person/Liability.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_REMARKS;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_VALUE;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import java.math.BigInteger;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Money;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"import donnafin.ui.AttributeTable;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":" * Represents a Person\u0027s liability in DonnaFin.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"public class Liability implements Attribute {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Liability must be specified with \"","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"            + \"a name (non-empty string) \"","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"            + \"a type (non-empty string) \"","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"            + \"a value (positive monetary value) \"","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"            + \"a remark (non-empty string) \"","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"            + \"\\nE.g. \"","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"            + PREFIX_NAME + \"DBS loan for Dempsey Rd unit \"","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"            + PREFIX_TYPE + \"Property Mortgage \"","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"            + PREFIX_VALUE + \"$420 \"","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"            + PREFIX_REMARKS + \"mostly paid off \";","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"sheehui"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"    public static final AttributeTable.TableConfig\u003cLiability\u003e TABLE_CONFIG \u003d new AttributeTable.TableConfig\u003c\u003e(","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"        \"Liabilities\",","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"        List.of(","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"                new AttributeTable.ColumnConfig(\"Liability Name\", \"name\", 300, 500),","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"                new AttributeTable.ColumnConfig(\"Type\", \"type\", 100, 250),","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"                new AttributeTable.ColumnConfig(\"Value\", \"valueToString\", 100, 250),","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"                new AttributeTable.ColumnConfig(\"Remarks\", \"remarks\", 100, 250)","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"        ),","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"        liabilityCol -\u003e liabilityCol.stream()","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"            .map(Liability::getValue)","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"            .map(Money::getValue)","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"            .map(BigInteger::valueOf)","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"            .reduce(BigInteger::add)","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"            .map(i -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"                BigInteger unit \u003d BigInteger.valueOf(100);","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"                String cents \u003d i.mod(unit).add(unit).toString().substring(1);","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"                String dollars \u003d i.divide(unit).toString();","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"                return String.format(\"Total Liability Value: $%s.%s\", dollars, cents);","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"            }).orElse(\"\")","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"    );","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"    private final String name;","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"    private final String type;","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"    private final Money value;","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"    private final String remarks;","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Bluntsord"},"content":"     * Constructs a {@code Liability}.","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"Bluntsord"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"sheehui"},"content":"     * @param name A valid Liability name.","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"sheehui"},"content":"     * @param type A Liability type.","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"sheehui"},"content":"     * @param value A Liability\u0027s worth.","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"sheehui"},"content":"     * @param remarks A remark on Liability.","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"sheehui"},"content":"    public Liability(String name, String type, String value, String remarks) {","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"sheehui"},"content":"        requireAllNonNull(name, type, value, remarks);","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"sheehui"},"content":"        checkArgument(isValidVariable(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"sheehui"},"content":"        checkArgument(isValidVariable(type), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"sheehui"},"content":"        checkArgument(isValidVariable(remarks), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"sheehui"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"sheehui"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"            this.value \u003d ParserUtil.parseMoney(value);","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"sheehui"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"sheehui"},"content":"     * Returns true if a given string is a valid policy field.","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"sheehui"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"sheehui"},"content":"    public static boolean isValidVariable(String test) {","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"sheehui"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Bluntsord"},"content":"    public String toString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"sheehui"},"content":"        return \"Liability{\"","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"                + \"name\u003d\u0027\" + getName() + \u0027\\\u0027\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"                + \", type\u003d\u0027\" + getType() + \u0027\\\u0027\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"                + \", value\u003d\u0027\" + getValue() + \u0027\\\u0027\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"                + \", remarks\u003d\u0027\" + getRemarks() + \u0027\\\u0027\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"sheehui"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"sheehui"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"sheehui"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"sheehui"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"sheehui"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"sheehui"},"content":"        if (!(o instanceof Liability)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"sheehui"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"sheehui"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"sheehui"},"content":"        Liability liability \u003d (Liability) o;","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"bharathcs"},"content":"        return getName().equals(liability.getName())","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"bharathcs"},"content":"                \u0026\u0026 getType().equals(liability.getType())","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"bharathcs"},"content":"                \u0026\u0026 getValue().equals(liability.getValue())","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"bharathcs"},"content":"                \u0026\u0026 getRemarks().equals(liability.getRemarks());","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"Bluntsord"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"bharathcs"},"content":"        return Objects.hash(getName(), getType(), getValue(), getRemarks());","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"bharathcs"},"content":"    public boolean isPossibleDuplicate(Attribute other) {","lastModifiedDate":"2021-11-01"},{"lineNumber":125,"author":{"gitId":"bharathcs"},"content":"        // TODO: @Donny","lastModifiedDate":"2021-11-01"},{"lineNumber":126,"author":{"gitId":"bharathcs"},"content":"        return equals(other);","lastModifiedDate":"2021-11-01"},{"lineNumber":127,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":128,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":129,"author":{"gitId":"bharathcs"},"content":"    public String getName() {","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"bharathcs"},"content":"        return name;","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"bharathcs"},"content":"    public String getType() {","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"bharathcs"},"content":"        return type;","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"bharathcs"},"content":"    public Money getValue() {","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"bharathcs"},"content":"        return value;","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"bharathcs"},"content":"    public String getValueToString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"bharathcs"},"content":"        return value.toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"bharathcs"},"content":"    public String getRemarks() {","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"bharathcs"},"content":"        return remarks;","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"bharathcs":85,"sheehui":38,"Bluntsord":25}},{"path":"src/main/java/donnafin/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"public class Name implements Attribute {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"    public boolean isPossibleDuplicate(Attribute other) {","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"        return (other instanceof Name) \u0026\u0026 other.toString().replaceAll(\"\\\\s\\\\s+\", \" \")","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"                .equalsIgnoreCase(toString().replaceAll(\"\\\\s\\\\s+\", \" \"));","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bharathcs":5,"sheehui":2,"Bluntsord":1,"-":56}},{"path":"src/main/java/donnafin/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.util.StringUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"sheehui":2,"-":29}},{"path":"src/main/java/donnafin/model/person/Notes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DonnyS57"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"DonnyS57"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DonnyS57"},"content":" * Represents notes that are associated with the person in the address book.","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DonnyS57"},"content":" *","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DonnyS57"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DonnyS57"},"content":"public class Notes implements Attribute {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"    /*","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].+[^\\\\s]\";","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"    public final String notes;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"DonnyS57"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DonnyS57"},"content":"     * Constructs a note.","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"     * @param notes the note associated with the person.","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"DonnyS57"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DonnyS57"},"content":"    public Notes(String notes) {","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"        requireNonNull(notes);","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"        this.notes \u003d notes.trim();","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"DonnyS57"},"content":"    public String getNotes() {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"DonnyS57"},"content":"        return notes;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"sheehui"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"sheehui"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"sheehui"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"sheehui"},"content":"    public static boolean isValidNotes(String test) {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"sheehui"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"DonnyS57"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"DonnyS57"},"content":"    public String toString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"DonnyS57"},"content":"        return notes;","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"DonnyS57"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"DonnyS57"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"DonnyS57"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"DonnyS57"},"content":"                || (other instanceof Notes // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"DonnyS57"},"content":"                \u0026\u0026 notes.equals(((Notes) other).notes)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"DonnyS57"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"DonnyS57"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"DonnyS57"},"content":"        return notes.hashCode();","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"    public boolean isPossibleDuplicate(Attribute other) {","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"        return equals(other);","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"DonnyS57"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"bharathcs":6,"DonnyS57":35,"sheehui":19}},{"path":"src/main/java/donnafin/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"DonnyS57"},"content":"    private final Notes notes;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"    // Financial Information fields","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"    private final Set\u003cPolicy\u003e policies \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"    private final Set\u003cLiability\u003e liabilities \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"    private final Set\u003cAsset\u003e assets \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"sheehui"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Notes notes,","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"sheehui"},"content":"                  Set\u003cPolicy\u003e policies, Set\u003cLiability\u003e liabilities, Set\u003cAsset\u003e assets) {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"sheehui"},"content":"        requireAllNonNull(name, phone, email, address, notes, policies, liabilities, assets);","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"DonnyS57"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"sheehui"},"content":"        this.policies.addAll(policies);","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"sheehui"},"content":"        this.liabilities.addAll(liabilities);","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"sheehui"},"content":"        this.assets.addAll(assets);","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"DonnyS57"},"content":"    public Notes getNotes() {","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"DonnyS57"},"content":"        return notes;","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"sheehui"},"content":"     * Returns an immutable set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"sheehui"},"content":"     * Valid for policies, assets and liabilities.","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"Bluntsord"},"content":"    public Set\u003cPolicy\u003e getPolicies() {","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"Bluntsord"},"content":"        return Collections.unmodifiableSet(policies);","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"sheehui"},"content":"    public Set\u003cAsset\u003e getAssets() {","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"sheehui"},"content":"        return Collections.unmodifiableSet(assets);","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"sheehui"},"content":"    public Set\u003cLiability\u003e getLiabilities() {","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"sheehui"},"content":"        return Collections.unmodifiableSet(liabilities);","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"    public boolean isPossibleDuplicate(Person other) {","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"        return name.isPossibleDuplicate(other.name);","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"sheehui"},"content":"        return equals(other, true)","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"sheehui"},"content":"                \u0026\u0026 ((Person) other).getLiabilities().equals(getLiabilities())","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"sheehui"},"content":"                \u0026\u0026 ((Person) other).getPolicies().equals(getPolicies())","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"sheehui"},"content":"                \u0026\u0026 ((Person) other).getAssets().equals(getAssets());","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"sheehui"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"sheehui"},"content":"     * Checks if two {@code Person} are the same during {@code AddCommand} by checking the common attributes","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"sheehui"},"content":"     * and ignoring the composite financial attributes, which are not present.","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"sheehui"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"bharathcs"},"content":"     * @param other Object being compared.","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"sheehui"},"content":"     * @param ignoreCompoundAttributes Boolean value to determine if financial attributes should be compared.","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"sheehui"},"content":"     * @return Boolean representative if both objects are equal.","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"sheehui"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"sheehui"},"content":"    public boolean equals(Object other, boolean ignoreCompoundAttributes) {","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"sheehui"},"content":"        if (!ignoreCompoundAttributes) {","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"sheehui"},"content":"            return equals(other);","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"sheehui"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"sheehui"},"content":"                \u0026\u0026 otherPerson.getNotes().equals(getNotes());","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"sheehui"},"content":"        return Objects.hash(name, phone, email, address, notes);","lastModifiedDate":"2021-10-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":161,"author":{"gitId":"sheehui"},"content":"        Set\u003cPolicy\u003e policies \u003d getPolicies();","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"sheehui"},"content":"        if (!policies.isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"sheehui"},"content":"            builder.append(\"; Policies: \");","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"sheehui"},"content":"            policies.forEach(builder::append);","lastModifiedDate":"2021-10-17"},{"lineNumber":165,"author":{"gitId":"sheehui"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"sheehui"},"content":"        Set\u003cLiability\u003e liabilities \u003d getLiabilities();","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"sheehui"},"content":"        if (!liabilities.isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":169,"author":{"gitId":"sheehui"},"content":"            builder.append(\"; Liabilities: \");","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"sheehui"},"content":"            liabilities.forEach(builder::append);","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"sheehui"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"sheehui"},"content":"        Set\u003cAsset\u003e assets \u003d getAssets();","lastModifiedDate":"2021-10-17"},{"lineNumber":174,"author":{"gitId":"sheehui"},"content":"        if (!assets.isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":175,"author":{"gitId":"sheehui"},"content":"            builder.append(\"; Assets: \");","lastModifiedDate":"2021-10-17"},{"lineNumber":176,"author":{"gitId":"sheehui"},"content":"            assets.forEach(builder::append);","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"sheehui"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":178,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":182,"author":{"gitId":"bharathcs"},"content":"    public ObservableList\u003cAttribute\u003e getContactAttributesList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"Bluntsord"},"content":"        ObservableList\u003cAttribute\u003e attributeObservableList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"Bluntsord"},"content":"        attributeObservableList.add(name);","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"Bluntsord"},"content":"        attributeObservableList.add(phone);","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"Bluntsord"},"content":"        attributeObservableList.add(email);","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"Bluntsord"},"content":"        attributeObservableList.add(address);","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"Bluntsord"},"content":"        return attributeObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":190,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"Bluntsord"},"content":"    public ObservableList\u003cAttribute\u003e getFinancialAttributeList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"Bluntsord"},"content":"        ObservableList\u003cAttribute\u003e attributeObservableList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"sheehui"},"content":"        attributeObservableList.addAll(policies);","lastModifiedDate":"2021-10-17"},{"lineNumber":194,"author":{"gitId":"sheehui"},"content":"        attributeObservableList.addAll(liabilities);","lastModifiedDate":"2021-10-17"},{"lineNumber":195,"author":{"gitId":"sheehui"},"content":"        attributeObservableList.addAll(assets);","lastModifiedDate":"2021-10-17"},{"lineNumber":196,"author":{"gitId":"Bluntsord"},"content":"        return attributeObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bharathcs":6,"DonnyS57":6,"sheehui":60,"Bluntsord":22,"-":104}},{"path":"src/main/java/donnafin/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"public class Phone implements Attribute {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"    public boolean isPossibleDuplicate(Attribute other) {","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"        return (other instanceof Phone) \u0026\u0026 other.toString().replaceAll(\"[^\\\\d]\", \"\")","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"                .equals(toString().replaceAll(\"[^\\\\d]\", \"\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bharathcs":6,"sheehui":2,"Bluntsord":1,"-":50}},{"path":"src/main/java/donnafin/model/person/Policy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_COMMISSION;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_INSURED_VALUE;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_INSURER;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_YEARLY_PREMIUM;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import java.math.BigInteger;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Money;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"import donnafin.ui.AttributeTable;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":" * Represents a Person\u0027s policy in DonnaFin.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"public class Policy implements Attribute {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Policies must be specified with \"","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"            + \"\\na name (non-empty string) \"","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"            + \"a insurer name (non-empty string) \"","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"            + \"\\na value insured (positive monetary value) \"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"            + \"a yearly premium (positive monetary value) \"","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"            + \"a commission (positive monetary value) \"","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"            + \"\\nE.g. \"","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"            + PREFIX_NAME + \"Platinum Years \"","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"            + PREFIX_INSURER + \"FinAssurance Corp. \"","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"            + PREFIX_INSURED_VALUE + \"$100000 \"","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"            + PREFIX_YEARLY_PREMIUM + \"$100 \"","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"            + PREFIX_COMMISSION + \"$10 \";","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"sheehui"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"    public static final AttributeTable.TableConfig\u003cPolicy\u003e TABLE_CONFIG \u003d new AttributeTable.TableConfig\u003c\u003e(","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"        \"Policies\",","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"        List.of(","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"                    new AttributeTable.ColumnConfig(\"Policy Name\", \"name\", 200, 500),","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"                    new AttributeTable.ColumnConfig(\"Insurer\", \"insurer\", 100, 250),","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"                    new AttributeTable.ColumnConfig(\"Insured Value\", \"totalValueInsuredToString\", 200, 300),","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"                    new AttributeTable.ColumnConfig(\"Premium (yearly)\", \"yearlyPremiumsToString\", 200, 300),","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"                    new AttributeTable.ColumnConfig(\"Commission\", \"commissionToString\", 100, 250)","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"            ),","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"        policyCol -\u003e policyCol.stream()","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"            .map(Policy::getCommission)","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"            .map(Money::getValue)","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"            .map(BigInteger::valueOf)","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"            .reduce(BigInteger::add)","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"            .map(i -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"                BigInteger unit \u003d BigInteger.valueOf(100);","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"                String cents \u003d i.mod(unit).add(unit).toString().substring(1);","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"                String dollars \u003d i.divide(unit).toString();","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"                return String.format(\"Total Policy Commissions: $%s.%s\", dollars, cents);","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"            }).orElse(\"\")","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"    );","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"    private final String name;","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"    private final String insurer;","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"    private final Money totalValueInsured;","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"    private final Money yearlyPremiums;","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"    private final Money commission;","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Bluntsord"},"content":"     * Constructs a {@code Policy}.","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"Bluntsord"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"sheehui"},"content":"     * @param name A valid policy name.","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"sheehui"},"content":"     * @param insurer Name of insurer.","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"sheehui"},"content":"     * @param totalValueInsured Numerical value insured in Policy.","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"sheehui"},"content":"     * @param yearlyPremiums premiums offered by Policy.","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"sheehui"},"content":"     * @param commission Value of commission in this Policy.","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"sheehui"},"content":"    public Policy(String name, String insurer, String totalValueInsured, String yearlyPremiums, String commission) {","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"sheehui"},"content":"        requireAllNonNull(name, insurer, totalValueInsured, yearlyPremiums, commission);","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"sheehui"},"content":"        checkArgument(isValidVariable(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"sheehui"},"content":"        checkArgument(isValidVariable(insurer), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"sheehui"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"sheehui"},"content":"        this.insurer \u003d insurer;","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"            this.totalValueInsured \u003d ParserUtil.parseMoney(totalValueInsured);","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"            this.yearlyPremiums \u003d ParserUtil.parseMoney(yearlyPremiums);","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"bharathcs"},"content":"            this.commission \u003d ParserUtil.parseMoney(commission);","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"DonnyS57"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"sheehui"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"sheehui"},"content":"     * Returns true if a given string is a valid policy variable.","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"sheehui"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"sheehui"},"content":"    public static boolean isValidVariable(String test) {","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"sheehui"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Bluntsord"},"content":"    public String toString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"sheehui"},"content":"        return \"Policy{\"","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"                + \"name\u003d\u0027\" + getName() + \u0027\\\u0027\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"                + \", insurer\u003d\u0027\" + getInsurer() + \u0027\\\u0027\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"                + \", totalValueInsured\u003d\u0027\" + getTotalValueInsured() + \u0027\\\u0027\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"                + \", yearlyPremiums\u003d\u0027\" + getYearlyPremiums() + \u0027\\\u0027\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"                + \", commission\u003d\u0027\" + getCommission() + \u0027\\\u0027\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"sheehui"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"sheehui"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"sheehui"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"sheehui"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"sheehui"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"sheehui"},"content":"        if (!(o instanceof Policy)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"sheehui"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"sheehui"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"sheehui"},"content":"        Policy policy \u003d (Policy) o;","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"bharathcs"},"content":"        return getName().equals(policy.getName())","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"bharathcs"},"content":"                \u0026\u0026 getInsurer().equals(policy.getInsurer())","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"bharathcs"},"content":"                \u0026\u0026 getTotalValueInsured().equals(policy.getTotalValueInsured())","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"bharathcs"},"content":"                \u0026\u0026 getYearlyPremiums().equals(policy.getYearlyPremiums())","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"                \u0026\u0026 getCommission().equals(policy.getCommission());","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"Bluntsord"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"bharathcs"},"content":"        return Objects.hash(getName(), getInsurer(), getTotalValueInsured(), getYearlyPremiums(), getCommission());","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"bharathcs"},"content":"    public boolean isPossibleDuplicate(Attribute other) {","lastModifiedDate":"2021-11-01"},{"lineNumber":133,"author":{"gitId":"bharathcs"},"content":"        // TODO: @Donny","lastModifiedDate":"2021-11-01"},{"lineNumber":134,"author":{"gitId":"bharathcs"},"content":"        return equals(other);","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":136,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":137,"author":{"gitId":"bharathcs"},"content":"    public String getName() {","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"bharathcs"},"content":"        return name;","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"bharathcs"},"content":"    public String getInsurer() {","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"bharathcs"},"content":"        return insurer;","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"bharathcs"},"content":"    public Money getTotalValueInsured() {","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"bharathcs"},"content":"        return totalValueInsured;","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"bharathcs"},"content":"    public Money getYearlyPremiums() {","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"bharathcs"},"content":"        return yearlyPremiums;","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"bharathcs"},"content":"    public Money getCommission() {","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"bharathcs"},"content":"        return commission;","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"bharathcs"},"content":"    public String getCommissionToString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"bharathcs"},"content":"        return commission.toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"bharathcs"},"content":"    public String getTotalValueInsuredToString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"bharathcs"},"content":"        return totalValueInsured.toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"bharathcs"},"content":"    public String getYearlyPremiumsToString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"bharathcs"},"content":"        return yearlyPremiums.toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"bharathcs":103,"DonnyS57":1,"sheehui":36,"Bluntsord":28}},{"path":"src/main/java/donnafin/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sheehui":4,"-":133}},{"path":"src/main/java/donnafin/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"sheehui":1,"-":10}},{"path":"src/main/java/donnafin/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"sheehui":1,"-":5}},{"path":"src/main/java/donnafin/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Address;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Asset;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Liability;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Notes;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Policy;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"    private static final String ATTRIBUTE_DELIMITER \u003d \";;;\";","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"    private static final String POLICIES_STAND_IN_ONE \u003d String.join(","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"            ATTRIBUTE_DELIMITER,","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"            \"Golden Age\",","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"            \"AIA\",","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"            \"$14000\",","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"            \"$28\",","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"            \"$4\"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"    );","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"sheehui"},"content":"    private static final String POLICIES_STAND_IN_TWO \u003d String.join(","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"            ATTRIBUTE_DELIMITER,","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"sheehui"},"content":"            \"Golden Age\",","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"sheehui"},"content":"            \"Prudential\",","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"sheehui"},"content":"            \"$100000\",","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"sheehui"},"content":"            \"$2800\",","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"sheehui"},"content":"            \"$4000\"","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"    );","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"sheehui"},"content":"    private static final String ASSETS_STAND_IN_ONE \u003d String.join(","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"            ATTRIBUTE_DELIMITER,","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"sheehui"},"content":"            \"HDB @Jurong\",","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"sheehui"},"content":"            \"Property\",","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"sheehui"},"content":"            \"$300000\",","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"sheehui"},"content":"            \"BTO\"","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"sheehui"},"content":"    );","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"sheehui"},"content":"    private static final String ASSETS_STAND_IN_TWO \u003d String.join(","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"sheehui"},"content":"            ATTRIBUTE_DELIMITER,","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"sheehui"},"content":"            \"GCB @Sentosa Cove\",","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"sheehui"},"content":"            \"Property\",","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"sheehui"},"content":"            \"$9000000\",","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"sheehui"},"content":"            \"Newly renovated\"","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"sheehui"},"content":"    );","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"sheehui"},"content":"    private static final String LIABILITIES_STAND_IN_ONE \u003d String.join(","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"sheehui"},"content":"            ATTRIBUTE_DELIMITER,","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"sheehui"},"content":"            \"Bank debt\",","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"sheehui"},"content":"            \"debt\",","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"sheehui"},"content":"            \"$20000\",","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"sheehui"},"content":"            \"10% interest\"","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"sheehui"},"content":"    );","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"sheehui"},"content":"    private static final String LIABILITIES_STAND_IN_TWO \u003d String.join(","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"sheehui"},"content":"            ATTRIBUTE_DELIMITER,","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"sheehui"},"content":"            \"Bank Loan for Condo @Marina\",","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"sheehui"},"content":"            \"Mortgage\",","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"sheehui"},"content":"            \"$5000000\",","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"sheehui"},"content":"            \"To be settled in 5 years\"","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"    );","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"sheehui"},"content":"                    new Notes(\"Likes bread\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"sheehui"},"content":"                    getPolicies(POLICIES_STAND_IN_ONE),","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"sheehui"},"content":"                    getLiabilities(LIABILITIES_STAND_IN_ONE),","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"sheehui"},"content":"                    getAssets(ASSETS_STAND_IN_ONE)),","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":80,"author":{"gitId":"sheehui"},"content":"                    new Notes(\"Has 2 children\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"sheehui"},"content":"                    getPolicies(POLICIES_STAND_IN_TWO),","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"sheehui"},"content":"                    getLiabilities(LIABILITIES_STAND_IN_TWO),","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"sheehui"},"content":"                    getAssets(ASSETS_STAND_IN_TWO)),","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"sheehui"},"content":"                    new Notes(\"\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"sheehui"},"content":"                    getPolicies(POLICIES_STAND_IN_ONE),","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"sheehui"},"content":"                    getLiabilities(LIABILITIES_STAND_IN_TWO),","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"sheehui"},"content":"                    getAssets(ASSETS_STAND_IN_TWO)),","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"sheehui"},"content":"                    new Notes(\"\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"sheehui"},"content":"                    getPolicies(POLICIES_STAND_IN_ONE),","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"sheehui"},"content":"                    getLiabilities(LIABILITIES_STAND_IN_ONE),","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"sheehui"},"content":"                    getAssets(ASSETS_STAND_IN_ONE)),","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":98,"author":{"gitId":"sheehui"},"content":"                    new Notes(\"\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"sheehui"},"content":"                    getPolicies(POLICIES_STAND_IN_TWO),","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"sheehui"},"content":"                    getLiabilities(LIABILITIES_STAND_IN_ONE),","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"sheehui"},"content":"                    getAssets(ASSETS_STAND_IN_ONE)),","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":104,"author":{"gitId":"sheehui"},"content":"                    new Notes(\"\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"sheehui"},"content":"                    getPolicies(POLICIES_STAND_IN_ONE),","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"sheehui"},"content":"                    getLiabilities(LIABILITIES_STAND_IN_ONE),","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"sheehui"},"content":"                    getAssets(ASSETS_STAND_IN_TWO))","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":119,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"sheehui"},"content":"     * Returns a policy set containing the list of strings given.","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"Bluntsord"},"content":"    public static Set\u003cPolicy\u003e getPolicies(String... strings) {","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"bharathcs"},"content":"            return ParserUtil.parsePolicies(Arrays.asList(strings));","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"bharathcs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"bharathcs"},"content":"            throw new IllegalArgumentException(Policy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"sheehui"},"content":"     * Returns an asset set containing the list of strings given.","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"Bluntsord"},"content":"    public static Set\u003cAsset\u003e getAssets(String... strings) {","lastModifiedDate":"2021-10-15"},{"lineNumber":134,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"bharathcs"},"content":"            return ParserUtil.parseAssets(Arrays.asList(strings));","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"bharathcs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"bharathcs"},"content":"            throw new IllegalArgumentException(Asset.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-29"},{"lineNumber":138,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"sheehui"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"sheehui"},"content":"     * Returns a liability set containing the list of strings given.","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"sheehui"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"sheehui"},"content":"    public static Set\u003cLiability\u003e getLiabilities(String... strings) {","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"bharathcs"},"content":"            return ParserUtil.parseLiabilities(Arrays.asList(strings));","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"bharathcs"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"bharathcs"},"content":"            throw new IllegalArgumentException(Liability.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"bharathcs":26,"DonnyS57":1,"sheehui":78,"Bluntsord":12,"-":34}},{"path":"src/main/java/donnafin/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":" * Represents a storage for {@link AddressBook}.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"sheehui":5,"-":41}},{"path":"src/main/java/donnafin/storage/JsonAdaptedAsset.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"import donnafin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Asset;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":" * Jackson-friendly version of {@link Asset}.","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"class JsonAdaptedAsset {","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"    private final String assetName;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"    private final String assetType;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"    private final String assetValue;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"    private final String assetRemarks;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"     * Constructs a {@code JsonAdaptedAsset} with the given {@code assetName}.","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"    public JsonAdaptedAsset(@JsonProperty(\"name\") String assetName, @JsonProperty(\"type\") String assetType,","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"                            @JsonProperty(\"value\") String assetValue, @JsonProperty(\"remarks\") String assetRemarks) {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"        this.assetName \u003d assetName;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"        this.assetRemarks \u003d assetRemarks;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"        this.assetType \u003d assetType;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"        this.assetValue \u003d assetValue;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"     * Converts a given {@code Asset} into this class for Jackson use.","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"    public JsonAdaptedAsset(Asset source) {","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"        assetName \u003d source.getName();","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"        assetValue \u003d source.getValue().toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"        assetType \u003d source.getType();","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"        assetRemarks \u003d source.getRemarks();","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"    @JsonProperty(\"name\")","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"Bluntsord"},"content":"    public String getAssetName() {","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"sheehui"},"content":"        return assetName;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"    @JsonProperty(\"type\")","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"sheehui"},"content":"    public String getAssetType() {","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"sheehui"},"content":"        return assetType;","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"    @JsonProperty(\"value\")","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"sheehui"},"content":"    public String getAssetValue() {","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"sheehui"},"content":"        return assetValue;","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"    @JsonProperty(\"remarks\")","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"    public String getAssetRemarks() {","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"        return assetRemarks;","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"Bluntsord"},"content":"     * Converts this Jackson-friendly adapted assets object into the model\u0027s {@code Asset} object.","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"Bluntsord"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"Bluntsord"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted assets.","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"Bluntsord"},"content":"    public Asset toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"sheehui"},"content":"            return new Asset(assetName, assetType, assetValue, assetRemarks);","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"bharathcs":16,"sheehui":23,"Bluntsord":35}},{"path":"src/main/java/donnafin/storage/JsonAdaptedLiability.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.storage;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Liability;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"public class JsonAdaptedLiability {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"    private final String liabilityName;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"    private final String liabilityType;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"    private final String liabilityValue;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"    private final String liabilityRemarks;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"     * Constructs a {@code JsonAdaptedLiability} with the given {@code liabilityName}.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"    public JsonAdaptedLiability(@JsonProperty(\"name\") String liabilityName, @JsonProperty(\"type\") String liabilityType,","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"                                @JsonProperty(\"value\") String liabilityValue,","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"                                @JsonProperty(\"remarks\") String liabilityRemarks) {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"        this.liabilityName \u003d liabilityName;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"        this.liabilityRemarks \u003d liabilityRemarks;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"        this.liabilityValue \u003d liabilityValue;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"        this.liabilityType \u003d liabilityType;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"     * Converts a given {@code Liability} into this class for Jackson use.","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"    public JsonAdaptedLiability(Liability source) {","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"        liabilityName \u003d source.getName();","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"        liabilityType \u003d source.getType();","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"        liabilityValue \u003d source.getValue().toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"        liabilityRemarks \u003d source.getRemarks();","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"    @JsonProperty(\"name\")","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"sheehui"},"content":"    public String getLiabilityName() {","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"sheehui"},"content":"        return liabilityName;","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"    @JsonProperty(\"type\")","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"sheehui"},"content":"    public String getLiabilityType() {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"sheehui"},"content":"        return liabilityType;","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"    @JsonProperty(\"value\")","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"sheehui"},"content":"    public String getLiabilityValue() {","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"sheehui"},"content":"        return liabilityValue;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"    @JsonProperty(\"remarks\")","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"sheehui"},"content":"    public String getLiabilityRemarks() {","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"sheehui"},"content":"        return liabilityRemarks;","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"sheehui"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"sheehui"},"content":"     * Converts this Jackson-friendly adapted assets object into the model\u0027s {@code Liability} object.","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"sheehui"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"sheehui"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted liability.","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"sheehui"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"sheehui"},"content":"    public Liability toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"sheehui"},"content":"            return new Liability(liabilityName, liabilityType, liabilityValue, liabilityRemarks);","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"sheehui"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"bharathcs":12,"sheehui":58}},{"path":"src/main/java/donnafin/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Address;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Asset;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Liability;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Notes;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Policy;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Client\u0027s %s field is missing!\";","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"DonnyS57"},"content":"    private final String notes;","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"    private final List\u003cJsonAdaptedPolicy\u003e policies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Bluntsord"},"content":"    private final List\u003cJsonAdaptedAsset\u003e assets \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"sheehui"},"content":"    private final List\u003cJsonAdaptedLiability\u003e liabilities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"    public JsonAdaptedPerson(","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"            @JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"sheehui"},"content":"            @JsonProperty(\"notes\") String notes,","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"Bluntsord"},"content":"            @JsonProperty(\"policies\") List\u003cJsonAdaptedPolicy\u003e policies,","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"sheehui"},"content":"            @JsonProperty(\"liabilities\") List\u003cJsonAdaptedLiability\u003e liabilities,","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"Bluntsord"},"content":"            @JsonProperty(\"assets\") List\u003cJsonAdaptedAsset\u003e assets) {","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"        this.notes \u003d notes \u003d\u003d null ? \"\" : notes;","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"Bluntsord"},"content":"        if (policies !\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Bluntsord"},"content":"            this.policies.addAll(policies);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"Bluntsord"},"content":"        if (assets !\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"Bluntsord"},"content":"            this.assets.addAll(assets);","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"sheehui"},"content":"        if (liabilities !\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"sheehui"},"content":"            this.liabilities.addAll(liabilities);","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"DonnyS57"},"content":"        notes \u003d source.getNotes().notes;","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"Bluntsord"},"content":"        policies.addAll(source.getPolicies().stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"Bluntsord"},"content":"                .map(JsonAdaptedPolicy::new)","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"Bluntsord"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"sheehui"},"content":"        assets.addAll(source.getAssets().stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"Bluntsord"},"content":"                .map(JsonAdaptedAsset::new)","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"Bluntsord"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"sheehui"},"content":"        liabilities.addAll(source.getLiabilities().stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"sheehui"},"content":"                .map(JsonAdaptedLiability::new)","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"Bluntsord"},"content":"        final List\u003cPolicy\u003e personPolicies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"Bluntsord"},"content":"        final List\u003cAsset\u003e personAssets \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"sheehui"},"content":"        final List\u003cLiability\u003e personLiabilities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"Bluntsord"},"content":"        for (JsonAdaptedPolicy policy : policies) {","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"Bluntsord"},"content":"            personPolicies.add(policy.toModelType());","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"Bluntsord"},"content":"        for (JsonAdaptedAsset asset : assets) {","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"Bluntsord"},"content":"            personAssets.add(asset.toModelType());","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"sheehui"},"content":"        for (JsonAdaptedLiability liability : liabilities) {","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"sheehui"},"content":"            personLiabilities.add(liability.toModelType());","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"sheehui"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"DonnyS57"},"content":"        final Notes modelNotes \u003d new Notes(notes);","lastModifiedDate":"2021-10-14"},{"lineNumber":140,"author":{"gitId":"sheehui"},"content":"        final Set\u003cPolicy\u003e modelPolicies \u003d new HashSet\u003c\u003e(personPolicies);","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"Bluntsord"},"content":"        final Set\u003cAsset\u003e modelAssets \u003d new HashSet\u003c\u003e(personAssets);","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"sheehui"},"content":"        final Set\u003cLiability\u003e modelLiabilities \u003d new HashSet\u003c\u003e(personLiabilities);","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"sheehui"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelNotes,","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"sheehui"},"content":"                modelPolicies, modelLiabilities, modelAssets);","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bharathcs":3,"DonnyS57":4,"sheehui":24,"Bluntsord":28,"-":88}},{"path":"src/main/java/donnafin/storage/JsonAdaptedPolicy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"import donnafin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Policy;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":" * Jackson-friendly version of {@link Policy}.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"class JsonAdaptedPolicy {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"    public final String policyTotalValueInsured;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"    public final String policyYearlyPremiums;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"    public final String policyCommission;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"    private final String policyName;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"    private final String policyInsurer;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"     * Constructs a {@code JsonAdaptedPolicy} with the given {@code policyName}.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"    public JsonAdaptedPolicy(@JsonProperty(\"name\") String policyName, @JsonProperty(\"insurer\") String policyInsurer,","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"                             @JsonProperty(\"totalValueInsured\")String policyTotalValueInsured,","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"                             @JsonProperty(\"yearlyPremiums\") String policyYearlyPremiums,","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"                             @JsonProperty(\"commission\") String policyCommission) {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"        this.policyName \u003d policyName;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"        this.policyCommission \u003d policyCommission;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"        this.policyInsurer \u003d policyInsurer;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"sheehui"},"content":"        this.policyYearlyPremiums \u003d policyYearlyPremiums;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"sheehui"},"content":"        this.policyTotalValueInsured \u003d policyTotalValueInsured;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Bluntsord"},"content":"     * Converts a given {@code Policy} into this class for Jackson use.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"    public JsonAdaptedPolicy(Policy source) {","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"        policyName \u003d source.getName();","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"        policyInsurer \u003d source.getInsurer();","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"        policyYearlyPremiums \u003d source.getYearlyPremiums().toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"        policyTotalValueInsured \u003d source.getTotalValueInsured().toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"        policyCommission \u003d source.getCommission().toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"    @JsonProperty(\"name\")","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"    public String getPolicyName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Bluntsord"},"content":"        return policyName;","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"    @JsonProperty(\"commission\")","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"sheehui"},"content":"    public String getPolicyCommission() {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"sheehui"},"content":"        return policyCommission;","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"    @JsonProperty(\"insurer\")","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"sheehui"},"content":"    public String getPolicyInsurer() {","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"sheehui"},"content":"        return policyInsurer;","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"    @JsonProperty(\"totalValueInsured\")","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"sheehui"},"content":"    public String getPolicyTotalValueInsured() {","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"sheehui"},"content":"        return policyTotalValueInsured;","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"    @JsonProperty(\"yearlyPremiums\")","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"sheehui"},"content":"    public String getPolicyYearlyPremiums() {","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"sheehui"},"content":"        return policyYearlyPremiums;","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"Bluntsord"},"content":"     * Converts this Jackson-friendly adapted policy object into the model\u0027s {@code Policy} object.","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"Bluntsord"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"Bluntsord"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted policy.","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"Bluntsord"},"content":"    public Policy toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"            return new Policy(","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"                    policyName, policyInsurer, policyTotalValueInsured, policyYearlyPremiums, policyCommission);","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"bharathcs":16,"sheehui":31,"Bluntsord":38}},{"path":"src/main/java/donnafin/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.util.FileUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.util.JsonUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sheehui":7,"-":73}},{"path":"src/main/java/donnafin/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Client list contains duplicate client(s).\";","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sheehui":6,"-":54}},{"path":"src/main/java/donnafin/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.util.JsonUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"sheehui":5,"-":42}},{"path":"src/main/java/donnafin/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sheehui":5,"-":27}},{"path":"src/main/java/donnafin/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheehui":6,"-":73}},{"path":"src/main/java/donnafin/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"sheehui":6,"-":30}},{"path":"src/main/java/donnafin/ui/AttributePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"public class AttributePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"    private static final String FXML \u003d \"AttributePanel.fxml\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"    private Label fieldLabel;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"    private Label valueLabel;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"    private AnchorPane anchorPane;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"     * Constructor for Attribute panel","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"     * @param fieldInString field heading.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"     * @param value initial value of the attribute.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"    public AttributePanel(String fieldInString, String value) {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"        super(FXML);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"        fieldLabel.setText(fieldInString);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"        valueLabel.setText(value);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"bharathcs":15,"sheehui":3,"Bluntsord":25}},{"path":"src/main/java/donnafin/ui/AttributeTable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"import javafx.scene.control.Control;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.control.TableCell;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.control.cell.PropertyValueFactory;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"public class AttributeTable\u003cT\u003e extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"    private static final String FXML \u003d \"AttributeTable.fxml\";","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"     * ColumnConfig is a data class representing the values required to make a","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"     * column in the {@code AttributeTable}.","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"    public static class ColumnConfig {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"        final String heading;","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"        final String propertyName;","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"        final int maxWidth;","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"        final int prefWidth;","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"        /**","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"         * Create a column config for use in the {@code AttributeTable}.","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"         * Note that {@code \u0027get\u0027 +  propertyName + \u0027()\u0027} should be a getter method","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"         * in the attribute targeted that returns a String.","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"         *","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"         * @param heading title of the column","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"         * @param propertyName name of the variable (must have a public getter function too)","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"         * @param minWidth in pixels","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"         */","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"        public ColumnConfig(String heading, String propertyName, int prefWidth, int maxWidth) {","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"            this.heading \u003d heading;","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"            this.propertyName \u003d propertyName;","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"            this.maxWidth \u003d maxWidth;","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"            this.prefWidth \u003d prefWidth;","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"    @FunctionalInterface","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"    public interface AggregatorLabelCreator\u003cR\u003e {","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"        /**","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"         * Convert a collection of attributes (rows) into a string for","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"         * displaying an aggregate value.","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"         *","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"         * @param collection of the attributes","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"         * @return String output that should show in the Aggregate Label.","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"         */","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"        String applyOn(Collection\u003c? extends R\u003e collection);","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"    public static class TableConfig\u003cR\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"        public final String tableTitle;","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"        public final List\u003cColumnConfig\u003e columnConfigs;","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"        public final AggregatorLabelCreator\u003c? super R\u003e aggregatorLabelCreator;","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"        /** Create Table Config for setting up {@code AttributeTable} */","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"        public TableConfig(","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"                String tableTitle,","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"                List\u003cColumnConfig\u003e columnConfigs,","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"                AggregatorLabelCreator\u003c? super R\u003e aggregatorLabelCreator) {","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"            this.columnConfigs \u003d columnConfigs;","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"            this.aggregatorLabelCreator \u003d aggregatorLabelCreator;","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"            this.tableTitle \u003d tableTitle;","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"bharathcs"},"content":"    private VBox container;","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"bharathcs"},"content":"    private Label title;","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"    private Label aggregatorLabel;","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"    private TableView\u003cT\u003e table;","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"    private final ObservableList\u003cT\u003e data;","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"     * Creates a custom made table for a collection of attributes.","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"     * Creates a VBox that contains a table heading, a line that shows an","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"     * aggregation of the collection, followed by a table of the collection.","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"     * @param tableConfig configurations for setting up this component","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"     * @param collection the collection of attributes","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"    public AttributeTable(TableConfig\u003c? super T\u003e tableConfig, Collection\u003c? extends T\u003e collection) {","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"        super(FXML);","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"bharathcs"},"content":"        table.getColumns().clear();","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"bharathcs"},"content":"        table.setEditable(true);","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"bharathcs"},"content":"        this.title.setText(tableConfig.tableTitle);","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //@@author bharathcs-reused","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        //Reused from https://stackoverflow.com/a/31213320/4179939 with minor modifications.","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        TableColumn\u003cT, String\u003e indexCol \u003d new TableColumn\u003c\u003e(\"\");","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        indexCol.setCellFactory(col -\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            TableCell\u003cT, String\u003e cell \u003d new TableCell\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            cell.textProperty().bind(Bindings.createStringBinding(() -\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                if (cell.isEmpty()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                    return null;","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                    return Integer.toString(cell.getIndex() + 1);","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }, cell.emptyProperty(), cell.indexProperty()));","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return cell;","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"bharathcs"},"content":"        List\u003cTableColumn\u003cT, String\u003e\u003e columns \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"bharathcs"},"content":"        indexCol.setMinWidth(40);","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"bharathcs"},"content":"        indexCol.setMaxWidth(40);","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"bharathcs"},"content":"        columns.add(indexCol);","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"bharathcs"},"content":"        for (ColumnConfig columnConfig : tableConfig.columnConfigs) {","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"bharathcs"},"content":"            TableColumn\u003cT, String\u003e col \u003d new TableColumn\u003c\u003e(columnConfig.heading);","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"bharathcs"},"content":"            col.setPrefWidth(columnConfig.prefWidth);","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"bharathcs"},"content":"            col.setMaxWidth(columnConfig.maxWidth);","lastModifiedDate":"2021-10-30"},{"lineNumber":136,"author":{"gitId":"bharathcs"},"content":"            col.setCellValueFactory(new PropertyValueFactory\u003c\u003e(columnConfig.propertyName));","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"Bluntsord"},"content":"            col.setCellFactory(tc -\u003e {","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"Bluntsord"},"content":"                TableCell\u003cT, String\u003e cell \u003d new TableCell\u003c\u003e();","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"Bluntsord"},"content":"                Text text \u003d new Text();","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"Bluntsord"},"content":"                cell.setGraphic(text);","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"Bluntsord"},"content":"                cell.setPrefHeight(Control.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"Bluntsord"},"content":"                text.wrappingWidthProperty().bind(col.widthProperty());","lastModifiedDate":"2021-11-02"},{"lineNumber":143,"author":{"gitId":"Bluntsord"},"content":"                text.textProperty().bind(cell.itemProperty());","lastModifiedDate":"2021-11-02"},{"lineNumber":144,"author":{"gitId":"Bluntsord"},"content":"                text.setFill(Color.WHITE);","lastModifiedDate":"2021-11-02"},{"lineNumber":145,"author":{"gitId":"Bluntsord"},"content":"                return cell;","lastModifiedDate":"2021-11-02"},{"lineNumber":146,"author":{"gitId":"Bluntsord"},"content":"            });","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"bharathcs"},"content":"            columns.add(col);","lastModifiedDate":"2021-10-14"},{"lineNumber":148,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":149,"author":{"gitId":"bharathcs"},"content":"        columns.forEach(col -\u003e col.setSortable(false));","lastModifiedDate":"2021-10-30"},{"lineNumber":150,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"bharathcs"},"content":"        aggregatorLabel.setText(tableConfig.aggregatorLabelCreator.applyOn(collection));","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"bharathcs"},"content":"        List\u003cT\u003e sortedCollection \u003d collection.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"bharathcs"},"content":"                .sorted(Comparator.comparing(Object::toString))","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"bharathcs"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"bharathcs"},"content":"        data \u003d FXCollections.observableArrayList(sortedCollection);","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"bharathcs"},"content":"        table.getColumns().addAll(columns);","lastModifiedDate":"2021-10-14"},{"lineNumber":158,"author":{"gitId":"bharathcs"},"content":"        table.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"bharathcs"},"content":"        table.setItems(data);","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":161,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":162,"author":{"gitId":"bharathcs"},"content":"    public VBox getContainer() {","lastModifiedDate":"2021-10-14"},{"lineNumber":163,"author":{"gitId":"bharathcs"},"content":"        return container;","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":165,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"bharathcs":137,"Bluntsord":13,"-":15}},{"path":"src/main/java/donnafin/ui/ClientPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Asset;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Attribute;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Liability;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Policy;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import donnafin.ui.CommandBox.CommandExecutor;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"DonnyS57"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"public class ClientPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"    private static final String FXML \u003d \"ClientInfoPanel.fxml\";","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"    private final PersonAdapter personAdapter;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"    private AnchorPane root;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"    private Button contact;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"    private Button policies;","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"    private Button assets;","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"    private Button liabilities;","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"    @FXML","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"    private Button notes;","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"Bluntsord"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"    private VBox attributeDisplayContainer;","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Bluntsord"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"    public ClientPanel(PersonAdapter personAdapter, CommandExecutor commandExecutor) {","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"Bluntsord"},"content":"        super(FXML);","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Bluntsord"},"content":"        this.personAdapter \u003d personAdapter;","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"        changeTabToContact();","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"    private AttributePanel createAttributePanel(Attribute attr) {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"        String fieldInString \u003d attr.getClass().getSimpleName();","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"        return new AttributePanel(fieldInString, attr.toString());","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"     * Updates the VBox content to the Client\u0027s contact Details","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"    public void changeTabToContact() {","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"mrmrinal"},"content":"        refresh();","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"        personAdapter.getContactAttributesList().stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"mrmrinal"},"content":"                .map(attr -\u003e createAttributePanel(attr).getRoot())","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"                .forEach(y -\u003e attributeDisplayContainer.getChildren().add(y));","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"    /** Gets the {@code CommandExecutor} to carry out switching to contact command */","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"    public void makeSwitchTabContactCommand() throws CommandException, ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"        commandExecutor.execute(\"tab contact\");","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"    /** Gets the {@code CommandExecutor} to carry out switching to policies command */","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"    public void makeSwitchTabPoliciesCommand() throws CommandException, ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"        commandExecutor.execute(\"tab policies\");","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"bharathcs"},"content":"    /** Gets the {@code CommandExecutor} to carry out switching to assets command */","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"    public void makeSwitchTabAssetsCommand() throws CommandException, ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"bharathcs"},"content":"        commandExecutor.execute(\"tab assets\");","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"bharathcs"},"content":"    /** Gets the {@code CommandExecutor} to carry out switching to notes command */","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"    public void makeSwitchTabNotesCommand() throws CommandException, ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"bharathcs"},"content":"        commandExecutor.execute(\"tab notes\");","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"    /** Gets the {@code CommandExecutor} to carry out switching to liabilities command */","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"    public void makeSwitchTabLiabilitiesCommand() throws CommandException, ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"        commandExecutor.execute(\"tab liabilities\");","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"    private void changeTab(Node node) {","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"        Platform.runLater(() -\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"mrmrinal"},"content":"            refresh();","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"            attributeDisplayContainer.getChildren().add(node);","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"        });","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"Bluntsord"},"content":"        attributeDisplayContainer.setVgrow(node, Priority.ALWAYS);","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"bharathcs"},"content":"    protected void changeTabToPolicies() {","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"bharathcs"},"content":"        changeTab(new AttributeTable\u003c\u003e(Policy.TABLE_CONFIG, personAdapter.getSubject().getPolicies()).getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"bharathcs"},"content":"    protected void changeTabToAssets() {","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"bharathcs"},"content":"        changeTab(new AttributeTable\u003c\u003e(Asset.TABLE_CONFIG, personAdapter.getSubject().getAssets()).getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"bharathcs"},"content":"    protected void changeTabToLiabilities() {","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"bharathcs"},"content":"        changeTab(new AttributeTable\u003c\u003e(Liability.TABLE_CONFIG, personAdapter.getSubject().getLiabilities()).getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":118,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"bharathcs"},"content":"    protected void changeTabToNotes() {","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"bharathcs"},"content":"        TextArea notesField \u003d new TextArea();","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"Bluntsord"},"content":"        notesField.setWrapText(true);","lastModifiedDate":"2021-11-01"},{"lineNumber":122,"author":{"gitId":"bharathcs"},"content":"        notesField.setText(personAdapter.getSubject().getNotes().getNotes());","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"        notesField.textProperty().addListener((observableValue, olNotes, newNotes) -\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"bharathcs"},"content":"            // TODO: Replace this whole listener with just calling an edit command.","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"bharathcs"},"content":"            // Any errors should be raised in the command box, after execution of the","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"bharathcs"},"content":"            // edit notes logic in Command (See how the buttons on press are handled).","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"DonnyS57"},"content":"            personAdapter.edit(new Notes(newNotes));","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"bharathcs"},"content":"        });","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"bharathcs"},"content":"        changeTab(notesField);","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"bharathcs"},"content":"    private void refresh() {","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"bharathcs"},"content":"        attributeDisplayContainer.getChildren().clear();","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"bharathcs":88,"DonnyS57":3,"sheehui":2,"mrmrinal":23,"Bluntsord":20}},{"path":"src/main/java/donnafin/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.Logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"sheehui"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"sheehui":6,"-":80}},{"path":"src/main/java/donnafin/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-w16-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sheehui":3,"-":99}},{"path":"src/main/java/donnafin/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.Logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"    private UiManager uiManager;","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"    private ClientPanel clientPanel;","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"Bluntsord"},"content":"    private StackPane viewFinderPlaceholder;","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"sheehui"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"sheehui"},"content":"     * A wrapper around contents of DonnaFin view. Mainly for the global escape key function","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"sheehui"},"content":"     * to direct users to home page.","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"sheehui"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"sheehui"},"content":"    private VBox viewWrapper;","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"Bluntsord"},"content":"    public MainWindow(Stage primaryStage, UiManager uiManager) {","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":71,"author":{"gitId":"Bluntsord"},"content":"        this.uiManager \u003d uiManager;","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"Bluntsord"},"content":"        setWindowDefaultSize(uiManager.getGuiSettings());","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"Bluntsord"},"content":"        personListPanel \u003d new PersonListPanel(uiManager.getFilteredPersonList());","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"Bluntsord"},"content":"        viewFinderPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"bharathcs"},"content":"     * Switches the children inside of viewFinder with home.","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"bharathcs"},"content":"    public void switchToHome() {","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"bharathcs"},"content":"        switchTab(this.viewFinderPlaceholder, personListPanel);","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"bharathcs"},"content":"        clientPanel \u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"bharathcs"},"content":"    private void switchTab(UiPart\u003cRegion\u003e tab) {","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"Bluntsord"},"content":"        switchTab(this.viewFinderPlaceholder, tab);","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"bharathcs"},"content":"    private void switchTab(StackPane holder, UiPart\u003cRegion\u003e tab) {","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"bharathcs"},"content":"        logger.info(\"Switching tab\");","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"bharathcs"},"content":"        holder.getChildren().clear();","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"bharathcs"},"content":"        holder.getChildren().add(tab.getRoot());","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"bharathcs"},"content":"    public void handleExit() {","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"Bluntsord"},"content":"        uiManager.setGuiSettings(guiSettings);","lastModifiedDate":"2021-09-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"sheehui"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2021-10-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"Bluntsord"},"content":"            CommandResult commandResult \u003d uiManager.execute(commandText);","lastModifiedDate":"2021-09-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"bharathcs"},"content":"    /** Show Client View */","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"bharathcs"},"content":"    public void showClientView(PersonAdapter subject) {","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"bharathcs"},"content":"        clientPanel \u003d new ClientPanel(subject, this::executeCommand);","lastModifiedDate":"2021-10-29"},{"lineNumber":213,"author":{"gitId":"bharathcs"},"content":"        switchTab(clientPanel);","lastModifiedDate":"2021-10-29"},{"lineNumber":214,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"bharathcs"},"content":"    /** Switch tab in Client View */","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"Bluntsord"},"content":"    public void switchClientViewTab(Ui.ViewFinderState tab) {","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"bharathcs"},"content":"        Objects.requireNonNull(clientPanel);","lastModifiedDate":"2021-10-29"},{"lineNumber":219,"author":{"gitId":"bharathcs"},"content":"        switch (tab) {","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"Bluntsord"},"content":"        case CONTACT:","lastModifiedDate":"2021-10-25"},{"lineNumber":221,"author":{"gitId":"bharathcs"},"content":"            clientPanel.changeTabToContact();","lastModifiedDate":"2021-10-29"},{"lineNumber":222,"author":{"gitId":"bharathcs"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"Bluntsord"},"content":"        case POLICIES:","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"bharathcs"},"content":"            clientPanel.changeTabToPolicies();","lastModifiedDate":"2021-10-29"},{"lineNumber":225,"author":{"gitId":"bharathcs"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"Bluntsord"},"content":"        case ASSETS:","lastModifiedDate":"2021-10-25"},{"lineNumber":227,"author":{"gitId":"bharathcs"},"content":"            clientPanel.changeTabToAssets();","lastModifiedDate":"2021-10-29"},{"lineNumber":228,"author":{"gitId":"bharathcs"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"Bluntsord"},"content":"        case LIABILITIES:","lastModifiedDate":"2021-10-25"},{"lineNumber":230,"author":{"gitId":"bharathcs"},"content":"            clientPanel.changeTabToLiabilities();","lastModifiedDate":"2021-10-29"},{"lineNumber":231,"author":{"gitId":"bharathcs"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":232,"author":{"gitId":"Bluntsord"},"content":"        case NOTES:","lastModifiedDate":"2021-10-25"},{"lineNumber":233,"author":{"gitId":"bharathcs"},"content":"            clientPanel.changeTabToNotes();","lastModifiedDate":"2021-10-29"},{"lineNumber":234,"author":{"gitId":"bharathcs"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"bharathcs"},"content":"        default:","lastModifiedDate":"2021-10-19"},{"lineNumber":236,"author":{"gitId":"bharathcs"},"content":"            // sufficient as no other tab exists.","lastModifiedDate":"2021-10-29"},{"lineNumber":237,"author":{"gitId":"bharathcs"},"content":"            throw new RuntimeException(\"Switched to a fake tab\");","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bharathcs":38,"sheehui":14,"Bluntsord":25,"-":163}},{"path":"src/main/java/donnafin/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import java.util.List;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"Bluntsord"},"content":"        List.of(name, id, phone, address, email).stream().forEach(x -\u003e x.setWrapText(true));","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sheehui":2,"Bluntsord":2,"-":69}},{"path":"src/main/java/donnafin/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"    static class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bharathcs":1,"sheehui":3,"-":45}},{"path":"src/main/java/donnafin/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sheehui":1,"-":27}},{"path":"src/main/java/donnafin/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"    enum ViewFinderState {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"        PERSON_LIST_PANEL,","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"        CONTACT,","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"        POLICIES,","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"        ASSETS,","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"        LIABILITIES,","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"        NOTES","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"    void showHelp();","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"    void beginExit();","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"    void showClientView(PersonAdapter subject);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"    void switchClientViewTab(ViewFinderState tab) throws ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"    void showHome();","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"    ViewFinderState getUiState();","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText);","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bharathcs":16,"sheehui":2,"Bluntsord":12,"-":12}},{"path":"src/main/java/donnafin/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.MainApp;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.util.StringUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.Logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"import donnafin.ui.state.UiState;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"    private final Logic logic;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":"    private UiState uiState;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"DonnyS57"},"content":"        this.uiState \u003d new UiState();","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"Bluntsord"},"content":"            mainWindow \u003d new MainWindow(primaryStage, this);","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"    public void showHelp() {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"        this.mainWindow.handleHelp();","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"    public void beginExit() {","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"        this.mainWindow.handleExit();","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"    public void showClientView(PersonAdapter subject) {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"        mainWindow.showClientView(subject);","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"DonnyS57"},"content":"        uiState.setStatePersonalInformationTab();","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"Bluntsord"},"content":"    public void switchClientViewTab(ViewFinderState tab) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"        mainWindow.switchClientViewTab(tab);","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"DonnyS57"},"content":"        switch (tab) {","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"Bluntsord"},"content":"        case CONTACT:","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"DonnyS57"},"content":"            uiState.setStatePersonalInformationTab();","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"DonnyS57"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"Bluntsord"},"content":"        case POLICIES:","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"DonnyS57"},"content":"            uiState.setStatePoliciesTab();","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"DonnyS57"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"Bluntsord"},"content":"        case ASSETS:","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"DonnyS57"},"content":"            uiState.setStateFinancialInformationTab();","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"DonnyS57"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"Bluntsord"},"content":"        case LIABILITIES:","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"DonnyS57"},"content":"            uiState.setStateLiabilitiesTab();","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"DonnyS57"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"Bluntsord"},"content":"        case NOTES:","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"DonnyS57"},"content":"            uiState.setStateNotesTab();","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"DonnyS57"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"DonnyS57"},"content":"        default:","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"Bluntsord"},"content":"            throw new ParseException(\"Switched to a fake tab\");","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"DonnyS57"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"Bluntsord"},"content":"     * Changes the mainwindow to personlist panel, aka \"Home\"","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"Bluntsord"},"content":"    public void showHome() {","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"Bluntsord"},"content":"        mainWindow.switchToHome();","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"DonnyS57"},"content":"        uiState.setStatePersonListPanel();","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"bharathcs"},"content":"    public void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2021-11-01"},{"lineNumber":125,"author":{"gitId":"bharathcs"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2021-11-01"},{"lineNumber":126,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":127,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":151,"author":{"gitId":"Bluntsord"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"Bluntsord"},"content":"        return logic.getGuiSettings();","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"Bluntsord"},"content":"    };","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"Bluntsord"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"Bluntsord"},"content":"        return logic.getFilteredPersonList();","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"Bluntsord"},"content":"    };","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":159,"author":{"gitId":"Bluntsord"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2021-09-23"},{"lineNumber":160,"author":{"gitId":"Bluntsord"},"content":"        return logic.getAddressBookFilePath();","lastModifiedDate":"2021-09-23"},{"lineNumber":161,"author":{"gitId":"Bluntsord"},"content":"    };","lastModifiedDate":"2021-09-23"},{"lineNumber":162,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"Bluntsord"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"Bluntsord"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"Bluntsord"},"content":"    };","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":167,"author":{"gitId":"Bluntsord"},"content":"    public MainWindow getMainWindow() {","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"Bluntsord"},"content":"        return this.mainWindow;","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"Bluntsord"},"content":"    public ViewFinderState getUiState() {","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"Bluntsord"},"content":"        return uiState.getState();","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"Bluntsord"},"content":"     * Passes the string to logic to execute. Gets the command result back from logic, along with any","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"Bluntsord"},"content":"     * uiConsumer. If there is one, apply it to the ui","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"Bluntsord"},"content":"     * @param commandText String entered by the user","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"Bluntsord"},"content":"     * @return  result of the command of class Command result","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"Bluntsord"},"content":"     * @throws CommandException","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"Bluntsord"},"content":"     * @throws ParseException","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"Bluntsord"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":184,"author":{"gitId":"Bluntsord"},"content":"        CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"Bluntsord"},"content":"        Consumer\u003cUi\u003e uiAction \u003d commandResult.getUiAction();","lastModifiedDate":"2021-10-09"},{"lineNumber":186,"author":{"gitId":"Bluntsord"},"content":"        assert !uiAction.equals(null) : \"commandResult.uiAction was set as null\";","lastModifiedDate":"2021-10-09"},{"lineNumber":187,"author":{"gitId":"Bluntsord"},"content":"        if (!uiAction.equals(null)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"Bluntsord"},"content":"            uiAction.accept(this);","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":190,"author":{"gitId":"Bluntsord"},"content":"        return commandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":191,"author":{"gitId":"Bluntsord"},"content":"    };","lastModifiedDate":"2021-09-23"},{"lineNumber":192,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"Bluntsord"},"content":"    //For testing purposes. See UiManager Test for more info","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"Bluntsord"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"Bluntsord"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"Bluntsord"},"content":"            return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":198,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":199,"author":{"gitId":"bharathcs"},"content":"        if (!(o instanceof UiManager)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":200,"author":{"gitId":"Bluntsord"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":202,"author":{"gitId":"Bluntsord"},"content":"        UiManager uiManager \u003d (UiManager) o;","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"Bluntsord"},"content":"        return Objects.equals(logic, uiManager.logic) \u0026\u0026 Objects.equals(mainWindow, uiManager.mainWindow);","lastModifiedDate":"2021-10-09"},{"lineNumber":204,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":205,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"Bluntsord"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":208,"author":{"gitId":"Bluntsord"},"content":"        return Objects.hash(logic, mainWindow);","lastModifiedDate":"2021-10-09"},{"lineNumber":209,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bharathcs":25,"DonnyS57":20,"sheehui":11,"Bluntsord":77,"-":77}},{"path":"src/main/java/donnafin/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.MainApp;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sheehui":2,"-":86}},{"path":"src/main/java/donnafin/ui/state/UiState.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.ui.state;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import donnafin.commons.core.LogsCenter;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"import donnafin.ui.Ui.ViewFinderState;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"import donnafin.ui.UiManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"Class to track the current state of the Ui. E.g which tab the ui is currently on","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":" Currently the class does not do anything as of yet","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"public class UiState {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"    private ViewFinderState state;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"     * Constructor for Uistate","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"    public UiState() {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"        logger.info(\"Creating Ui State: Set to Home\");","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"        this.state \u003d ViewFinderState.PERSON_LIST_PANEL;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"    public void setStatePersonListPanel() {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"        logger.info(\"Set Ui state to home\");","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"        this.state \u003d ViewFinderState.PERSON_LIST_PANEL;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"DonnyS57"},"content":"    public void setStatePersonalInformationTab() {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"DonnyS57"},"content":"        logger.info(\"Set Ui state to personal information\");","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"        this.state \u003d ViewFinderState.CONTACT;","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"DonnyS57"},"content":"    public void setStateFinancialInformationTab() {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"DonnyS57"},"content":"        logger.info(\"Set Ui state to financial information\");","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"        this.state \u003d ViewFinderState.ASSETS;","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"DonnyS57"},"content":"    public void setStateLiabilitiesTab() {","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"DonnyS57"},"content":"        logger.info(\"Set Ui state to liabilities\");","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"Bluntsord"},"content":"        this.state \u003d ViewFinderState.LIABILITIES;","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"DonnyS57"},"content":"    public void setStatePoliciesTab() {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"DonnyS57"},"content":"        logger.info(\"Set Ui state to policies\");","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"        this.state \u003d ViewFinderState.POLICIES;","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"DonnyS57"},"content":"    public void setStateNotesTab() {","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"DonnyS57"},"content":"        logger.info(\"Set Ui state to notes\");","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"Bluntsord"},"content":"        this.state \u003d ViewFinderState.NOTES;","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"Bluntsord"},"content":"    public ViewFinderState getState() {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"Bluntsord"},"content":"        return state;","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"bharathcs":2,"DonnyS57":17,"Bluntsord":40}},{"path":"src/main/resources/view/AttributePanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"\u003cAnchorPane fx:id\u003d\"anchorPane\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"attribute-panel\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"      \u003cLabel fx:id\u003d\"fieldLabel\" maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"55.0\" prefWidth\u003d\"100.0\" styleClass\u003d\"label-bright\" text\u003d\"Label\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" AnchorPane.bottomAnchor\u003d\"2.0\" AnchorPane.leftAnchor\u003d\"8.0\" AnchorPane.rightAnchor\u003d\"8.0\" AnchorPane.topAnchor\u003d\"2.0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"            \u003cRectangle arcHeight\u003d\"5.0\" arcWidth\u003d\"5.0\" fill\u003d\"DODGERBLUE\" height\u003d\"55.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" visible\u003d\"false\" width\u003d\"100.0\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"            \u003cLabel fx:id\u003d\"valueLabel\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"label-bright\" text\u003d\"InitialValue (Label)\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"                  \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"                  \u003cInsets right\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"bharathcs":21,"Bluntsord":6}},{"path":"src/main/resources/view/AttributeTable.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.control.TableColumn?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"\u003cVBox fx:id\u003d\"container\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"400.0\" prefHeight\u003d\"500.0\" spacing\u003d\"12.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"      \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"attribute-table-title\" text\u003d\"Label\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"            \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"            \u003cFont size\u003d\"24.0\" /\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"         \u003c/font\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"      \u003cLabel fx:id\u003d\"aggregatorLabel\" styleClass\u003d\"attribute-table-agg-text\" text\u003d\"Label\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"         \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"            \u003cInsets bottom\u003d\"12.0\" left\u003d\"12.0\" right\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"         \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"      \u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"800.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"            \u003cTableView fx:id\u003d\"table\" maxHeight\u003d\"1.7976931348623157E308\" prefWidth\u003d\"200.0\" AnchorPane.bottomAnchor\u003d\"50.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"              \u003ccolumns\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"                \u003cTableColumn prefWidth\u003d\"75.0\" text\u003d\"C1\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"                \u003cTableColumn prefWidth\u003d\"75.0\" text\u003d\"C2\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"              \u003c/columns\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"            \u003c/TableView\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"      \u003cInsets bottom\u003d\"50.0\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"bharathcs":40}},{"path":"src/main/resources/view/ClientInfoPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"DonnyS57"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"\u003cAnchorPane fx:id\u003d\"root\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"      \u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" prefWidth\u003d\"193.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"            \u003cVBox layoutX\u003d\"32.0\" layoutY\u003d\"41.0\" prefHeight\u003d\"318.0\" prefWidth\u003d\"130.0\" spacing\u003d\"10.0\" AnchorPane.bottomAnchor\u003d\"20.0\" AnchorPane.leftAnchor\u003d\"40.0\" AnchorPane.rightAnchor\u003d\"40.0\" AnchorPane.topAnchor\u003d\"20.0\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"                  \u003cVBox maxHeight\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"                        \u003cButton fx:id\u003d\"contact\" maxHeight\u003d\"300.0\" maxWidth\u003d\"300.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#makeSwitchTabContactCommand\" prefHeight\u003d\"55.0\" prefWidth\u003d\"100.0\" text\u003d\"Contact\" textFill\u003d\"#010503\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"                        \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"                  \u003cVBox maxHeight\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"                      \u003cchildren\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"                          \u003cButton fx:id\u003d\"policies\" layoutX\u003d\"10.0\" layoutY\u003d\"10.0\" maxHeight\u003d\"300.0\" maxWidth\u003d\"300.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#makeSwitchTabPoliciesCommand\" prefHeight\u003d\"55.0\" prefWidth\u003d\"100.0\" text\u003d\"Policies\" textFill\u003d\"#010503\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"                      \u003c/children\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"                         \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"                   \u003cVBox maxHeight\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"                       \u003cchildren\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"                           \u003cButton fx:id\u003d\"assets\" layoutX\u003d\"10.0\" layoutY\u003d\"75.0\" maxHeight\u003d\"300.0\" maxWidth\u003d\"300.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#makeSwitchTabAssetsCommand\" prefHeight\u003d\"55.0\" prefWidth\u003d\"100.0\" text\u003d\"Assets\" textFill\u003d\"#010503\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"                       \u003c/children\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"                       \u003cpadding\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"                           \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"                       \u003c/padding\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"                   \u003c/VBox\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"                   \u003cVBox maxHeight\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"                       \u003cchildren\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"                           \u003cButton fx:id\u003d\"liabilities\" layoutX\u003d\"10.0\" layoutY\u003d\"140.0\" maxHeight\u003d\"300.0\" maxWidth\u003d\"300.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#makeSwitchTabLiabilitiesCommand\" prefHeight\u003d\"55.0\" prefWidth\u003d\"100.0\" text\u003d\"Liabilities\" textFill\u003d\"#010503\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"                       \u003c/children\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"                       \u003cpadding\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"                          \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"                       \u003c/padding\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"                   \u003c/VBox\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"                  \u003cButton fx:id\u003d\"notes\" layoutX\u003d\"10.0\" layoutY\u003d\"205.0\" maxHeight\u003d\"300.0\" maxWidth\u003d\"300.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#makeSwitchTabNotesCommand\" prefHeight\u003d\"55.0\" prefWidth\u003d\"100.0\" text\u003d\"Notes\" textFill\u003d\"#010503\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Bluntsord"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"      \u003cAnchorPane prefHeight\u003d\"380.0\" prefWidth\u003d\"410.0\" AnchorPane.bottomAnchor\u003d\"20.0\" AnchorPane.leftAnchor\u003d\"190.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"            \u003cVBox fx:id\u003d\"attributeDisplayContainer\" prefHeight\u003d\"400.0\" prefWidth\u003d\"286.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"            \u003cInsets bottom\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"bharathcs":52,"DonnyS57":1,"sheehui":3,"mrmrinal":1,"Bluntsord":3}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":".attribute-table-title {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"    -fx-font-size: 24pt;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":".attribute-table-agg-text {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"    -fx-font-size: 18;","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"bharathcs"},"content":".attribute-panel {","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"bharathcs"},"content":"    -fx-border-color: #a9a9a9;","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"bharathcs"},"content":"    -fx-border-width: 0 0 2 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"bharathcs":20,"-":351}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"         title\u003d\"DonnaFin.io\" minWidth\u003d\"1000\" minHeight\u003d\"700\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"        \u003cVBox fx:id\u003d\"viewWrapper\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                     minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"sheehui"},"content":"            \u003cStackPane fx:id\u003d\"viewFinderPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"sheehui":2,"Bluntsord":1,"-":56}},{"path":"src/main/resources/view/TestPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"\u003cPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" /\u003e","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Bluntsord":6}},{"path":"src/main/resources/view/ViewFinder.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"\u003cStackPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"294.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"      \u003cLabel prefHeight\u003d\"16.0\" prefWidth\u003d\"191.0\" text\u003d\"ViewFinder\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"sheehui":4,"Bluntsord":7}},{"path":"src/test/java/donnafin/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        private final Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"sheehui":1,"-":62}},{"path":"src/test/java/donnafin/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"        assertEquals(defaultConfig, defaultConfig);","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"bharathcs":1,"sheehui":1,"-":24}},{"path":"src/test/java/donnafin/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"        assertTrue(version.isEarlyAccess());","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"        assertEquals(0, one.compareTo(another));","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"        assertEquals(0, one.compareTo(another));","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"bharathcs"},"content":"        assertEquals(one, another);","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"bharathcs"},"content":"        assertEquals(one, another);","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bharathcs":5,"sheehui":2,"-":128}},{"path":"src/test/java/donnafin/commons/core/types/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.commons.core.types;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"        assertEquals(fifthPersonIndex, Index.fromOneBased(5));","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"        assertEquals(fifthPersonIndex, Index.fromZeroBased(4));","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"        assertEquals(fifthPersonIndex, fifthPersonIndex);","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(null, fifthPersonIndex);","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(5.0f, fifthPersonIndex);","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(fifthPersonIndex, Index.fromOneBased(1));","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"bharathcs":8,"sheehui":1,"-":50}},{"path":"src/test/java/donnafin/commons/core/types/MoneyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.commons.core.types;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Money.MoneyException;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"public class MoneyTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"    public void getMoneyFromIntegerCheckValue() throws MoneyException {","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"        assertEquals(123, new Money(123).getValue());","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"    public void getMoneyFromNegativeValue_fails_throwsMoneyException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"        assertThrows(MoneyException.class, () -\u003e new Money(-123));","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"    public void checkMoneyOutput() throws MoneyException {","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"        assertEquals(\"$ 1.00\", new Money(100).toString());","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"        assertEquals(\"$ 3.00\", new Money(300).toString());","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"        assertEquals(\"$ 1.20\", new Money(120).toString());","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"        assertEquals(\"$ 1.23\", new Money(123).toString());","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"    public void testFullCentsString() throws MoneyException {","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"        assertEquals(\"$ 1.23\", new Money(123).toString());","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"    public void testPaddedCentsString() throws MoneyException {","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"        assertEquals(\"$ 1.03\", new Money(103).toString());","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"    public void testOnlyCentsString() throws MoneyException {","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"        assertEquals(\"$ 0.03\", new Money(3).toString());","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"        assertEquals(\"$ 0.00\", new Money(0).toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"    public void mathTest() throws MoneyException {","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"        Money oneCent \u003d new Money(1);","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"        Money oneDollar \u003d new Money(100);","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"        assertEquals(101, Money.add(oneCent, oneDollar).getValue());","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"        assertEquals(99, Money.subtract(oneDollar, oneCent).getValue());","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"    public void safeMaths() throws MoneyException {","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"        Money maxValue \u003d new Money(Long.MAX_VALUE);","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"        Money minValue \u003d new Money(0);","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"        Money oneCent \u003d new Money(1);","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"        assertThrows(MoneyException.class, () -\u003e Money.add(maxValue, oneCent));","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"        assertThrows(MoneyException.class, () -\u003e Money.subtract(minValue, oneCent));","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"        assertThrows(MoneyException.class, () -\u003e Money.subtract(new Money(1), new Money(100)));","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"    public void equals() throws MoneyException {","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"        Money oneDollar \u003d new Money(100);","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"        Money oneDollarAgain \u003d new Money(100);","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"        assertEquals(oneDollar, oneDollar);","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"        assertEquals(oneDollar, oneDollarAgain);","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"        assertEquals(oneDollar.getValue(), oneDollarAgain.getValue());","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"        assertEquals(oneDollar.toString(), oneDollarAgain.toString());","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"bharathcs":74}},{"path":"src/test/java/donnafin/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"sheehui":2,"-":34}},{"path":"src/test/java/donnafin/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"sheehui":3,"-":105}},{"path":"src/test/java/donnafin/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.Config;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"sheehui":4,"-":110}},{"path":"src/test/java/donnafin/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheehui":2,"-":21}},{"path":"src/test/java/donnafin/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.testutil.SerializableTestClass;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.testutil.TestUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheehui":3,"-":42}},{"path":"src/test/java/donnafin/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"sheehui":2,"-":141}},{"path":"src/test/java/donnafin/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import static donnafin.commons.core.Messages.MESSAGE_INVALID_PERSON_INDEX;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.AddCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.ListCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"import donnafin.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"sheehui"},"content":"import donnafin.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"sheehui"},"content":"import donnafin.storage.StorageManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"sheehui"},"content":"import donnafin.testutil.PersonBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"    private Model model;","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"        this.model \u003d new ModelManager(new AddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"        logic \u003d new LogicManager(model);","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_INDEX);","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"        this.model \u003d new ModelManager(new AddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"        logic \u003d new LogicManager(model);","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"sheehui"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"bharathcs"},"content":"        ModelManager expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"bharathcs"},"content":"        // null storage for expected model should not cause problems as there is no save.","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"bharathcs"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bharathcs":10,"sheehui":25,"-":131}},{"path":"src/test/java/donnafin/logic/PersonAdapterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Address;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Asset;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Liability;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Notes;","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Policy;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"import donnafin.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"import donnafin.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"import donnafin.storage.StorageManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"public class PersonAdapterTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"    @TempDir","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"    private PersonAdapter personAdapter;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"sheehui"},"content":"        model.addPerson(ALICE);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"        personAdapter \u003d new PersonAdapter(model, ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"mrmrinal"},"content":"    public void constructor() {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"mrmrinal"},"content":"        assertEquals(ALICE, personAdapter.getSubject());","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"mrmrinal"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"    public void getContactAttributesList_returnsCorrectOutput() {","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"        assertEquals(ALICE.getContactAttributesList(), personAdapter.getContactAttributesList());","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"mrmrinal"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"mrmrinal"},"content":"    public void editPersonName_changesSubject() throws InvalidFieldException {","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"DonnyS57"},"content":"        personAdapter.edit(new Name(\"Peter\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"mrmrinal"},"content":"        assertEquals(new Person(new Name(\"Peter\"), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"sheehui"},"content":"                ALICE.getAddress(), ALICE.getNotes(), ALICE.getPolicies(),","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"sheehui"},"content":"                ALICE.getLiabilities(), ALICE.getAssets()),","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"Bluntsord"},"content":"                personAdapter.getSubject());","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"mrmrinal"},"content":"        assertNotEquals(ALICE, personAdapter.getSubject());","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"DonnyS57"},"content":"        personAdapter.edit(new Name(\"Alice Pauline\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"mrmrinal"},"content":"        assertEquals(ALICE, personAdapter.getSubject());","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"mrmrinal"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"mrmrinal"},"content":"    public void editPersonName_withIncorrectNameFormat_throwsInvalidFieldException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"mrmrinal"},"content":"        String emptyName \u003d \" \"; // empty string","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"mrmrinal"},"content":"        String invalidName \u003d \"Alice*\"; // contains non-alphanumeric characters","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"DonnyS57"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e personAdapter.edit(new Name(emptyName)));","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"DonnyS57"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"DonnyS57"},"content":"                personAdapter.edit(new Name(invalidName)));","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"mrmrinal"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"mrmrinal"},"content":"    public void editPersonPhone_changesSubject() throws InvalidFieldException {","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"DonnyS57"},"content":"        personAdapter.edit(new Phone(\"90538978\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"mrmrinal"},"content":"        assertEquals(new Person(ALICE.getName(), new Phone(\"90538978\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"sheehui"},"content":"                ALICE.getEmail(), ALICE.getAddress(), ALICE.getNotes(),","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"sheehui"},"content":"                ALICE.getPolicies(), ALICE.getLiabilities(), ALICE.getAssets()),","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"Bluntsord"},"content":"                personAdapter.getSubject());","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"mrmrinal"},"content":"        assertNotEquals(ALICE, personAdapter.getSubject());","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"DonnyS57"},"content":"        personAdapter.edit(ALICE.getPhone());","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"mrmrinal"},"content":"        assertEquals(ALICE, personAdapter.getSubject());","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"mrmrinal"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"mrmrinal"},"content":"    public void editPersonPhone_withIncorrectPhoneFormat_throwsInvalidFieldException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"mrmrinal"},"content":"        String emptyPhone \u003d \" \"; // empty string","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"mrmrinal"},"content":"        String invalidPhone \u003d \"91\"; // less than 3 numbers","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"mrmrinal"},"content":"        String invalidPhoneAlt \u003d \"9011p041\"; // alphabets within digits","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"DonnyS57"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"DonnyS57"},"content":"                personAdapter.edit(new Phone(emptyPhone)));","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"DonnyS57"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"DonnyS57"},"content":"                personAdapter.edit(new Phone(invalidPhone)));","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"DonnyS57"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"DonnyS57"},"content":"                personAdapter.edit(new Phone(invalidPhoneAlt)));","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"mrmrinal"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"mrmrinal"},"content":"    public void editPersonEmail_changesSubject() throws InvalidFieldException {","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"DonnyS57"},"content":"        personAdapter.edit(new Email(\"alice29@email.com\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"mrmrinal"},"content":"        assertEquals(new Person(ALICE.getName(), ALICE.getPhone(), new Email(\"alice29@email.com\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"sheehui"},"content":"                ALICE.getAddress(), ALICE.getNotes(), ALICE.getPolicies(),","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"sheehui"},"content":"                ALICE.getLiabilities(), ALICE.getAssets()),","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"Bluntsord"},"content":"                personAdapter.getSubject());","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"mrmrinal"},"content":"        assertNotEquals(ALICE, personAdapter.getSubject());","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"DonnyS57"},"content":"        personAdapter.edit(ALICE.getEmail());","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"mrmrinal"},"content":"        assertEquals(ALICE, personAdapter.getSubject());","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"mrmrinal"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"mrmrinal"},"content":"    public void editPersonEmail_withIncorrectPhoneFormat_throwsInvalidFieldException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"mrmrinal"},"content":"        String missingLocalPart \u003d \"@example.com\"; //missing local part","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"mrmrinal"},"content":"        String missingAtSymbol \u003d \"peterjackexample.com\"; //missing \u0027@\u0027 symbol","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"mrmrinal"},"content":"        String missingDomainName \u003d \"peterjack@\"; //missing domain name","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"DonnyS57"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"DonnyS57"},"content":"                personAdapter.edit(new Email(missingLocalPart)));","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"DonnyS57"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"DonnyS57"},"content":"                personAdapter.edit(new Email(missingAtSymbol)));","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"DonnyS57"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"DonnyS57"},"content":"                personAdapter.edit(new Email(missingDomainName)));","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"mrmrinal"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"mrmrinal"},"content":"    public void editPersonAddress_changesSubject() throws InvalidFieldException {","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"DonnyS57"},"content":"        personAdapter.edit(new Address(\"28 College Ave E, #B1-01, Singapore 138598\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"mrmrinal"},"content":"        assertEquals(new Person(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"mrmrinal"},"content":"                new Address(\"28 College Ave E, #B1-01, Singapore 138598\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"sheehui"},"content":"                ALICE.getNotes(), ALICE.getPolicies(), ALICE.getLiabilities(),","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"sheehui"},"content":"                ALICE.getAssets()), personAdapter.getSubject());","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"mrmrinal"},"content":"        assertNotEquals(ALICE, personAdapter.getSubject());","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"DonnyS57"},"content":"        personAdapter.edit(ALICE.getAddress());","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"mrmrinal"},"content":"        assertEquals(ALICE, personAdapter.getSubject());","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"mrmrinal"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"mrmrinal"},"content":"    public void editPersonAddress_withIncorrectPhoneFormat_throwsInvalidFieldException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"mrmrinal"},"content":"        String emptyAddress \u003d \"\"; //empty String","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"mrmrinal"},"content":"        String spacesOnly \u003d \" \"; //spaces only","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"DonnyS57"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"DonnyS57"},"content":"                personAdapter.edit(new Address(emptyAddress)));","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"DonnyS57"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"DonnyS57"},"content":"                personAdapter.edit(new Address(spacesOnly)));","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":162,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":163,"author":{"gitId":"bharathcs"},"content":"    public void editPersonNotes_changesSubject() throws InvalidFieldException {","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"DonnyS57"},"content":"        personAdapter.edit(new Notes(\"Loves cai fan \u0026 teh ping\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"bharathcs"},"content":"        Notes modifiedNotes \u003d new Notes(\"Loves cai fan \u0026 teh ping\");","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":167,"author":{"gitId":"bharathcs"},"content":"        assertEquals(new Person(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2021-10-14"},{"lineNumber":168,"author":{"gitId":"sheehui"},"content":"                ALICE.getAddress(), modifiedNotes, ALICE.getPolicies(),","lastModifiedDate":"2021-10-30"},{"lineNumber":169,"author":{"gitId":"sheehui"},"content":"                        ALICE.getLiabilities(), ALICE.getAssets()),","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"bharathcs"},"content":"                personAdapter.getSubject());","lastModifiedDate":"2021-10-14"},{"lineNumber":171,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(ALICE, personAdapter.getSubject());","lastModifiedDate":"2021-10-14"},{"lineNumber":172,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":173,"author":{"gitId":"DonnyS57"},"content":"        personAdapter.edit(new Notes(\"Loves cai fan\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"bharathcs"},"content":"        assertEquals(ALICE, personAdapter.getSubject());","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":176,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":177,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"bharathcs"},"content":"    public void editPersonPolicies_changesSubject() {","lastModifiedDate":"2021-10-29"},{"lineNumber":179,"author":{"gitId":"bharathcs"},"content":"        Set\u003cPolicy\u003e original \u003d ALICE.getPolicies();","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"bharathcs"},"content":"        Set\u003cPolicy\u003e policies \u003d Set.of(","lastModifiedDate":"2021-10-29"},{"lineNumber":181,"author":{"gitId":"bharathcs"},"content":"                new Policy(\"Policy test\", \"insurer\", \"$4\", \"$5\", \"$6\")","lastModifiedDate":"2021-10-29"},{"lineNumber":182,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-10-29"},{"lineNumber":183,"author":{"gitId":"bharathcs"},"content":"        personAdapter.editPolicies(policies);","lastModifiedDate":"2021-10-29"},{"lineNumber":184,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":185,"author":{"gitId":"bharathcs"},"content":"        assertEquals(new Person(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2021-10-29"},{"lineNumber":186,"author":{"gitId":"sheehui"},"content":"                        ALICE.getAddress(), ALICE.getNotes(), policies,","lastModifiedDate":"2021-10-30"},{"lineNumber":187,"author":{"gitId":"bharathcs"},"content":"                        ALICE.getLiabilities(), ALICE.getAssets()),","lastModifiedDate":"2021-10-29"},{"lineNumber":188,"author":{"gitId":"bharathcs"},"content":"                personAdapter.getSubject());","lastModifiedDate":"2021-10-29"},{"lineNumber":189,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(ALICE, personAdapter.getSubject());","lastModifiedDate":"2021-10-29"},{"lineNumber":190,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":191,"author":{"gitId":"bharathcs"},"content":"        personAdapter.editPolicies(original);","lastModifiedDate":"2021-10-29"},{"lineNumber":192,"author":{"gitId":"bharathcs"},"content":"        assertEquals(ALICE, personAdapter.getSubject());","lastModifiedDate":"2021-10-29"},{"lineNumber":193,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":194,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":195,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":196,"author":{"gitId":"bharathcs"},"content":"    public void editPersonAssets_changesSubject() {","lastModifiedDate":"2021-10-29"},{"lineNumber":197,"author":{"gitId":"bharathcs"},"content":"        Set\u003cAsset\u003e original \u003d ALICE.getAssets();","lastModifiedDate":"2021-10-29"},{"lineNumber":198,"author":{"gitId":"bharathcs"},"content":"        Set\u003cAsset\u003e assets \u003d Set.of(","lastModifiedDate":"2021-10-29"},{"lineNumber":199,"author":{"gitId":"bharathcs"},"content":"                new Asset(\"asset test\", \"asset type\", \"$40\", \"Worth $5\")","lastModifiedDate":"2021-10-29"},{"lineNumber":200,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-10-29"},{"lineNumber":201,"author":{"gitId":"bharathcs"},"content":"        personAdapter.editAssets(assets);","lastModifiedDate":"2021-10-29"},{"lineNumber":202,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":203,"author":{"gitId":"bharathcs"},"content":"        assertEquals(new Person(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2021-10-29"},{"lineNumber":204,"author":{"gitId":"sheehui"},"content":"                        ALICE.getAddress(), ALICE.getNotes(), ALICE.getPolicies(),","lastModifiedDate":"2021-10-30"},{"lineNumber":205,"author":{"gitId":"bharathcs"},"content":"                        ALICE.getLiabilities(), assets),","lastModifiedDate":"2021-10-29"},{"lineNumber":206,"author":{"gitId":"bharathcs"},"content":"                personAdapter.getSubject());","lastModifiedDate":"2021-10-29"},{"lineNumber":207,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(ALICE, personAdapter.getSubject());","lastModifiedDate":"2021-10-29"},{"lineNumber":208,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":209,"author":{"gitId":"bharathcs"},"content":"        personAdapter.editAssets(original);","lastModifiedDate":"2021-10-29"},{"lineNumber":210,"author":{"gitId":"bharathcs"},"content":"        assertEquals(ALICE, personAdapter.getSubject());","lastModifiedDate":"2021-10-29"},{"lineNumber":211,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":212,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":213,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":214,"author":{"gitId":"bharathcs"},"content":"    public void editPersonLiabilities_changesSubject() {","lastModifiedDate":"2021-10-29"},{"lineNumber":215,"author":{"gitId":"bharathcs"},"content":"        Set\u003cLiability\u003e original \u003d ALICE.getLiabilities();","lastModifiedDate":"2021-10-29"},{"lineNumber":216,"author":{"gitId":"bharathcs"},"content":"        Set\u003cLiability\u003e liabilities \u003d Set.of(","lastModifiedDate":"2021-10-29"},{"lineNumber":217,"author":{"gitId":"bharathcs"},"content":"                new Liability(\"liability test\", \"liability type\", \"$13\", \"interest: 4% pa\")","lastModifiedDate":"2021-10-29"},{"lineNumber":218,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-10-29"},{"lineNumber":219,"author":{"gitId":"bharathcs"},"content":"        personAdapter.editLiabilities(liabilities);","lastModifiedDate":"2021-10-29"},{"lineNumber":220,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":221,"author":{"gitId":"bharathcs"},"content":"        assertEquals(new Person(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2021-10-29"},{"lineNumber":222,"author":{"gitId":"sheehui"},"content":"                        ALICE.getAddress(), ALICE.getNotes(), ALICE.getPolicies(),","lastModifiedDate":"2021-10-30"},{"lineNumber":223,"author":{"gitId":"bharathcs"},"content":"                        liabilities, ALICE.getAssets()),","lastModifiedDate":"2021-10-29"},{"lineNumber":224,"author":{"gitId":"bharathcs"},"content":"                personAdapter.getSubject());","lastModifiedDate":"2021-10-29"},{"lineNumber":225,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(ALICE, personAdapter.getSubject());","lastModifiedDate":"2021-10-29"},{"lineNumber":226,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":227,"author":{"gitId":"bharathcs"},"content":"        personAdapter.editLiabilities(original);","lastModifiedDate":"2021-10-29"},{"lineNumber":228,"author":{"gitId":"bharathcs"},"content":"        assertEquals(ALICE, personAdapter.getSubject());","lastModifiedDate":"2021-10-29"},{"lineNumber":229,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":230,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"bharathcs":69,"DonnyS57":29,"sheehui":29,"mrmrinal":100,"Bluntsord":3}},{"path":"src/test/java/donnafin/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import donnafin.testutil.PersonBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"bharathcs":2,"sheehui":9,"-":34}},{"path":"src/test/java/donnafin/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"import donnafin.testutil.PersonBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson),","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"Bluntsord"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"        assertEquals(addAliceCommand, addAliceCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"        assertEquals(addAliceCommand, addAliceCommandCopy);","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(1, addAliceCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(null, addAliceCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(addAliceCommand, addBobCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"    private static class ModelStub implements Model {","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"bharathcs"},"content":"        /**","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"bharathcs"},"content":"         * Returns the AddressBook","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"bharathcs"},"content":"         */","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"bharathcs"},"content":"        @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"bharathcs"},"content":"        public void saveAddressBook() throws IOException {","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":135,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":161,"author":{"gitId":"bharathcs"},"content":"        @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":162,"author":{"gitId":"bharathcs"},"content":"        public Set\u003cPerson\u003e getWeakDuplicates(Person target) {","lastModifiedDate":"2021-11-01"},{"lineNumber":163,"author":{"gitId":"bharathcs"},"content":"            return null;","lastModifiedDate":"2021-11-01"},{"lineNumber":164,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":165,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":166,"author":{"gitId":"bharathcs"},"content":"        @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":167,"author":{"gitId":"bharathcs"},"content":"        public Set\u003cSet\u003cPerson\u003e\u003e getWeakDuplicatesAllClients() {","lastModifiedDate":"2021-11-01"},{"lineNumber":168,"author":{"gitId":"bharathcs"},"content":"            return null;","lastModifiedDate":"2021-11-01"},{"lineNumber":169,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"bharathcs"},"content":"    private static class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2021-10-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":189,"author":{"gitId":"bharathcs"},"content":"        @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":190,"author":{"gitId":"bharathcs"},"content":"        public Set\u003cPerson\u003e getWeakDuplicates(Person target) {","lastModifiedDate":"2021-11-01"},{"lineNumber":191,"author":{"gitId":"bharathcs"},"content":"            return null;","lastModifiedDate":"2021-11-01"},{"lineNumber":192,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":193,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":194,"author":{"gitId":"bharathcs"},"content":"        @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":195,"author":{"gitId":"bharathcs"},"content":"        public Set\u003cSet\u003cPerson\u003e\u003e getWeakDuplicatesAllClients() {","lastModifiedDate":"2021-11-01"},{"lineNumber":196,"author":{"gitId":"bharathcs"},"content":"            return null;","lastModifiedDate":"2021-11-01"},{"lineNumber":197,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"bharathcs"},"content":"    private static class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2021-10-16"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"bharathcs"},"content":"        @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":219,"author":{"gitId":"bharathcs"},"content":"        public Set\u003cPerson\u003e getWeakDuplicates(Person target) {","lastModifiedDate":"2021-11-01"},{"lineNumber":220,"author":{"gitId":"bharathcs"},"content":"            return null;","lastModifiedDate":"2021-11-01"},{"lineNumber":221,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":222,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":223,"author":{"gitId":"bharathcs"},"content":"        @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":224,"author":{"gitId":"bharathcs"},"content":"        public Set\u003cSet\u003cPerson\u003e\u003e getWeakDuplicatesAllClients() {","lastModifiedDate":"2021-11-01"},{"lineNumber":225,"author":{"gitId":"bharathcs"},"content":"            return null;","lastModifiedDate":"2021-11-01"},{"lineNumber":226,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":227,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"bharathcs":48,"sheehui":10,"Bluntsord":3,"-":173}},{"path":"src/test/java/donnafin/logic/commands/AppendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DonnyS57"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"DonnyS57"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"DonnyS57"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"DonnyS57"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"DonnyS57"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"DonnyS57"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"DonnyS57"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"DonnyS57"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"DonnyS57"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"DonnyS57"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"DonnyS57"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"DonnyS57"},"content":"import donnafin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"DonnyS57"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"DonnyS57"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Asset;","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Liability;","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Policy;","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"DonnyS57"},"content":"import donnafin.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"DonnyS57"},"content":"import donnafin.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"DonnyS57"},"content":"import donnafin.storage.StorageManager;","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"DonnyS57"},"content":"public class AppendCommandTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"DonnyS57"},"content":"    private static Asset testAsset;","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"DonnyS57"},"content":"    private static Liability testLiability;","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"DonnyS57"},"content":"    private static Policy testPolicy;","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"DonnyS57"},"content":"    private static Set\u003cAsset\u003e combinedAssets;","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"DonnyS57"},"content":"    private static Set\u003cLiability\u003e combinedLiability;","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"DonnyS57"},"content":"    private static Set\u003cPolicy\u003e combinedPolicy;","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"DonnyS57"},"content":"    @TempDir","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"DonnyS57"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"DonnyS57"},"content":"    private PersonAdapter personAdapter;","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"DonnyS57"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"DonnyS57"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"DonnyS57"},"content":"    public void setUp() throws IllegalValueException {","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"DonnyS57"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"DonnyS57"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"DonnyS57"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"DonnyS57"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"DonnyS57"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"DonnyS57"},"content":"        model.addPerson(GEORGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"DonnyS57"},"content":"        personAdapter \u003d new PersonAdapter(model, GEORGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"DonnyS57"},"content":"        testPolicy \u003d new Policy(\"Golden Mile\", \"AIA\",","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"DonnyS57"},"content":"                \"$2000\", \"$100\", \"$200\");","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"DonnyS57"},"content":"        testLiability \u003d new Liability(\"Mortgage debt\", \"Debt\", \"$20000\",","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"DonnyS57"},"content":"                \"23 year loan from DBS Bank.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"DonnyS57"},"content":"        testAsset \u003d new Asset(\"Good Class Bungalow\", \"Property\",","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"DonnyS57"},"content":"                \"$2000000\", \"Paid in full. No debt.\");","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"DonnyS57"},"content":"        combinedPolicy \u003d new HashSet\u003c\u003e(GEORGE.getPolicies());","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"DonnyS57"},"content":"        combinedPolicy.add(testPolicy);","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"DonnyS57"},"content":"        combinedLiability \u003d new HashSet\u003c\u003e(GEORGE.getLiabilities());","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"DonnyS57"},"content":"        combinedLiability.add(testLiability);","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"DonnyS57"},"content":"        combinedAssets \u003d new HashSet\u003c\u003e(GEORGE.getAssets());","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"DonnyS57"},"content":"        combinedAssets.add(testAsset);","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"DonnyS57"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"DonnyS57"},"content":"    public void appendCommandEqualsTest() {","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"DonnyS57"},"content":"        AppendCommand testCommand \u003d new AppendCommand(personAdapter, testPolicy);","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"DonnyS57"},"content":"        AppendCommand testCommand2 \u003d new AppendCommand(personAdapter, testLiability);","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"DonnyS57"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"DonnyS57"},"content":"        assertTrue(testCommand.equals(testCommand));","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"DonnyS57"},"content":"        // not instance of AppendCommand -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"DonnyS57"},"content":"        assertFalse(testCommand.equals(null));","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"DonnyS57"},"content":"        // different AppendCommand -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"DonnyS57"},"content":"        assertFalse(testCommand.equals(testCommand2));","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"DonnyS57"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"DonnyS57"},"content":"    public void appendNewPolicy_changesPolicyList() throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"DonnyS57"},"content":"        AppendCommand testCommand \u003d new AppendCommand(personAdapter, testPolicy);","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"DonnyS57"},"content":"        testCommand.execute(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"DonnyS57"},"content":"        assertEquals(new Person(GEORGE.getName(), GEORGE.getPhone(), GEORGE.getEmail(), GEORGE.getAddress(),","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"sheehui"},"content":"                GEORGE.getNotes(), combinedPolicy, GEORGE.getLiabilities(),","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"DonnyS57"},"content":"                GEORGE.getAssets()), personAdapter.getSubject());","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"DonnyS57"},"content":"        assertNotEquals(GEORGE, personAdapter.getSubject());","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"DonnyS57"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"DonnyS57"},"content":"    public void appendNewLiability_changesLiabilityList() throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"DonnyS57"},"content":"        AppendCommand testCommand \u003d new AppendCommand(personAdapter, testLiability);","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"DonnyS57"},"content":"        testCommand.execute(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"DonnyS57"},"content":"        assertEquals(new Person(GEORGE.getName(), GEORGE.getPhone(), GEORGE.getEmail(), GEORGE.getAddress(),","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"sheehui"},"content":"                GEORGE.getNotes(), GEORGE.getPolicies(), combinedLiability,","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"DonnyS57"},"content":"                GEORGE.getAssets()), personAdapter.getSubject());","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"DonnyS57"},"content":"        assertNotEquals(GEORGE, personAdapter.getSubject());","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"DonnyS57"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"DonnyS57"},"content":"    public void appendNewAsset_changesAssetList() throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"DonnyS57"},"content":"        AppendCommand testCommand \u003d new AppendCommand(personAdapter, testAsset);","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"DonnyS57"},"content":"        testCommand.execute(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"DonnyS57"},"content":"        assertEquals(new Person(GEORGE.getName(), GEORGE.getPhone(), GEORGE.getEmail(), GEORGE.getAddress(),","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"sheehui"},"content":"                GEORGE.getNotes(), GEORGE.getPolicies(), GEORGE.getLiabilities(),","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"DonnyS57"},"content":"                combinedAssets), personAdapter.getSubject());","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"DonnyS57"},"content":"        assertNotEquals(GEORGE, personAdapter.getSubject());","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"DonnyS57"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"DonnyS57":121,"sheehui":3}},{"path":"src/test/java/donnafin/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.testutil.TypicalPersons;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"        Model model \u003d new ModelManager(TypicalPersons.getTypicalAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"        Model expectedModel \u003d new ModelManager(TypicalPersons.getTypicalAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bharathcs":2,"sheehui":9,"-":21}},{"path":"src/test/java/donnafin/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"        // same user feedback -\u003e returns true (uiAction cannot be compared)","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"        assertEquals(commandResult, new CommandResult(\"feedback\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"        assertEquals(commandResult, new CommandResult(\"feedback\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"        assertEquals(commandResult, commandResult);","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(null, commandResult);","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(0.5f, commandResult);","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(commandResult, new CommandResult(\"different\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"        // note that comparing CommandResult on the basis of their exit / show help is no longer possible.","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"        // see CommandResult::hashcode and CommandResult::equals","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"        // note that comparing CommandResult on the basis of their exit / show help is no longer possible.","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"        // see CommandResult::hashcode and CommandResult::equals","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"bharathcs":11,"sheehui":1,"-":34}},{"path":"src/test/java/donnafin/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"import donnafin.testutil.DummyUiForCommands;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"import donnafin.testutil.PersonBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"    public enum UiActionType {","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"        SHOW_HOME,","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"        SHOW_HELP,","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"        SHOW_EXIT,","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"        SHOW_VIEW,","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"        SWITCH_TAB_CONTACT,","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"        SWITCH_TAB_POLICIES,","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"        SWITCH_TAB_ASSETS,","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"        SWITCH_TAB_LIABILITIES,","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"        SWITCH_TAB_NOTES","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"sheehui"},"content":"    public static final String VALID_LIABILITY_AMY \u003d \"property debt;;;debt;;;$500000;;;downgrade imminent\";","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"sheehui"},"content":"    public static final String VALID_LIABILITY_BOB \u003d \"company debt;;;debt;;;$100000;;;downgrade imminent\";","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"    public static final String VALID_POLICIES_ONE \u003d \"Diamond;;;AIA;;;$100000;;;$20;;;$1\";","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"sheehui"},"content":"    public static final String VALID_ASSET_ONE \u003d \"bitcoin;;;crypto;;;$10000000;;;mad stonks\";","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"     * Executes the given {@code command}, confirms that Ui is called in the manner expected.","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"    public static void assertCommandAction(Command command, UiActionType type) {","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"            ModelManager modelManager \u003d new ModelManager(new AddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"bharathcs"},"content":"            modelManager.addPerson(new PersonBuilder().build());","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"bharathcs"},"content":"            CommandResult result \u003d command.execute(modelManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"bharathcs"},"content":"            DummyUiForCommands dummyUi \u003d new DummyUiForCommands();","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"bharathcs"},"content":"            result.getUiAction().accept(dummyUi);","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"bharathcs"},"content":"            assertTrue(dummyUi.isValid(type));","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"bharathcs"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"bharathcs"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"bharathcs":35,"sheehui":14,"Bluntsord":1,"-":97}},{"path":"src/test/java/donnafin/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_INDEX);","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_INDEX);","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"bharathcs"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(1, deleteFirstCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(null, deleteFirstCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"bharathcs":13,"sheehui":12,"-":84}},{"path":"src/test/java/donnafin/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"    private final Model model \u003d new ModelManager(new AddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"    private final Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, Ui::beginExit);","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bharathcs":3,"sheehui":8,"-":12}},{"path":"src/test/java/donnafin/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import static donnafin.commons.core.Messages.MESSAGE_NO_PERSON_LISTED_OVERVIEW;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"import static donnafin.commons.core.Messages.MESSAGE_PERSON_LISTED_OVERVIEW;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"        assertEquals(findFirstCommand, findFirstCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"        assertEquals(findFirstCommand, findFirstCommandCopy);","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(1, findFirstCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(null, findFirstCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(findFirstCommand, findSecondCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"mrmrinal"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_PERSON_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"mrmrinal"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"mrmrinal"},"content":"    public void execute_oneKeywords_onePersonFound() {","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"mrmrinal"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSON_LISTED_OVERVIEW);","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"mrmrinal"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Carl\");","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"mrmrinal"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"mrmrinal"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"mrmrinal"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"mrmrinal"},"content":"        assertEquals(Arrays.asList(CARL), model.getFilteredPersonList());","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bharathcs":8,"sheehui":11,"mrmrinal":13,"-":62}},{"path":"src/test/java/donnafin/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"    private final Model model \u003d new ModelManager(new AddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"    private final Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, Ui::showHelp);","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bharathcs":3,"sheehui":8,"-":12}},{"path":"src/test/java/donnafin/logic/commands/HomeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.commands.CommandTestUtil.assertCommandAction;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.commands.HomeCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"public class HomeCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"    private final Model model \u003d new ModelManager(new AddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"    private final Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"    public void execute_validCommand_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_SUCCESS, Ui::showHome);","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"        assertCommandSuccess(new HomeCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"        assertCommandAction(new HomeCommand(), CommandTestUtil.UiActionType.SHOW_HOME);","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"bharathcs":27}},{"path":"src/test/java/donnafin/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bharathcs":2,"sheehui":8,"-":29}},{"path":"src/test/java/donnafin/logic/commands/RemoveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DonnyS57"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"DonnyS57"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"DonnyS57"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"DonnyS57"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"DonnyS57"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"DonnyS57"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"DonnyS57"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"DonnyS57"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"DonnyS57"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"DonnyS57"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"DonnyS57"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"DonnyS57"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"DonnyS57"},"content":"import donnafin.commons.core.types.Index;","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"DonnyS57"},"content":"import donnafin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"DonnyS57"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"DonnyS57"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"DonnyS57"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Asset;","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Liability;","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Policy;","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"DonnyS57"},"content":"import donnafin.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"DonnyS57"},"content":"import donnafin.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"DonnyS57"},"content":"import donnafin.storage.StorageManager;","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"DonnyS57"},"content":"public class RemoveCommandTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"DonnyS57"},"content":"    private static Asset testAsset;","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"DonnyS57"},"content":"    private static Liability testLiability;","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"DonnyS57"},"content":"    private static Policy testPolicy;","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"DonnyS57"},"content":"    private static Set\u003cAsset\u003e combinedAssets;","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"DonnyS57"},"content":"    private static Set\u003cLiability\u003e combinedLiability;","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"DonnyS57"},"content":"    private static Set\u003cPolicy\u003e combinedPolicy;","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"DonnyS57"},"content":"    @TempDir","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"DonnyS57"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"DonnyS57"},"content":"    private PersonAdapter personAdapter;","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"DonnyS57"},"content":"    private final Index index1 \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"DonnyS57"},"content":"    private final Index index2 \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"DonnyS57"},"content":"    private final PersonAdapter.PersonField fieldAsset \u003d PersonAdapter.PersonField.ASSETS;","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"DonnyS57"},"content":"    private final PersonAdapter.PersonField fieldLiability \u003d PersonAdapter.PersonField.LIABILITIES;","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"DonnyS57"},"content":"    private final PersonAdapter.PersonField fieldPolicy \u003d PersonAdapter.PersonField.POLICIES;","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"DonnyS57"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"DonnyS57"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"DonnyS57"},"content":"    public void setUp() throws IllegalValueException {","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"DonnyS57"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"DonnyS57"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"DonnyS57"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"DonnyS57"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"DonnyS57"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"DonnyS57"},"content":"        model.addPerson(GEORGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"DonnyS57"},"content":"        personAdapter \u003d new PersonAdapter(model, GEORGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"DonnyS57"},"content":"        testPolicy \u003d new Policy(\"Golden Mile\", \"AIA\",","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"DonnyS57"},"content":"                \"$2000\", \"$100\", \"$200\");","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"DonnyS57"},"content":"        testLiability \u003d new Liability(\"Mortgage debt\", \"Debt\", \"$20000\",","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"DonnyS57"},"content":"                \"23 year loan from DBS Bank.\");","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"DonnyS57"},"content":"        testAsset \u003d new Asset(\"Good Class Bungalow\", \"Property\", \"$2000000\",","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"DonnyS57"},"content":"                \"Paid in full. No debt.\");","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"DonnyS57"},"content":"        combinedPolicy \u003d new HashSet\u003c\u003e(GEORGE.getPolicies());","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"DonnyS57"},"content":"        combinedPolicy.add(testPolicy);","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"DonnyS57"},"content":"        combinedLiability \u003d new HashSet\u003c\u003e(GEORGE.getLiabilities());","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"DonnyS57"},"content":"        combinedLiability.add(testLiability);","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"DonnyS57"},"content":"        combinedAssets \u003d new HashSet\u003c\u003e(GEORGE.getAssets());","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"DonnyS57"},"content":"        combinedAssets.add(testAsset);","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"DonnyS57"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"DonnyS57"},"content":"    public void removeCommandEqualsTest() throws ParseException {","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"DonnyS57"},"content":"        RemoveCommand testCommand \u003d new RemoveCommand(personAdapter, fieldAsset, index1);","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"DonnyS57"},"content":"        RemoveCommand testCommand2 \u003d new RemoveCommand(personAdapter, fieldLiability, index1);","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"DonnyS57"},"content":"        // same command -\u003e true","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"DonnyS57"},"content":"        assertTrue(testCommand.equals(testCommand));","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"DonnyS57"},"content":"        // null -\u003e false","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"DonnyS57"},"content":"        assertFalse(testCommand.equals(null));","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"DonnyS57"},"content":"        // different Remove Command -\u003e false","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"DonnyS57"},"content":"        assertFalse(testCommand.equals(testCommand2));","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"DonnyS57"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"DonnyS57"},"content":"    public void removeAsset_changesAssetList() throws CommandException, ParseException {","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"DonnyS57"},"content":"        AppendCommand helperCommand \u003d new AppendCommand(personAdapter, testAsset);","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"DonnyS57"},"content":"        RemoveCommand testCommand \u003d new RemoveCommand(personAdapter, fieldAsset, index1);","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"DonnyS57"},"content":"        helperCommand.execute(model);","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"DonnyS57"},"content":"        assertNotEquals(GEORGE, personAdapter.getSubject());","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"DonnyS57"},"content":"        testCommand.execute(model);","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"DonnyS57"},"content":"        assertEquals(GEORGE, personAdapter.getSubject());","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"DonnyS57"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"DonnyS57"},"content":"    public void removeLiability_changesLiabilityList() throws CommandException, ParseException {","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"DonnyS57"},"content":"        AppendCommand helperCommand \u003d new AppendCommand(personAdapter, testLiability);","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"DonnyS57"},"content":"        RemoveCommand testCommand \u003d new RemoveCommand(personAdapter, fieldLiability, index2);","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"DonnyS57"},"content":"        helperCommand.execute(model);","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"DonnyS57"},"content":"        assertNotEquals(GEORGE, personAdapter.getSubject());","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"DonnyS57"},"content":"        testCommand.execute(model);","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"DonnyS57"},"content":"        assertEquals(GEORGE, personAdapter.getSubject());","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"DonnyS57"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"DonnyS57"},"content":"    public void removePolicy_changesPolicyList() throws CommandException, ParseException {","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"DonnyS57"},"content":"        AppendCommand helperCommand \u003d new AppendCommand(personAdapter, testPolicy);","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"DonnyS57"},"content":"        RemoveCommand testCommand \u003d new RemoveCommand(personAdapter, fieldPolicy, index1);","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"DonnyS57"},"content":"        helperCommand.execute(model);","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"DonnyS57"},"content":"        assertNotEquals(GEORGE, personAdapter.getSubject());","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"DonnyS57"},"content":"        testCommand.execute(model);","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"DonnyS57"},"content":"        assertEquals(GEORGE, personAdapter.getSubject());","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"DonnyS57"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"DonnyS57"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":131,"author":{"gitId":"DonnyS57"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"DonnyS57":131}},{"path":"src/test/java/donnafin/logic/commands/SwitchTabCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.commands.CommandTestUtil.assertCommandAction;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"import donnafin.ui.Ui.ViewFinderState;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"public class SwitchTabCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"    private PersonAdapter personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"    private Model model;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"    private Person person;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"    private void reset() {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"        person \u003d getTypicalPersons().get(0);","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"        this.personAdapter \u003d new PersonAdapter(model, person);","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"    public void execute_view_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"        assertCommandAction(","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"                new SwitchTabCommand(ViewFinderState.CONTACT, personAdapter),","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Bluntsord"},"content":"                CommandTestUtil.UiActionType.SWITCH_TAB_CONTACT);","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"        assertCommandAction(","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":"                new SwitchTabCommand(ViewFinderState.ASSETS, personAdapter),","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"                CommandTestUtil.UiActionType.SWITCH_TAB_ASSETS);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"        assertCommandAction(","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"Bluntsord"},"content":"                new SwitchTabCommand(Ui.ViewFinderState.LIABILITIES, personAdapter),","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Bluntsord"},"content":"                CommandTestUtil.UiActionType.SWITCH_TAB_LIABILITIES);","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"        assertCommandAction(","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"Bluntsord"},"content":"                new SwitchTabCommand(ViewFinderState.POLICIES, personAdapter),","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"Bluntsord"},"content":"                CommandTestUtil.UiActionType.SWITCH_TAB_POLICIES);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"        assertCommandAction(","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"Bluntsord"},"content":"                new SwitchTabCommand(ViewFinderState.NOTES, personAdapter),","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"                CommandTestUtil.UiActionType.SWITCH_TAB_NOTES);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"bharathcs":15,"Bluntsord":35}},{"path":"src/test/java/donnafin/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.commands.CommandTestUtil.assertCommandAction;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import static donnafin.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"import donnafin.testutil.PersonBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"public class ViewCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"    public void execute_view_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"        final Model model \u003d new ModelManager(new AddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"        final Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"        model.addPerson(new PersonBuilder().build());","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"        expectedModel.addPerson(new PersonBuilder().build());","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"        String expectedResult \u003d String.format(ViewCommand.MESSAGE_VIEW_PERSON_SUCCESS, person.getName());","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedResult);","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"        assertCommandSuccess(new ViewCommand(Index.fromOneBased(1)), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"        assertCommandAction(new ViewCommand(Index.fromOneBased(1)), CommandTestUtil.UiActionType.SHOW_VIEW);","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"    public void execute_view_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"        final Model model \u003d new ModelManager(new AddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"        assertCommandFailure(new ViewCommand(Index.fromOneBased(1)), model, Messages.MESSAGE_INVALID_PERSON_INDEX);","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"bharathcs":39}},{"path":"src/test/java/donnafin/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.AddCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Address;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"sheehui"},"content":"import donnafin.testutil.PersonBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"    private final AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"sheehui"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"sheehui"},"content":"                + ADDRESS_DESC_AMY,","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"Bluntsord"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"sheehui"},"content":"                + ADDRESS_DESC_AMY,","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"Bluntsord"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"sheehui"},"content":"                + ADDRESS_DESC_AMY,","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"Bluntsord"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"sheehui"},"content":"                + ADDRESS_DESC_AMY,","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"Bluntsord"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"sheehui"},"content":"                + ADDRESS_DESC_AMY,","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"Bluntsord"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"Bluntsord"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"Bluntsord"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"Bluntsord"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"Bluntsord"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"Bluntsord"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"sheehui"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"Bluntsord"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"sheehui"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"Bluntsord"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"sheehui"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"Bluntsord"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"sheehui"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"Bluntsord"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"Bluntsord"},"content":"        // Insert test for parsing failure for other fields","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"Bluntsord"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-10-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                        Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"sheehui"},"content":"                        + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"bharathcs":6,"sheehui":42,"Bluntsord":16,"-":60}},{"path":"src/test/java/donnafin/logic/parser/AddressBookParserContextTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.core.Messages.MESSAGE_USE_HELP_COMMAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.AddCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.FindCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.HomeCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.ListCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"import donnafin.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"import donnafin.testutil.PersonUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"This class should ensure that the commands for AddressBookParser pass AND","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"the commands for the rest of the parser, in this case on client view parser fails.","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"public class AddressBookParserContextTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"Bluntsord"},"content":"    private final AddressBookParser addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":"    private ParserContext parserContext \u003d new ParserContext(addressBookParser);","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Bluntsord"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Bluntsord"},"content":"    public void reset() {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Bluntsord"},"content":"        parserContext \u003d new ParserContext(addressBookParser);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Bluntsord"},"content":"    public void test_executeParserStrategyCommand_addressBookParserAdd() throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Bluntsord"},"content":"        //Test add","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Bluntsord"},"content":"        AddCommand command \u003d (AddCommand) parserContext.executeParserStrategyCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_addressBookParserClear() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"Bluntsord"},"content":"        assertTrue(parserContext.executeParserStrategyCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"sheehui"},"content":"    public void executeParserStrategyCommand_multiWord_addressBookParserClearThrowsParseException() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"sheehui"},"content":"        assertThrows(ParseException.class, MESSAGE_USE_HELP_COMMAND, ()","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"sheehui"},"content":"            -\u003e parserContext.executeParserStrategyCommand(\"clear client\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_addressBookParserDelete() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"Bluntsord"},"content":"        DeleteCommand command \u003d (DeleteCommand) parserContext.executeParserStrategyCommand(","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"Bluntsord"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_addressBookParserExit() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"Bluntsord"},"content":"        assertTrue(parserContext.executeParserStrategyCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"sheehui"},"content":"    public void executeParserStrategyCommand_multiWord_addressBookParserExitThrowsParseException() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"sheehui"},"content":"        assertThrows(ParseException.class, MESSAGE_USE_HELP_COMMAND, ()","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"sheehui"},"content":"            -\u003e parserContext.executeParserStrategyCommand(\"exit client\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_addressBookParserFind() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"Bluntsord"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"Bluntsord"},"content":"        FindCommand command \u003d (FindCommand) parserContext.executeParserStrategyCommand(","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"Bluntsord"},"content":"                FindCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_addressBookParserHelp() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"Bluntsord"},"content":"        assertTrue(parserContext.executeParserStrategyCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"sheehui"},"content":"    public void executeParserStrategyCommand_multiWord_addressBookParserHelpThrowsParseException() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"sheehui"},"content":"        assertThrows(ParseException.class, MESSAGE_USE_HELP_COMMAND, ()","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"sheehui"},"content":"            -\u003e parserContext.executeParserStrategyCommand(\"help client\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_addressBookParserList() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"Bluntsord"},"content":"        assertTrue(parserContext.executeParserStrategyCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"sheehui"},"content":"    public void executeParserStrategyCommand_multiWord_addressBookParserListThrowsParseException() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"sheehui"},"content":"        assertThrows(ParseException.class, MESSAGE_USE_HELP_COMMAND, ()","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"sheehui"},"content":"            -\u003e parserContext.executeParserStrategyCommand(\"list client info\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_addressBookParserUnrecognisedInput_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"Bluntsord"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"Bluntsord"},"content":"            -\u003e parserContext.executeParserStrategyCommand(\"\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_addressBookParserUnknownCommand_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"Bluntsord"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"Bluntsord"},"content":"            -\u003e parserContext.executeParserStrategyCommand(\"unknownCommand\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_clientParserHome() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"Bluntsord"},"content":"        assertTrue(strategyIsAddressBookParser());","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"sheehui"},"content":"        assertTrue(parserContext.executeParserStrategyCommand(HomeCommand.COMMAND_WORD) instanceof HomeCommand);","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"sheehui"},"content":"        assertThrows(ParseException.class, MESSAGE_USE_HELP_COMMAND, ()","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"Bluntsord"},"content":"            -\u003e parserContext.executeParserStrategyCommand(","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"Bluntsord"},"content":"               HomeCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_clientParserUnrecognisedInput_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"Bluntsord"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"Bluntsord"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"Bluntsord"},"content":"                -\u003e parserContext.executeParserStrategyCommand(\"\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_clientParserUnknownCommand_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"Bluntsord"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"Bluntsord"},"content":"                MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"Bluntsord"},"content":"                -\u003e parserContext.executeParserStrategyCommand(\"unknownCommand\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"Bluntsord"},"content":"    private boolean strategyIsAddressBookParser() {","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"Bluntsord"},"content":"        return parserContext.getCurrentParserStrategy().equals(addressBookParser);","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"sheehui":27,"Bluntsord":124}},{"path":"src/test/java/donnafin/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.core.Messages.MESSAGE_USE_HELP_COMMAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.AddCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.FindCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.ListCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"import donnafin.testutil.PersonBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"import donnafin.testutil.PersonUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"sheehui"},"content":"    public void parseCommand_multipleWordsClear_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"sheehui"},"content":"        assertThrows(ParseException.class, MESSAGE_USE_HELP_COMMAND, () -\u003e parser.parseCommand(\"clear task\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"sheehui"},"content":"    public void parseCommand_multipleWordsExit_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"sheehui"},"content":"        assertThrows(ParseException.class, MESSAGE_USE_HELP_COMMAND, () -\u003e parser.parseCommand(\"exit client\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"                FindCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"sheehui"},"content":"    public void parseCommand_multipleWordsHelp_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"sheehui"},"content":"        assertThrows(ParseException.class, MESSAGE_USE_HELP_COMMAND, () -\u003e parser.parseCommand(\"help me\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"sheehui"},"content":"    public void parseCommand_multipleWordsList_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"sheehui"},"content":"        assertThrows(ParseException.class, MESSAGE_USE_HELP_COMMAND, () -\u003e parser.parseCommand(\"list 2\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"bharathcs":1,"sheehui":35,"-":69}},{"path":"src/test/java/donnafin/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"sheehui":1,"-":149}},{"path":"src/test/java/donnafin/logic/parser/ClientViewParserContextTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.core.Messages.MESSAGE_COMMAND_NOT_IN_CLIENTWINDOW;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.core.Messages.MESSAGE_USE_HELP_COMMAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.ContactTabParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.FindCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.HomeCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.ListCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"import donnafin.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"import donnafin.testutil.PersonUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Bluntsord"},"content":"This class will act as the test class for parserContext when parserContext\u0027s ParserStrategy is ClientViewParser","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"Bluntsord"},"content":"It should fail the test for AddressBookParser.","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"public class ClientViewParserContextTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Bluntsord"},"content":"    private ContactTabParser contactTabParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Bluntsord"},"content":"    private ParserContext parserContext \u003d new ParserContext(contactTabParser);","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Bluntsord"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Bluntsord"},"content":"    public void reset() {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Bluntsord"},"content":"        Person person \u003d getTypicalPersons().get(0);","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"Bluntsord"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"        PersonAdapter personAdapter \u003d new PersonAdapter(model, person);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Bluntsord"},"content":"        contactTabParser \u003d new ContactTabParser(personAdapter);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Bluntsord"},"content":"        parserContext \u003d new ParserContext(contactTabParser);","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"Bluntsord"},"content":"        assertTrue(strategyIsClientParser());","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Bluntsord"},"content":"    public void parseCommand_clientParserExit() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"Bluntsord"},"content":"        assertTrue(parserContext.executeParserStrategyCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"sheehui"},"content":"    public void parseCommand_multipleWords_clientParserExitThrowsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"sheehui"},"content":"        assertThrows(ParseException.class, MESSAGE_USE_HELP_COMMAND, ()","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"Bluntsord"},"content":"            -\u003e contactTabParser.parseCommand(\"exit 2\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_clientParserHelp() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"Bluntsord"},"content":"        assertTrue(parserContext.executeParserStrategyCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"sheehui"},"content":"    public void parseCommand_multipleWords_clientParserHelpThrowsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"sheehui"},"content":"        assertThrows(ParseException.class, MESSAGE_USE_HELP_COMMAND, ()","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"Bluntsord"},"content":"            -\u003e contactTabParser.parseCommand(\"help us\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_clientParserHome() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"Bluntsord"},"content":"        assertTrue(parserContext.executeParserStrategyCommand(HomeCommand.COMMAND_WORD) instanceof HomeCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"sheehui"},"content":"    public void parseCommand_multipleWords_clientParserHomeThrowsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"sheehui"},"content":"        assertThrows(ParseException.class, MESSAGE_USE_HELP_COMMAND, ()","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"Bluntsord"},"content":"            -\u003e contactTabParser.parseCommand(\"home sweet home\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_clientParserUnrecognisedInput_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"Bluntsord"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"Bluntsord"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"Bluntsord"},"content":"                HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"Bluntsord"},"content":"                -\u003e parserContext.executeParserStrategyCommand(\"\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_clientParserUnknownCommand_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"Bluntsord"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"Bluntsord"},"content":"            MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"Bluntsord"},"content":"                -\u003e parserContext.executeParserStrategyCommand(\"unknownCommand\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"Bluntsord"},"content":"    //From here on out we should check that AddressBookParser command fails","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"Bluntsord"},"content":"    public void test_executeParserStrategyCommand_addressBookParserAdd() throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"Bluntsord"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"Bluntsord"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"sheehui"},"content":"                MESSAGE_COMMAND_NOT_IN_CLIENTWINDOW, ()","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"Bluntsord"},"content":"                -\u003e parserContext.executeParserStrategyCommand(PersonUtil.getAddCommand(person)));","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_addressBookParserClear() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"Bluntsord"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"sheehui"},"content":"            MESSAGE_COMMAND_NOT_IN_CLIENTWINDOW, ()","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"Bluntsord"},"content":"                -\u003e parserContext.executeParserStrategyCommand(ClearCommand.COMMAND_WORD));","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"Bluntsord"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"Bluntsord"},"content":"            MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"Bluntsord"},"content":"                -\u003e parserContext.executeParserStrategyCommand(ClearCommand.COMMAND_WORD + \"3\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_addressBookParserDelete() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"Bluntsord"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"sheehui"},"content":"            MESSAGE_COMMAND_NOT_IN_CLIENTWINDOW, ()","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"Bluntsord"},"content":"                -\u003e parserContext.executeParserStrategyCommand(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"Bluntsord"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"Bluntsord"},"content":"            MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"Bluntsord"},"content":"                -\u003e parserContext.executeParserStrategyCommand(DeleteCommand.COMMAND_WORD + \"3\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_addressBookParserFind() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"Bluntsord"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"Bluntsord"},"content":"        String userInput \u003d FindCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"Bluntsord"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"sheehui"},"content":"            MESSAGE_COMMAND_NOT_IN_CLIENTWINDOW, ()","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"Bluntsord"},"content":"                -\u003e parserContext.executeParserStrategyCommand(userInput));","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"Bluntsord"},"content":"    public void executeParserStrategyCommand_addressBookParserList() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"Bluntsord"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"sheehui"},"content":"            MESSAGE_COMMAND_NOT_IN_CLIENTWINDOW, ()","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"Bluntsord"},"content":"                -\u003e parserContext.executeParserStrategyCommand(ListCommand.COMMAND_WORD));","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"Bluntsord"},"content":"    private boolean strategyIsClientParser() {","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"Bluntsord"},"content":"        return parserContext.getCurrentParserStrategy().equals(contactTabParser);","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"sheehui":22,"Bluntsord":129}},{"path":"src/test/java/donnafin/logic/parser/ClientViewParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.core.Messages.MESSAGE_USE_HELP_COMMAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.ContactTabParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.HomeCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"public class ClientViewParserTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"    private PersonAdapter personAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"    private Model model;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"    private Person person;","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"    private ContactTabParser parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"    private void reset() {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"        person \u003d getTypicalPersons().get(0);","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Bluntsord"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Bluntsord"},"content":"        this.personAdapter \u003d new PersonAdapter(model, person);","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":"        parser \u003d new ContactTabParser(personAdapter);","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Bluntsord"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Bluntsord"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"sheehui"},"content":"    public void parseCommand_multipleWordsExit_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"sheehui"},"content":"        assertThrows(ParseException.class, MESSAGE_USE_HELP_COMMAND, () -\u003e parser.parseCommand(\"exit client\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"Bluntsord"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Bluntsord"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"sheehui"},"content":"    public void parseCommand_multipleWordsHelp_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"sheehui"},"content":"        assertThrows(ParseException.class, MESSAGE_USE_HELP_COMMAND, () -\u003e parser.parseCommand(\"help client\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"Bluntsord"},"content":"    public void parseCommand_home() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"Bluntsord"},"content":"        assertTrue(parser.parseCommand(HomeCommand.COMMAND_WORD) instanceof HomeCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"sheehui"},"content":"    public void parseCommand_multipleWordsHome_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"sheehui"},"content":"        assertThrows(ParseException.class, MESSAGE_USE_HELP_COMMAND, ()","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"sheehui"},"content":"            -\u003e parser.parseCommand(\"home improvement works\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"Bluntsord"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"Bluntsord"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"Bluntsord"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"Bluntsord"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"Bluntsord"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"sheehui":17,"Bluntsord":64}},{"path":"src/test/java/donnafin/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"bharathcs":2,"sheehui":3,"-":33}},{"path":"src/test/java/donnafin/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"    private final DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"bharathcs":1,"sheehui":6,"-":25}},{"path":"src/test/java/donnafin/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.FindCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"bharathcs":1,"sheehui":6,"-":27}},{"path":"src/test/java/donnafin/logic/parser/ParserContextTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"import donnafin.logic.commands.ContactTabParser;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"Used to test the other functions of ParserContext.For test regarding a specific ParserStrategy,","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"refer to ClientViewParserContextTest or AddressBookParserContextTest","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"public class ParserContextTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"    private final AddressBookParser addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"    private ContactTabParser contactTabParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"    private ParserContext parserContext \u003d new ParserContext(addressBookParser);","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"    public void reset() {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"        Person person \u003d getTypicalPersons().get(0);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"        PersonAdapter personAdapter \u003d new PersonAdapter(model, person);","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"        contactTabParser \u003d new ContactTabParser(personAdapter);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"        parserContext \u003d new ParserContext(addressBookParser);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":"    public void test_constructor() {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"        ParserStrategy currentParserStrategy \u003d parserContext.getCurrentParserStrategy();","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Bluntsord"},"content":"        assertTrue(strategyIsAddressBookParser());","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Bluntsord"},"content":"    public void test_setCurrentParserStrategy() {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Bluntsord"},"content":"        parserContext.setCurrentParserStrategy(contactTabParser);","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"Bluntsord"},"content":"        assertTrue(strategyIsClientParser());","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Bluntsord"},"content":"        assertFalse(strategyIsAddressBookParser());","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Bluntsord"},"content":"        parserContext.setCurrentParserStrategy(addressBookParser);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Bluntsord"},"content":"        assertTrue(strategyIsAddressBookParser());","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"Bluntsord"},"content":"        assertFalse(this::strategyIsClientParser);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"Bluntsord"},"content":"        //Test if set currentParserStrategyTwice to addressbook has any errors","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"Bluntsord"},"content":"        parserContext.setCurrentParserStrategy(addressBookParser);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Bluntsord"},"content":"        assertTrue(strategyIsAddressBookParser());","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"Bluntsord"},"content":"        assertFalse(this::strategyIsClientParser);","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"Bluntsord"},"content":"        //Test if setting currentParserStrategyTwice has any errors","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Bluntsord"},"content":"        parserContext.setCurrentParserStrategy(contactTabParser);","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"Bluntsord"},"content":"        parserContext.setCurrentParserStrategy(contactTabParser);","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"Bluntsord"},"content":"        assertTrue(strategyIsClientParser());","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"Bluntsord"},"content":"        assertFalse(strategyIsAddressBookParser());","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"Bluntsord"},"content":"    private boolean strategyIsClientParser() {","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"Bluntsord"},"content":"        return parserContext.getCurrentParserStrategy().equals(contactTabParser);","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"Bluntsord"},"content":"    private boolean strategyIsAddressBookParser() {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"Bluntsord"},"content":"        return parserContext.getCurrentParserStrategy().equals(addressBookParser);","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Bluntsord":73}},{"path":"src/test/java/donnafin/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Money;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Money.MoneyException;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Address;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"bharathcs"},"content":"    public void parseMoney_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"bharathcs"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMoney(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"bharathcs"},"content":"    public void parseMoney_validWithDollarSign() throws ParseException, MoneyException {","lastModifiedDate":"2021-10-30"},{"lineNumber":151,"author":{"gitId":"bharathcs"},"content":"        assertEquals(new Money(100), ParserUtil.parseMoney(\"$1\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"bharathcs"},"content":"        assertEquals(new Money(100000), ParserUtil.parseMoney(\"$1000\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"bharathcs"},"content":"    public void parseMoney_validWithDollarSignCents() throws ParseException, MoneyException {","lastModifiedDate":"2021-10-30"},{"lineNumber":157,"author":{"gitId":"bharathcs"},"content":"        assertEquals(new Money(105), ParserUtil.parseMoney(\"$1.05\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"bharathcs"},"content":"    public void parseMoney_invalidWithoutDollarSign() throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMoney(\"1\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMoney(\"1.05\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"bharathcs"},"content":"    public void parseMoney_validWithWhiteSpace() throws ParseException, MoneyException {","lastModifiedDate":"2021-10-30"},{"lineNumber":168,"author":{"gitId":"bharathcs"},"content":"        // trailing whitespace","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"bharathcs"},"content":"        assertEquals(new Money(100), ParserUtil.parseMoney(\"  $1  \"));","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"bharathcs"},"content":"        assertEquals(new Money(105), ParserUtil.parseMoney(\"  $1.05  \"));","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"bharathcs"},"content":"        // whitespace after dollar sign","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"bharathcs"},"content":"        assertEquals(new Money(100), ParserUtil.parseMoney(\"  $  1\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"bharathcs"},"content":"        assertEquals(new Money(105), ParserUtil.parseMoney(\"  $    1.05\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"bharathcs"},"content":"    public void parseMoney_invalidWithNegative() throws ParseException {","lastModifiedDate":"2021-10-30"},{"lineNumber":179,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMoney(\"-$1.00\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":180,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMoney(\"-$1\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":181,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMoney(\"- $1\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":182,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"bharathcs"},"content":"    public void parseMoney_invalidFormats() throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMoney(\"1.00$\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMoney(\"$1.0.0\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMoney(\"$.50\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMoney(\"abc $2.50\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMoney(\"$2.50 abc\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"bharathcs"},"content":"    public void parseMoney_invalidWithWrongPrecision() {","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMoney(\"$ 1.0\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMoney(\"$ 1.000\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"bharathcs"},"content":"    public void parseMoney_testBigValues() throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"bharathcs"},"content":"        assertEquals(\"$ 100000000.00\", ParserUtil.parseMoney(\"$ 100000000\").toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"bharathcs"},"content":"        assertEquals(\"$ 1000000000.00\", ParserUtil.parseMoney(\"$ 1000000000\").toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"bharathcs"},"content":"        assertEquals(\"$ 92233720368547758.00\", ParserUtil.parseMoney(\"$\" + (Long.MAX_VALUE / 100)).toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMoney(\"$\" + (Long.MAX_VALUE / 100) + 1));","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"bharathcs"},"content":"    public void parseTab_withUpperLowerOrTitleCase_success() throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.CONTACT, ParserUtil.parseTab(\"contact\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.POLICIES, ParserUtil.parseTab(\"policies\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.ASSETS, ParserUtil.parseTab(\"assets\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.LIABILITIES, ParserUtil.parseTab(\"liabilities\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.NOTES, ParserUtil.parseTab(\"notes\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.CONTACT, ParserUtil.parseTab(\"CONTACT\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.POLICIES, ParserUtil.parseTab(\"POLICIES\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.ASSETS, ParserUtil.parseTab(\"ASSETS\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.LIABILITIES, ParserUtil.parseTab(\"LIABILITIES\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":219,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.NOTES, ParserUtil.parseTab(\"NOTES\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":220,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.CONTACT, ParserUtil.parseTab(\"Contact\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":222,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.POLICIES, ParserUtil.parseTab(\"Policies\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":223,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.ASSETS, ParserUtil.parseTab(\"Assets\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.LIABILITIES, ParserUtil.parseTab(\"Liabilities\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.NOTES, ParserUtil.parseTab(\"Notes\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":226,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"bharathcs"},"content":"    public void parseTab_unexpectedPluralSingular_success() throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.CONTACT, ParserUtil.parseTab(\"Contacts\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.POLICIES, ParserUtil.parseTab(\"Policy\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":233,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.ASSETS, ParserUtil.parseTab(\"Asset\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":234,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.LIABILITIES, ParserUtil.parseTab(\"Liability\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":235,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.NOTES, ParserUtil.parseTab(\"Note\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":236,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":237,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":238,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"bharathcs"},"content":"    public void parseTab_withInitialsOnly_success() throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":241,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.CONTACT, ParserUtil.parseTab(\"c\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":242,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.POLICIES, ParserUtil.parseTab(\"p\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.ASSETS, ParserUtil.parseTab(\"a\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.LIABILITIES, ParserUtil.parseTab(\"l\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.NOTES, ParserUtil.parseTab(\"n\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.CONTACT, ParserUtil.parseTab(\"C\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.POLICIES, ParserUtil.parseTab(\"P\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":249,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.ASSETS, ParserUtil.parseTab(\"A\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.LIABILITIES, ParserUtil.parseTab(\"L\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(Ui.ViewFinderState.NOTES, ParserUtil.parseTab(\"N\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":254,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":255,"author":{"gitId":"bharathcs"},"content":"    public void parseTab_badSpellingOrInvalidTab_throwsParseErr() {","lastModifiedDate":"2021-10-20"},{"lineNumber":256,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTab(\"x\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":257,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTab(\"j\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":258,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTab(\"k\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":259,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTab(\"\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":260,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTab(\"abcdef\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":261,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTab(\"coontact\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":262,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTab(\"orsets\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":263,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":264,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":265,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":266,"author":{"gitId":"bharathcs"},"content":"    public void parseTab_multipleTabs_throwError() {","lastModifiedDate":"2021-10-20"},{"lineNumber":267,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTab(\"contact policy\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":268,"author":{"gitId":"bharathcs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTab(\"c p\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":269,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"bharathcs":98,"sheehui":9,"Bluntsord":31,"-":132}},{"path":"src/test/java/donnafin/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"import donnafin.testutil.PersonBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"sheehui"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"sheehui"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"sheehui":10,"-":89}},{"path":"src/test/java/donnafin/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"import donnafin.testutil.AddressBookBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"    private ModelManager modelManager \u003d new ModelManager(new AddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, null);","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, null);","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"bharathcs"},"content":"        assertEquals(modelManager, modelManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(null, modelManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(5, modelManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(modelManager, new ModelManager(differentAddressBook, userPrefs, null));","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, userPrefs, null));","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":131,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, differentUserPrefs, null));","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"bharathcs":11,"sheehui":8,"-":114}},{"path":"src/test/java/donnafin/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"sheehui":2,"-":19}},{"path":"src/test/java/donnafin/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"sheehui":2,"-":34}},{"path":"src/test/java/donnafin/model/person/AssetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import java.util.List;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.types.Money;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Money.MoneyException;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"public class AssetTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"    private static final String VALID_NAME \u003d \"Good Class Bungalow\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"    private static final String VALID_TYPE \u003d \"Property\";","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"    private static final String VALID_VALUE \u003d \"$2000\";","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"    private static final String VALID_REMARKS \u003d \"Paid in full. No debt.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"    private static final Asset VALID_ASSET \u003d new Asset(VALID_NAME, VALID_TYPE, VALID_VALUE,","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"            VALID_REMARKS);","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"    public void constructor_allNull_throwsNullPointerException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Asset(null, null, null,","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"                null));","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"    public void constructor_parametersNull_throwsNullPointerException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Asset(null, VALID_TYPE, VALID_VALUE,","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Asset(VALID_NAME, null, VALID_VALUE,","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Asset(VALID_NAME, VALID_TYPE, null,","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Asset(VALID_NAME, VALID_TYPE, VALID_VALUE,","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"sheehui"},"content":"                null));","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"sheehui"},"content":"    public void constructor_invalidRemarks_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"sheehui"},"content":"        String invalidRemarks \u003d \"one million dollars \\n\";","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"sheehui"},"content":"        String emptyRemarks \u003d \" \";","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Asset(VALID_NAME, VALID_TYPE, VALID_VALUE,","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"sheehui"},"content":"                invalidRemarks));","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Asset(VALID_NAME, VALID_TYPE, VALID_VALUE,","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"sheehui"},"content":"                emptyRemarks));","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"sheehui"},"content":"    public void constructor_invalidValue_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"sheehui"},"content":"        String invalidValue \u003d \"one million dollars\";","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"sheehui"},"content":"        String emptyValue \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"sheehui"},"content":"        String missingDollar \u003d \"2000\";","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Asset(VALID_NAME, VALID_TYPE, invalidValue,","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Asset(VALID_NAME, VALID_TYPE, emptyValue,","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Asset(VALID_NAME, VALID_TYPE, missingDollar,","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"sheehui"},"content":"    public void constructor_invalidType_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"sheehui"},"content":"        String invalidType \u003d \"debt \\n collateral\";","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"sheehui"},"content":"        String emptyType \u003d \" \";","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Asset(VALID_NAME, invalidType, VALID_VALUE,","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Asset(VALID_NAME, emptyType, VALID_VALUE,","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"sheehui"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"sheehui"},"content":"        String invalidName \u003d \"john \\n doe\";","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"sheehui"},"content":"        String emptyName \u003d \" \";","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Asset(invalidName, VALID_TYPE, VALID_VALUE,","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Asset(emptyName, VALID_TYPE, VALID_VALUE,","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"bharathcs"},"content":"    public void variable_commissionToString_valid() throws MoneyException {","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"sheehui"},"content":"        Money value \u003d new Money(200000);","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"sheehui"},"content":"        assertEquals(value.toString(), VALID_ASSET.getValueToString());","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"        final Asset sameAsset \u003d new Asset(VALID_NAME, VALID_TYPE, VALID_VALUE, VALID_REMARKS);","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"        final Asset otherAsset \u003d new Asset(VALID_NAME + \" something\", VALID_TYPE, VALID_VALUE, VALID_REMARKS);","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"        assertEquals(VALID_ASSET, VALID_ASSET);","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"        assertEquals(sameAsset, VALID_ASSET);","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(sameAsset, \"a string\");","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(otherAsset, sameAsset);","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(null, sameAsset);","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"    public void aggregateFunctionWorks() {","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"        // EP: 1 Asset","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"        assertEquals(","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"                \"Total Asset Value: $2000.00\",","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"bharathcs"},"content":"                Asset.TABLE_CONFIG.aggregatorLabelCreator.applyOn(List.of(VALID_ASSET))","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"bharathcs"},"content":"        // EP: 0 Asset","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"bharathcs"},"content":"        assertEquals(\"\", Asset.TABLE_CONFIG.aggregatorLabelCreator.applyOn(List.of()));","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"bharathcs"},"content":"        // EP: Value exceeds Long.MAX_VALUE","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"bharathcs"},"content":"        String maxMoneyVal \u003d \"$\" + Long.MAX_VALUE / 100;","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"bharathcs"},"content":"        assertEquals(","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"bharathcs"},"content":"                \"Total Asset Value: $276701161105643274.00\",","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"bharathcs"},"content":"                Asset.TABLE_CONFIG.aggregatorLabelCreator.applyOn(List.of(","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"bharathcs"},"content":"                        new Asset(\"Test\", \"Test\", maxMoneyVal, \"test\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"bharathcs"},"content":"                        new Asset(\"Test\", \"Test\", maxMoneyVal, \"test\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"bharathcs"},"content":"                        new Asset(\"Test\", \"Test\", maxMoneyVal, \"test\")","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"bharathcs"},"content":"                ))","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"sheehui"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"bharathcs":38,"sheehui":86}},{"path":"src/test/java/donnafin/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"        String empty \u003d \"\";","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"        String noTld \u003d \"test@test\";","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(empty));","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(noTld));","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"        // emails that are not accessible by typical mail clients over the internet","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"        assertFalse(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"        assertFalse(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"        assertFalse(Email.isValidEmail(\"test@\")); // alphabets only","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"        assertFalse(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.new-college-nus.edu\")); // hyphens within domain name","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"bharathcs":11,"sheehui":2,"-":61}},{"path":"src/test/java/donnafin/model/person/LiabilityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import java.util.List;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.types.Money;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Money.MoneyException;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"public class LiabilityTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"    private static final String VALID_NAME \u003d \"Mortgage debt\";","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"    private static final String VALID_TYPE \u003d \"Debt\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"    private static final String VALID_VALUE \u003d \"$2000\";","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"    private static final String VALID_REMARKS \u003d \"23 year loan from DBS Bank.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"    private static final Liability VALID_LIABILITY \u003d new Liability(VALID_NAME, VALID_TYPE, VALID_VALUE,","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"            VALID_REMARKS);","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"    public void constructor_allNull_throwsNullPointerException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Liability(null, null, null,","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"                null));","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"    public void constructor_parametersNull_throwsNullPointerException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Liability(null, VALID_TYPE, VALID_VALUE,","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Liability(VALID_NAME, null, VALID_VALUE,","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Liability(VALID_NAME, VALID_TYPE, null,","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Liability(VALID_NAME, VALID_TYPE, VALID_VALUE,","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"sheehui"},"content":"                null));","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"sheehui"},"content":"    public void constructor_invalidRemarks_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"sheehui"},"content":"        String invalidRemarks \u003d \"one million dollars \\n\";","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"sheehui"},"content":"        String emptyRemarks \u003d \" \";","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Liability(VALID_NAME, VALID_TYPE, VALID_VALUE,","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"sheehui"},"content":"                invalidRemarks));","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Liability(VALID_NAME, VALID_TYPE, VALID_VALUE,","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"sheehui"},"content":"                emptyRemarks));","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"sheehui"},"content":"    public void constructor_invalidValue_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"sheehui"},"content":"        String invalidValue \u003d \"one million dollars\";","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"sheehui"},"content":"        String emptyValue \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"sheehui"},"content":"        String missingDollar \u003d \"2000\";","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Liability(VALID_NAME, VALID_TYPE, invalidValue,","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Liability(VALID_NAME, VALID_TYPE, emptyValue,","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Liability(VALID_NAME, VALID_TYPE, missingDollar,","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"sheehui"},"content":"    public void constructor_invalidType_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"sheehui"},"content":"        String invalidType \u003d \"debt \\n collateral\";","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"sheehui"},"content":"        String emptyType \u003d \" \";","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Liability(VALID_NAME, invalidType, VALID_VALUE,","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Liability(VALID_NAME, emptyType, VALID_VALUE,","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"sheehui"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"sheehui"},"content":"        String invalidName \u003d \"john \\n doe\";","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"sheehui"},"content":"        String emptyName \u003d \" \";","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Liability(invalidName, VALID_TYPE, VALID_VALUE,","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Liability(emptyName, VALID_TYPE, VALID_VALUE,","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"sheehui"},"content":"                VALID_REMARKS));","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"    public void variable_commissionToString_valid() throws MoneyException {","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"sheehui"},"content":"        Money value \u003d new Money(200000);","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"sheehui"},"content":"        assertEquals(value.toString(), VALID_LIABILITY.getValueToString());","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"bharathcs"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"        final Liability sameLiability \u003d new Liability(VALID_NAME, VALID_TYPE, VALID_VALUE, VALID_REMARKS);","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"        final Liability otherLiability \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"                new Liability(VALID_NAME + \" something\", VALID_TYPE, VALID_VALUE, VALID_REMARKS);","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"        assertEquals(VALID_LIABILITY, VALID_LIABILITY);","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"        assertEquals(sameLiability, VALID_LIABILITY);","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(sameLiability, \"a string\");","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(otherLiability, sameLiability);","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(null, sameLiability);","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"    public void aggregateFunctionWorks() {","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"        // EP: 1 Liability","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"        assertEquals(","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"                \"Total Liability Value: $2000.00\",","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"bharathcs"},"content":"                Liability.TABLE_CONFIG.aggregatorLabelCreator.applyOn(List.of(VALID_LIABILITY))","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"bharathcs"},"content":"        // EP: 0 Liability","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"bharathcs"},"content":"        assertEquals(\"\", Liability.TABLE_CONFIG.aggregatorLabelCreator.applyOn(List.of()));","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"bharathcs"},"content":"        // EP: Value exceeds Long.MAX_VALUE","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"bharathcs"},"content":"        String maxMoneyVal \u003d \"$\" + Long.MAX_VALUE / 100;","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"bharathcs"},"content":"        assertEquals(","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"bharathcs"},"content":"                \"Total Liability Value: $276701161105643274.00\",","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"bharathcs"},"content":"                Liability.TABLE_CONFIG.aggregatorLabelCreator.applyOn(List.of(","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"bharathcs"},"content":"                        new Liability(\"Test\", \"Test\", maxMoneyVal, \"test\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"bharathcs"},"content":"                        new Liability(\"Test\", \"Test\", maxMoneyVal, \"test\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"bharathcs"},"content":"                        new Liability(\"Test\", \"Test\", maxMoneyVal, \"test\")","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"bharathcs"},"content":"                ))","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"sheehui"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"bharathcs":40,"sheehui":84}},{"path":"src/test/java/donnafin/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import donnafin.testutil.PersonBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(1, firstPredicate);","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bharathcs":7,"sheehui":2,"-":68}},{"path":"src/test/java/donnafin/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"sheehui":2,"-":38}},{"path":"src/test/java/donnafin/model/person/NotesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"public class NotesTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"    public void constructor_validInputs_matchesExpectedString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"        assertEquals(\"loves kopi\", new Notes(\"loves kopi\").toString());","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"        assertEquals(\"loves kopi\\n\\n\\nloves chai\", new Notes(\"loves kopi\\n\\n\\nloves chai\").toString());","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"        assertEquals(\"loves kopi\", new Notes(\"   loves kopi   \").toString());","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"        assertEquals(\"loves kopi\\n\\n\\nloves chai\", new Notes(\"\\nloves kopi\\n\\n\\nloves chai\\n\\n\").toString());","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"        assertEquals(\"loves kopi\\n\\n\\nloves chai\", new Notes(\" \\n  loves kopi\\n\\n\\nloves chai\\n\\n   \").toString());","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Notes(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"    public void isValidAddress() {","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"        // null notes","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e Notes.isValidNotes(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"sheehui"},"content":"        // invalid notes","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"sheehui"},"content":"        assertFalse(Notes.isValidNotes(\"    client has bad temper\")); // whitespace at the beginning","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"sheehui"},"content":"        assertFalse(Notes.isValidNotes(\"   very wealthy   \")); // whitespace at the end and beginning","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"sheehui"},"content":"        assertFalse(Notes.isValidNotes(\"loves ice cream     \")); // whitespace at the end","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"sheehui"},"content":"        assertFalse(Notes.isValidNotes(\"    \"));","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"sheehui"},"content":"        // valid notes","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"sheehui"},"content":"        assertTrue(Notes.isValidNotes(\"Joshua is a family-oriented client. Has a great preference for crypto\"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"sheehui"},"content":"                + \" in his portfolio.\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"sheehui"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"sheehui":42}},{"path":"src/test/java/donnafin/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"import donnafin.testutil.PersonBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":32,"author":{"gitId":"sheehui"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"        assertEquals(ALICE, aliceCopy);","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"        assertEquals(ALICE, ALICE);","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(null, ALICE);","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(5, ALICE);","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(ALICE, BOB);","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"Bluntsord"},"content":"    public void checkGetAllObservableListFunction() {","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"Bluntsord"},"content":"        ObservableList\u003cAttribute\u003e attributeObservableList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"Bluntsord"},"content":"        attributeObservableList.add(ALICE.getName());","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"Bluntsord"},"content":"        attributeObservableList.add(ALICE.getPhone());","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"Bluntsord"},"content":"        attributeObservableList.add(ALICE.getEmail());","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"Bluntsord"},"content":"        attributeObservableList.add(ALICE.getAddress());","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"        assertEquals(attributeObservableList, ALICE.getContactAttributesList());","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"bharathcs":11,"sheehui":9,"Bluntsord":13,"-":62}},{"path":"src/test/java/donnafin/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"sheehui":2,"-":38}},{"path":"src/test/java/donnafin/model/person/PolicyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import java.util.List;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.types.Money;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Money.MoneyException;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"public class PolicyTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"    private static final String VALID_NAME \u003d \"Golden Mile\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"    private static final String VALID_INSURER \u003d \"AIA\";","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"    private static final String VALID_TOTAL_VALUE_INSURED \u003d \"$2000\";","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"    private static final String VALID_YEARLY_PREMIUMS \u003d \"$100\";","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"    private static final String VALID_COMMISSION \u003d \"$200\";","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"    private static final Policy VALID_POLICY \u003d new Policy(VALID_NAME, VALID_INSURER, VALID_TOTAL_VALUE_INSURED,","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"            VALID_YEARLY_PREMIUMS, VALID_COMMISSION);","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"    public void constructor_allNull_throwsNullPointerException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Policy(null, null, null,","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"                null, null));","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"sheehui"},"content":"    public void constructor_parametersNull_throwsNullPointerException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Policy(null, VALID_INSURER, VALID_TOTAL_VALUE_INSURED,","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"sheehui"},"content":"                VALID_YEARLY_PREMIUMS, VALID_COMMISSION));","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Policy(VALID_NAME, null, VALID_TOTAL_VALUE_INSURED,","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"sheehui"},"content":"                VALID_YEARLY_PREMIUMS, VALID_COMMISSION));","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Policy(VALID_NAME, VALID_INSURER, null,","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"sheehui"},"content":"                VALID_YEARLY_PREMIUMS, VALID_COMMISSION));","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Policy(VALID_NAME, VALID_INSURER, VALID_TOTAL_VALUE_INSURED,","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"sheehui"},"content":"                null, VALID_COMMISSION));","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"sheehui"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Policy(VALID_NAME, VALID_INSURER, VALID_TOTAL_VALUE_INSURED,","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"sheehui"},"content":"                VALID_YEARLY_PREMIUMS, null));","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"sheehui"},"content":"    public void constructor_invalidCommission_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"sheehui"},"content":"        String invalidCommission \u003d \"one million dollars\";","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"sheehui"},"content":"        String emptyCommission \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"sheehui"},"content":"        String missingDollar \u003d \"200\";","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(VALID_NAME, VALID_INSURER,","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"sheehui"},"content":"                VALID_TOTAL_VALUE_INSURED, VALID_YEARLY_PREMIUMS, invalidCommission));","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(VALID_NAME, VALID_INSURER,","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"sheehui"},"content":"                VALID_TOTAL_VALUE_INSURED, VALID_YEARLY_PREMIUMS, emptyCommission));","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(VALID_NAME, VALID_INSURER,","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"sheehui"},"content":"                VALID_TOTAL_VALUE_INSURED, VALID_YEARLY_PREMIUMS, missingDollar));","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"sheehui"},"content":"    public void constructor_invalidTotalValueInsured_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"sheehui"},"content":"        String invalidTotalValueInsured \u003d \"one million dollars\";","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"sheehui"},"content":"        String emptyTotalValueInsured \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"sheehui"},"content":"        String missingDollar \u003d \"2000\";","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(VALID_NAME, VALID_INSURER,","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"sheehui"},"content":"                invalidTotalValueInsured, VALID_YEARLY_PREMIUMS, VALID_COMMISSION));","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(VALID_NAME, VALID_INSURER,","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"sheehui"},"content":"                emptyTotalValueInsured, VALID_YEARLY_PREMIUMS, VALID_COMMISSION));","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(VALID_NAME, \"AIA\", missingDollar,","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"sheehui"},"content":"                VALID_YEARLY_PREMIUMS, VALID_COMMISSION));","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"sheehui"},"content":"    public void constructor_invalidYearlyPremiums_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"sheehui"},"content":"        String invalidYearlyPremiums \u003d \"one million dollars\";","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"sheehui"},"content":"        String emptyYearlyPremiums \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"sheehui"},"content":"        String missingDollar \u003d \"100\";","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(VALID_NAME, VALID_INSURER,","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"sheehui"},"content":"                VALID_TOTAL_VALUE_INSURED, invalidYearlyPremiums, VALID_COMMISSION));","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(VALID_NAME, VALID_INSURER,","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"sheehui"},"content":"                VALID_TOTAL_VALUE_INSURED, emptyYearlyPremiums, VALID_COMMISSION));","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(VALID_NAME, VALID_INSURER,","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"sheehui"},"content":"                VALID_TOTAL_VALUE_INSURED, missingDollar, VALID_COMMISSION));","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"sheehui"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"sheehui"},"content":"        String invalidName \u003d \"MediPro \\n Lux\";","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"sheehui"},"content":"        String emptyName \u003d \" \";","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(invalidName, VALID_INSURER,","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"sheehui"},"content":"                VALID_TOTAL_VALUE_INSURED, VALID_YEARLY_PREMIUMS, VALID_COMMISSION));","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(emptyName, VALID_INSURER,","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"sheehui"},"content":"                VALID_TOTAL_VALUE_INSURED, VALID_YEARLY_PREMIUMS, VALID_COMMISSION));","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"sheehui"},"content":"    public void constructor_invalidInsurer_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"sheehui"},"content":"        String invalidInsurer \u003d \"AIA \\n\";","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"sheehui"},"content":"        String emptyInsurer \u003d \" \";","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(VALID_NAME, invalidInsurer,","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"sheehui"},"content":"                VALID_TOTAL_VALUE_INSURED, VALID_YEARLY_PREMIUMS, VALID_COMMISSION));","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"sheehui"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Policy(VALID_NAME, emptyInsurer,","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"sheehui"},"content":"                VALID_TOTAL_VALUE_INSURED, VALID_YEARLY_PREMIUMS, VALID_COMMISSION));","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"    public void variable_commissionToString_valid() throws MoneyException {","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"sheehui"},"content":"        Money commission \u003d new Money(20000);","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"sheehui"},"content":"        assertEquals(commission.toString(), VALID_POLICY.getCommissionToString());","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"bharathcs"},"content":"    public void variable_yearlyPremiumsToString_valid() throws MoneyException {","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"sheehui"},"content":"        Money yearlyPremiums \u003d new Money(10000);","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"sheehui"},"content":"        assertEquals(yearlyPremiums.toString(), VALID_POLICY.getYearlyPremiumsToString());","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"sheehui"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"bharathcs"},"content":"    public void variable_totalValueInsuredToString_valid() throws MoneyException {","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"sheehui"},"content":"        Money totalValueInsured \u003d new Money(200000);","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"sheehui"},"content":"        assertEquals(totalValueInsured.toString(), VALID_POLICY.getTotalValueInsuredToString());","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"bharathcs"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"bharathcs"},"content":"        final Policy samePolicy \u003d new Policy(","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"bharathcs"},"content":"                VALID_NAME, VALID_INSURER, VALID_TOTAL_VALUE_INSURED,","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"bharathcs"},"content":"                VALID_YEARLY_PREMIUMS, VALID_COMMISSION","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"bharathcs"},"content":"        final Policy otherPolicy \u003d new Policy(","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"bharathcs"},"content":"                VALID_NAME + \"something\", VALID_INSURER, VALID_TOTAL_VALUE_INSURED,","lastModifiedDate":"2021-10-30"},{"lineNumber":131,"author":{"gitId":"bharathcs"},"content":"                VALID_YEARLY_PREMIUMS, VALID_COMMISSION","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"bharathcs"},"content":"        assertEquals(VALID_POLICY, VALID_POLICY);","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"bharathcs"},"content":"        assertEquals(samePolicy, VALID_POLICY);","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(samePolicy, \"a string\");","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(otherPolicy, samePolicy);","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"bharathcs"},"content":"        assertNotEquals(null, samePolicy);","lastModifiedDate":"2021-10-30"},{"lineNumber":138,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":139,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":140,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":141,"author":{"gitId":"bharathcs"},"content":"    public void aggregateFunctionWorks() {","lastModifiedDate":"2021-10-30"},{"lineNumber":142,"author":{"gitId":"bharathcs"},"content":"        // EP: 1 policy","lastModifiedDate":"2021-10-30"},{"lineNumber":143,"author":{"gitId":"bharathcs"},"content":"        assertEquals(","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"bharathcs"},"content":"                \"Total Policy Commissions: $200.00\",","lastModifiedDate":"2021-10-30"},{"lineNumber":145,"author":{"gitId":"bharathcs"},"content":"                Policy.TABLE_CONFIG.aggregatorLabelCreator.applyOn(List.of(VALID_POLICY))","lastModifiedDate":"2021-10-30"},{"lineNumber":146,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-10-30"},{"lineNumber":147,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":148,"author":{"gitId":"bharathcs"},"content":"        // EP: 0 policy","lastModifiedDate":"2021-10-30"},{"lineNumber":149,"author":{"gitId":"bharathcs"},"content":"        assertEquals(\"\", Policy.TABLE_CONFIG.aggregatorLabelCreator.applyOn(List.of()));","lastModifiedDate":"2021-10-30"},{"lineNumber":150,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":151,"author":{"gitId":"bharathcs"},"content":"        // EP: Commissions exceeds Long.MAX_VALUE","lastModifiedDate":"2021-10-30"},{"lineNumber":152,"author":{"gitId":"bharathcs"},"content":"        String maxMoneyVal \u003d \"$\" + Long.MAX_VALUE / 100;","lastModifiedDate":"2021-10-30"},{"lineNumber":153,"author":{"gitId":"bharathcs"},"content":"        assertEquals(","lastModifiedDate":"2021-10-30"},{"lineNumber":154,"author":{"gitId":"bharathcs"},"content":"                \"Total Policy Commissions: $276701161105643274.00\",","lastModifiedDate":"2021-10-30"},{"lineNumber":155,"author":{"gitId":"bharathcs"},"content":"                Policy.TABLE_CONFIG.aggregatorLabelCreator.applyOn(List.of(","lastModifiedDate":"2021-10-30"},{"lineNumber":156,"author":{"gitId":"bharathcs"},"content":"                        new Policy(\"Test\", \"Test\", maxMoneyVal, maxMoneyVal, maxMoneyVal),","lastModifiedDate":"2021-10-30"},{"lineNumber":157,"author":{"gitId":"bharathcs"},"content":"                        new Policy(\"Test\", \"Test\", maxMoneyVal, maxMoneyVal, maxMoneyVal),","lastModifiedDate":"2021-10-30"},{"lineNumber":158,"author":{"gitId":"bharathcs"},"content":"                        new Policy(\"Test\", \"Test\", maxMoneyVal, maxMoneyVal, maxMoneyVal)","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"bharathcs"},"content":"                ))","lastModifiedDate":"2021-10-30"},{"lineNumber":160,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-10-30"},{"lineNumber":161,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":162,"author":{"gitId":"sheehui"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"bharathcs":47,"sheehui":115}},{"path":"src/test/java/donnafin/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import donnafin.testutil.PersonBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"sheehui"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"sheehui"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"sheehui":10,"-":157}},{"path":"src/test/java/donnafin/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.model.util;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"    public void ensureSampleDataUtilCanInstantiate() {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"        ReadOnlyAddressBook addressBook \u003d SampleDataUtil.getSampleAddressBook();","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"        Objects.requireNonNull(addressBook);","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"bharathcs":16}},{"path":"src/test/java/donnafin/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Address;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Asset;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Liability;","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Policy;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"    private static final List\u003cJsonAdaptedPolicy\u003e INVALID_POLICIES \u003d List.of(","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"            new JsonAdaptedPolicy(\"Everlong\", \"Foo\", \"Fighters\", \"$3\", \"$20\")","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"    );","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"    private static final List\u003cJsonAdaptedAsset\u003e INVALID_ASSETS \u003d List.of(","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"            new JsonAdaptedAsset(\"Bender\", \"Robot\", \"30\", \"Bends pipes\")","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"    );","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"    private static final List\u003cJsonAdaptedLiability\u003e INVALID_LIABILITIES \u003d List.of(","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"            new JsonAdaptedLiability(\"Philip Fry\", \"Human\", \"incalculable\", \"Pizza boy\")","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"    );","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"DonnyS57"},"content":"    private static final String VALID_NOTES \u003d BENSON.getNotes().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"sheehui"},"content":"    //Financial Information","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"Bluntsord"},"content":"    private static final List\u003cJsonAdaptedPolicy\u003e VALID_POLICY \u003d BENSON.getPolicies().stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Bluntsord"},"content":"            .map(JsonAdaptedPolicy::new)","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Bluntsord"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"sheehui"},"content":"    private static final List\u003cJsonAdaptedLiability\u003e VALID_LIABILITIES \u003d BENSON.getLiabilities().stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"sheehui"},"content":"            .map(JsonAdaptedLiability::new)","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"sheehui"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"sheehui"},"content":"    private static final List\u003cJsonAdaptedAsset\u003e VALID_ASSETS \u003d BENSON.getAssets().stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"Bluntsord"},"content":"            .map(JsonAdaptedAsset::new)","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"Bluntsord"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"sheehui"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_NOTES,","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"sheehui"},"content":"                        VALID_POLICY, VALID_LIABILITIES, VALID_ASSETS);","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"sheehui"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"sheehui"},"content":"                VALID_NOTES, VALID_POLICY, VALID_LIABILITIES, VALID_ASSETS);","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"sheehui"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_NOTES,","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"sheehui"},"content":"                        VALID_POLICY, VALID_LIABILITIES, VALID_ASSETS);","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"sheehui"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"sheehui"},"content":"                VALID_NOTES, VALID_POLICY, VALID_LIABILITIES, VALID_ASSETS);","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"    public void toModelType_invalidPolicy_throwsIllegalValueException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"                VALID_NOTES, INVALID_POLICIES, VALID_LIABILITIES, VALID_ASSETS);","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"        String expectedMessage \u003d Policy.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"    public void toModelType_invalidAsset_throwsIllegalValueException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"                VALID_NOTES, VALID_POLICY, VALID_LIABILITIES, INVALID_ASSETS);","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"bharathcs"},"content":"        String expectedMessage \u003d Asset.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"bharathcs"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"bharathcs"},"content":"    public void toModelType_invalidLiability_throwsIllegalValueException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"bharathcs"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"bharathcs"},"content":"                VALID_NOTES, VALID_POLICY, INVALID_LIABILITIES, VALID_ASSETS);","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"bharathcs"},"content":"        String expectedMessage \u003d Liability.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"bharathcs"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"sheehui"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_NOTES,","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"sheehui"},"content":"                        VALID_POLICY, VALID_LIABILITIES, VALID_ASSETS);","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"sheehui"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"sheehui"},"content":"                VALID_NOTES, VALID_POLICY, VALID_LIABILITIES, VALID_ASSETS);","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"sheehui"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2021-10-30"},{"lineNumber":141,"author":{"gitId":"sheehui"},"content":"                        VALID_NOTES, VALID_POLICY, VALID_LIABILITIES, VALID_ASSETS);","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"sheehui"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-10-30"},{"lineNumber":149,"author":{"gitId":"sheehui"},"content":"                VALID_NOTES, VALID_POLICY, VALID_LIABILITIES, VALID_ASSETS);","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bharathcs":38,"DonnyS57":1,"sheehui":30,"Bluntsord":6,"-":79}},{"path":"src/test/java/donnafin/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.IDA;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sheehui":9,"-":101}},{"path":"src/test/java/donnafin/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.util.JsonUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import donnafin.testutil.TypicalPersons;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sheehui":6,"Bluntsord":1,"-":41}},{"path":"src/test/java/donnafin/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"sheehui":5,"-":118}},{"path":"src/test/java/donnafin/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheehui":6,"-":62}},{"path":"src/test/java/donnafin/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":" * A utility class to help with building {@code AddressBook} objects.","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bharathcs":2,"sheehui":3,"-":29}},{"path":"src/test/java/donnafin/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"sheehui":1,"-":33}},{"path":"src/test/java/donnafin/testutil/DummyUiForCommands.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import donnafin.ui.Ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"public class DummyUiForCommands implements Ui {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"    private int countHelp \u003d 0;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"    private int countHome \u003d 0;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"    private int countExit \u003d 0;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"    private int countView \u003d 0;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"    private final List\u003cViewFinderState\u003e tabSwitches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    public void start(Stage primaryStage) {}","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"    public void showHelp() {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"        countHelp++;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    public void beginExit() {","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"        countExit++;","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"    public void showClientView(PersonAdapter subject) {","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"        countView++;","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":"    public void switchClientViewTab(ViewFinderState tab) {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"        tabSwitches.add(tab);","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"    public void showHome() {","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"        countHome++;","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"    private boolean isValid(","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"            int countHome, int countExit, int countHelp,","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"Bluntsord"},"content":"            int countView, List\u003cViewFinderState\u003e tabSwitches) {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"        return countHome \u003d\u003d this.countHome \u0026\u0026 countExit \u003d\u003d this.countExit \u0026\u0026 countHelp \u003d\u003d this.countHelp","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"                \u0026\u0026 countView \u003d\u003d this.countView \u0026\u0026 tabSwitches.equals(this.tabSwitches);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"     * Check if a {@code Ui} instance would appear to have undergone a given action.","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"     * @param expectedType Ui action that should be demanded","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"     * @return whether the expected function was returned.","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"    public boolean isValid(CommandTestUtil.UiActionType expectedType) {","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"        switch (expectedType) {","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"        case SHOW_HOME:","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"            return isValid(1, 0, 0, 0, List.of());","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"        case SHOW_EXIT:","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"            return isValid(0, 1, 0, 0, List.of());","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"        case SHOW_HELP:","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"            return isValid(0, 0, 1, 0, List.of());","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"        case SHOW_VIEW:","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"            return isValid(0, 0, 0, 1, List.of());","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"        case SWITCH_TAB_CONTACT:","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"Bluntsord"},"content":"            return isValid(0, 0, 0, 0, List.of(ViewFinderState.CONTACT));","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"        case SWITCH_TAB_POLICIES:","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"Bluntsord"},"content":"            return isValid(0, 0, 0, 0, List.of(ViewFinderState.POLICIES));","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"        case SWITCH_TAB_ASSETS:","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"Bluntsord"},"content":"            return isValid(0, 0, 0, 0, List.of(ViewFinderState.ASSETS));","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"        case SWITCH_TAB_LIABILITIES:","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"Bluntsord"},"content":"            return isValid(0, 0, 0, 0, List.of(ViewFinderState.LIABILITIES));","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"        case SWITCH_TAB_NOTES:","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"Bluntsord"},"content":"            return isValid(0, 0, 0, 0, List.of(ViewFinderState.NOTES));","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"        default:","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"            assert false : \"No such Ui Action Type\";","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"            return false;","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"Bluntsord"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"Bluntsord"},"content":"    public ViewFinderState getUiState() {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"Bluntsord"},"content":"        return ViewFinderState.CONTACT;","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"    public void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {}","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"bharathcs":80,"Bluntsord":13}},{"path":"src/test/java/donnafin/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Address;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Asset;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Liability;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"DonnyS57"},"content":"import donnafin.model.person.Notes;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"import donnafin.model.person.Policy;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"import donnafin.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"DonnyS57"},"content":"    public static final String DEFAULT_NOTES \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"DonnyS57"},"content":"    private Notes notes;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"    private Set\u003cPolicy\u003e policies;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"sheehui"},"content":"    private Set\u003cLiability\u003e liabilities;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"sheehui"},"content":"    private Set\u003cAsset\u003e assets;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"Bluntsord"},"content":"        policies \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"sheehui"},"content":"        liabilities \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"sheehui"},"content":"        assets \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"DonnyS57"},"content":"        notes \u003d new Notes(DEFAULT_NOTES);","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"        notes \u003d personToCopy.getNotes();","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"Bluntsord"},"content":"        policies \u003d new HashSet\u003c\u003e(personToCopy.getPolicies());","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"sheehui"},"content":"        liabilities \u003d new HashSet\u003c\u003e(personToCopy.getLiabilities());","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"sheehui"},"content":"        assets \u003d new HashSet\u003c\u003e(personToCopy.getAssets());","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"    /** Sets the {@code Notes} of the {@code Person} that we are building. */","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"    public PersonBuilder withNotes(String notes) {","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"        this.notes \u003d new Notes(notes);","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"        return this;","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"Bluntsord"},"content":"     * Sets the {@code liabilities} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"sheehui"},"content":"    public PersonBuilder withLiability(String ... liabilities) {","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"sheehui"},"content":"        this.liabilities \u003d SampleDataUtil.getLiabilities(liabilities);","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"Bluntsord"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"Bluntsord"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"Bluntsord"},"content":"    public PersonBuilder withPolicies(String ... policies) {","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"Bluntsord"},"content":"        this.policies \u003d SampleDataUtil.getPolicies(policies);","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"Bluntsord"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"Bluntsord"},"content":"     * Parses the {@code assets} into a {@code Set\u003cassets\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"Bluntsord"},"content":"    public PersonBuilder withAssets(String ... assets) {","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"sheehui"},"content":"        this.assets \u003d SampleDataUtil.getAssets(assets);","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"Bluntsord"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"Bluntsord"},"content":"     * Creates the person name Amy with the appropriate fields","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"bharathcs"},"content":"     * @return a fully constructed Person object.","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":132,"author":{"gitId":"sheehui"},"content":"        return new Person(name, phone, email, address, notes, policies, liabilities, assets);","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"bharathcs":8,"DonnyS57":4,"sheehui":17,"Bluntsord":30,"-":76}},{"path":"src/test/java/donnafin/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.AddCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.CliSyntax;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sheehui"},"content":" * A utility class for Person.","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"public class PersonUtil {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"        sb.append(CliSyntax.PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"        sb.append(CliSyntax.PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"        sb.append(CliSyntax.PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"        sb.append(CliSyntax.PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"sheehui"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"sheehui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"sheehui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"sheehui"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"sheehui":31,"Bluntsord":1}},{"path":"src/test/java/donnafin/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheehui":1,"-":71}},{"path":"src/test/java/donnafin/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bharathcs":1,"sheehui":3,"-":51}},{"path":"src/test/java/donnafin/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.types.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"bharathcs":1,"sheehui":1,"-":10}},{"path":"src/test/java/donnafin/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_ASSET_ONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_LIABILITY_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sheehui"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"import static donnafin.logic.commands.CommandTestUtil.VALID_POLICIES_ONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"sheehui"},"content":"    public static final String POLICIES_INPUT \u003d String.join(","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"            \";;;\",","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"            \"XYZ Policy Name\",","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"            \"Insurer A\",","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"            \"$3\",","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"            \"$1\",","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"            \"$0.50\"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"    );","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"sheehui"},"content":"    public static final String LIABILITIES_INPUT \u003d String.join(","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"            \";;;\",","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"            \"Home Mortgage\",","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"            \"Bank B\",","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"            \"$30\",","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"            \"5% per annum\"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"    );","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"sheehui"},"content":"    public static final String ASSETS_INPUT \u003d String.join(","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"            \";;;\",","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"            \"XYZ Asset Name\",","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"            \"Crypto\",","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"            \"$3000\",","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"            \"HODL\"","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"    );","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"            .withNotes(\"Loves cai fan\")","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"sheehui"},"content":"            .withPolicies(POLICIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"sheehui"},"content":"            .withLiability(LIABILITIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"sheehui"},"content":"            .withAssets(ASSETS_INPUT).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":61,"author":{"gitId":"sheehui"},"content":"            .withPolicies(POLICIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"sheehui"},"content":"            .withLiability(LIABILITIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"sheehui"},"content":"            .withAssets(ASSETS_INPUT).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"Bluntsord"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"            .withNotes(\"Loves CS2103T\")","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"sheehui"},"content":"            .withPolicies(POLICIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"sheehui"},"content":"            .withLiability(LIABILITIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"sheehui"},"content":"            .withAssets(ASSETS_INPUT).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"sheehui"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"            .withNotes(\"Tells lame jokes\")","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"sheehui"},"content":"            .withPolicies(POLICIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"sheehui"},"content":"            .withLiability(LIABILITIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"sheehui"},"content":"            .withAssets(ASSETS_INPUT).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"Bluntsord"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"            .withNotes(\"Vim god\")","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"sheehui"},"content":"            .withPolicies(POLICIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"sheehui"},"content":"            .withLiability(LIABILITIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"sheehui"},"content":"            .withAssets(ASSETS_INPUT).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"Bluntsord"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"bharathcs"},"content":"            .withNotes(\"Moustachio\")","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"sheehui"},"content":"            .withPolicies(POLICIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"sheehui"},"content":"            .withLiability(LIABILITIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"sheehui"},"content":"            .withAssets(ASSETS_INPUT).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"Bluntsord"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"            .withNotes(\"Curious\")","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"sheehui"},"content":"            .withPolicies(POLICIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"sheehui"},"content":"            .withLiability(LIABILITIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"sheehui"},"content":"            .withAssets(ASSETS_INPUT).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"sheehui"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withNotes(\"To bee or not to bee\")","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"sheehui"},"content":"            .withPolicies(POLICIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"sheehui"},"content":"            .withLiability(LIABILITIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"sheehui"},"content":"            .withAssets(ASSETS_INPUT).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"sheehui"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withNotes(\"Sir stop sir\")","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"sheehui"},"content":"            .withPolicies(POLICIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"sheehui"},"content":"            .withLiability(LIABILITIES_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"sheehui"},"content":"            .withAssets(ASSETS_INPUT).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"sheehui"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"sheehui"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"bharathcs"},"content":"            .withNotes(\"Enjoys architecture\")","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"Bluntsord"},"content":"            .withPolicies(VALID_POLICIES_ONE).withLiability(VALID_LIABILITY_BOB)","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"sheehui"},"content":"            .withAssets(VALID_ASSET_ONE).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"bharathcs":28,"sheehui":47,"Bluntsord":8,"-":49}},{"path":"src/test/java/donnafin/ui/AttributeTableTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import guitests.guihandles.AttributeTableHandle;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"public class AttributeTableTest extends GuiUnitTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"    private AttributeTable\u003c?\u003e attributeTable;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"    private AttributeTableHandle\u003c?\u003e attributeTableHandle;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"        attributeTable \u003d new AttributeTable\u003c\u003e(PolicyTestTable.getTableConfig(), PolicyTestTable.getExampleList());","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"        uiPartExtension.setUiPart(attributeTable);","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"        attributeTableHandle \u003d new AttributeTableHandle\u003c\u003e(getChildNode(attributeTable.getRoot(),","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"                AttributeTableHandle.TABLE_DISPLAY_ID));","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"    /** Do nothing but test that it can load properly */","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"    public void display() {}","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"bharathcs":25}},{"path":"src/test/java/donnafin/ui/ClientPanelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.PersonAdapter;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import donnafin.testutil.PersonBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import guitests.guihandles.ClientInfoPanelHandle;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClientPanelTest extends GuiUnitTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private ClientPanel clientPanel;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private ClientInfoPanelHandle clientInfoPanelHandle;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        clientPanel \u003d new ClientPanel(new PersonAdapter(null, new PersonBuilder().build()), null);","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        uiPartExtension.setUiPart(clientPanel);","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        clientInfoPanelHandle \u003d new ClientInfoPanelHandle(","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                getChildNode(clientPanel.getRoot(),","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                ClientInfoPanelHandle.CLIENT_INFO_PANEL_ID)","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void display() {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // confirm that it can display.","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":9,"-":26}},{"path":"src/test/java/donnafin/ui/CommandBoxTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.commands.ListCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"import guitests.guihandles.CommandBoxHandle;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class CommandBoxTest extends GuiUnitTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String COMMAND_THAT_SUCCEEDS \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String COMMAND_THAT_FAILS \u003d \"invalid command\";","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ArrayList\u003cString\u003e defaultStyleOfCommandBox;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ArrayList\u003cString\u003e errorStyleOfCommandBox;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final ArrayList\u003cString\u003e history \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private CommandBoxHandle commandBoxHandle;","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(commandText -\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            history.add(commandText);","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            if (commandText.equals(COMMAND_THAT_SUCCEEDS)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                return new CommandResult(\"Command successful\");","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new CommandException(\"Command failed\");","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        commandBoxHandle \u003d new CommandBoxHandle(getChildNode(commandBox.getRoot(),","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                CommandBoxHandle.COMMAND_INPUT_FIELD_ID));","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        uiPartExtension.setUiPart(commandBox);","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        defaultStyleOfCommandBox \u003d new ArrayList\u003c\u003e(commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        errorStyleOfCommandBox \u003d new ArrayList\u003c\u003e(defaultStyleOfCommandBox);","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        errorStyleOfCommandBox.add(CommandBox.ERROR_STYLE_CLASS);","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void commandBox_startingWithSuccessfulCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertBehaviorForSuccessfulCommand();","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertBehaviorForFailedCommand();","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void commandBox_startingWithFailedCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertBehaviorForFailedCommand();","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertBehaviorForSuccessfulCommand();","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // verify that style is changed correctly even after multiple consecutive failed commands","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertBehaviorForSuccessfulCommand();","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertBehaviorForFailedCommand();","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertBehaviorForFailedCommand();","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void commandBox_handleKeyPress() {","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_FAILS);","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(errorStyleOfCommandBox, commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        guiRobot.push(KeyCode.ESCAPE);","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(errorStyleOfCommandBox, commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        guiRobot.push(KeyCode.A);","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(defaultStyleOfCommandBox, commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Runs a command that fails, then verifies that \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *      - the text remains \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *      - the command box\u0027s style is the same as {@code errorStyleOfCommandBox}.","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void assertBehaviorForFailedCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_FAILS);","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(COMMAND_THAT_FAILS, commandBoxHandle.getInput());","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(errorStyleOfCommandBox, commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Runs a command that succeeds, then verifies that \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *      - the text is cleared \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *      - the command box\u0027s style is the same as {@code defaultStyleOfCommandBox}.","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void assertBehaviorForSuccessfulCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_SUCCEEDS);","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(\"\", commandBoxHandle.getInput());","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(defaultStyleOfCommandBox, commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":15,"-":85}},{"path":"src/test/java/donnafin/ui/GuiUnitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.extension.RegisterExtension;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import donnafin.ui.testutil.UiPartExtension;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import guitests.GuiRobot;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import guitests.guihandles.exceptions.NodeNotFoundException;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A GUI unit test class for AddressBook.","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public abstract class GuiUnitTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // TODO: Remove this workaround after using JavaFX version 13 or above","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // This is a workaround to solve headless test failure on Windows OS","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Refer to https://github.com/javafxports/openjdk-jfx/issues/66 for more details.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (System.getProperty(\"os.name\").toLowerCase().startsWith(\"win\")) {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            System.loadLibrary(\"WindowsCodecs\");","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @RegisterExtension","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final UiPartExtension uiPartExtension \u003d new UiPartExtension();","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    protected final GuiRobot guiRobot \u003d new GuiRobot();","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Retrieves the {@code query} node owned by the {@code rootNode}.","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param query name of the CSS selector of the node to retrieve.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws NodeNotFoundException if no such node exists.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    protected \u003cT extends Node\u003e T getChildNode(Node rootNode, String query) {","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Optional\u003cT\u003e node \u003d guiRobot.from(rootNode).lookup(query).tryQuery();","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return node.orElseThrow(NodeNotFoundException::new);","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":11,"-":34}},{"path":"src/test/java/donnafin/ui/HelpWindowTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import org.testfx.api.FxToolkit;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import guitests.guihandles.HelpWindowHandle;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class HelpWindowTest extends GuiUnitTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private HelpWindowHandle helpWindowHandle;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void setUp() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        guiRobot.interact(() -\u003e helpWindow \u003d new HelpWindow());","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        FxToolkit.registerStage(helpWindow::getRoot);","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        helpWindowHandle \u003d new HelpWindowHandle(helpWindow.getRoot());","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void display() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        FxToolkit.showStage();","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void isShowing_helpWindowIsShowing_returnsTrue() {","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        guiRobot.interact(helpWindow::show);","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(helpWindow.isShowing());","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void isShowing_helpWindowIsHiding_returnsFalse() {","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(helpWindow.isShowing());","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":11,"-":33}},{"path":"src/test/java/donnafin/ui/PersonCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import static donnafin.ui.testutil.GuiTestAssert.assertCardDisplaysPerson;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import donnafin.testutil.PersonBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import guitests.guihandles.PersonCardHandle;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCardTest extends GuiUnitTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void display() {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        PersonCard personCard \u003d new PersonCard(person, 1);","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        uiPartExtension.setUiPart(personCard);","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertCardDisplay(personCard, person, 1);","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        PersonCard personCard \u003d new PersonCard(person, 0);","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same person, same index -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        PersonCard copy \u003d new PersonCard(person, 0);","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(personCard, copy);","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(personCard, personCard);","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertNotEquals(null, personCard);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertNotEquals(0, personCard);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different person, same index -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person differentPerson \u003d new PersonBuilder().withName(\"differentName\").build();","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(personCard, new PersonCard(differentPerson, 0));","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same person, different index -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(personCard, new PersonCard(person, 1));","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Asserts that {@code personCard} displays the details of {@code expectedPerson} correctly and matches","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code expectedId}.","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void assertCardDisplay(PersonCard personCard, Person expectedPerson, int expectedId) {","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        PersonCardHandle personCardHandle \u003d new PersonCardHandle(personCard.getRoot());","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // verify id is displayed correctly","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expectedId + \". \", personCardHandle.getId());","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // verify person details are displayed correctly","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCardDisplaysPerson(expectedPerson, personCardHandle);","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":12,"-":57}},{"path":"src/test/java/donnafin/ui/PersonListPanelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import static donnafin.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import static donnafin.ui.testutil.GuiTestAssert.assertCardDisplaysPerson;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import static java.time.Duration.ofMillis;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertTimeoutPreemptively;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Address;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Email;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Name;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Notes;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Phone;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"import guitests.guihandles.PersonCardHandle;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"import guitests.guihandles.PersonListPanelHandle;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"import javafx.beans.property.SimpleObjectProperty;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class PersonListPanelTest extends GuiUnitTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final ObservableList\u003cPerson\u003e TYPICAL_PERSONS \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.observableList(getTypicalPersons());","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final long CARD_CREATION_AND_DELETION_TIMEOUT \u003d 2500;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final SimpleObjectProperty\u003cPerson\u003e selectedPerson \u003d new SimpleObjectProperty\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanelHandle personListPanelHandle;","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void display() {","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        initUi(TYPICAL_PERSONS);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c TYPICAL_PERSONS.size(); i++) {","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            personListPanelHandle.navigateToCard(TYPICAL_PERSONS.get(i));","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            Person expectedPerson \u003d TYPICAL_PERSONS.get(i);","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            PersonCardHandle actualCard \u003d personListPanelHandle.getPersonCardHandle(i);","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            assertCardDisplaysPerson(expectedPerson, actualCard);","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            assertEquals((i + 1) + \". \", actualCard.getId());","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Verifies that creating and deleting large number of persons in {@code PersonListPanel} requires lesser than","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code CARD_CREATION_AND_DELETION_TIMEOUT} milliseconds to execute.","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void performanceTest() {","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        ObservableList\u003cPerson\u003e backingList \u003d createBackingList(10000);","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTimeoutPreemptively(ofMillis(CARD_CREATION_AND_DELETION_TIMEOUT), () -\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            initUi(backingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            guiRobot.interact(backingList::clear);","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }, \"Creation and deletion of person cards exceeded time limit\");","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns a list of persons containing {@code personCount} persons that is used to populate the","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code PersonListPanel}.","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private ObservableList\u003cPerson\u003e createBackingList(int personCount) {","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ObservableList\u003cPerson\u003e backingList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c personCount; i++) {","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            Name name \u003d new Name(i + \"a\");","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            Phone phone \u003d new Phone(\"000\");","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            Email email \u003d new Email(\"a@aa.aa\");","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            Address address \u003d new Address(\"a\");","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            Person person \u003d new Person(name, phone, email, address, new Notes(\"\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                    Collections.emptySet(), Collections.emptySet(), Collections.emptySet());","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            backingList.add(person);","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return backingList;","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Initializes {@code personListPanelHandle} with a {@code PersonListPanel} backed by {@code backingList}.","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Also shows the {@code Stage} that displays only {@code PersonListPanel}.","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void initUi(ObservableList\u003cPerson\u003e backingList) {","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        PersonListPanel personListPanel \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new PersonListPanel(backingList);","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uiPartExtension.setUiPart(personListPanel);","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        personListPanelHandle \u003d new PersonListPanelHandle(getChildNode(personListPanel.getRoot(),","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                PersonListPanelHandle.PERSON_LIST_VIEW_ID));","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":24,"-":73}},{"path":"src/test/java/donnafin/ui/PolicyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Attribute;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"public class PolicyTest implements Attribute {","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"    final String amt;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"    final String name;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"    PolicyTest(String amt, String name) {","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"        this.amt \u003d amt;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"    public String getName() {","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"        return name;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"    public String getAmt() {","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"        return amt;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"    public boolean isPossibleDuplicate(Attribute other) {","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"        return false;","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"bharathcs":26}},{"path":"src/test/java/donnafin/ui/PolicyTestTable.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"public class PolicyTestTable {","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"    private static final AttributeTable.AggregatorLabelCreator\u003cPolicyTest\u003e summariseCollectionOfPolicyTests \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"        policyTestCollection -\u003e String.format(","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"            \"Total Value %.2f\",","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"                policyTestCollection.stream()","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"                    .map(PolicyTest::getAmt)","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"                    .map(Double::parseDouble)","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"                    .reduce(0.0, Double::sum)","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"    private static final List\u003cAttributeTable.ColumnConfig\u003e columnConfigs \u003d List.of(","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"            new AttributeTable.ColumnConfig(\"Policy Name\", \"name\", 400, 400),","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"            new AttributeTable.ColumnConfig(\"Value\", \"amt\", 100, 100)","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"    );","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    private static final AttributeTable.TableConfig\u003cPolicyTest\u003e tableConfig \u003d new AttributeTable.TableConfig\u003c\u003e(","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"            \"Policy Test\", columnConfigs, summariseCollectionOfPolicyTests);","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"    private static final List\u003cPolicyTest\u003e exampleList \u003d List.of(","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"            new PolicyTest(\"1.0\", \"uno\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"            new PolicyTest(\"2.4\", \"dos\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"            new PolicyTest(\"3.9\", \"tres\")","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"    );","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    public static AttributeTable.TableConfig\u003cPolicyTest\u003e getTableConfig() {","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"        return tableConfig;","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"    public static List\u003cPolicyTest\u003e getExampleList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"        return exampleList;","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"bharathcs":35}},{"path":"src/test/java/donnafin/ui/ResultDisplayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import guitests.guihandles.ResultDisplayHandle;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ResultDisplayTest extends GuiUnitTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private ResultDisplayHandle resultDisplayHandle;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        uiPartExtension.setUiPart(resultDisplay);","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        resultDisplayHandle \u003d new ResultDisplayHandle(getChildNode(resultDisplay.getRoot(),","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                ResultDisplayHandle.RESULT_DISPLAY_ID));","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void display() {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // default result text","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(\"\", resultDisplayHandle.getText());","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // new result received","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        guiRobot.interact(() -\u003e resultDisplay.setFeedbackToUser(\"Dummy feedback to user\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(\"Dummy feedback to user\", resultDisplayHandle.getText());","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":9,"-":31}},{"path":"src/test/java/donnafin/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"sheehui":1,"-":39}},{"path":"src/test/java/donnafin/ui/UiManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"import java.util.List;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.Logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.LogicManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sheehui"},"content":"import donnafin.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sheehui"},"content":"import donnafin.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sheehui"},"content":"import donnafin.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sheehui"},"content":"import donnafin.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sheehui"},"content":"import donnafin.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"sheehui"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"sheehui"},"content":"import donnafin.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"sheehui"},"content":"import donnafin.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"sheehui"},"content":"import donnafin.storage.StorageManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"sheehui"},"content":"import donnafin.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class UiManagerTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private UiManager uiManager;","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private UiManager backUpUiManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.model \u003d new ModelManager(new AddressBook(), new UserPrefs(), storage);","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model);","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        uiManager \u003d new UiManager(logic);","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        backUpUiManager \u003d new UiManager(logic);","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void testGetGuiSettings() {","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        GuiSettings logicGuiSettings \u003d logic.getGuiSettings();","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings uiManagerGuiSettings \u003d uiManager.getGuiSettings();","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(logicGuiSettings, uiManagerGuiSettings);","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void testExecuteSuccessNoUiAction() throws CommandException, ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String listCommand \u003d \"list\";","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String addCommand \u003d \"add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01\"","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + \" l/INSERT LIABILITY HERE c/INSERT COMMISSION HERE\";","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 1\";","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String clearCommand \u003d \"clear\";","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cString\u003e commandList \u003d Arrays.asList(listCommand, addCommand, deleteCommand, clearCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (String command: commandList) {","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            CommandResult logicCommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            CommandResult uiManagerCommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            if (command.equals(addCommand)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                // We cant add the same person twice, so we delete the person first and add","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                // him again to see if the result is the same","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                logicCommandResult \u003d logic.execute(command);","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                logic.execute(clearCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                uiManagerCommandResult \u003d uiManager.execute(command);","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logic.execute(clearCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            } else if (command.equals(deleteCommand)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                // We need something to delete, so we add the same person and delete him twice","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                // to check if the execute delete command is the same","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                logic.execute(addCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                logicCommandResult \u003d logic.execute(command);","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                logic.execute(addCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                uiManagerCommandResult \u003d uiManager.execute(command);","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                logicCommandResult \u003d logic.execute(command);","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                uiManagerCommandResult \u003d uiManager.execute(command);","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            assertEquals(logicCommandResult, uiManagerCommandResult);","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            assertEquals(backUpUiManager, uiManager);","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            uiManagerCommandResult.getUiAction().accept(uiManager);","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            assertEquals(backUpUiManager, uiManager);","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void testGetFilteredPersonList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ObservableList\u003cPerson\u003e logicFilteredPersonList \u003d logic.getFilteredPersonList();","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        ObservableList\u003cPerson\u003e uiManagerFilteredPersonList \u003d uiManager.getFilteredPersonList();","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(logicFilteredPersonList, uiManagerFilteredPersonList);","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void testGetAddressBookFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Path logicFilePath \u003d logic.getAddressBookFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Path uiManagerFilePath \u003d uiManager.getAddressBookFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(logicFilePath, uiManagerFilePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    Unclean way of testing for parse exception","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void testExecuteFailThrowsParseException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Throwable logicParseException \u003d null;","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            logic.execute(invalidCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logicParseException \u003d pe;","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Throwable uiManagerParseException \u003d null;","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            uiManager.execute(invalidCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            uiManagerParseException \u003d pe;","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // the exceptions are not equal. Do not want to override the method so","lastModifiedDate":"2021-09-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // I simply check if the messages are the same","lastModifiedDate":"2021-09-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(logicParseException.getMessage(), uiManagerParseException.getMessage());","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test void testExecuteFailThrowsCommandException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"delete 9\";","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Throwable logicCommandException \u003d null;","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logic.execute(invalidCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logicCommandException \u003d ce;","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Throwable uiManagerCommandException \u003d null;","lastModifiedDate":"2021-09-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            uiManager.execute(invalidCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            uiManagerCommandException \u003d ce;","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(logicCommandException.getMessage(), uiManagerCommandException.getMessage());","lastModifiedDate":"2021-09-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void testSetGuiSettings() {","lastModifiedDate":"2021-09-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // Should be the same if i call from logic or UiManager since I tested this previously already","lastModifiedDate":"2021-09-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        GuiSettings currentGuiSettings \u003d logic.getGuiSettings();","lastModifiedDate":"2021-09-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        GuiSettings newGuiSettings \u003d new GuiSettings();","lastModifiedDate":"2021-09-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        GuiSettings logicGuiSettingsAfterSet;","lastModifiedDate":"2021-09-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        GuiSettings uiManagerGuiSettingsAfterSet;","lastModifiedDate":"2021-09-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(newGuiSettings);","lastModifiedDate":"2021-09-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        logicGuiSettingsAfterSet \u003d logic.getGuiSettings();","lastModifiedDate":"2021-09-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        uiManager.setGuiSettings(newGuiSettings);","lastModifiedDate":"2021-09-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        uiManagerGuiSettingsAfterSet \u003d logic.getGuiSettings();","lastModifiedDate":"2021-09-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertEquals(logicGuiSettingsAfterSet, uiManagerGuiSettingsAfterSet);","lastModifiedDate":"2021-09-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2021-09-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2021-09-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2021-09-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-09-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-09-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2021-09-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), null);","lastModifiedDate":"2021-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2021-09-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2021-09-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-09-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2021-09-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        Assert.assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2021-09-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-09-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2021-09-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-09-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2021-09-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2021-09-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-09-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":238,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"sheehui":16,"Bluntsord":13,"-":209}},{"path":"src/test/java/donnafin/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheehui"},"content":"package donnafin.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"import static donnafin.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"sheehui"},"content":"import donnafin.MainApp;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003c\u003e((URL) null));","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003c\u003e((URL) null, new Object()));","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003c\u003e(missingFileUrl));","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003c\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003c\u003e(invalidFileUrl));","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003c\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003c\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003c\u003e((String) null));","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003c\u003e((String) null, new Object()));","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003c\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003c\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003c\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003c\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"sheehui":3,"-":112}},{"path":"src/test/java/donnafin/ui/testutil/GuiTestAssert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.ui.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import guitests.guihandles.PersonCardHandle;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import guitests.guihandles.PersonListPanelHandle;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import guitests.guihandles.ResultDisplayHandle;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing GUI tests.","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class GuiTestAssert {","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Asserts that {@code actualCard} displays the same values as {@code expectedCard}.","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void assertCardEquals(PersonCardHandle expectedCard, PersonCardHandle actualCard) {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expectedCard.getId(), actualCard.getId());","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertEquals(expectedCard.getAddress(), actualCard.getAddress());","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expectedCard.getEmail(), actualCard.getEmail());","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedCard.getName(), actualCard.getName());","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(expectedCard.getPhone(), actualCard.getPhone());","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedPerson}.","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static void assertCardDisplaysPerson(Person expectedPerson, PersonCardHandle actualCard) {","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getName().fullName, actualCard.getName());","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getPhone().value, actualCard.getPhone());","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getEmail().value, actualCard.getEmail());","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getAddress().value, actualCard.getAddress());","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Asserts that the list in {@code personListPanelHandle} displays the details of {@code persons} correctly and","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * in the correct order.","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static void assertListMatching(PersonListPanelHandle personListPanelHandle, Person... persons) {","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.length; i++) {","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            personListPanelHandle.navigateToCard(i);","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertCardDisplaysPerson(persons[i], personListPanelHandle.getPersonCardHandle(i));","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Asserts that the list in {@code personListPanelHandle} displays the details of {@code persons} correctly and","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * in the correct order.","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static void assertListMatching(PersonListPanelHandle personListPanelHandle, List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertListMatching(personListPanelHandle, persons.toArray(new Person[0]));","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Asserts the size of the list in {@code personListPanelHandle} equals to {@code size}.","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static void assertListSize(PersonListPanelHandle personListPanelHandle, int size) {","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        int numberOfPeople \u003d personListPanelHandle.getListSize();","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(size, numberOfPeople);","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Asserts the message shown in {@code resultDisplayHandle} equals to {@code expected}.","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static void assertResultMessage(ResultDisplayHandle resultDisplayHandle, String expected) {","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expected, resultDisplayHandle.getText());","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":11,"-":65}},{"path":"src/test/java/donnafin/ui/testutil/StageExtension.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.ui.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.extension.AfterEachCallback;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.extension.BeforeEachCallback;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.extension.ExtensionContext;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import org.testfx.api.FxToolkit;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Properly sets up and tears down a JavaFx stage for our testing purposes.","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class StageExtension implements BeforeEachCallback, AfterEachCallback {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void beforeEach(ExtensionContext context) throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        FxToolkit.registerPrimaryStage();","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void afterEach(ExtensionContext context) throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        FxToolkit.cleanupStages();","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":7,"-":19}},{"path":"src/test/java/donnafin/ui/testutil/UiPartExtension.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package donnafin.ui.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.util.concurrent.TimeoutException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import org.testfx.api.FxToolkit;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import donnafin.ui.UiPart;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.Parent;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Provides an isolated stage to test an individual {@code UiPart}.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class UiPartExtension extends StageExtension {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String[] CSS_FILES \u003d {\"view/DarkTheme.css\", \"view/Extensions.css\"};","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void setUiPart(final UiPart\u003c? extends Parent\u003e uiPart) {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            FxToolkit.setupScene(() -\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                Scene scene \u003d new Scene(uiPart.getRoot());","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                scene.getStylesheets().setAll(CSS_FILES);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                return scene;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            });","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            FxToolkit.showStage();","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (TimeoutException te) {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Timeout should not happen.\", te);","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":10,"-":24}},{"path":"src/test/java/guitests/GuiRobot.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package guitests;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import java.util.function.BooleanSupplier;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import org.testfx.api.FxRobot;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import guitests.guihandles.exceptions.StageNotFoundException;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Robot used to simulate user actions on the GUI.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Extends {@link FxRobot} by adding some customized functionality and workarounds.","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class GuiRobot extends FxRobot {","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int PAUSE_FOR_HUMAN_DELAY_MILLISECONDS \u003d 250;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS \u003d 5000;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String PROPERTY_TESTFX_HEADLESS \u003d \"testfx.headless\";","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final boolean isHeadlessMode;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructor for this GuiRobot.","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public GuiRobot() {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        setHeadlessModeToTrue();","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String headlessPropertyValue \u003d System.getProperty(PROPERTY_TESTFX_HEADLESS);","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        isHeadlessMode \u003d headlessPropertyValue !\u003d null \u0026\u0026 headlessPropertyValue.equals(\"true\");","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Pauses execution for {@code PAUSE_FOR_HUMAN_DELAY_MILLISECONDS} milliseconds for a human to examine the","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * effects of the test. This method will be disabled when the GUI tests are executed in headless mode to avoid","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * unnecessary delays.","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void pauseForHuman() {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (isHeadlessMode) {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        sleep(PAUSE_FOR_HUMAN_DELAY_MILLISECONDS);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns true if tests are run in headless mode.","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean isHeadlessMode() {","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return isHeadlessMode;","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Waits for {@code event} to be true by {@code DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS} milliseconds.","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws EventTimeoutException if the time taken exceeds {@code DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS}","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * milliseconds.","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void waitForEvent(BooleanSupplier event) {","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        waitForEvent(event, DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS);","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Waits for {@code event} to be true.","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param timeOut in milliseconds","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @throws EventTimeoutException if the time taken exceeds {@code timeOut}.","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void waitForEvent(BooleanSupplier event, int timeOut) {","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int timePassed \u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        final int retryInterval \u003d 50;","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        while (!event.getAsBoolean()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            sleep(retryInterval);","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            timePassed +\u003d retryInterval;","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            if (timePassed \u003e\u003d timeOut) {","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                throw new EventTimeoutException();","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        pauseForHuman();","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if the window with {@code stageTitle} is currently open.","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean isWindowShown(String stageTitle) {","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return getNumberOfWindowsShown(stageTitle) \u003e\u003d 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns the number of windows with {@code stageTitle} that are currently open.","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public int getNumberOfWindowsShown(String stageTitle) {","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return (int) listTargetWindows().stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .filter(window -\u003e window instanceof Stage \u0026\u0026 ((Stage) window).getTitle().equals(stageTitle))","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .count();","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns the first stage, ordered by proximity to the current target window, with the stage title.","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * The order that the windows are searched are as follows (proximity): current target window,","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * children of the target window, rest of the windows.","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws StageNotFoundException if the stage is not found.","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public Stage getStage(String stageTitle) {","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Optional\u003cStage\u003e targetStage \u003d listTargetWindows().stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .filter(Stage.class::isInstance) // checks that the window is of type Stage","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .map(Stage.class::cast)","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .filter(stage -\u003e stage.getTitle().equals(stageTitle))","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .findFirst();","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return targetStage.orElseThrow(StageNotFoundException::new);","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Represents an error which occurs when a timeout occurs when waiting for an event.","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private static class EventTimeoutException extends RuntimeException {","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private static void setHeadlessModeToTrue() {","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        System.setProperty(\"testfx.robot\", \"glass\");","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        System.setProperty(\"testfx.headless\", \"true\");","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        System.setProperty(\"prism.order\", \"sw\");","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        System.setProperty(\"prism.text\", \"t2k\");","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        System.setProperty(\"java.awt.headless\", \"true\");","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":10,"-":126}},{"path":"src/test/java/guitests/guihandles/AttributeTableHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"public class AttributeTableHandle\u003cT\u003e extends NodeHandle\u003cTableView\u003cT\u003e\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"    public static final String TABLE_DISPLAY_ID \u003d \"#table\";","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"    public AttributeTableHandle(TableView\u003cT\u003e rootNode) {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"        super(rootNode);","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"bharathcs":12}},{"path":"src/test/java/guitests/guihandles/ClientInfoPanelHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"public class ClientInfoPanelHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"    public static final String CLIENT_INFO_PANEL_ID \u003d \"#root\";","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"    public static final String CONTACT_BUTTON_ID \u003d \"#contact\";","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"    public static final String POLICIES_BUTTON_ID \u003d \"#policies\";","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"    public static final String ASSETS_BUTTON_ID \u003d \"#assets\";","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"    public static final String LIABILITIES_BUTTON_ID \u003d \"#liabilities\";","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"    public static final String NOTES_BUTTON_ID \u003d \"#notes\";","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"    // the above means that it will actually pick out a child component, the vbox containing attribute list","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"    // instead of the real ClientInfoPanel. Required for GUI Test to have a target.","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"    public ClientInfoPanelHandle(Node clientInfoPanelNode) {","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"        super(clientInfoPanelNode);","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"bharathcs":19}},{"path":"src/test/java/guitests/guihandles/CommandBoxHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A handle to the {@code CommandBox} in the GUI.","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandBoxHandle extends NodeHandle\u003cTextField\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_INPUT_FIELD_ID \u003d \"#commandTextField\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandBoxHandle(TextField commandBoxNode) {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        super(commandBoxNode);","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns the text in the command box.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public String getInput() {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return getRootNode().getText();","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Enters the given command in the Command Box and presses enter.","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void run(String command) {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        click();","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        guiRobot.interact(() -\u003e getRootNode().setText(command));","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        guiRobot.type(KeyCode.ENTER);","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the list of style classes present in the command box.","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ObservableList\u003cString\u003e getStyleClass() {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return getRootNode().getStyleClass();","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":6,"-":41}},{"path":"src/test/java/guitests/guihandles/HelpWindowHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import guitests.GuiRobot;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A handle to the {@code HelpWindow} of the application.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpWindowHandle extends StageHandle {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String HELP_WINDOW_TITLE \u003d \"Help\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public HelpWindowHandle(Stage helpWindowStage) {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(helpWindowStage);","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if a help window is currently present in the application.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static boolean isWindowPresent() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new GuiRobot().isWindowShown(HELP_WINDOW_TITLE);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":5,"-":24}},{"path":"src/test/java/guitests/guihandles/MainWindowHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Provides a handle for {@code MainWindow}.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class MainWindowHandle extends StageHandle {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final ResultDisplayHandle resultDisplay;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final CommandBoxHandle commandBox;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructor for the handle.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param stage JavaFX Stage used.","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public MainWindowHandle(Stage stage) {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        super(stage);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplayHandle(getChildNode(ResultDisplayHandle.RESULT_DISPLAY_ID));","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        commandBox \u003d new CommandBoxHandle(getChildNode(CommandBoxHandle.COMMAND_INPUT_FIELD_ID));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public ResultDisplayHandle getResultDisplay() {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return resultDisplay;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandBoxHandle getCommandBox() {","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return commandBox;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":4,"-":33}},{"path":"src/test/java/guitests/guihandles/NodeHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import guitests.GuiRobot;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import guitests.guihandles.exceptions.NodeNotFoundException;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Provides access to a node in a JavaFx application for GUI testing purposes.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public abstract class NodeHandle\u003cT extends Node\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    protected final GuiRobot guiRobot \u003d new GuiRobot();","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final T rootNode;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    protected NodeHandle(T rootNode) {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.rootNode \u003d requireNonNull(rootNode);","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    protected T getRootNode() {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return rootNode;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Retrieves the {@code query} node owned by the {@code rootNode}.","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param query name of the CSS selector for the node to retrieve.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws NodeNotFoundException if no such node exists.","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    protected \u003cQ extends Node\u003e Q getChildNode(String query) {","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Optional\u003cQ\u003e node \u003d guiRobot.from(rootNode).lookup(query).tryQuery();","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return node.orElseThrow(NodeNotFoundException::new);","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Clicks on the root node (i.e. itself).","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void click() {","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        guiRobot.clickOn(rootNode);","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":10,"-":39}},{"path":"src/test/java/guitests/guihandles/PersonCardHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Provides a handle to a person card in the person list panel.","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class PersonCardHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String NAME_FIELD_ID \u003d \"#name\";","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String ADDRESS_FIELD_ID \u003d \"#address\";","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String PHONE_FIELD_ID \u003d \"#phone\";","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String EMAIL_FIELD_ID \u003d \"#email\";","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Label idLabel;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Label nameLabel;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Label addressLabel;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Label phoneLabel;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Label emailLabel;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a handle to inspect the JavaFX {@code PersonCard}.","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param cardNode {@code PersonCard} root","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public PersonCardHandle(Node cardNode) {","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(cardNode);","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        idLabel \u003d getChildNode(ID_FIELD_ID);","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        nameLabel \u003d getChildNode(NAME_FIELD_ID);","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        addressLabel \u003d getChildNode(ADDRESS_FIELD_ID);","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        phoneLabel \u003d getChildNode(PHONE_FIELD_ID);","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        emailLabel \u003d getChildNode(EMAIL_FIELD_ID);","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getId() {","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return idLabel.getText();","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return nameLabel.getText();","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String getAddress() {","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return addressLabel.getText();","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String getPhone() {","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return phoneLabel.getText();","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getEmail() {","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return emailLabel.getText();","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if this handle contains {@code person}.","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Person person) {","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return getName().equals(person.getName().fullName)","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 getAddress().equals(person.getAddress().value)","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 getPhone().equals(person.getPhone().value)","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 getEmail().equals(person.getEmail().value);","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":6,"-":66}},{"path":"src/test/java/guitests/guihandles/PersonListPanelHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import donnafin.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Provides a handle for {@code PersonListPanel} containing the list of {@code PersonCard}.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanelHandle extends NodeHandle\u003cListView\u003cPerson\u003e\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String PERSON_LIST_VIEW_ID \u003d \"#personListView\";","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String CARD_PANE_ID \u003d \"#cardPane\";","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Optional\u003cPerson\u003e lastRememberedSelectedPersonCard;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public PersonListPanelHandle(ListView\u003cPerson\u003e personListPanelNode) {","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        super(personListPanelNode);","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns a handle to the selected {@code PersonCardHandle}.","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * A maximum of 1 item can be selected at any time.","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws AssertionError if no card is selected, or more than 1 card is selected.","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException if the selected card is currently not in the scene graph.","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public PersonCardHandle getHandleToSelectedCard() {","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e selectedPersonList \u003d getRootNode().getSelectionModel().getSelectedItems();","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (selectedPersonList.size() !\u003d 1) {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Person list size expected 1.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return getAllCardNodes().stream()","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .map(PersonCardHandle::new)","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .filter(handle -\u003e handle.equals(selectedPersonList.get(0)))","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .findFirst()","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .orElseThrow(IllegalStateException::new);","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the index of the selected card.","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int getSelectedCardIndex() {","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return getRootNode().getSelectionModel().getSelectedIndex();","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a card is currently selected.","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean isAnyCardSelected() {","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e selectedCardsList \u003d getRootNode().getSelectionModel().getSelectedItems();","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (selectedCardsList.size() \u003e 1) {","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Card list size expected 0 or 1.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return !selectedCardsList.isEmpty();","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Navigates the listview to display {@code person}.","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void navigateToCard(Person person) {","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!getRootNode().getItems().contains(person)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Person does not exist.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        guiRobot.interact(() -\u003e getRootNode().scrollTo(person));","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Navigates the listview to {@code index}.","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void navigateToCard(int index) {","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (index \u003c 0 || index \u003e\u003d getRootNode().getItems().size()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Index is out of bounds.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        guiRobot.interact(() -\u003e getRootNode().scrollTo(index));","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Selects the {@code PersonCard} at {@code index} in the list.","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void select(int index) {","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        getRootNode().getSelectionModel().select(index);","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns the person card handle of a person associated with the {@code index} in the list.","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException if the selected card is currently not in the scene graph.","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public PersonCardHandle getPersonCardHandle(int index) {","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return getAllCardNodes().stream()","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .map(PersonCardHandle::new)","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .filter(handle -\u003e handle.equals(getPerson(index)))","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .findFirst()","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .orElseThrow(IllegalStateException::new);","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private Person getPerson(int index) {","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return getRootNode().getItems().get(index);","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Returns all card nodes in the scene graph.","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Card nodes that are visible in the listview are definitely in the scene graph, while some nodes that are not","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * visible in the listview may also be in the scene graph.","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private Set\u003cNode\u003e getAllCardNodes() {","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return guiRobot.lookup(CARD_PANE_ID).queryAll();","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Remembers the selected {@code PersonCard} in the list.","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void rememberSelectedPersonCard() {","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e selectedItems \u003d getRootNode().getSelectionModel().getSelectedItems();","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (selectedItems.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            lastRememberedSelectedPersonCard \u003d Optional.empty();","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            lastRememberedSelectedPersonCard \u003d Optional.of(selectedItems.get(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if the selected {@code PersonCard} is different from the value remembered by the most recent","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * {@code rememberSelectedPersonCard()} call.","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public boolean isSelectedPersonCardChanged() {","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e selectedItems \u003d getRootNode().getSelectionModel().getSelectedItems();","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (selectedItems.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return lastRememberedSelectedPersonCard.isPresent();","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return lastRememberedSelectedPersonCard.isEmpty()","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                    || !lastRememberedSelectedPersonCard.get().equals(selectedItems.get(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Returns the size of the list.","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public int getListSize() {","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return getRootNode().getItems().size();","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":10,"-":150}},{"path":"src/test/java/guitests/guihandles/ResultDisplayHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A handler for the {@code ResultDisplay} of the UI","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ResultDisplayHandle extends NodeHandle\u003cTextArea\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String RESULT_DISPLAY_ID \u003d \"#resultDisplay\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public ResultDisplayHandle(TextArea resultDisplayNode) {","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(resultDisplayNode);","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns the text in the result display.","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return getRootNode().getText();","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":4,"-":23}},{"path":"src/test/java/guitests/guihandles/StageHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import donnafin.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import guitests.GuiRobot;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import guitests.guihandles.exceptions.NodeNotFoundException;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Provides access to a stage in a JavaFx application for GUI testing purposes.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public abstract class StageHandle {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    protected final GuiRobot guiRobot \u003d new GuiRobot();","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Stage stage;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public StageHandle(Stage stage) {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.stage \u003d requireNonNull(stage);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Closes {@code stage}.","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void close() {","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        guiRobot.interact(stage::close);","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(stage.isShowing());","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Focuses on this {@code stage}.","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String windowTitle \u003d stage.getTitle();","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"Focusing on\" + windowTitle);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        guiRobot.interact(stage::requestFocus);","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        logger.info(\"Finishing focus on\" + windowTitle);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns true if currently focusing on this stage.","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean isFocused() {","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return stage.isFocused();","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Retrieves the {@code query} node owned by the {@code stage}.","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param query name of the CSS selector for the node to retrieve.","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws NodeNotFoundException if no such node exists.","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    protected \u003cT extends Node\u003e T getChildNode(String query) {","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Optional\u003cT\u003e node \u003d guiRobot.from(stage.getScene().getRoot()).lookup(query).tryQuery();","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return node.orElseThrow(NodeNotFoundException::new);","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":14,"-":54}},{"path":"src/test/java/guitests/guihandles/exceptions/NodeNotFoundException.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package guitests.guihandles.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Signals that the node cannot be found.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NodeNotFoundException extends NoSuchElementException {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":4,"-":10}},{"path":"src/test/java/guitests/guihandles/exceptions/StageNotFoundException.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package guitests.guihandles.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"//@@author bharathcs-reused","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"//Reused from https://github.com/se-edu/addressbook-level4/ with minor modifications.","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Signals that the stage cannot be found.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StageNotFoundException extends NoSuchElementException {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"bharathcs":4,"-":10}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"\u003c?import donnafin.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"sheehui":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"sheehui"},"content":"\u003cfx:root type\u003d\"donnafin.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"sheehui":1,"-":5}}]
