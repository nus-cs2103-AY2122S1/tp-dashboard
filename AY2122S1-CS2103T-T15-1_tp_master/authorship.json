[{"path":".github/pull_request_template.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"### Summary","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"_resolve the linked issue using **resolves #\u003cissue_number\u003e**_","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"_provide of an overview about this PR_","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"### Detail","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"_provide more detailed steps, on how to start to review, whether it has been tested on desktop, etc_","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"### Pictures / Gif","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"_provide gif or screenshot of the features if there is any_","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"### Checks","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"- [ ] Link PR to issue","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"- [ ] Add Reviewer","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"- [ ] Pass CI","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"simonjulianl":2,"-":17}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T15-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T15-1/tp/actions)","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"# About GoMedic","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"GoMedic is a desktop application designed for doctors and medical residents to manage contacts and patient details.","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"We aim GoMedic to be used by someone who can type fast and take advantage of the optimized features for","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"radiankrisno"},"content":"Command Line Interface.","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"radiankrisno"},"content":"# User Interface","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"# Acknowledgement","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org/).","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"radiankrisno"},"content":"* The project simulates an ongoing software project for a desktop application (called AddressBook)","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"radiankrisno"},"content":"  used for managing contact details.","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"radiankrisno"},"content":"    * It is written in OOP fashion. It provides a reasonably well-written code base bigger (around 6 KLoC) than what","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"radiankrisno"},"content":"      students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"radiankrisno"},"content":"    * It comes with a reasonable level of user and developer documentation.","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"radiankrisno":14,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"### Simon Julian Lauw","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"\u003cimg src\u003d\"images/simonjulianl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"[[homepage](https://simonjulianl.github.io)]","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"[[github](https://github.com/simonjulianl)]","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"[[portfolio](team/simonjulianlauw.md)]","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"* Role: Team Lead ","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"* Responsibilities: Deliverables and deadlines  ","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"radiankrisno"},"content":"### Radian Krisno","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\u003cimg src\u003d\"images/radiankrisno.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"radiankrisno"},"content":"[[github](http://github.com/radiankrisno)]","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"radiankrisno"},"content":"[[portfolio](team/radiankrisno.md)]","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"radiankrisno"},"content":"* Role: Developer","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"radiankrisno"},"content":"* Responsibilities: Program structure","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"yyhangz"},"content":"### Yap Yuhang","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\u003cimg src\u003d\"images/yyhangz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"yyhangz"},"content":"[[github](http://github.com/yyhangz)] [[portfolio](team/yapyuhang.md)]","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"yyhangz"},"content":"* Responsibilities: Code quality","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"ngsengleng"},"content":"### Ng Seng Leng","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"\u003cimg src\u003d\"images/ngsengleng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"ngsengleng"},"content":"[[github](http://github.com/ngsengleng)]","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"ngsengleng"},"content":"[[portfolio](team/ngsengleng.md)]","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"### James Doe","lastModifiedDate":"2020-06-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"radiankrisno":5,"ngsengleng":3,"simonjulianl":10,"yyhangz":3,"-":39}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"  original source as well}","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"diagrams.","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"**`Main`** has two classes","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"is responsible for,","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"the command `delete 1`.","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"simonjulianl"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"simonjulianl"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"simonjulianl"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"simonjulianl"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"simonjulianl"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"simonjulianl"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"simonjulianl"},"content":"The **API** of this component is specified","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"simonjulianl"},"content":"in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"simonjulianl"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"simonjulianl"},"content":", `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"simonjulianl"},"content":"the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"simonjulianl"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"simonjulianl"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"simonjulianl"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"simonjulianl"},"content":"is specified","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"simonjulianl"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"simonjulianl"},"content":"**","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"simonjulianl"},"content":"API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"simonjulianl"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is","lastModifiedDate":"2021-09-24"},{"lineNumber":119,"author":{"gitId":"simonjulianl"},"content":"   executed by the `LogicManager`.","lastModifiedDate":"2021-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"simonjulianl"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API","lastModifiedDate":"2021-09-24"},{"lineNumber":124,"author":{"gitId":"simonjulianl"},"content":"call.","lastModifiedDate":"2021-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":137,"author":{"gitId":"simonjulianl"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2021-09-24"},{"lineNumber":138,"author":{"gitId":"simonjulianl"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2021-09-24"},{"lineNumber":139,"author":{"gitId":"simonjulianl"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2021-09-24"},{"lineNumber":140,"author":{"gitId":"simonjulianl"},"content":"  a `Command` object.","lastModifiedDate":"2021-09-24"},{"lineNumber":141,"author":{"gitId":"simonjulianl"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2021-09-24"},{"lineNumber":142,"author":{"gitId":"simonjulianl"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":146,"author":{"gitId":"simonjulianl"},"content":"**","lastModifiedDate":"2021-09-24"},{"lineNumber":147,"author":{"gitId":"simonjulianl"},"content":"API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"simonjulianl"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2021-09-24"},{"lineNumber":156,"author":{"gitId":"simonjulianl"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2021-09-24"},{"lineNumber":157,"author":{"gitId":"simonjulianl"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-09-24"},{"lineNumber":158,"author":{"gitId":"simonjulianl"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2021-09-24"},{"lineNumber":159,"author":{"gitId":"simonjulianl"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-09-24"},{"lineNumber":160,"author":{"gitId":"simonjulianl"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2021-09-24"},{"lineNumber":161,"author":{"gitId":"simonjulianl"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2021-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"simonjulianl"},"content":"**","lastModifiedDate":"2021-09-24"},{"lineNumber":172,"author":{"gitId":"simonjulianl"},"content":"API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":178,"author":{"gitId":"simonjulianl"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding","lastModifiedDate":"2021-09-24"},{"lineNumber":179,"author":{"gitId":"simonjulianl"},"content":"  objects.","lastModifiedDate":"2021-09-24"},{"lineNumber":180,"author":{"gitId":"simonjulianl"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2021-09-24"},{"lineNumber":181,"author":{"gitId":"simonjulianl"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2021-09-24"},{"lineNumber":182,"author":{"gitId":"simonjulianl"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2021-09-24"},{"lineNumber":183,"author":{"gitId":"simonjulianl"},"content":"  that belong to the `Model`)","lastModifiedDate":"2021-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"simonjulianl"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2021-09-24"},{"lineNumber":200,"author":{"gitId":"simonjulianl"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2021-09-24"},{"lineNumber":201,"author":{"gitId":"simonjulianl"},"content":"following operations:","lastModifiedDate":"2021-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"simonjulianl"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2021-09-24"},{"lineNumber":204,"author":{"gitId":"simonjulianl"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2021-09-24"},{"lineNumber":205,"author":{"gitId":"simonjulianl"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2021-09-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"simonjulianl"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2021-09-24"},{"lineNumber":208,"author":{"gitId":"simonjulianl"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2021-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"simonjulianl"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2021-09-24"},{"lineNumber":213,"author":{"gitId":"simonjulianl"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2021-09-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"simonjulianl"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command","lastModifiedDate":"2021-09-24"},{"lineNumber":218,"author":{"gitId":"simonjulianl"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2021-09-24"},{"lineNumber":219,"author":{"gitId":"simonjulianl"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2021-09-24"},{"lineNumber":220,"author":{"gitId":"simonjulianl"},"content":"state.","lastModifiedDate":"2021-09-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"simonjulianl"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`","lastModifiedDate":"2021-09-24"},{"lineNumber":225,"author":{"gitId":"simonjulianl"},"content":", causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-09-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"simonjulianl"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing","lastModifiedDate":"2021-09-24"},{"lineNumber":234,"author":{"gitId":"simonjulianl"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2021-09-24"},{"lineNumber":235,"author":{"gitId":"simonjulianl"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-09-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"simonjulianl"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2021-09-24"},{"lineNumber":253,"author":{"gitId":"simonjulianl"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2021-09-24"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"simonjulianl"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2021-09-24"},{"lineNumber":260,"author":{"gitId":"simonjulianl"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2021-09-24"},{"lineNumber":261,"author":{"gitId":"simonjulianl"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2021-09-24"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"simonjulianl"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2021-09-24"},{"lineNumber":266,"author":{"gitId":"simonjulianl"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2021-09-24"},{"lineNumber":267,"author":{"gitId":"simonjulianl"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2021-09-24"},{"lineNumber":268,"author":{"gitId":"simonjulianl"},"content":"desktop applications follow.","lastModifiedDate":"2021-09-24"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"simonjulianl"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by itself.","lastModifiedDate":"2021-09-24"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"simonjulianl"},"content":"* has a need to manage a significant number of patients and colleagues","lastModifiedDate":"2021-09-24"},{"lineNumber":314,"author":{"gitId":"simonjulianl"},"content":"* is a very busy man with lots of appointments and activities","lastModifiedDate":"2021-09-24"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"simonjulianl"},"content":"* can type fast and prefer CLI-formatted commands","lastModifiedDate":"2021-09-24"},{"lineNumber":317,"author":{"gitId":"simonjulianl"},"content":"* prefers typing to mouse interactions and is reasonably comfortable using CLI apps","lastModifiedDate":"2021-09-24"},{"lineNumber":318,"author":{"gitId":"simonjulianl"},"content":"* often forgets about his patient details and his schedule","lastModifiedDate":"2021-09-24"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"simonjulianl"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-24"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"simonjulianl"},"content":"* manage patients contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-09-24"},{"lineNumber":323,"author":{"gitId":"simonjulianl"},"content":"* able to manage other doctors\u0027 details","lastModifiedDate":"2021-09-24"},{"lineNumber":324,"author":{"gitId":"simonjulianl"},"content":"* able to store sheer amount of patient details and retrieve them very fast","lastModifiedDate":"2021-09-24"},{"lineNumber":325,"author":{"gitId":"simonjulianl"},"content":"* able to compare patient medical histories very fast","lastModifiedDate":"2021-09-24"},{"lineNumber":326,"author":{"gitId":"simonjulianl"},"content":"* able to remind user of upcoming activities and appointments","lastModifiedDate":"2021-09-24"},{"lineNumber":327,"author":{"gitId":"simonjulianl"},"content":"* easy to use and would give suggestion on the closest command whenever typo is made","lastModifiedDate":"2021-09-24"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"simonjulianl"},"content":"#### Priorities:","lastModifiedDate":"2021-09-24"},{"lineNumber":332,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":333,"author":{"gitId":"simonjulianl"},"content":"* **High (must have)** - `* * *`","lastModifiedDate":"2021-09-24"},{"lineNumber":334,"author":{"gitId":"simonjulianl"},"content":"* **Medium (nice to have)** - `* *`","lastModifiedDate":"2021-09-24"},{"lineNumber":335,"author":{"gitId":"simonjulianl"},"content":"* **Low (unlikely to have)** - `*`","lastModifiedDate":"2021-09-24"},{"lineNumber":336,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":337,"author":{"gitId":"simonjulianl"},"content":"#### [EPIC] Basic CRUD Functionality for patients and doctors","lastModifiedDate":"2021-09-24"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                             | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"simonjulianl"},"content":"| -------- | ------------------------------------------ | --------------------------------------------| ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-24"},{"lineNumber":341,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | user                                       | add a new patient detail                    | retrieve and update them later                                                                        |","lastModifiedDate":"2021-09-24"},{"lineNumber":342,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | doctor                                     | add a new colleague detail                  | remember their contact number and office numbers","lastModifiedDate":"2021-09-24"},{"lineNumber":343,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | user                                       | delete an existing patient / doctor details | remove entries that I no longer need","lastModifiedDate":"2021-09-24"},{"lineNumber":344,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | user                                       | update my patient details                   | change the details without deleting and adding the info again","lastModifiedDate":"2021-09-24"},{"lineNumber":345,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | doctor                                     | update my colleague details                 | change the details without deleting and adding the info again","lastModifiedDate":"2021-09-24"},{"lineNumber":346,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | user                                       | view all my patient details in a list       | know my entire list of patients at a glance","lastModifiedDate":"2021-09-24"},{"lineNumber":347,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | user                                       | view all my colleague details in a list     | know my entire list of colleague at a glance","lastModifiedDate":"2021-09-24"},{"lineNumber":348,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":349,"author":{"gitId":"simonjulianl"},"content":"#### [EPIC] Scheduling","lastModifiedDate":"2021-09-24"},{"lineNumber":350,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":351,"author":{"gitId":"simonjulianl"},"content":"| Priority | As a …​                                 | I want to …​                                            | So that I can…​                                                        |","lastModifiedDate":"2021-09-24"},{"lineNumber":352,"author":{"gitId":"simonjulianl"},"content":"| -------- | ------------------------------------------ | -----------------------------------------------------------| ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-24"},{"lineNumber":353,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | busy user                                  | add a new appointment with one of my patient               | so that I can remember my appointments with them and be reminded of them in the future","lastModifiedDate":"2021-09-24"},{"lineNumber":354,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | busy user                                  | add new activities such as meeting with colleagues         |  so that I can remember my schedules today with and be reminded of them in the future","lastModifiedDate":"2021-09-24"},{"lineNumber":355,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | user                                       | delete existing appointments with my patients              | remove appointments that are no longer happening                |","lastModifiedDate":"2021-09-24"},{"lineNumber":356,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | user                                       | delete any existing activity                               | remove activities that are no longer happening and free my schedules up                                                 |","lastModifiedDate":"2021-09-24"},{"lineNumber":357,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | organized user                                  | list all my future appointments with a certain patient     | plan my schedules and track the appointments                                                 |","lastModifiedDate":"2021-09-24"},{"lineNumber":358,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | organized user                             | list all my future activities                              | know my schedules and plan future activities accordingly                           |","lastModifiedDate":"2021-09-24"},{"lineNumber":359,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | busy user                                  | be reminded of my patients\u0027 appointment 15 minutes before the schedule             | prepare myself for the appointment                         |","lastModifiedDate":"2021-09-24"},{"lineNumber":360,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | busy user                                  | be reminded of my daily schedule when the app is started / at the start of the day |   know what I will be doing for the day and plan ahead                          |","lastModifiedDate":"2021-09-24"},{"lineNumber":361,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | forgetful user                             | search for specific activities and appointments within a specific time frame       | plan ahead and focus on those time slots only                         |","lastModifiedDate":"2021-09-24"},{"lineNumber":362,"author":{"gitId":"simonjulianl"},"content":"| `* * `   | organized user                             | change the reminder settings (minutes)                     | tailor it according to my preference                         |","lastModifiedDate":"2021-09-24"},{"lineNumber":363,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":364,"author":{"gitId":"simonjulianl"},"content":"#### [EPIC] Information Retrieval and Organization","lastModifiedDate":"2021-09-24"},{"lineNumber":365,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":366,"author":{"gitId":"simonjulianl"},"content":"| Priority | As a …​                                 | I want to …​                                                        | So that I can…​                                                        |","lastModifiedDate":"2021-09-24"},{"lineNumber":367,"author":{"gitId":"simonjulianl"},"content":"| -------- | ------------------------------------------ | -----------------------------------------------------------------------| --------------------------------------------------------------------------|","lastModifiedDate":"2021-09-24"},{"lineNumber":368,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | experienced user                           | write custom tags for activities stored                                | group the activities according to my choices","lastModifiedDate":"2021-09-24"},{"lineNumber":369,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | experienced user                           | search for activities based on tags                                    | retrieve certain grouped activities very fast such as meetings and visitations","lastModifiedDate":"2021-09-24"},{"lineNumber":370,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | busy user                                  | search for patients whose details contain a user-specified substring   | retrieve certain patients that I don\u0027t really remember which fields where the details are stored at","lastModifiedDate":"2021-09-24"},{"lineNumber":371,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | busy user                                  | search for doctors whose details contain a user-specified substring    | retrieve my colleague details without any need to remember which fields the data are stored at","lastModifiedDate":"2021-09-24"},{"lineNumber":372,"author":{"gitId":"simonjulianl"},"content":"| `* * `   | forgetful user                             | compare patients with similar medical histories                        | refer to them when I make new diagnosis on future patients","lastModifiedDate":"2021-09-24"},{"lineNumber":373,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":374,"author":{"gitId":"simonjulianl"},"content":"#### [EPIC] Misc Helpful Features","lastModifiedDate":"2021-09-24"},{"lineNumber":375,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":376,"author":{"gitId":"simonjulianl"},"content":"| Priority | As a …​                                 | I want to …​                                                        | So that I can…​                                                        |","lastModifiedDate":"2021-09-24"},{"lineNumber":377,"author":{"gitId":"simonjulianl"},"content":"| -------- | ------------------------------------------ | -----------------------------------------------------------------------| --------------------------------------------------------------------------|","lastModifiedDate":"2021-09-24"},{"lineNumber":378,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | new and forgetful user                     | pull up a list of commands                                             | pick the right commands quickly","lastModifiedDate":"2021-09-24"},{"lineNumber":379,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | new user                                   | sample entries in the app                                              | know how the app would look like when I would populate it with my data","lastModifiedDate":"2021-09-24"},{"lineNumber":380,"author":{"gitId":"simonjulianl"},"content":"| `* * *`  | new user                                   | have suggestions on typo that I made on commands                       | learn from my mistakes and correct it quickly","lastModifiedDate":"2021-09-24"},{"lineNumber":381,"author":{"gitId":"simonjulianl"},"content":"| `* *`  | fickle user                                | have the app accept multiple fixed ways to write dates and times       | do not need to remember the correct format all the time","lastModifiedDate":"2021-09-24"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"simonjulianl"},"content":"(For all use cases below, the **System** is the `GoMedic` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-24"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"simonjulianl"},"content":"**Use Case: [UC1] - Adding a new patient record**","lastModifiedDate":"2021-09-24"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"simonjulianl"},"content":"1. User requests to add a new patient record.","lastModifiedDate":"2021-09-24"},{"lineNumber":394,"author":{"gitId":"simonjulianl"},"content":"2. GoMedic shows confirmation about the new patient record being added, and displays the patient\u0027s full details.","lastModifiedDate":"2021-09-24"},{"lineNumber":395,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":396,"author":{"gitId":"simonjulianl"},"content":"   Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":397,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":398,"author":{"gitId":"simonjulianl"},"content":"**Extensions**","lastModifiedDate":"2021-09-24"},{"lineNumber":399,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":400,"author":{"gitId":"simonjulianl"},"content":"* 1a. Incomplete patient details are given by users","lastModifiedDate":"2021-09-24"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":402,"author":{"gitId":"simonjulianl"},"content":"    * 1a1. GoMedic shows a feedback to the user about the missing data.","lastModifiedDate":"2021-09-24"},{"lineNumber":403,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":404,"author":{"gitId":"simonjulianl"},"content":"      Use Case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":405,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":406,"author":{"gitId":"simonjulianl"},"content":"**Use Case: [UC2] - Delete an existing patient record**","lastModifiedDate":"2021-09-24"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":408,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-24"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":410,"author":{"gitId":"simonjulianl"},"content":"1. User requests to list all patients.","lastModifiedDate":"2021-09-24"},{"lineNumber":411,"author":{"gitId":"simonjulianl"},"content":"2. GoMedic shows a list of patients.","lastModifiedDate":"2021-09-24"},{"lineNumber":412,"author":{"gitId":"simonjulianl"},"content":"3. User requests to delete a specific person in the list.","lastModifiedDate":"2021-09-24"},{"lineNumber":413,"author":{"gitId":"simonjulianl"},"content":"4. GoMedic deletes the person.","lastModifiedDate":"2021-09-24"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"simonjulianl"},"content":"    * 3a1. GoMedic shows a feedback to the user about invalid index.","lastModifiedDate":"2021-09-24"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"simonjulianl"},"content":"      Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"simonjulianl"},"content":"**Use Case: [UC3] - Command Suggestions**","lastModifiedDate":"2021-09-24"},{"lineNumber":430,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":431,"author":{"gitId":"simonjulianl"},"content":"**MSS**","lastModifiedDate":"2021-09-24"},{"lineNumber":432,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":433,"author":{"gitId":"simonjulianl"},"content":"1. User types in a certain command such as creating \u003cu\u003enew patient record (UC1)\u003c/u\u003e and \u003cu\u003edeleting an existing patient","lastModifiedDate":"2021-09-24"},{"lineNumber":434,"author":{"gitId":"simonjulianl"},"content":"   record (UC2)\u003c/u\u003e with typo.","lastModifiedDate":"2021-09-24"},{"lineNumber":435,"author":{"gitId":"simonjulianl"},"content":"2. GoMedic shows a list of suggested commands.","lastModifiedDate":"2021-09-24"},{"lineNumber":436,"author":{"gitId":"simonjulianl"},"content":"3. User retypes the command and requests GoMedic to perform certain action.","lastModifiedDate":"2021-09-24"},{"lineNumber":437,"author":{"gitId":"simonjulianl"},"content":"4. GoMedic performs the specified action.","lastModifiedDate":"2021-09-24"},{"lineNumber":438,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":439,"author":{"gitId":"simonjulianl"},"content":"   Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":440,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":441,"author":{"gitId":"simonjulianl"},"content":"**Extensions**","lastModifiedDate":"2021-09-24"},{"lineNumber":442,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":443,"author":{"gitId":"simonjulianl"},"content":"* 1a. Command is valid.","lastModifiedDate":"2021-09-24"},{"lineNumber":444,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":445,"author":{"gitId":"simonjulianl"},"content":"  Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":446,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":447,"author":{"gitId":"simonjulianl"},"content":"* 2a. User decides not to retype the commands.","lastModifiedDate":"2021-09-24"},{"lineNumber":448,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":449,"author":{"gitId":"simonjulianl"},"content":"  Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":450,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":451,"author":{"gitId":"simonjulianl"},"content":"* 3a. User input an invalid command.","lastModifiedDate":"2021-09-24"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":453,"author":{"gitId":"simonjulianl"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2021-09-24"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":455,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"simonjulianl"},"content":"2. Should be able to be run without any installation required as long as the user has Java `11` installed.","lastModifiedDate":"2021-09-24"},{"lineNumber":461,"author":{"gitId":"simonjulianl"},"content":"3. Should be able to hold up to 1000 patients and colleagues without a noticeable delay (less than 2 seconds) in","lastModifiedDate":"2021-09-24"},{"lineNumber":462,"author":{"gitId":"simonjulianl"},"content":"   performance for typical usage.","lastModifiedDate":"2021-09-24"},{"lineNumber":463,"author":{"gitId":"simonjulianl"},"content":"4. Should be able to hold up to 200 future activities and future appointments, and be retrieved without a noticeable","lastModifiedDate":"2021-09-24"},{"lineNumber":464,"author":{"gitId":"simonjulianl"},"content":"   delay (less than 2 seconds) for typical searches.","lastModifiedDate":"2021-09-24"},{"lineNumber":465,"author":{"gitId":"simonjulianl"},"content":"5. Should be only used by a single user and do not require other users to make changes to the app such as making","lastModifiedDate":"2021-09-24"},{"lineNumber":466,"author":{"gitId":"simonjulianl"},"content":"   appointment or sharing activities.","lastModifiedDate":"2021-09-24"},{"lineNumber":467,"author":{"gitId":"simonjulianl"},"content":"6. The data should not be stored using a _DBMS_.","lastModifiedDate":"2021-09-24"},{"lineNumber":468,"author":{"gitId":"simonjulianl"},"content":"7. The data should be stored _locally_ and should be in a human _editable_ and easily modified text file.","lastModifiedDate":"2021-09-24"},{"lineNumber":469,"author":{"gitId":"simonjulianl"},"content":"8. The project is expected to adhere to a _biweekly version release_ using breadth-first incremental technique.","lastModifiedDate":"2021-09-24"},{"lineNumber":470,"author":{"gitId":"simonjulianl"},"content":"9. Should be less than **100 MB** in size for the software, and less than **15 MB** per file for each document.","lastModifiedDate":"2021-09-24"},{"lineNumber":471,"author":{"gitId":"simonjulianl"},"content":"10. The developer guide and user guide must be pdf-friendly (meaning no embedded video, animations, embedded PowerPoint,","lastModifiedDate":"2021-09-24"},{"lineNumber":472,"author":{"gitId":"simonjulianl"},"content":"    etc.).","lastModifiedDate":"2021-09-24"},{"lineNumber":473,"author":{"gitId":"simonjulianl"},"content":"11. Should be delivered to the user using a single JAR file.","lastModifiedDate":"2021-09-24"},{"lineNumber":474,"author":{"gitId":"simonjulianl"},"content":"12. Graphical User Interface (GUI) should work reasonable well for standard screen resolution of 1920 x 1080 and higher","lastModifiedDate":"2021-09-24"},{"lineNumber":475,"author":{"gitId":"simonjulianl"},"content":"    with screen scales 100% and 125%, and also usable for screen resolutions 1280 x 720 and higher with screen scales","lastModifiedDate":"2021-09-24"},{"lineNumber":476,"author":{"gitId":"simonjulianl"},"content":"    150%.","lastModifiedDate":"2021-09-24"},{"lineNumber":477,"author":{"gitId":"simonjulianl"},"content":"13. Should be written mainly using Object-oriented paradigm.","lastModifiedDate":"2021-09-24"},{"lineNumber":478,"author":{"gitId":"simonjulianl"},"content":"14. The app is not required to be able to interact with external pieces of hardware such as printer.","lastModifiedDate":"2021-09-24"},{"lineNumber":479,"author":{"gitId":"simonjulianl"},"content":"15. The data stored within the app should be encrypted for security purposes (to prevent the raw data being read by","lastModifiedDate":"2021-09-24"},{"lineNumber":480,"author":{"gitId":"simonjulianl"},"content":"    external parties).","lastModifiedDate":"2021-09-24"},{"lineNumber":481,"author":{"gitId":"simonjulianl"},"content":"16. The app is mainly used for users based in Singapore, and therefore some local terms are tolerable, and the app is","lastModifiedDate":"2021-09-24"},{"lineNumber":482,"author":{"gitId":"simonjulianl"},"content":"    not expected to operate in other languages except English.","lastModifiedDate":"2021-09-24"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"simonjulianl"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X.","lastModifiedDate":"2021-09-24"},{"lineNumber":489,"author":{"gitId":"simonjulianl"},"content":"* **DBMS** : Database Management System such as MySQL, Oracle, PSQL, MongoDB, etc.","lastModifiedDate":"2021-09-24"},{"lineNumber":490,"author":{"gitId":"simonjulianl"},"content":"* **JAR** : Java Archive file format, which is typically used to aggregate many Java class files and associated metadata","lastModifiedDate":"2021-09-24"},{"lineNumber":491,"author":{"gitId":"simonjulianl"},"content":"  into one file for distribution.","lastModifiedDate":"2021-09-24"},{"lineNumber":492,"author":{"gitId":"simonjulianl"},"content":"* **typical usage/searches** : Finding by keyword, name, medical histories, and any combination of the field manually.","lastModifiedDate":"2021-09-24"},{"lineNumber":493,"author":{"gitId":"simonjulianl"},"content":"* **Object-Oriented Paradigm** : programming paradigm that organizes software design around objects rather than","lastModifiedDate":"2021-09-24"},{"lineNumber":494,"author":{"gitId":"simonjulianl"},"content":"  functions and logic. For complete list of Features that OO design should have,","lastModifiedDate":"2021-09-24"},{"lineNumber":495,"author":{"gitId":"simonjulianl"},"content":"  please [visit this wikipedia page](https://en.wikipedia.org/wiki/Object-oriented_programming)","lastModifiedDate":"2021-09-24"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"simonjulianl"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2021-09-24"},{"lineNumber":515,"author":{"gitId":"simonjulianl"},"content":"       optimum.","lastModifiedDate":"2021-09-24"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"simonjulianl"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2021-09-24"},{"lineNumber":534,"author":{"gitId":"simonjulianl"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2021-09-24"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"simonjulianl":234,"-":316}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"layout: page ","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"GoMedic is a **cross-platform desktop application written in Java and designed for doctors and medical residents to","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"manage contacts and patient details**. We aim GoMedic to be used by someone who can type fast and take advantage of the","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"optimized features for Command Line Interface.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"1. Download the latest `gomedic.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"   contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"    * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"      named `John Doe` to the Address Book.","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"* Words in `LOWER_CASE` are required flags to be written together with the command. \u003cbr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"  e.g. in `add t/activity`, `t/activity` is a flag that must be written as it is and should not be changed or treated as","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"  a parameter.","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"simonjulianl"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"simonjulianl"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":71,"author":{"gitId":"simonjulianl"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"simonjulianl"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":75,"author":{"gitId":"simonjulianl"},"content":"* There are fixed multiple valid date and time formats (GMT+8 24-Hour Time format):","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"simonjulianl"},"content":"    1. dd/MM/yyyy HH:mm (e.g. 15/09/2022 13:00)","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"simonjulianl"},"content":"    2. dd-MM-yyyy HH:mm (e.g. 15-09-2022 13:00)","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"simonjulianl"},"content":"    3. yyyy-MM-dd-HH-mm (e.g. 2022-09-15-13-00)","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"simonjulianl"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"ngsengleng"},"content":"### Suggestions","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"ngsengleng"},"content":"GoMedic will suggest the closest command to be ","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"ngsengleng"},"content":"executed if you make a typo and send an invalid command.","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"radiankrisno"},"content":"### Adding a new patient\u0027s details: `add t/patient`","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"radiankrisno"},"content":"Adds a new patient into the GoMedic application.","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"radiankrisno"},"content":"Format: `add t/patient n/NAME a/AGE g/GENDER h/HEIGHT w/WEIGHT b/BLOOD_TYPE c/CONTACT_NUMBER o/[OPTIONAL...]`","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"radiankrisno"},"content":"* `NAME` indicates the full name of the patient, first name and last name are separated by `-`.","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"radiankrisno"},"content":"* `AGE` is greater than or equal to 0.","lastModifiedDate":"2021-09-24"},{"lineNumber":103,"author":{"gitId":"radiankrisno"},"content":"* `GENDER` is chosen from one of 3 choices, `M/F/O` where `M` is for Male, `F` is for Female, and `O` is for Others.","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"radiankrisno"},"content":"* `HEIGHT` is the height of patient in centimeters rounded to the nearest integer.","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"radiankrisno"},"content":"* `WEIGHT` is the weight of patient in kilograms rounded to the nearest integer.","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"radiankrisno"},"content":"* `BLOOD_TYPE` is chosen from one of the 4 choices, `A/B/AB/O`.","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"radiankrisno"},"content":"* `CONTACT_NUMBER` must be 8-digit Singapore phone number.","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"radiankrisno"},"content":"* `OPTIONAL` is the list of patient\u0027s past/pre-existing medical conditions. For medical condition that has multiple","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"radiankrisno"},"content":"words, use `-` to combine the words, e.g. `heart-failure`. To separate between conditions, use `/`.","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"simonjulianl"},"content":"Examples:","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"radiankrisno"},"content":"* `add t/patient n/John-Doe a/30 g/M h/174 w/72 b/O c/12345678 o/heart-failure/diabetes`","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"radiankrisno"},"content":"* `add t/patient n/Tom-Doe a/20 g/M h/167 w/61 b/AB c/12341234`","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":116,"author":{"gitId":"radiankrisno"},"content":"### Deleting an existing patient: `delete t/patient`","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"radiankrisno"},"content":"Deletes a patient from the GoMedic application.","lastModifiedDate":"2021-09-24"},{"lineNumber":119,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":120,"author":{"gitId":"radiankrisno"},"content":"Format: `delete t/patient i/PATIENT_ID`","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":122,"author":{"gitId":"radiankrisno"},"content":"* Patient ID can be obtained by listing all the patients or search for a certain patients with available filters.","lastModifiedDate":"2021-09-24"},{"lineNumber":123,"author":{"gitId":"radiankrisno"},"content":"* Patient ID is **unique** (i.e. every patient will be assigned to a unique ID, hence this guarantees","lastModifiedDate":"2021-09-24"},{"lineNumber":124,"author":{"gitId":"radiankrisno"},"content":"  1 `delete t/patient` command will not delete 2 patients at once).","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"radiankrisno"},"content":"* Invalid Patient ID being supplied would be flagged by GoMedic, and do not cause changes to any existing patients.","lastModifiedDate":"2021-09-24"},{"lineNumber":126,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":127,"author":{"gitId":"simonjulianl"},"content":"Examples:","lastModifiedDate":"2021-09-24"},{"lineNumber":128,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":129,"author":{"gitId":"radiankrisno"},"content":"* `delete t/patient i/P001`","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":131,"author":{"gitId":"radiankrisno"},"content":"### Updating an existing patient: `update t/patient`","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"radiankrisno"},"content":"Updates a patient\u0027s details from the GoMedic application.","lastModifiedDate":"2021-09-24"},{"lineNumber":134,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"radiankrisno"},"content":"Format: ","lastModifiedDate":"2021-09-24"},{"lineNumber":136,"author":{"gitId":"radiankrisno"},"content":"`update t/patient i/PATIENT_ID [OPTIONAL_PARAMETER]...`","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"radiankrisno"},"content":"The flags are:","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"radiankrisno"},"content":"* `n/NAME` indicates the full name of the patient, first name and last name are separated by `-`.","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"radiankrisno"},"content":"* `a/AGE` is greater than or equal to 0.","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"radiankrisno"},"content":"* `g/GENDER` is chosen from one of 3 choices, `M/F/O` where `M` is for Male, `F` is for Female, and `O` is for Others.","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"radiankrisno"},"content":"* `h/HEIGHT` is the height of patient in centimeters rounded to the nearest integer.","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"radiankrisno"},"content":"* `w/WEIGHT` is the weight of patient in kilograms rounded to the nearest integer.","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"radiankrisno"},"content":"* `b/BLOOD_TYPE` is chosen from one of the 4 choices, `A/B/AB/O`.","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"radiankrisno"},"content":"* `c/CONTACT_NUMBER` must be 8-digit Singapore phone number.","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"radiankrisno"},"content":"* `o/[OPTIONAL...]` is the list of patient\u0027s past/pre-existing medical conditions. For medical condition that has","lastModifiedDate":"2021-09-25"},{"lineNumber":147,"author":{"gitId":"radiankrisno"},"content":"  multiple words, use `-` to combine the words, e.g. `heart-failure`. To separate between conditions, use `/`.","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"radiankrisno"},"content":"* `do/[OPTIONAL_TO_DELETE...]` is the list of patient\u0027s past/pre-existing medical conditions to delete. For medical","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"radiankrisno"},"content":"  condition that has multiple words, use `-` to combine the words, e.g. `heart-failure`. To separate between conditions, use `/`.","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"radiankrisno"},"content":"* Patient ID can be obtained by listing all the patients or search for a certain patients with available filters.","lastModifiedDate":"2021-09-24"},{"lineNumber":151,"author":{"gitId":"radiankrisno"},"content":"* Patient ID is **unique** (i.e. every patient will be assigned to a unique ID, hence this guarantees","lastModifiedDate":"2021-09-24"},{"lineNumber":152,"author":{"gitId":"radiankrisno"},"content":"  1 `delete t/patient` command will not delete 2 patients at once).","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"radiankrisno"},"content":"* Invalid Patient ID being supplied would be flagged by GoMedic, and do not cause changes to any existing patients.","lastModifiedDate":"2021-09-24"},{"lineNumber":154,"author":{"gitId":"radiankrisno"},"content":"* Invalid `OPTIONAL_TO_DELETE` conditions supplied would be flagged by GoMedic, and do not cause changes to the","lastModifiedDate":"2021-09-24"},{"lineNumber":155,"author":{"gitId":"radiankrisno"},"content":"existing patient.","lastModifiedDate":"2021-09-24"},{"lineNumber":156,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":157,"author":{"gitId":"radiankrisno"},"content":"Examples:","lastModifiedDate":"2021-09-24"},{"lineNumber":158,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":159,"author":{"gitId":"radiankrisno"},"content":"* `update t/patient i/P123 n/John-Doe a/30 g/M`","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"radiankrisno"},"content":"* `update t/patient i/P003 n/Tom-Doe a/20 g/M h/167 w/61 b/AB c/12341234 do/diabetes`","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":162,"author":{"gitId":"radiankrisno"},"content":"### Adding a new doctor\u0027s details: `add t/doctor`","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":164,"author":{"gitId":"radiankrisno"},"content":"Adds a new doctor into the GoMedic application.","lastModifiedDate":"2021-09-24"},{"lineNumber":165,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":166,"author":{"gitId":"radiankrisno"},"content":"Format: `add t/doctor n/NAME c/CONTACT_NUMBER s/DEPARTMENT`","lastModifiedDate":"2021-09-25"},{"lineNumber":167,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":168,"author":{"gitId":"radiankrisno"},"content":"* `NAME` indicates the full name of the doctor, first name and last name are separated by `-`.","lastModifiedDate":"2021-09-24"},{"lineNumber":169,"author":{"gitId":"radiankrisno"},"content":"* `CONTACT_NUMBER` must be 8-digit Singapore phone number.","lastModifiedDate":"2021-09-24"},{"lineNumber":170,"author":{"gitId":"radiankrisno"},"content":"* `DEPARTMENT` is the name of the department where the doctor serves in String.","lastModifiedDate":"2021-09-24"},{"lineNumber":171,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":172,"author":{"gitId":"simonjulianl"},"content":"Examples:","lastModifiedDate":"2021-09-24"},{"lineNumber":173,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":174,"author":{"gitId":"radiankrisno"},"content":"* `add t/doctor n/Timmy-Tom c/98765432 s/neurology`","lastModifiedDate":"2021-09-25"},{"lineNumber":175,"author":{"gitId":"radiankrisno"},"content":"* `add t/doctor n/John-White c/12312312 s/cardiology`","lastModifiedDate":"2021-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"radiankrisno"},"content":"### Deleting an existing doctor: `delete t/doctor`","lastModifiedDate":"2021-09-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"radiankrisno"},"content":"Deletes a doctor from the GoMedic application.","lastModifiedDate":"2021-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"radiankrisno"},"content":"Format: `delete t/doctor i/DOCTOR_ID`","lastModifiedDate":"2021-09-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"radiankrisno"},"content":"* Doctor ID can be obtained by listing all the doctors or search for a certain doctors with available filters.","lastModifiedDate":"2021-09-24"},{"lineNumber":184,"author":{"gitId":"radiankrisno"},"content":"* Doctor ID is **unique** (i.e. every doctor will be assigned to a unique ID, hence this guarantees","lastModifiedDate":"2021-09-24"},{"lineNumber":185,"author":{"gitId":"radiankrisno"},"content":"  1 `delete t/doctor` command will not delete 2 doctors at once).","lastModifiedDate":"2021-09-25"},{"lineNumber":186,"author":{"gitId":"radiankrisno"},"content":"* Invalid Doctor ID being supplied would be flagged by GoMedic, and do not cause changes to any existing doctors.","lastModifiedDate":"2021-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":190,"author":{"gitId":"radiankrisno"},"content":"* `delete t/doctor i/D001`","lastModifiedDate":"2021-09-25"},{"lineNumber":191,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":192,"author":{"gitId":"radiankrisno"},"content":"### Updating an existing doctor: `update t/doctor`","lastModifiedDate":"2021-09-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"radiankrisno"},"content":"Updates a doctor\u0027s details from the GoMedic application.","lastModifiedDate":"2021-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"radiankrisno"},"content":"Format: `update t/doctor [OPTIONAL_PARAMETER]...`","lastModifiedDate":"2021-09-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"radiankrisno"},"content":"The flags are:","lastModifiedDate":"2021-09-25"},{"lineNumber":199,"author":{"gitId":"radiankrisno"},"content":"* `n/NAME` indicates the full name of the doctor, first name and last name are separated by `-`.","lastModifiedDate":"2021-09-25"},{"lineNumber":200,"author":{"gitId":"radiankrisno"},"content":"* `c/CONTACT_NUMBER` must be 8-digit Singapore phone number.","lastModifiedDate":"2021-09-25"},{"lineNumber":201,"author":{"gitId":"radiankrisno"},"content":"* `d/DEPARTMENT` is the name of the department where the doctor serves in String.","lastModifiedDate":"2021-09-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"radiankrisno"},"content":"Examples:","lastModifiedDate":"2021-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"radiankrisno"},"content":"* `add t/doctor i/D123 c/11112222`","lastModifiedDate":"2021-09-25"},{"lineNumber":206,"author":{"gitId":"radiankrisno"},"content":"* `add t/doctor i/D101 s/orthopaedics`","lastModifiedDate":"2021-09-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"yyhangz"},"content":"### Tagging an activity: `tag t/activity`","lastModifiedDate":"2021-09-24"},{"lineNumber":209,"author":{"gitId":"yyhangz"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":210,"author":{"gitId":"yyhangz"},"content":"Tags a specific activity with the tags specified in the command.","lastModifiedDate":"2021-09-24"},{"lineNumber":211,"author":{"gitId":"yyhangz"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":212,"author":{"gitId":"yyhangz"},"content":"Format: `tag t/activity i/ACTIVITY_ID [ta/TAG_DESCRIPTION]...`","lastModifiedDate":"2021-09-24"},{"lineNumber":213,"author":{"gitId":"yyhangz"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":214,"author":{"gitId":"yyhangz"},"content":"* Activity ID can be obtained by listing all the activities or a search for certain activities within a certain time","lastModifiedDate":"2021-09-24"},{"lineNumber":215,"author":{"gitId":"yyhangz"},"content":"  frame.","lastModifiedDate":"2021-09-24"},{"lineNumber":216,"author":{"gitId":"yyhangz"},"content":"* Activity ID is **unique** (i.e. every activity will be assigned to a unique ID, hence this guarantees","lastModifiedDate":"2021-09-24"},{"lineNumber":217,"author":{"gitId":"yyhangz"},"content":"  1 `tag t/activity` command will not tag 2 activities at once).","lastModifiedDate":"2021-09-24"},{"lineNumber":218,"author":{"gitId":"yyhangz"},"content":"* Invalid Activity IDs supplied would be flagged by GoMedic, and do not cause changes to any existing activities.","lastModifiedDate":"2021-09-24"},{"lineNumber":219,"author":{"gitId":"yyhangz"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":220,"author":{"gitId":"yyhangz"},"content":"_Tagging for doctors and patients coming soon..._","lastModifiedDate":"2021-09-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":224,"author":{"gitId":"yyhangz"},"content":"* `tag t/activity i/A420 ta/important ta/NUS ta/schoolwork`","lastModifiedDate":"2021-09-24"},{"lineNumber":225,"author":{"gitId":"yyhangz"},"content":"* `tag t/activity i/A421 ta/important`","lastModifiedDate":"2021-09-24"},{"lineNumber":226,"author":{"gitId":"yyhangz"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":227,"author":{"gitId":"yyhangz"},"content":"### Find results that contain keyword: `find [OPTIONAL_FLAG/]KEYWORD...`","lastModifiedDate":"2021-09-24"},{"lineNumber":228,"author":{"gitId":"yyhangz"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":229,"author":{"gitId":"yyhangz"},"content":"Searches for doctors, patients and activities that contain the specified keyword as a substring in any of their details.","lastModifiedDate":"2021-09-24"},{"lineNumber":230,"author":{"gitId":"yyhangz"},"content":"If more than 1 keyword is specified, results that contain at least 1 of the keywords will be returned (i.e. `OR` search)","lastModifiedDate":"2021-09-24"},{"lineNumber":231,"author":{"gitId":"yyhangz"},"content":"E.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-09-24"},{"lineNumber":232,"author":{"gitId":"yyhangz"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":233,"author":{"gitId":"yyhangz"},"content":"Users can specify additional optional flags to limit the keyword matching to the fields that is associated with","lastModifiedDate":"2021-09-24"},{"lineNumber":234,"author":{"gitId":"yyhangz"},"content":"each flag. Flags will only match results that contain the associated field (E.g. n/Hans will not return any `activities` ","lastModifiedDate":"2021-09-24"},{"lineNumber":235,"author":{"gitId":"yyhangz"},"content":"since `activities` do not have a `name` field.)","lastModifiedDate":"2021-09-24"},{"lineNumber":236,"author":{"gitId":"yyhangz"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":237,"author":{"gitId":"yyhangz"},"content":"The flags are:","lastModifiedDate":"2021-09-24"},{"lineNumber":238,"author":{"gitId":"yyhangz"},"content":"* `n/NAME`: Matches the name field (Valid for: `Patients`, `Doctors`)","lastModifiedDate":"2021-09-24"},{"lineNumber":239,"author":{"gitId":"yyhangz"},"content":"* `c/CONTACT_NUMBER`: Matches the contact number field (Valid for: `Patients`, `Doctors`)","lastModifiedDate":"2021-09-24"},{"lineNumber":240,"author":{"gitId":"yyhangz"},"content":"* `a/AGE`: Matches the age field (Valid for: `Patients`)","lastModifiedDate":"2021-09-24"},{"lineNumber":241,"author":{"gitId":"yyhangz"},"content":"* `g/GENDER`: Matches the gender field; The only valid keywords for this field are `M/F/O` (Valid for: `Patients`)","lastModifiedDate":"2021-09-24"},{"lineNumber":242,"author":{"gitId":"yyhangz"},"content":"* `h/HEIGHT`: Matches the height field (Valid for: `Patients`)","lastModifiedDate":"2021-09-24"},{"lineNumber":243,"author":{"gitId":"yyhangz"},"content":"* `w/WEIGHT`: Matches the weight field (Valid for: `Patients`)","lastModifiedDate":"2021-09-24"},{"lineNumber":244,"author":{"gitId":"yyhangz"},"content":"* `b/BLOOD_TYPE`: Matches the blood type field; The only valid keywords for this field are `A/B/AB/O` ","lastModifiedDate":"2021-09-24"},{"lineNumber":245,"author":{"gitId":"yyhangz"},"content":"(Valid for: `Patients`)","lastModifiedDate":"2021-09-24"},{"lineNumber":246,"author":{"gitId":"yyhangz"},"content":"* `m/MEDICAL_CONDITION`: Limits the keyword search to the list of medical conditions of a patient (Valid for: `Patients`)","lastModifiedDate":"2021-09-24"},{"lineNumber":247,"author":{"gitId":"yyhangz"},"content":"* `s/DEPARTMENT`: Matches the department field (Valid for: `Doctors`)","lastModifiedDate":"2021-09-24"},{"lineNumber":248,"author":{"gitId":"yyhangz"},"content":"* `ti/TITLE`: Matches the title field (Valid for: `Activities`)","lastModifiedDate":"2021-09-24"},{"lineNumber":249,"author":{"gitId":"yyhangz"},"content":"* `ta/TAG_DESCRIPTION`: Matches results that contain the specified tag in its list of tags (Valid for: `Activities`, ","lastModifiedDate":"2021-09-24"},{"lineNumber":250,"author":{"gitId":"yyhangz"},"content":"_Tagging for `Doctors` and `Patients` coming soon_)","lastModifiedDate":"2021-09-24"},{"lineNumber":251,"author":{"gitId":"yyhangz"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":252,"author":{"gitId":"yyhangz"},"content":"Format: `find [OPTIONAL_FLAG/]KEYWORD...`","lastModifiedDate":"2021-09-24"},{"lineNumber":253,"author":{"gitId":"yyhangz"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":254,"author":{"gitId":"yyhangz"},"content":"* Keyword is case-insensitive for convenience (“dia” will match diabetic patients even if the user stored the ","lastModifiedDate":"2021-09-24"},{"lineNumber":255,"author":{"gitId":"yyhangz"},"content":"patient\u0027s condition as “Diabetes”)","lastModifiedDate":"2021-09-24"},{"lineNumber":256,"author":{"gitId":"yyhangz"},"content":"* Flags can be repeated (e.g. `find n/Hans n/Bo` will return both `Hans Gruber` and `Bo Yang`)","lastModifiedDate":"2021-09-24"},{"lineNumber":257,"author":{"gitId":"yyhangz"},"content":"* If the optional flag is not specified, the keyword will match any fields.","lastModifiedDate":"2021-09-24"},{"lineNumber":258,"author":{"gitId":"yyhangz"},"content":"E.g. `find dia` will return:","lastModifiedDate":"2021-09-24"},{"lineNumber":259,"author":{"gitId":"yyhangz"},"content":"    1. Doctor Claudia, whose name matches `dia`","lastModifiedDate":"2021-09-24"},{"lineNumber":260,"author":{"gitId":"yyhangz"},"content":"    2. Patient Jaryl, whose medical condition, `diabetes`, matches `dia`","lastModifiedDate":"2021-09-24"},{"lineNumber":261,"author":{"gitId":"yyhangz"},"content":"    3. Doctor Tom, whose specialty, `Pediatrics`, matches `dia`","lastModifiedDate":"2021-09-24"},{"lineNumber":262,"author":{"gitId":"yyhangz"},"content":"    4. Patient Lydia, whose name matches `dia`","lastModifiedDate":"2021-09-24"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":264,"author":{"gitId":"yyhangz"},"content":"Examples:","lastModifiedDate":"2021-09-24"},{"lineNumber":265,"author":{"gitId":"yyhangz"},"content":"* `find m/diabetes a/42 n/Jaryl`","lastModifiedDate":"2021-09-24"},{"lineNumber":266,"author":{"gitId":"yyhangz"},"content":"* `find ta/important ti/tutorial`","lastModifiedDate":"2021-09-24"},{"lineNumber":267,"author":{"gitId":"yyhangz"},"content":"* `find dia`","lastModifiedDate":"2021-09-24"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":269,"author":{"gitId":"radiankrisno"},"content":"### Adding a new activity: `add t/activity`","lastModifiedDate":"2021-09-24"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"radiankrisno"},"content":"Adds a new activity into your GoMedic scheduler.","lastModifiedDate":"2021-09-24"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":273,"author":{"gitId":"radiankrisno"},"content":"Format: `add t/activity s/START_TIME e/END_TIME ti/TITLE [d/DESCRIPTION]`","lastModifiedDate":"2021-09-24"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":275,"author":{"gitId":"radiankrisno"},"content":"* `START_TIME` and `END_TIME` must follow one of the formats specified.","lastModifiedDate":"2021-09-24"},{"lineNumber":276,"author":{"gitId":"radiankrisno"},"content":"* `START_TIME` is strictly less than `END_TIME`.","lastModifiedDate":"2021-09-24"},{"lineNumber":277,"author":{"gitId":"radiankrisno"},"content":"* Clashing activity (including partial overlap with other activities or appointments) would be considered as invalid","lastModifiedDate":"2021-09-24"},{"lineNumber":278,"author":{"gitId":"radiankrisno"},"content":"  activity (i.e. not to be added).","lastModifiedDate":"2021-09-24"},{"lineNumber":279,"author":{"gitId":"radiankrisno"},"content":"* `TITLE` ideally should be very short so that it can be displayed in the list without being truncated.","lastModifiedDate":"2021-09-24"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":281,"author":{"gitId":"radiankrisno"},"content":"**Tip:** Try to pack as many keywords as possible inside the description while keep it concise so that you can search it","lastModifiedDate":"2021-09-24"},{"lineNumber":282,"author":{"gitId":"radiankrisno"},"content":"later.","lastModifiedDate":"2021-09-24"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":286,"author":{"gitId":"radiankrisno"},"content":" * `add t/activity s/2022-09-15-14-00 e/15/09/2022 15:00 ti/Meeting with Mr. X d/about a certain paper`","lastModifiedDate":"2021-09-24"},{"lineNumber":287,"author":{"gitId":"radiankrisno"},"content":"* `add t/activity s/15/09/2022 14:00 e/15/09/2022 15:00 ti/Meeting with Mr. Y`","lastModifiedDate":"2021-09-24"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"radiankrisno"},"content":"### Deleting an existing activity: `delete t/activity`","lastModifiedDate":"2021-09-24"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"radiankrisno"},"content":"Delete a certain existing activity","lastModifiedDate":"2021-09-24"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"radiankrisno"},"content":"Format: `delete t/activity i/ACTIVITY_ID`","lastModifiedDate":"2021-09-24"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"radiankrisno"},"content":"* Activity ID can be obtained by listing all the activities or search for a certain activities within a certain time","lastModifiedDate":"2021-09-24"},{"lineNumber":296,"author":{"gitId":"radiankrisno"},"content":"  frame.","lastModifiedDate":"2021-09-24"},{"lineNumber":297,"author":{"gitId":"radiankrisno"},"content":"* Activity ID is **unique** (i.e. every activity will be assigned to a unique ID, hence this guarantees","lastModifiedDate":"2021-09-24"},{"lineNumber":298,"author":{"gitId":"radiankrisno"},"content":"  1 `delete t/activity` command will not delete 2 activities at once).","lastModifiedDate":"2021-09-24"},{"lineNumber":299,"author":{"gitId":"radiankrisno"},"content":"* Invalid Activity ID being supplied would be flagged by GoMedic, and do not cause changes to any existing activities.","lastModifiedDate":"2021-09-24"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":303,"author":{"gitId":"radiankrisno"},"content":"* `delete t/activity i/A123`","lastModifiedDate":"2021-09-24"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"radiankrisno"},"content":"### List all activities: `list t/activity`","lastModifiedDate":"2021-09-24"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"radiankrisno"},"content":"List all existing (past, present and future) activities that exist in GoMedic.","lastModifiedDate":"2021-09-24"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"radiankrisno"},"content":"Format: `list t/activity`","lastModifiedDate":"2021-09-24"},{"lineNumber":310,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":311,"author":{"gitId":"radiankrisno"},"content":"* Activities would be displayed in ascending `START_TIME` (The past activities would be at the top if any and Future","lastModifiedDate":"2021-09-24"},{"lineNumber":312,"author":{"gitId":"radiankrisno"},"content":"  activities at the bottom).","lastModifiedDate":"2021-09-24"},{"lineNumber":313,"author":{"gitId":"radiankrisno"},"content":"* The summary or description that are too long would be truncated.","lastModifiedDate":"2021-09-24"},{"lineNumber":314,"author":{"gitId":"radiankrisno"},"content":"* The `START_TIME` and `END_TIME` would be displayed in `dd-MM-yyyy HH:mm` GMT+8 24-Hour format.","lastModifiedDate":"2021-09-24"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"radiankrisno"},"content":":bulb: **Tip:** There are other upcoming `list` commands that can list future activities only and past activities only.","lastModifiedDate":"2021-09-24"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":320,"author":{"gitId":"radiankrisno"},"content":"* `list t/activity`","lastModifiedDate":"2021-09-24"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"simonjulianl"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to","lastModifiedDate":"2021-09-24"},{"lineNumber":337,"author":{"gitId":"simonjulianl"},"content":"save manually.","lastModifiedDate":"2021-09-24"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":341,"author":{"gitId":"simonjulianl"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to","lastModifiedDate":"2021-09-24"},{"lineNumber":342,"author":{"gitId":"simonjulianl"},"content":"update data directly by editing that data file.","lastModifiedDate":"2021-09-24"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":344,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":345,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":346,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":348,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"simonjulianl"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2021-09-24"},{"lineNumber":358,"author":{"gitId":"simonjulianl"},"content":"the data of your previous AddressBook home folder.","lastModifiedDate":"2021-09-24"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"ngsengleng"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]...​`\u003cbr\u003ee.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2021-09-26"},{"lineNumber":367,"author":{"gitId":"ngsengleng"},"content":"**Clear** | `clear`\u003cbr\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":368,"author":{"gitId":"ngsengleng"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`\u003cbr\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":369,"author":{"gitId":"ngsengleng"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003ee.g.,`edit 2 n/James Lee e/jameslee@example.com`\u003cbr\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":370,"author":{"gitId":"ngsengleng"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`\u003cbr\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":371,"author":{"gitId":"ngsengleng"},"content":"**List** | `list`\u003cbr\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":372,"author":{"gitId":"ngsengleng"},"content":"**Help** | `help`\u003cbr\u003e","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"ngsengleng":10,"radiankrisno":110,"simonjulianl":53,"yyhangz":56,"-":143}},{"path":"docs/team/ngsengleng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"layout: page","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"title: Ng Seng Leng\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"### Project: GoMedic","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"GoMedic is a cross-platform desktop application written in Java and designed for doctors and medical residents to manage contacts and patient details.","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"We aim GoMedic to be used by someone who can type fast and take advantage of the optimized features for","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"Command Line Interface.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"ngsengleng":12}},{"path":"docs/team/radiankrisno.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"radiankrisno"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"radiankrisno"},"content":"layout: page","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"radiankrisno"},"content":"title: Radian Krisno\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"radiankrisno"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"### Project: GoMedic","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"GoMedic is a cross-platform desktop application written in Java and designed for doctors and medical residents to manage contacts and patient details.","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"radiankrisno"},"content":"We aim GoMedic to be used by someone who can type fast and take advantage of the optimized features for ","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"radiankrisno"},"content":"Command Line Interface. ","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"radiankrisno"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"radiankrisno"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"radiankrisno":10,"simonjulianl":2}},{"path":"docs/team/simonjulianlauw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"layout: page","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"title: Simon Julian Lauw\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"### Project: GoMedic","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"GoMedic is a cross-platform desktop application written in Java and designed for doctors and medical residents to manage contacts and patient details.","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"We aim GoMedic to be used by someone who can type fast and take advantage of the optimized features for","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"Command Line Interface.","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"simonjulianl":13}},{"path":"docs/team/yapyuhang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yyhangz"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"yyhangz"},"content":"layout: page","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"yyhangz"},"content":"title: Yap Yuhang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"yyhangz"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"yyhangz"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"yyhangz"},"content":"### Project: GoMedic","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"yyhangz"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"yyhangz"},"content":"GoMedic is a cross-platform desktop application written in Java and designed for doctors and medical residents to manage contacts and patient details.","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"yyhangz"},"content":"We aim GoMedic to be used by someone who can type fast and take advantage of the optimized features for","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"yyhangz"},"content":"Command Line Interface.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"yyhangz"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"yyhangz"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"yyhangz"},"content":"","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"yyhangz":13}}]
