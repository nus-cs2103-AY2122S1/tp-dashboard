[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W11-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W11-3/tp/actions)","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"![Ui](docs/images/Ui1.png)","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"Hello World!!","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"* ManageMe is **a desktop app for time management and resource organisation, targeted at students**.\u003cbr\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"  * as a calendar that keep tracks of upcoming tasks like Todos, Events and Deadlines.","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"  * as a platform to store material related to modules taken by the student","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"* It is optimized for use via a **Command Line Interface (CLI)** while still having the benefits of a **Graphical User Interface (GUI).** If you can type fast, ManageMe can get your tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"* ManageMe is an ongoing software project with regular updates and constantly improving features.","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"  * It is **written in OOP fashion** and provides a **reasonably well-written** code base with around **6k LoC**.","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"* For the detailed documentation of this project, see the **[ManageMe Website](https://ay2122s1-cs2103t-w11-3.github.io/tp/)**.","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"* This project is **based on the AddressBook-Level3 project** created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"zhangchengchuan":10,"-":4,"Tianqi-Zhu":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"JinxinZhao315"},"content":"mainClassName \u003d \u0027manageme.Main\u0027","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"    archiveName \u003d \u0027manageme.jar\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JinxinZhao315":1,"chowRuiYan":1,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"### Markus Lim","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"\u003cimg src\u003d\"images/markuslim24.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"[[github](https://github.com/markuslim24)]","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"[[portfolio](team/markus.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"* Role: Team Lead","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"* Responsibilities: Host meeting","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"### Zhu Tianqi","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"\u003cimg src\u003d\"images/tianqi-zhu.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"[[github](http://github.com/Tianqi-Zhu)]","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"[[portfolio](team/Tianqi-Zhu.md)]","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"* Responsibilities: Deliverable and deadlines, Scheduling and tracking, Github master","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"### Zhao Jinxin","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"\u003cimg src\u003d\"images/jinxinzhao315.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"[[github](http://github.com/JinxinZhao315)]","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"[[portfolio](team/jinxinzhao.md)]","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"### Chow Rui Yan","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"\u003cimg src\u003d\"images/chowruiyan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"[[github](https://github.com/chowRuiYan)]","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"[[portfolio](team/chowruiyan.md)]","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"* Role: Testing","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"### Zhang Cheng Chuan","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"\u003cimg src\u003d\"images/zhangchengchuan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"[[github](http://github.com/zhangchengchuan)]","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"[[portfolio](team/chengchuan.md)]","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"* Responsibilities: In charge of integration","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"markuslim24":5,"zhangchengchuan":4,"chowRuiYan":5,"-":33,"Tianqi-Zhu":12}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Tianqi-Zhu"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `deleteTask 1`.","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103T-W11-3/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"The UI consists of a `MmMainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ModuleListPanel`, `TaskListPanel` etc. All these, including the `MmMainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MmMainWindow`](https://github.com/AY2122S1-CS2103T-W11-3/tp/blob/master/src/main/java/seedu/address/ui/MmMainWindow.java) is specified in [`MmMainWindow.fxml`](https://github.com/AY2122S1-CS2103T-W11-3/tp/blob/master/src/main/resources/view/MmMainWindow.fxml)","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"* depends on some classes in the `Model` component, as it displays `Module` and `Task` objects residing in the `Model`.","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"JinxinZhao315"},"content":"1. When `Logic` is called upon to execute a command, it uses the `ManageMeParser` class to parse the user command.","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"JinxinZhao315"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddTaskCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"JinxinZhao315"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a task).","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"JinxinZhao315"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"deleteTask 1\")` API call.","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"JinxinZhao315"},"content":"![Interactions Inside the Logic Component for the `deleteTask 1` Command](images/DeleteTaskSequenceDiagram.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"JinxinZhao315"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteTaskCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"JinxinZhao315"},"content":"\u003cimg src\u003d\"images/ParserClassesManageMe.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"JinxinZhao315"},"content":"* When called upon to parse a user command, the `ManageMeParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddTaskCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddTaskCommand`) which the `ManageMeParser` returns back as a `Command` object.","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"JinxinZhao315"},"content":"* All `XYZCommandParser` classes (e.g., `AddTaskCommandParser`, `DeleteTaskCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"markuslim24"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-W11-3/tp/blob/master/src/main/java/manageme/model/Model.java)","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"markuslim24"},"content":"\u003cimg src\u003d\"images/MMModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"markuslim24"},"content":"* store the object data of ManageMe i.e., all `Module` and `Task` objects (which are contained in a ","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"markuslim24"},"content":"  `UniqueModuleList` ","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"markuslim24"},"content":"  object ","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"markuslim24"},"content":"  and a `UniqueTaskList` respectively).","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"markuslim24"},"content":"* stores the currently \u0027selected\u0027 `Task` objects (e.g., results of a search query) as a separate _filtered_ list ","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"markuslim24"},"content":"  which ","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"markuslim24"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cTask\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to ","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"markuslim24"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"markuslim24"},"content":"[comment]: \u003c\u003e (\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative \u0026#40;arguably, a more OOP\u0026#41; model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e)","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"markuslim24"},"content":"[comment]: \u003c\u003e (\u003cimg src\u003d\"images/ManageMeModelClassDiagram.png\" width\u003d\"450\" /\u003e)","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"markuslim24"},"content":"[comment]: \u003c\u003e (\u003c/div\u003e)","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"zhangchengchuan"},"content":"\u003cimg src\u003d\"images/MMStorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"zhangchengchuan"},"content":"* can save both ManageMe data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"zhangchengchuan"},"content":"* inherits from both `ManageMeStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"Tianqi-Zhu"},"content":"Classes used by multiple components are in the `manageme.commons` package.","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"zhangchengchuan"},"content":"### Time component","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"zhangchengchuan"},"content":"[comment]: \u003c\u003e (**API** : [`Storage.java`]\u0026#40;https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java\u0026#41;)","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"zhangchengchuan"},"content":"\u003cimg src\u003d\"images/MMTimeClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"zhangchengchuan"},"content":"The `Time` component,","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"zhangchengchuan"},"content":"* is used as a standalone component to facilitate the tracking of time.","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"zhangchengchuan"},"content":"* enables notifications by comparing tasks\u0027 start and end time with system time.","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"Tianqi-Zhu"},"content":"The user can type `archive data` to archive the data, which creates a new empty data file for the current manageme gui and saves the old data files. User may also type `choose data {data_file_name}` to choose the data file that manageme currently reads.","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"zhangchengchuan"},"content":"A Digital-Age student who...","lastModifiedDate":"2021-09-26"},{"lineNumber":199,"author":{"gitId":"zhangchengchuan"},"content":"* Needs to organize multiple tasks (events, tasks and deadlines), some of them involve computer files stored locally.","lastModifiedDate":"2021-09-26"},{"lineNumber":200,"author":{"gitId":"zhangchengchuan"},"content":"* Needs to organize multiple modules with many links to relevant online resources.","lastModifiedDate":"2021-09-26"},{"lineNumber":201,"author":{"gitId":"zhangchengchuan"},"content":"* Prefers visualizing all tasks and modules on a calendar for clear and quick presentation.","lastModifiedDate":"2021-09-26"},{"lineNumber":202,"author":{"gitId":"zhangchengchuan"},"content":"* Prefers desktop application over mobile application.","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"zhangchengchuan"},"content":"* Prefers typing over the use of mouse.","lastModifiedDate":"2021-09-29"},{"lineNumber":204,"author":{"gitId":"zhangchengchuan"},"content":"* Comfortable with the use of Command Line Interface (CLI).","lastModifiedDate":"2021-09-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":206,"author":{"gitId":"zhangchengchuan"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-26"},{"lineNumber":207,"author":{"gitId":"zhangchengchuan"},"content":"* Manage modules and tasks faster than a typical mouse/GUI driven app.","lastModifiedDate":"2021-09-26"},{"lineNumber":208,"author":{"gitId":"zhangchengchuan"},"content":"* Manage multiple web links and file paths associated with modules and tasks.","lastModifiedDate":"2021-09-26"},{"lineNumber":209,"author":{"gitId":"zhangchengchuan"},"content":"* Summarises crucial information clearly such as:","lastModifiedDate":"2021-09-26"},{"lineNumber":210,"author":{"gitId":"zhangchengchuan"},"content":"    1) Tasks due Today and","lastModifiedDate":"2021-09-26"},{"lineNumber":211,"author":{"gitId":"zhangchengchuan"},"content":"    2) Upcoming Events on the Calendar","lastModifiedDate":"2021-09-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                                                       | So that I can…​                                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"zhangchengchuan"},"content":"| -------- | ------------------------------------------ | --------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-09-26"},{"lineNumber":221,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* * *`  | Forgetful User                             | Add tasks                                                             | I can keep track of what I have done, and need to do.                                                     |","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* * *`  | Forgetful User                             | Add optional begin and end times to tasks                             |                                                                                                           |","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* * *`  | Forgetful User                             | Mark a task as done                                                   |                                                                                                           |","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* * *`  | Forgetful User                             | View all my tasks                                                     |                                                                                                           |","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* *`    | Forgetful User                             | Add optional tags to tasks                                            | I can organize tasks by their types.                                                                      |","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"zhangchengchuan"},"content":"| `* * *`  | Forgetful User                             | Edit my tasks                                                         | I can make changes to the status of the tasks or change task information.                                 |","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* * *`  | Forgetful User                             | Delete my tasks                                                       | I can get rid of unwanted tasks.                                                                          |","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"zhangchengchuan"},"content":"| `* *`    | Forgetful User                             | Add recurring tasks                                                   | I do not have to add the same task multiple times.                                                        |","lastModifiedDate":"2021-09-29"},{"lineNumber":229,"author":{"gitId":"zhangchengchuan"},"content":"| `* *`    | Easily-distracted User                     | Filter tasks by tags                                                  | I can choose to see only the most important tasks.                                                        |","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"zhangchengchuan"},"content":"| `* * *`  | Student                                    | Add modules                                                           | I can store all relevant information and links related to a module together.                              |","lastModifiedDate":"2021-09-26"},{"lineNumber":231,"author":{"gitId":"zhangchengchuan"},"content":"| `* * *`  | Student                                    | View all my modules                                                   | I can keep track of the different modules that I am taking this semester.                                 |","lastModifiedDate":"2021-09-26"},{"lineNumber":232,"author":{"gitId":"zhangchengchuan"},"content":"| `* * *`  | Student                                    | Edit my modules                                                       | I can make changes to information related to a module.                                                    |","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* * *`  | Student                                    | Delete my modules                                                     | I can get rid of modules that I am no longer taking.                                                      |","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* * *`  | Busy user                                  | View calendar                                                         | I can check the dates easily.                                                                             |","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* * *`  | Busy Student                               | See all tasks for today when I open the app                           | I can know what happens today conveniently.                                                               |","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* * *`  | Busy Student                               | View all tasks in a single day in the calendar according to its date  | I can know what happens on any particular date.                                                           |","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"zhangchengchuan"},"content":"| `* * *`  | Busy Student                               | View all upcoming tasks in a calendar                                 | I do not have to look through my entire task list to find upcoming tasks.                                 |","lastModifiedDate":"2021-09-26"},{"lineNumber":238,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* * *`  | Busy Student                               | See tasks in a calendar                                               | I can view the tasks in chronological order.                                                              |","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* * *`  | Busy Student                               | See classes in a calendar                                             | I can view my classes conveniently.                                                                       |","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* *`    | Digital-Age Student                        | Add filepaths in my local directory to tasks                          | I can access assignment files related to a task directly from the application.                            |","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* *`    | Digital Age Student                        | Add web links to tasks                                                | I can access related links conveniently.                                                                  |","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* *`    | Digital-Age Student                        | Add filepaths in my local directory to modules                        | I can access module related files directly from the application.                                          |","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* *`    | Digital Age Student                        | Add web links to modules                                              | I can access related links conveniently.                                                                  |","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"zhangchengchuan"},"content":"| `* *`    | Easily Distracted Student                  | Receive reminders for tasks that have upcoming deadlines              | I have sufficient time to complete my \u0027due-soon\u0027 tasks should I get distracted by other tasks.            |","lastModifiedDate":"2021-09-29"},{"lineNumber":245,"author":{"gitId":"zhangchengchuan"},"content":"| `* * *`  | User                                       | Search for a task using keywords                                      | I do not have to waste time browsing through my entire task list to find a task.                          |","lastModifiedDate":"2021-09-26"},{"lineNumber":246,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* `     | User                                       | Search for a link using keywords                                      | I do not have to waste time opening module or task tab to find a link.                                    |","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"Tianqi-Zhu"},"content":"| `*`      | User                                       | Search everywhere in the app                                          | I can search anything I want with minimum commands.                                                       |","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"zhangchengchuan"},"content":"| `* *`    | New User                                   | Open the command summary to help me navigate the application          | I know how to use the application to perform the functions that I want.                                   |","lastModifiedDate":"2021-09-29"},{"lineNumber":249,"author":{"gitId":"zhangchengchuan"},"content":"| `* *`    | Experienced User                           | Close the command summary                                             | It does not take up unnecessary screen space after I am familiar with the commands.                        |","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"zhangchengchuan"},"content":"| `*`      | User who likes to customize                | Personalise the appearance of the application                         | I can change the appearance of the application to my liking.                                              |","lastModifiedDate":"2021-09-29"},{"lineNumber":251,"author":{"gitId":"Tianqi-Zhu"},"content":"| `* *`    | Long-term user                             | Clear all tasks and modules                                           | I can easily reset the app when a new semester starts.                                                    |","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"Tianqi-Zhu"},"content":"| `*`      | Long-term user                             | Archive all the data                                                  | I can find my old tasks and module when I need to.                                                        |","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"Tianqi-Zhu"},"content":"| `*`      | Long-term user                             | Load previous data                                                    | I can read my old tasks and module when I need to.                                                        |  ","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"zhangchengchuan"},"content":"(For all use cases below, the **System** is `ManageMe` and the **Actor** is the `User`, unless specified otherwise)","lastModifiedDate":"2021-09-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"zhangchengchuan"},"content":"**Use case: Add Task**","lastModifiedDate":"2021-09-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"zhangchengchuan"},"content":"**MSS:**","lastModifiedDate":"2021-09-29"},{"lineNumber":263,"author":{"gitId":"zhangchengchuan"},"content":"1. User requests to add a task together with its details.","lastModifiedDate":"2021-09-29"},{"lineNumber":264,"author":{"gitId":"zhangchengchuan"},"content":"2. System adds the new task and displays it. \u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":265,"author":{"gitId":"zhangchengchuan"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":267,"author":{"gitId":"zhangchengchuan"},"content":"**Extensions:**","lastModifiedDate":"2021-09-26"},{"lineNumber":268,"author":{"gitId":"zhangchengchuan"},"content":"* 1a. System detects an error in the entered data.","lastModifiedDate":"2021-09-29"},{"lineNumber":269,"author":{"gitId":"zhangchengchuan"},"content":"    * 1a1. System shows error in parsing data.","lastModifiedDate":"2021-10-11"},{"lineNumber":270,"author":{"gitId":"zhangchengchuan"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2021-10-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":273,"author":{"gitId":"zhangchengchuan"},"content":"**Use case: Edit Task**","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":275,"author":{"gitId":"zhangchengchuan"},"content":"**MSS:**","lastModifiedDate":"2021-09-26"},{"lineNumber":276,"author":{"gitId":"zhangchengchuan"},"content":"1. User requests to edit a specified task and enters the new details.","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"zhangchengchuan"},"content":"2. System updates the details and displays the edited task. \u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":278,"author":{"gitId":"zhangchengchuan"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":280,"author":{"gitId":"zhangchengchuan"},"content":"**Extensions:**","lastModifiedDate":"2021-09-26"},{"lineNumber":281,"author":{"gitId":"zhangchengchuan"},"content":"* 1a. User enters an invalid task index\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":282,"author":{"gitId":"zhangchengchuan"},"content":"    * 1a1. System shows error in reading index.","lastModifiedDate":"2021-10-11"},{"lineNumber":283,"author":{"gitId":"zhangchengchuan"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2021-10-11"},{"lineNumber":284,"author":{"gitId":"zhangchengchuan"},"content":"* 1b. System detects an error in the entered data.","lastModifiedDate":"2021-09-29"},{"lineNumber":285,"author":{"gitId":"zhangchengchuan"},"content":"    * 1a1. System shows error in parsing data.","lastModifiedDate":"2021-10-11"},{"lineNumber":286,"author":{"gitId":"zhangchengchuan"},"content":"      Use case resumes from step 1. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":289,"author":{"gitId":"zhangchengchuan"},"content":"**Use case: Delete Task**","lastModifiedDate":"2021-09-26"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":291,"author":{"gitId":"zhangchengchuan"},"content":"**MSS:**","lastModifiedDate":"2021-09-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":293,"author":{"gitId":"zhangchengchuan"},"content":"1. User requests to delete a specified task.","lastModifiedDate":"2021-09-26"},{"lineNumber":294,"author":{"gitId":"zhangchengchuan"},"content":"2. System removes the specified task from the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":295,"author":{"gitId":"zhangchengchuan"},"content":"3. System updates the GUI to show the new task list. \u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":296,"author":{"gitId":"zhangchengchuan"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":298,"author":{"gitId":"zhangchengchuan"},"content":"**Extension:**","lastModifiedDate":"2021-09-26"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":300,"author":{"gitId":"zhangchengchuan"},"content":"* 1a. User enters an invalid task index","lastModifiedDate":"2021-09-29"},{"lineNumber":301,"author":{"gitId":"zhangchengchuan"},"content":"    * 1a1. System shows error in reading index.","lastModifiedDate":"2021-10-11"},{"lineNumber":302,"author":{"gitId":"zhangchengchuan"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2021-10-11"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":305,"author":{"gitId":"zhangchengchuan"},"content":"**Use case: Add Module**","lastModifiedDate":"2021-09-26"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":307,"author":{"gitId":"zhangchengchuan"},"content":"**MSS:**","lastModifiedDate":"2021-09-26"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":309,"author":{"gitId":"zhangchengchuan"},"content":"1. User requests to add a module together with its details.","lastModifiedDate":"2021-09-29"},{"lineNumber":310,"author":{"gitId":"zhangchengchuan"},"content":"2. System adds the new module and displays it.","lastModifiedDate":"2021-09-29"},{"lineNumber":311,"author":{"gitId":"zhangchengchuan"},"content":"3. Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"zhangchengchuan"},"content":"* 1a. The parameters entered are invalid, such as Invalid Module Code, mismatch of parameters.","lastModifiedDate":"2021-09-29"},{"lineNumber":315,"author":{"gitId":"Tianqi-Zhu"},"content":"    * 1a1. System shows error in reading index.","lastModifiedDate":"2021-10-12"},{"lineNumber":316,"author":{"gitId":"Tianqi-Zhu"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2021-10-12"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":318,"author":{"gitId":"zhangchengchuan"},"content":"**Use case: Edit Module**","lastModifiedDate":"2021-10-12"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"zhangchengchuan"},"content":"**MSS:**","lastModifiedDate":"2021-09-26"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"zhangchengchuan"},"content":"1. User requests to edit a specified module and enters the new details.","lastModifiedDate":"2021-10-12"},{"lineNumber":323,"author":{"gitId":"zhangchengchuan"},"content":"2. System updates the details and displays the edited module. \u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":324,"author":{"gitId":"zhangchengchuan"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"zhangchengchuan"},"content":"**Extensions:**","lastModifiedDate":"2021-09-29"},{"lineNumber":327,"author":{"gitId":"zhangchengchuan"},"content":"* 1a. User enters an invalid module index\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":328,"author":{"gitId":"Tianqi-Zhu"},"content":"    * 1a1. System shows error in reading index.","lastModifiedDate":"2021-10-12"},{"lineNumber":329,"author":{"gitId":"Tianqi-Zhu"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2021-10-12"},{"lineNumber":330,"author":{"gitId":"JinxinZhao315"},"content":"* 1b. System detects format errors in the entered data.","lastModifiedDate":"2021-10-20"},{"lineNumber":331,"author":{"gitId":"JinxinZhao315"},"content":"    * 1a1. System shows error in format.","lastModifiedDate":"2021-10-20"},{"lineNumber":332,"author":{"gitId":"Tianqi-Zhu"},"content":"      Use case resumes from step 1. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"zhangchengchuan"},"content":"**Use case: Delete Module**","lastModifiedDate":"2021-09-26"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":337,"author":{"gitId":"zhangchengchuan"},"content":"**MSS:**","lastModifiedDate":"2021-09-26"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":339,"author":{"gitId":"zhangchengchuan"},"content":"1. User requests to delete a specified module.","lastModifiedDate":"2021-09-29"},{"lineNumber":340,"author":{"gitId":"zhangchengchuan"},"content":"2. System removes the specified module from the module list.","lastModifiedDate":"2021-09-29"},{"lineNumber":341,"author":{"gitId":"zhangchengchuan"},"content":"3. System updates the GUI to show the new module list. \u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":342,"author":{"gitId":"zhangchengchuan"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":344,"author":{"gitId":"zhangchengchuan"},"content":"**Extension:**","lastModifiedDate":"2021-09-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":346,"author":{"gitId":"zhangchengchuan"},"content":"* 1a. User enters an invalid module index\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":347,"author":{"gitId":"Tianqi-Zhu"},"content":"    * 1a1. System shows error in reading index.","lastModifiedDate":"2021-10-12"},{"lineNumber":348,"author":{"gitId":"Tianqi-Zhu"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2021-10-12"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"JinxinZhao315"},"content":"**Use case: Find Module**","lastModifiedDate":"2021-10-20"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":353,"author":{"gitId":"JinxinZhao315"},"content":"**MSS:**","lastModifiedDate":"2021-10-20"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":355,"author":{"gitId":"JinxinZhao315"},"content":"1. User requests to search for specific modules by keyword.","lastModifiedDate":"2021-10-20"},{"lineNumber":356,"author":{"gitId":"JinxinZhao315"},"content":"3. System updates the GUI to show a list of all modules whose name contains the keyword. \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":357,"author":{"gitId":"JinxinZhao315"},"content":"   Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":359,"author":{"gitId":"JinxinZhao315"},"content":"**Extension:**","lastModifiedDate":"2021-10-20"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":361,"author":{"gitId":"JinxinZhao315"},"content":"* 1a. User does not enter a keyword. \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":362,"author":{"gitId":"JinxinZhao315"},"content":"    * 1a1. System shows invalid format error.","lastModifiedDate":"2021-10-20"},{"lineNumber":363,"author":{"gitId":"JinxinZhao315"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2021-10-20"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":365,"author":{"gitId":"JinxinZhao315"},"content":"**Use case: List all Modules**","lastModifiedDate":"2021-10-20"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":367,"author":{"gitId":"JinxinZhao315"},"content":"**MSS:**","lastModifiedDate":"2021-10-20"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":369,"author":{"gitId":"JinxinZhao315"},"content":"1. User requests to list all modules.","lastModifiedDate":"2021-10-20"},{"lineNumber":370,"author":{"gitId":"JinxinZhao315"},"content":"3. System updates the GUI to show the full list of keywords. \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":371,"author":{"gitId":"JinxinZhao315"},"content":"   Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":374,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"zhangchengchuan"},"content":"4. The system will not be responsible for checking the validity of external links entered into the system, such as Zoom links or Luminus links. They must be checked beforehand by the user.","lastModifiedDate":"2021-09-26"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"zhangchengchuan"},"content":"* **Digital-age:** A post-pandemic world where many schools have switched to online teaching and learning.","lastModifiedDate":"2021-09-26"},{"lineNumber":385,"author":{"gitId":"zhangchengchuan"},"content":"* **Module:** A course taken by a student, typically in a university.","lastModifiedDate":"2021-09-26"},{"lineNumber":386,"author":{"gitId":"zhangchengchuan"},"content":"* **Online resources:** Websites used by many schools in the post-pandemic world for teaching, file submission and assessment. For example, Zoom, Luminus, Exemplify etc.","lastModifiedDate":"2021-09-26"},{"lineNumber":387,"author":{"gitId":"zhangchengchuan"},"content":"* **Command Line Interface (CLI):** An interface where the user primarily gives command to the computer by typing text lines, instead of clicking and dragging graphic components.","lastModifiedDate":"2021-09-26"},{"lineNumber":388,"author":{"gitId":"zhangchengchuan"},"content":"* **Mainstream OS:** Windows, Linux OS-X","lastModifiedDate":"2021-09-26"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"Tianqi-Zhu"},"content":"### Deleting a task","lastModifiedDate":"2021-10-20"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"Tianqi-Zhu"},"content":"1. Deleting a task while all tasks are being shown","lastModifiedDate":"2021-10-20"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"Tianqi-Zhu"},"content":"    1. Prerequisites: List all tasks using the `list` command. Multiple tasks in the list.","lastModifiedDate":"2021-10-20"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"Tianqi-Zhu"},"content":"    1. Test case: `deleteTask 1`\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":425,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"Tianqi-Zhu"},"content":"    1. Test case: `deleteTask 0`\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":428,"author":{"gitId":"Tianqi-Zhu"},"content":"       Expected: No task is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-20"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"Tianqi-Zhu"},"content":"    1. Other incorrect delete commands to try: `deleteTask`, `deleteTask x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":431,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"Tianqi-Zhu"},"content":"    1. If there is a `data/manageme.json` file in the same directory with the jar, open the file and remove a random bracket. Launch the program.\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":440,"author":{"gitId":"Tianqi-Zhu"},"content":"       Expected: Warning of invalid json file will be shown in terminal. An empty manageme is launched.","lastModifiedDate":"2021-10-20"},{"lineNumber":441,"author":{"gitId":"Tianqi-Zhu"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":442,"author":{"gitId":"Tianqi-Zhu"},"content":"    2. If there isn\u0027t a `data/manageme.json` file in the same directory with the jar. Launch the program and add a random task. Close the program. Remove a random bracket from the data file. Relaunch the program.\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":443,"author":{"gitId":"Tianqi-Zhu"},"content":"       Expected: Warning of invalid json file will be shown in terminal. An empty manageme is launched.","lastModifiedDate":"2021-10-20"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JinxinZhao315":25,"markuslim24":13,"zhangchengchuan":94,"chowRuiYan":4,"-":266,"Tianqi-Zhu":43}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"   1. Run the `Main` and try a few commands.","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"-":54,"Tianqi-Zhu":1}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.commons.StringUtilTest`","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"   e.g. `StorageManagerTest`","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"   e.g. `LogicManagerTest`","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"-":34,"Tianqi-Zhu":2}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"ManageMe is a **desktop app for time management and resource organisation, optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, ManageMe can get your tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"# Table of Contents","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"1. Features","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"    1. Tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"        1. Add a Task: `addTask`","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"        2. Read a Task: `readTask`","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"        3. Edit a Task\u0027s Details: `editTask`","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"        4. Delete a Task: `deleteTask`","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"    2. Modules","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"        1. Add a Module: `addMod`","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"        2. Read a Module: `readMod`","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"        3. Update a Module\u0027s Details: `editMod`","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"        4. Delete a Module: `deleteMod`","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"        5. Find a Module by keyword: `findMod`","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"        6. List all Modules: `listMod`","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"    3. Calendar","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"    4. Others","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"        1. Get help: `help`","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"        2. Exit program: `exit`","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"2. Command Summary","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"## UI Mockup:","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"![Ui](images/Ui1.png)","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"![Ui](images/Ui2.png)","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user. E.g. `addTask n/TASK_NAME`","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"  , here `DESCRIPTION` is the parameter.\u003cbr\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"* Items in square brackets are optional. E.g. `addTask n/TASK_NAME [mod/CS2103]`\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Tianqi-Zhu"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Tianqi-Zhu"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"### TASK:","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"markuslim24"},"content":"#### Adding a task: `addTask`","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"Adds a task to the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"markuslim24"},"content":"A name and description for the task is compulsory.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"markuslim24"},"content":"It is optional to include an associated Module name, a start datetime and an end datetime.","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"markuslim24"},"content":"**:information_source: A start datetime cannot be included without an end datetime:**","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"Tianqi-Zhu"},"content":"Format:","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"markuslim24"},"content":"    addTask n/NAME d/DESCRIPTION [mod/MODULE_NAME] [s/START_DATETIME] [e/END_DATETIME]","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"Tianqi-Zhu"},"content":"#### Read details of a task: `readTask`","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"Tianqi-Zhu"},"content":"View a task in detail.","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"Format: `readTask INDEX`","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"markuslim24"},"content":"- Read task details at the specified `INDEX`. The index refers to the index number shown in the displayed task list. ","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"markuslim24"},"content":"- The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"markuslim24"},"content":"- Tasks will be displayed in this format: [Status] description (Module)(Date Time)","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Tianqi-Zhu"},"content":"    - Status: X for done, blank for not done","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"markuslim24"},"content":"    - Module is the name of the associated module","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Tianqi-Zhu"},"content":"    - Date is in the format: Month Day Year","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"Tianqi-Zhu"},"content":"    - Time is in 24-hour format","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"Tianqi-Zhu"},"content":"Example: `readTask 3`","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"markuslim24"},"content":"#### Edit a task: editTask","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"markuslim24"},"content":"Edit an existing task in the task list.","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"markuslim24"},"content":"Format: `editTask INDEX [n/NAME] [d/DESCRIPTION] [mod/MODULE_NAME] [s/START_DATETIME] [e/END_DATETIME]`","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"markuslim24"},"content":"* The index refers to the index number shown in the displayed module list","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"markuslim24"},"content":"* The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"markuslim24"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"markuslim24"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"markuslim24"},"content":"Example: `editTask 3 d/buy milk`","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"Tianqi-Zhu"},"content":"#### Deleting a task: `deleteTask`","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"Tianqi-Zhu"},"content":"Deletes the specified task from the task list.","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"Tianqi-Zhu"},"content":"Format: `deleteTask INDEX`","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"Tianqi-Zhu"},"content":"- Deletes the task at the specified `INDEX`","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"Tianqi-Zhu"},"content":"- The index refers to the index number shown in the displayed task list","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"Tianqi-Zhu"},"content":"- The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"Tianqi-Zhu"},"content":"Example: `deleteTask 2`","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"markuslim24"},"content":"### MODULE:","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"markuslim24"},"content":"#### Adding a module: `addMod`","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"markuslim24"},"content":"Adds a module into the module list. A module contains its name and zoom links. It can also be associated with any","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"markuslim24"},"content":"number of Todo, Deadline, Event tasks (like exams, assignments). These Tasks are added in the Task tab with a `/mod","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"markuslim24"},"content":"MODULE`.","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"Tianqi-Zhu"},"content":"Format: `addMod NAME /l LINK_NAME LINK` \u003cbr/\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"Tianqi-Zhu"},"content":"Examples: `addMod CS2103 /l tutorial https://...`","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"markuslim24"},"content":"#### Read details of a module: `readMod`","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"markuslim24"},"content":"View module in detail. Creates a pop-up window to show the course name, link, and all tasks associated with the course.","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"JinxinZhao315"},"content":"Format: `readMod INDEX`\u003cbr/\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"JinxinZhao315"},"content":"* The index refers to the index number shown in the displayed module list","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"JinxinZhao315"},"content":"* The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"JinxinZhao315"},"content":"Examples: `readMod 2`","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"JinxinZhao315"},"content":"#### Edit a module: `editMod`","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"markuslim24"},"content":"Update an existing module in the mod list.","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"JinxinZhao315"},"content":"Format: `editMod INDEX [n/NAME] [l/LINK]`","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"JinxinZhao315"},"content":"* Deletes the mod by the specified `INDEX`.\u003cbr/\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"JinxinZhao315"},"content":"* The index refers to the index number shown in the displayed module list","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"JinxinZhao315"},"content":"* The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"JinxinZhao315"},"content":"Example: `editMod 2 n/CS2103T l/https://...`","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"JinxinZhao315"},"content":"#### Delete a module: `deleteMod`","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"markuslim24"},"content":"Deletes the specified mod from the mod list.","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":133,"author":{"gitId":"JinxinZhao315"},"content":"Format: `deleteMod INDEX`","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"JinxinZhao315"},"content":"* Deletes the mod by the specified `INDEX`.","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"JinxinZhao315"},"content":"* The index refers to the index number shown in the displayed module list","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"JinxinZhao315"},"content":"* The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"JinxinZhao315"},"content":"Example: `deleteMod 2` deletes module No.2 from the list.","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"JinxinZhao315"},"content":"#### Find a module by keyword: `findMod`","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"JinxinZhao315"},"content":"Finds modules whose names contain any of the given keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"JinxinZhao315"},"content":"Format: `findMod KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"JinxinZhao315"},"content":"* The search is case-insensitive. e.g hans will match Hans","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"JinxinZhao315"},"content":"* The order of the keywords does not matter. e.g. Hans Bo will match Bo Hans","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"JinxinZhao315"},"content":"* Only the name is searched.","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"JinxinZhao315"},"content":"* Only full words will be matched e.g. Han will not match Hans","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"JinxinZhao315"},"content":"* Modules matching at least one keyword will be returned (i.e. OR search).","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"JinxinZhao315"},"content":"Example: `findMod computer` returns `Computer Organization` and `Computer Architecture`.","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"JinxinZhao315"},"content":"#### List all modules : `listMod`","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"JinxinZhao315"},"content":"Display the full list of modules. This command is used to return to the full list","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"JinxinZhao315"},"content":"of modules after searching for specific modules.","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"JinxinZhao315"},"content":"Format: `listMod`","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"Tianqi-Zhu"},"content":"### CALENDAR:","lastModifiedDate":"2021-09-24"},{"lineNumber":160,"author":{"gitId":"chowRuiYan"},"content":"#### Change calendar to next month: `nextMonth`","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"chowRuiYan"},"content":"Display the calendar for the next month. This command will update the entire calendar panel to display the calendar and the related task information for the following month.","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":163,"author":{"gitId":"chowRuiYan"},"content":"Format: `nextMonth`","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"chowRuiYan"},"content":"#### Change calendar to previous month: `prevMonth`","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"chowRuiYan"},"content":"Similar to `nextMonth`. However, this command display the calendar for the previous month instead.","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"chowRuiYan"},"content":"Format: `prevMonth`","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"chowRuiYan"},"content":"#### Read details happening on a day: `readDay`","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"chowRuiYan"},"content":"View a day in detail. Tasks happening on the specified day will be displayed.","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"chowRuiYan"},"content":"Format: `readDay DATE`","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"chowRuiYan"},"content":"* `DATE` given must be a valid date","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"chowRuiYan"},"content":"Example: `readDay 2021-10-19`","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":178,"author":{"gitId":"Tianqi-Zhu"},"content":"### OTHERS:","lastModifiedDate":"2021-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":180,"author":{"gitId":"Tianqi-Zhu"},"content":"#### Viewing help: `help`","lastModifiedDate":"2021-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":182,"author":{"gitId":"Tianqi-Zhu"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":184,"author":{"gitId":"Tianqi-Zhu"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":186,"author":{"gitId":"Tianqi-Zhu"},"content":"Format: `help`","lastModifiedDate":"2021-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":188,"author":{"gitId":"Tianqi-Zhu"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2021-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":190,"author":{"gitId":"Tianqi-Zhu"},"content":"Exits the program.","lastModifiedDate":"2021-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":192,"author":{"gitId":"Tianqi-Zhu"},"content":"Format: `exit`","lastModifiedDate":"2021-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":194,"author":{"gitId":"Tianqi-Zhu"},"content":"#### Saving the data","lastModifiedDate":"2021-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":196,"author":{"gitId":"Tianqi-Zhu"},"content":"Data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2021-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2021-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2021-09-24"},{"lineNumber":202,"author":{"gitId":"markuslim24"},"content":"**AddTask** | `addTask n/NAME d/DESCRIPTION [mod/MODULE_NAME] [s/START_DATETIME] [e/END_DATETIME]` e.g., `addTask n/Do Assignment d/Refer to Lectures 7-9 /mod CS2100 s/2021-10-05T12:00 e/2021-10-07T23:59`","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"Tianqi-Zhu"},"content":"**ReadTask** | `readTask INDEX`\u003cbr\u003ee.g., `readTask 3`","lastModifiedDate":"2021-09-24"},{"lineNumber":204,"author":{"gitId":"markuslim24"},"content":"**EditTask** | `editTask INDEX [n/NAME] [d/DESCRIPTION] [mod/MODULE_NAME] [s/START_DATETIME] [e/END_DATETIME]`\u003cbr\u003ee.g., `editTask 3 d/buy milk`","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"Tianqi-Zhu"},"content":"**DeleteTask** | `deleteTask INDEX`\u003cbr\u003ee.g., `deleteTask 3`","lastModifiedDate":"2021-09-24"},{"lineNumber":206,"author":{"gitId":"Tianqi-Zhu"},"content":"**AddModule** | `addMod NAME /l LINK_NAME LINK`\u003cbr\u003ee.g.,`addMod CS2103 /l tutorial https://...`","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"JinxinZhao315"},"content":"**ReadModule** | `readMod INDEX`\u003cbr\u003ee.g., `readMod 2`","lastModifiedDate":"2021-09-29"},{"lineNumber":208,"author":{"gitId":"JinxinZhao315"},"content":"**EditModule** | `editMod INDEX [n/NAME] [l/LINK]`\u003cbr\u003ee.g., `editMod 2 n/CS2103T l/https://...`","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"JinxinZhao315"},"content":"**DeleteModule** | `deleteMod INDEX`\u003cbr\u003ee.g., `deleteMod 2`","lastModifiedDate":"2021-09-29"},{"lineNumber":210,"author":{"gitId":"JinxinZhao315"},"content":"**FindModule** | `findMod KEYWORD [MORE_KEYWORDS]`\u003cbr\u003ee.g., `findMod computer`","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"JinxinZhao315"},"content":"**ListModule** | `listMod`","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"chowRuiYan"},"content":"**NextMonth** | `nextMonth`","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"chowRuiYan"},"content":"**PreviousMonth** | `prevMonth`","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"chowRuiYan"},"content":"**ReadDay** | `readDay DATE`\u003cbr\u003ee.g., `readDay 2021-10-19`","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2021-09-24"},{"lineNumber":216,"author":{"gitId":"Tianqi-Zhu"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"JinxinZhao315":37,"markuslim24":34,"zhangchengchuan":20,"chowRuiYan":14,"-":77,"Tianqi-Zhu":34}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"zhangchengchuan"},"content":"    content: \"ManageMe\";","lastModifiedDate":"2021-09-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"zhangchengchuan":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"user -[USER_COLOR]\u003e ui : \"deleteTask 1\"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"deleteTask 1\")","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteTask(t)","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(manageMe)","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"chowRuiYan":1,"-":34,"Tianqi-Zhu":3}},{"path":"docs/diagrams/DeleteTaskSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JinxinZhao315"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"JinxinZhao315"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"JinxinZhao315"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"JinxinZhao315"},"content":"participant \":ManageMeParser\" as ManageMeParser LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"JinxinZhao315"},"content":"participant \":DeleteTaskCommandParser\" as DeleteTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"JinxinZhao315"},"content":"participant \"d:DeleteTaskCommand\" as DeleteTaskCommand LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"JinxinZhao315"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"JinxinZhao315"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"JinxinZhao315"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"JinxinZhao315"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"JinxinZhao315"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"[-\u003e LogicManager : execute(\"deleteTask 1\")","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"activate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"JinxinZhao315"},"content":"LogicManager -\u003e ManageMeParser : parseCommand(\"deleteTask 1\")","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"activate ManageMeParser","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"create DeleteTaskCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"JinxinZhao315"},"content":"ManageMeParser -\u003e DeleteTaskCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":"activate DeleteTaskCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"JinxinZhao315"},"content":"DeleteTaskCommandParser --\u003e ManageMeParser","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"JinxinZhao315"},"content":"deactivate DeleteTaskCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"ManageMeParser -\u003e DeleteTaskCommandParser : parse(\"1\")","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"JinxinZhao315"},"content":"activate DeleteTaskCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":"create DeleteTaskCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"JinxinZhao315"},"content":"DeleteTaskCommandParser -\u003e DeleteTaskCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"JinxinZhao315"},"content":"activate DeleteTaskCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"JinxinZhao315"},"content":"DeleteTaskCommand --\u003e DeleteTaskCommandParser : d","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"JinxinZhao315"},"content":"deactivate DeleteTaskCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"JinxinZhao315"},"content":"DeleteTaskCommandParser --\u003e ManageMeParser : d","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"JinxinZhao315"},"content":"deactivate DeleteTaskCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"JinxinZhao315"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"JinxinZhao315"},"content":"DeleteTaskCommandParser -[hidden]-\u003e ManageMeParser","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"JinxinZhao315"},"content":"destroy DeleteTaskCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"JinxinZhao315"},"content":"ManageMeParser --\u003e LogicManager : d","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"JinxinZhao315"},"content":"deactivate ManageMeParser","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"JinxinZhao315"},"content":"LogicManager -\u003e DeleteTaskCommand : execute()","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"JinxinZhao315"},"content":"activate DeleteTaskCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"JinxinZhao315"},"content":"DeleteTaskCommand -\u003e Model : deleteTask(1)","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"JinxinZhao315"},"content":"activate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"JinxinZhao315"},"content":"Model --\u003e DeleteTaskCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"JinxinZhao315"},"content":"deactivate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"JinxinZhao315"},"content":"create CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"JinxinZhao315"},"content":"DeleteTaskCommand -\u003e CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"JinxinZhao315"},"content":"activate CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"JinxinZhao315"},"content":"CommandResult --\u003e DeleteTaskCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"JinxinZhao315"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"JinxinZhao315"},"content":"DeleteTaskCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"JinxinZhao315"},"content":"deactivate DeleteTaskCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"JinxinZhao315"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"JinxinZhao315"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"JinxinZhao315"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"JinxinZhao315":69}},{"path":"docs/diagrams/MMStorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"package Storage{","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"Class StorageManager","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"package \"ManageMe Storage\" #F4F6F6{","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"Interface ManageMeStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"Class JsonManageMeStorage","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"Class JsonSerializableManageMe","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"Class JsonAdaptedTask","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"Class JsonAdaptedModule","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"StorageManager -up-\u003e \"1\" ManageMeStorage","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"Storage -right-|\u003e ManageMeStorage","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"JsonManageMeStorage .up.|\u003e ManageMeStorage","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"JsonManageMeStorage ..\u003e JsonSerializableManageMe","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"JsonSerializableManageMe --\u003e \"*\" JsonAdaptedTask","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"JsonSerializableManageMe --\u003e \"*\" JsonAdaptedModule","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"JsonAdaptedTask --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"JsonAdaptedModule --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"zhangchengchuan":46}},{"path":"docs/diagrams/MMTimeClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"package Time{","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"Interface Time \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"Class TimeManager","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"package UI{","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"package Model{","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"HiddenOutside ..\u003e Time","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"TimeManager .up.|\u003e Time","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"TimeManager -right-\u003e UI","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"TimeManager -right-\u003e Model","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"zhangchengchuan":24}},{"path":"docs/diagrams/ManageMeModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"@startuml","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"!include style.puml","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"Interface ReadOnlyManageMe \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"Class ManageMe","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"Class ReadOnlyManageMe","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"Class Model","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"Class ModelManager","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"Class UserPrefs","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"Class UniqueTaskList","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"Class Task","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"Class TaskModule","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"Class TaskName","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"Class TaskDescription","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"Class TaskTime","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"Class UniqueModuleList","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"Class Module","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"Class ModuleName","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"Class UniqueLinkList","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"Class Link","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"Class LinkName","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"Class LinkAddress","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"ManageMe .up.|\u003e ReadOnlyManageMe","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"Model .left.\u003e ReadOnlyManageMe","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"ModelManager -left-\u003e \"1\" ManageMe","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"ManageMe *--\u003e \"1\" UniqueTaskList","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"UniqueTaskList --\u003e \"~* all\" Task","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"Task *--\u003e TaskName","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"Task *--\u003e TaskDescription","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"Task *--\u003e TaskModule","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"markuslim24"},"content":"Task *--\u003e \"2\" TaskTime","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"markuslim24"},"content":"Task --\u003e UniqueLinkList","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"TaskName -[hidden]right-\u003e TaskDescription","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"markuslim24"},"content":"TaskDescription -[hidden]right-\u003e TaskModule","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"markuslim24"},"content":"ModelManager --\u003e\"~* filtered\" Task","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"markuslim24"},"content":"ManageMe *--\u003e \"1\" UniqueModuleList","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"markuslim24"},"content":"UniqueModuleList --\u003e \"~* all\" Module","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"markuslim24"},"content":"Module *--\u003e ModuleName","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"markuslim24"},"content":"Module --\u003e UniqueLinkList","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"markuslim24"},"content":"UniqueLinkList --\u003e\"*\" Link","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"markuslim24"},"content":"Link *--\u003e LinkName","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"markuslim24"},"content":"Link *--\u003e LinkAddress","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"markuslim24"},"content":"ModelManager --\u003e\"~* filtered\" Module","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"markuslim24"},"content":"@enduml","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"markuslim24":71}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"JinxinZhao315"},"content":"Class ManageMeParser","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"HiddenOutside ..\u003e ManageMeParser","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":"ManageMeParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"JinxinZhao315"},"content":"ManageMeParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"JinxinZhao315":4,"-":34}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"Interface Ui \u003c\u003cinterface\u003e\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"Class MmMainWindow","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"Class ModuleWindow","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"Class CalendarPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"Class ModuleListPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"Class TaskListPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"Class ModuleCard","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"Class TaskCard","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"Class DayCard","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"UiManager .up.|\u003e Ui","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"UiManager -down-\u003e \"1\" MmMainWindow","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"MmMainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"MmMainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"MmMainWindow *-down-\u003e \"1\" TaskListPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"MmMainWindow *-down-\u003e \"1\" ModuleListPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"MmMainWindow *-down-\u003e \"1\" CalendarPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"MmMainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"MmMainWindow --\u003e \"0..1\" ModuleWindow","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"CalendarPanel -down-\u003e \"28..31\" DayCard","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"ModuleListPanel -down--\u003e \"*\" ModuleCard","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"TaskListPanel -down---\u003e \"*\" TaskCard","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"ModuleListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"ModuleCard --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"TaskListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"TaskCard --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"ModuleWindow --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"CalendarPanel --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"MmMainWindow --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"ModuleCard ..\u003e Model","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"TaskCard ..\u003e Model","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"MmMainWindow -left-\u003e Logic","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"Class HiddenInside #FFFFFF","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"HiddenInside -[hidden]right- ResultDisplay","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"HelpWindow -[hidden]right- ModuleWindow","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"ModuleWindow -[hidden]right- ResultDisplay","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"ModuleListPanel -[hidden]right- TaskListPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"CommandBox -[hidden]right- CalendarPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"CalendarPanel -[hidden]right- ModuleListPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"ResultDisplay -[hidden]right- CommandBox","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"chowRuiYan":40,"-":33}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"title: ManageMe","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103T-W11-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-W11-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W11-3/tp/branch/master/graph/badge.svg?token\u003d99ETWK5C7Z)](https://codecov.io/gh/AY2122S1-CS2103T-W11-3/tp)","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"![Ui](images/Ui1.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"ManageMe is a **desktop app for time management and resource organisation, optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, ManageMe can get your tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"* If you are interested in using ManageMe, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"  html#quick-start).","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"* If you are interested about developing ManageMe, the [**Developer Guide**](DeveloperGuide.html) is a good place to ","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"  start.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"markuslim24":8,"-":13}},{"path":"docs/team/Tianqi-Zhu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"layout: page","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"title: Zhu Tianqi\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"### Project: ManageMe","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"ManageMe is a one-stop solution for zoom-age students facing problems like missing deadlines, forgetting homework, oversleeping and searching for zoom links. Through efficient resource management, accurate time tracking and frequent reminders, our simple time management app will allow every student to finally unlock their fullest potential.","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"**Place-Holder**","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"Tianqi-Zhu":12}},{"path":"docs/team/chengchuan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"layout: page","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"title: Cheng Chuan\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"### Project: ManageMe","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"ManageMe is a desktop app for time management and resource organisation, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"If you can type fast, ManageMe can get your tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"* **Project management**:","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"    * User Guide:","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"* **Community**:","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"* **Tools**:","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"zhangchengchuan":47}},{"path":"docs/team/chowruiyan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"title: Chow Rui Yan\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"chowRuiYan":1,"-":45}},{"path":"docs/team/jinxinzhao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"JinxinZhao315"},"content":"title: Zhao Jinxin\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"JinxinZhao315":1,"-":45}},{"path":"docs/team/markus.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"layout: page","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"title: Markus\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"### Project: ManageMe","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"ManageMe is a desktop app for time management and resource organisation, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, ManageMe can get your tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"* **Project management**:","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"  * User Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"* **Community**:","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"* **Tools**:","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"markuslim24":47}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"import Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"Tianqi-Zhu"},"content":"import static CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"Tianqi-Zhu"},"content":"Simply add the following to [`PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-10-16"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":398,"Tianqi-Zhu":3}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"The `address` field in `Person` is actually an instance of the `Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":111,"Tianqi-Zhu":1}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `Logic`.","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"Tianqi-Zhu"},"content":"A quick look at the `Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":299,"Tianqi-Zhu":2}},{"path":"src/main/java/manageme/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.LogsCenter;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.FileUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Tianqi-Zhu":3,"-":61}},{"path":"src/main/java/manageme/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":24}},{"path":"src/main/java/manageme/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Config;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.LogsCenter;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Version;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.ConfigUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.StringUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.Logic;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.LogicManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyManageMe;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.storage.JsonManageMeStorage;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.storage.ManageMeStorage;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.storage.Storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.storage.StorageManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.storage.UserPrefsStorage;","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.time.Time;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.time.TimeManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.ui.Ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.ui.UiManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"    protected Time time;","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"        ManageMeStorage manageMeStorage \u003d new JsonManageMeStorage(userPrefs.getManageMeFilePath());","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"        storage \u003d new StorageManager(manageMeStorage, userPrefsStorage);","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"        time \u003d new TimeManager(model.getManageMe());","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"        logic \u003d new LogicManager(model, storage, time);","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"        Optional\u003cReadOnlyManageMe\u003e addressBookOptional;","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"        ReadOnlyManageMe initialData;","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"            addressBookOptional \u003d storage.readManageMe();","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"chowRuiYan"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleManageMe);","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"chowRuiYan"},"content":"            initialData \u003d new ManageMe();","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"chowRuiYan"},"content":"            initialData \u003d new ManageMe();","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":178,"author":{"gitId":"zhangchengchuan"},"content":"        time.startTime();","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"zhangchengchuan"},"content":"            time \u003d null; // Remove references to time to allow it to go to garbage collector","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zhangchengchuan":9,"chowRuiYan":8,"Tianqi-Zhu":24,"-":150}},{"path":"src/main/java/manageme/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.core;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":62}},{"path":"src/main/java/manageme/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.core;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":78}},{"path":"src/main/java/manageme/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.core;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    private static final String LOG_FILE \u003d \"manageme.log\";","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chowRuiYan":1,"Tianqi-Zhu":1,"-":110}},{"path":"src/main/java/manageme/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.core;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String MESSAGE_MODULES_LISTED_OVERVIEW \u003d \"%1$d modules listed!\";","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"    public static final String MESSAGE_INVALID_MODULE_DISPLAYED_INDEX \u003d \"The module index provided is invalid\";","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JinxinZhao315":1,"zhangchengchuan":2,"chowRuiYan":1,"Tianqi-Zhu":1,"-":13}},{"path":"src/main/java/manageme/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.core;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":115}},{"path":"src/main/java/manageme/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.core.index;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":53}},{"path":"src/main/java/manageme/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.exceptions;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":10}},{"path":"src/main/java/manageme/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.exceptions;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":20}},{"path":"src/main/java/manageme/commons/exceptions/TimeComparisonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package manageme.commons.exceptions;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":" * Represents an error during comparing of start and end time in TimeManager","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"public class TimeComparisonException extends Exception {","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"    public TimeComparisonException(String cause) {","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"        super(cause);","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"zhangchengchuan":10}},{"path":"src/main/java/manageme/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.util;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.MainApp;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Tianqi-Zhu":2,"-":40}},{"path":"src/main/java/manageme/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.util;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":34}},{"path":"src/main/java/manageme/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.util;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Config;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Tianqi-Zhu":3,"-":20}},{"path":"src/main/java/manageme/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.util;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":82}},{"path":"src/main/java/manageme/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.util;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.LogsCenter;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tianqi-Zhu":3,"-":140}},{"path":"src/main/java/manageme/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.util;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"        AppUtil.checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"        AppUtil.checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tianqi-Zhu":3,"-":64}},{"path":"src/main/java/manageme/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.GuiSettings;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"     * @see Model#getManageMe()","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"    ReadOnlyManageMe getManageMe();","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"    /** Returns an unmodifiable view of the filtered list of modules */","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"    ObservableList\u003cModule\u003e getFilteredModuleList();","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"    /** Returns an unmodifiable view of the filtered list of modules to be read in detail */","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"    ObservableList\u003cModule\u003e getReadModuleList();","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"    /** Returns an unmodifiable view of the unfiltered list of tasks */","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"    ObservableList\u003cTask\u003e getUnfilteredTaskList();","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"    Path getManageMeFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chowRuiYan":14,"Tianqi-Zhu":12,"-":39}},{"path":"src/main/java/manageme/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.GuiSettings;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.LogsCenter;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.ManageMeParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.storage.Storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.time.Time;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"    private final Time time;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"    private final ManageMeParser manageMeParser;","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"    public LogicManager(Model model, Storage storage, Time time) {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"        manageMeParser \u003d new ManageMeParser();","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"        Command command \u003d manageMeParser.parseCommand(commandText);","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"            time.updateTasks(model.getManageMe());","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"            storage.saveManageMe(model.getManageMe());","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"    public ReadOnlyManageMe getManageMe() {","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"        return model.getManageMe();","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"    public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"        return model.getFilteredModuleList();","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"    public ObservableList\u003cModule\u003e getReadModuleList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"        return model.getReadModuleList();","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"chowRuiYan"},"content":"    public ObservableList\u003cTask\u003e getUnfilteredTaskList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"chowRuiYan"},"content":"        return model.getUnfilteredTaskList();","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"chowRuiYan"},"content":"    public Path getManageMeFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"chowRuiYan"},"content":"        return model.getManageMeFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"zhangchengchuan":6,"chowRuiYan":28,"Tianqi-Zhu":15,"-":58}},{"path":"src/main/java/manageme/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tianqi-Zhu":9,"-":58}},{"path":"src/main/java/manageme/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"        model.setManageMe(new ManageMe());","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chowRuiYan":1,"Tianqi-Zhu":3,"-":19}},{"path":"src/main/java/manageme/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tianqi-Zhu":3,"-":17}},{"path":"src/main/java/manageme/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"    public static final String FEEDBACK_TO_SYSTEM \u003d \"CommandResult does not feedback to system!\";","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    /** Module detail should be shown to the user. */","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"    private final boolean readModule;","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean readModule) {","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"        this.readModule \u003d readModule;","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"    public String getFeedbackToSystem() {","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"        return FEEDBACK_TO_SYSTEM;","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"    public boolean isReadModule() {","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"        return readModule;","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"    public boolean isCalendarCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"        return false;","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 readModule \u003d\u003d otherCommandResult.readModule;","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, readModule);","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chowRuiYan":23,"Tianqi-Zhu":1,"-":65}},{"path":"src/main/java/manageme/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tianqi-Zhu":6,"-":47}},{"path":"src/main/java/manageme/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Address;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Email;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Name;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Phone;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Tianqi-Zhu":18,"-":208}},{"path":"src/main/java/manageme/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"chowRuiYan":1,"Tianqi-Zhu":2,"-":16}},{"path":"src/main/java/manageme/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Tianqi-Zhu":4,"-":38}},{"path":"src/main/java/manageme/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chowRuiYan":1,"Tianqi-Zhu":2,"-":18}},{"path":"src/main/java/manageme/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tianqi-Zhu":3,"-":21}},{"path":"src/main/java/manageme/logic/commands/calendar/CalendarCommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.calendar;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"public class CalendarCommandResult extends CommandResult {","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"    private final String feedbackToSystem;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"     * Constructs a {@code CalendarCommandResult} with the specified fields.","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"    public CalendarCommandResult(String feedbackToUser, String feedbackToSystem) {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"        super(feedbackToUser);","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"        this.feedbackToSystem \u003d feedbackToSystem;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    public boolean isCalendarCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"        return true;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    public String getFeedbackToSystem() {","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"        return feedbackToSystem;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"        if (!(other instanceof CalendarCommandResult)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"            return false;","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"        CalendarCommandResult otherCalendarCommandResult \u003d (CalendarCommandResult) other;","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"        return feedbackToSystem.equals(otherCalendarCommandResult.feedbackToSystem)","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 super.equals(otherCalendarCommandResult);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"        return feedbackToSystem.hashCode();","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"chowRuiYan":44,"Tianqi-Zhu":2}},{"path":"src/main/java/manageme/logic/commands/calendar/NextMonthCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.calendar;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"public class NextMonthCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"    public static final String COMMAND_WORD \u003d \"nextMonth\";","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"    public static final String SHOWING_NEXT_MONTH \u003d \"Changed calendar to next month.\";","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"        return new CalendarCommandResult(SHOWING_NEXT_MONTH, COMMAND_WORD);","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"chowRuiYan":12,"Tianqi-Zhu":4}},{"path":"src/main/java/manageme/logic/commands/calendar/PreviousMonthCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.calendar;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"public class PreviousMonthCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"    public static final String COMMAND_WORD \u003d \"prevMonth\";","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"    public static final String SHOWING_PREVIOUS_MONTH \u003d \"Changed calendar to previous month.\";","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"        return new CalendarCommandResult(SHOWING_PREVIOUS_MONTH, COMMAND_WORD);","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"chowRuiYan":12,"Tianqi-Zhu":4}},{"path":"src/main/java/manageme/logic/commands/calendar/ReadDayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.calendar;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"public class ReadDayCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"    public static final String COMMAND_WORD \u003d \"readDay\";","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"            + \": Displays the list of tasks on a particular day identified by the index number used in the calendar.\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"            + \"Parameters: INDEX (must be a valid day-of-month)\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"    public static final String SHOWING_TASKS_IN_DAY \u003d \"Displayed the list of task(s) in %s\";","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"    public ReadDayCommand(LocalDate date) {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"        return new CalendarCommandResult(String.format(SHOWING_TASKS_IN_DAY, date), COMMAND_WORD + \" \" + date);","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"                || (other instanceof ReadDayCommand // instanceof handles nulls","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 date.equals(((ReadDayCommand) other).date)); // state check","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"chowRuiYan":36,"Tianqi-Zhu":4}},{"path":"src/main/java/manageme/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.exceptions;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Tianqi-Zhu":2,"-":17}},{"path":"src/main/java/manageme/logic/commands/module/AddModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"public class AddModuleCommand extends Command {","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String COMMAND_WORD \u003d \"addMod\";","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a module to ManageMe. \"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"            + PREFIX_LINK + \"LINK \"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"            + PREFIX_NAME + \"CS1100 \"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"            + PREFIX_LINK + \"https://www.google.com\";","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New module added: %1$s\";","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"This module already exists in the app.\";","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"    private final Module toAdd;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"     * Creates an AddModuleCommand to add the specified {@code Module}","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"    public AddModuleCommand(Module module) {","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"        toAdd \u003d module;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"JinxinZhao315"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"        if (model.hasModule(toAdd)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"        model.addModule(toAdd);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Tianqi-Zhu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Tianqi-Zhu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Tianqi-Zhu"},"content":"                || (other instanceof AddModuleCommand // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"                \u0026\u0026 toAdd.equals(((AddModuleCommand) other).toAdd));","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"JinxinZhao315":7,"chowRuiYan":1,"Tianqi-Zhu":47}},{"path":"src/main/java/manageme/logic/commands/module/DeleteModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":" * Deletes a module identified using it\u0027s displayed index from the task manager.","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"public class DeleteModuleCommand extends Command {","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String COMMAND_WORD \u003d \"deleteMod\";","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"            + \": Deletes the module identified by the index number used in the displayed module list.\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String MESSAGE_DELETE_MODULE_SUCCESS \u003d \"Deleted Module: %1$s\";","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"    public DeleteModuleCommand(Index targetIndex) {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"JinxinZhao315"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"        List\u003cModule\u003e lastShownList \u003d model.getFilteredModuleList();","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module moduleToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"        model.deleteModule(moduleToDelete);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MODULE_SUCCESS, moduleToDelete));","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Tianqi-Zhu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Tianqi-Zhu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Tianqi-Zhu"},"content":"                || (other instanceof DeleteModuleCommand // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteModuleCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"JinxinZhao315":8,"chowRuiYan":1,"Tianqi-Zhu":46}},{"path":"src/main/java/manageme/logic/commands/module/EditModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"JinxinZhao315"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.model.Model.PREDICATE_SHOW_ALL_MODULES;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"JinxinZhao315"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"JinxinZhao315"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.link.Link;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.ModuleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"JinxinZhao315"},"content":" * Edits the details of an existing module in the app.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"public class EditModuleCommand extends Command {","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String COMMAND_WORD \u003d \"editMod\";","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the module identified \"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"            + \"by the index number used in the displayed module list. \"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"JinxinZhao315"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"JinxinZhao315"},"content":"            + \"[\" + PREFIX_LINK + \"LINK] \";","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String MESSAGE_EDIT_MODULE_SUCCESS \u003d \"Edited module: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"This module already exists in the app.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"JinxinZhao315"},"content":"    private final Index index;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"JinxinZhao315"},"content":"    private final EditModuleCommand.EditModuleDescriptor editModuleDescriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"JinxinZhao315"},"content":"     * @param index of the module in the filtered module list to edit","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"JinxinZhao315"},"content":"     * @param editModuleDescriptor details to edit the module with","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"JinxinZhao315"},"content":"    public EditModuleCommand(Index index, EditModuleCommand.EditModuleDescriptor editModuleDescriptor) {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"JinxinZhao315"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"JinxinZhao315"},"content":"        requireNonNull(editModuleDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"JinxinZhao315"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"JinxinZhao315"},"content":"        this.editModuleDescriptor \u003d new EditModuleCommand.EditModuleDescriptor(editModuleDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"JinxinZhao315"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"JinxinZhao315"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"JinxinZhao315"},"content":"        List\u003cModule\u003e lastShownList \u003d model.getFilteredModuleList();","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"JinxinZhao315"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"JinxinZhao315"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"JinxinZhao315"},"content":"        Module moduleToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"JinxinZhao315"},"content":"        Module editedModule \u003d createEditedModule(moduleToEdit, editModuleDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"JinxinZhao315"},"content":"        if (!moduleToEdit.isSameModule(editedModule) \u0026\u0026 model.hasModule(editedModule)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"JinxinZhao315"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"JinxinZhao315"},"content":"        model.setModule(moduleToEdit, editedModule);","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"Tianqi-Zhu"},"content":"        model.updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"JinxinZhao315"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MODULE_SUCCESS, editedModule));","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"JinxinZhao315"},"content":"     * Creates and returns a {@code Module} with the details of {@code ModuleToEdit}","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"JinxinZhao315"},"content":"     * edited with {@code editModuleDescriptor}.","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"JinxinZhao315"},"content":"    private static Module createEditedModule(Module moduleToEdit,","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"JinxinZhao315"},"content":"                                             EditModuleCommand.EditModuleDescriptor editModuleDescriptor) {","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"JinxinZhao315"},"content":"        assert moduleToEdit !\u003d null;","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"JinxinZhao315"},"content":"        ModuleName updatedName \u003d editModuleDescriptor.getModuleName().orElse(moduleToEdit.getModuleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"JinxinZhao315"},"content":"        Link updatedlink \u003d editModuleDescriptor.getLink().orElse(moduleToEdit.getLink());","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"JinxinZhao315"},"content":"        return new Module(updatedName, updatedlink);","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"JinxinZhao315"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"JinxinZhao315"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"JinxinZhao315"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"JinxinZhao315"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"JinxinZhao315"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"JinxinZhao315"},"content":"        if (!(other instanceof EditModuleCommand)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"JinxinZhao315"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"JinxinZhao315"},"content":"        // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand e \u003d (EditModuleCommand) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"JinxinZhao315"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"JinxinZhao315"},"content":"                \u0026\u0026 editModuleDescriptor.equals(e.editModuleDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"JinxinZhao315"},"content":"     * Stores the details to edit the Module with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"JinxinZhao315"},"content":"     * corresponding field value of the module.","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"JinxinZhao315"},"content":"    public static class EditModuleDescriptor {","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"JinxinZhao315"},"content":"        private ModuleName moduleName;","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"JinxinZhao315"},"content":"        private Link link;","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"Tianqi-Zhu"},"content":"        public EditModuleDescriptor() {}","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"JinxinZhao315"},"content":"        /**","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"JinxinZhao315"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"JinxinZhao315"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"JinxinZhao315"},"content":"         */","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"JinxinZhao315"},"content":"        public EditModuleDescriptor(EditModuleCommand.EditModuleDescriptor toCopy) {","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"JinxinZhao315"},"content":"            setModuleName(toCopy.moduleName);","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"JinxinZhao315"},"content":"            setLink(toCopy.link);","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"JinxinZhao315"},"content":"        /**","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"JinxinZhao315"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"JinxinZhao315"},"content":"         */","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"JinxinZhao315"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"JinxinZhao315"},"content":"            return CollectionUtil.isAnyNonNull(moduleName, link);","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"JinxinZhao315"},"content":"        public void setModuleName(ModuleName moduleName) {","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"JinxinZhao315"},"content":"            this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"JinxinZhao315"},"content":"        public Optional\u003cModuleName\u003e getModuleName() {","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"JinxinZhao315"},"content":"            return Optional.ofNullable(moduleName);","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"JinxinZhao315"},"content":"        public void setLink(Link link) {","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"JinxinZhao315"},"content":"            this.link \u003d link;","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"JinxinZhao315"},"content":"        public Optional\u003cLink\u003e getLink() {","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"JinxinZhao315"},"content":"            return Optional.ofNullable(link);","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"JinxinZhao315"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"JinxinZhao315"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"JinxinZhao315"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"JinxinZhao315"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"JinxinZhao315"},"content":"                return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"JinxinZhao315"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"JinxinZhao315"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"JinxinZhao315"},"content":"            if (!(other instanceof EditModuleCommand.EditModuleDescriptor)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"JinxinZhao315"},"content":"                return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"JinxinZhao315"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"JinxinZhao315"},"content":"            // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"JinxinZhao315"},"content":"            EditModuleCommand.EditModuleDescriptor e \u003d (EditModuleCommand.EditModuleDescriptor) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"JinxinZhao315"},"content":"            return getModuleName().equals(e.getModuleName())","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"JinxinZhao315"},"content":"                    \u0026\u0026 getLink().equals(e.getLink());","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"JinxinZhao315":151,"chowRuiYan":1,"Tianqi-Zhu":16}},{"path":"src/main/java/manageme/logic/commands/module/FindModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JinxinZhao315"},"content":"package manageme.logic.commands.module;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"JinxinZhao315"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.model.module.ModNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"JinxinZhao315"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"JinxinZhao315"},"content":" * Finds and lists all mods in app whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"JinxinZhao315"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"JinxinZhao315"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"public class FindModuleCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String COMMAND_WORD \u003d \"findMod\";","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all modules whose names contain any of \"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"            + \"Example: \" + COMMAND_WORD + \"computer\";","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":"    private final ModNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"JinxinZhao315"},"content":"    public FindModuleCommand(ModNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"JinxinZhao315"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"JinxinZhao315"},"content":"        model.updateFilteredModuleList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"JinxinZhao315"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"JinxinZhao315"},"content":"                String.format(Messages.MESSAGE_MODULES_LISTED_OVERVIEW, model.getFilteredModuleList().size()));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"JinxinZhao315"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"JinxinZhao315"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"JinxinZhao315"},"content":"                || (other instanceof FindModuleCommand // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"JinxinZhao315"},"content":"                \u0026\u0026 predicate.equals(((FindModuleCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"JinxinZhao315":45}},{"path":"src/main/java/manageme/logic/commands/module/ListModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JinxinZhao315"},"content":"package manageme.logic.commands.module;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"JinxinZhao315"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"JinxinZhao315"},"content":"import static manageme.model.Model.PREDICATE_SHOW_ALL_MODULES;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"JinxinZhao315"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"JinxinZhao315"},"content":" * Lists all modules in the app to the user. Used to go back to","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"JinxinZhao315"},"content":" * the full module list after a findMod command.","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"JinxinZhao315"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"JinxinZhao315"},"content":"public class ListModuleCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String COMMAND_WORD \u003d \"listMod\";","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all modules\";","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"JinxinZhao315"},"content":"        model.updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"JinxinZhao315":26}},{"path":"src/main/java/manageme/logic/commands/module/ReadModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"public class ReadModuleCommand extends Command {","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String COMMAND_WORD \u003d \"readMod\";","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"            + \": Display the module identified by the index number used in the displayed module list.\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Displayed module\";","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    public ReadModuleCommand(Index targetIndex) {","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"        List\u003cModule\u003e lastShownList \u003d model.getFilteredModuleList();","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"        Module moduleToRead \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"        model.updateReadModuleList(module -\u003e module.equals(moduleToRead));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true);","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"                || (other instanceof ReadModuleCommand // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 targetIndex.equals(((ReadModuleCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"JinxinZhao315":7,"chowRuiYan":36,"Tianqi-Zhu":8}},{"path":"src/main/java/manageme/logic/commands/task/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"    public static final String COMMAND_WORD \u003d \"addTask\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the task list. \"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"            + PREFIX_NAME + \"TASK_NAME \"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"            + PREFIX_DESCRIPTION + \"TASK_DESCRIPTION \"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"            + PREFIX_MODULE + \"ASSOCIATED_MODULE_NAME\"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"            + PREFIX_START + \"TASK_START_DATETIME \"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"            + PREFIX_END + \"TASK_END_DATETIME \\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"            + PREFIX_NAME + \"Do homework \"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"            + PREFIX_DESCRIPTION + \"Complete CS2103T quiz on testing. \"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"            + PREFIX_MODULE + \"CS2103T\"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"            + PREFIX_START + \"2021-10-05T11:50:55 \"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"            + PREFIX_END + \"2021-10-07T11:50:55\";","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task list\";","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"    private final Task toAdd;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"     * Creates an AddTaskCommand to add the specified {@code Task}","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"        toAdd \u003d task;","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"markuslim24"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"markuslim24"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"markuslim24"},"content":"                || (other instanceof AddTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"markuslim24"},"content":"                \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"markuslim24":49,"Tianqi-Zhu":11}},{"path":"src/main/java/manageme/logic/commands/task/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":" * Deletes a task identified using it\u0027s displayed index from ManageMe.","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"    public static final String COMMAND_WORD \u003d \"deleteTask\";","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"markuslim24":6,"zhangchengchuan":41,"Tianqi-Zhu":9}},{"path":"src/main/java/manageme/logic/commands/task/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskDescription;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskModule;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskName;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":" * Updates a task identified using it\u0027s displayed index from ManageMe.","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"public class EditTaskCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"    public static final String COMMAND_WORD \u003d \"editTask\";","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"            + \"by the index number used in the displayed task list. \"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"            + \"Parameters: INDEX (must be a positive integer) \";","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book.\";","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"    private final Index index;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"     * @param index              of the task in the filtered task list to edit","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"    public EditTaskCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"        this.editTaskDescriptor \u003d new EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"markuslim24"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"        if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"Tianqi-Zhu"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"     * Creates and returns a {@code Task} with the details of {@code taskToEdit}","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"     * edited with {@code editTaskDescriptor}.","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"zhangchengchuan"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"zhangchengchuan"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"zhangchengchuan"},"content":"        TaskName updatedName \u003d editTaskDescriptor.getTaskName().orElse(taskToEdit.getName());","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"zhangchengchuan"},"content":"        TaskDescription updatedDescription \u003d editTaskDescriptor.getTaskDescription()","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"zhangchengchuan"},"content":"                .orElse(taskToEdit.getDescription());","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"zhangchengchuan"},"content":"        // Set\u003cTag\u003e updatedTags \u003d editTaskDescriptor.getTags().orElse(taskToEdit.getTags());","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"markuslim24"},"content":"        TaskModule updatedModule \u003d editTaskDescriptor.getModule()","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"markuslim24"},"content":"                .orElse(taskToEdit.getTaskModule());","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"markuslim24"},"content":"        TaskTime updatedStartTime \u003d editTaskDescriptor.getStart()","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"markuslim24"},"content":"                .orElse(taskToEdit.getStart());","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"markuslim24"},"content":"        TaskTime updatedEndTime \u003d editTaskDescriptor.getEnd()","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"markuslim24"},"content":"                .orElse(taskToEdit.getEnd());","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"markuslim24"},"content":"        return new Task(updatedName, updatedDescription, updatedModule, updatedStartTime, updatedEndTime);","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"zhangchengchuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"zhangchengchuan"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"zhangchengchuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"zhangchengchuan"},"content":"            return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"zhangchengchuan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"markuslim24"},"content":"        if (!(other instanceof EditTaskCommand)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"zhangchengchuan"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"zhangchengchuan"},"content":"        // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"zhangchengchuan"},"content":"        EditTaskCommand e \u003d (EditTaskCommand) other;","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"zhangchengchuan"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"zhangchengchuan"},"content":"                \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"zhangchengchuan"},"content":"     * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"zhangchengchuan"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"zhangchengchuan"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"zhangchengchuan"},"content":"        private TaskName name;","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"zhangchengchuan"},"content":"        private TaskDescription description;","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"zhangchengchuan"},"content":"        private TaskModule module;","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"zhangchengchuan"},"content":"        private TaskTime start;","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"zhangchengchuan"},"content":"        private TaskTime end;","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"zhangchengchuan"},"content":"        // private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"zhangchengchuan"},"content":"        public EditTaskDescriptor() {","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"zhangchengchuan"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"zhangchengchuan"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"zhangchengchuan"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"zhangchengchuan"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"zhangchengchuan"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"zhangchengchuan"},"content":"            setModule(toCopy.module);","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"zhangchengchuan"},"content":"            setStart(toCopy.start);","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"zhangchengchuan"},"content":"            setEnd(toCopy.end);","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"zhangchengchuan"},"content":"            // setTags(toCopy.tags);","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"zhangchengchuan"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"zhangchengchuan"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"zhangchengchuan"},"content":"            return CollectionUtil.isAnyNonNull(name, description, module, start, end);","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"zhangchengchuan"},"content":"        public void setName(TaskName name) {","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"zhangchengchuan"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"zhangchengchuan"},"content":"        public Optional\u003cTaskName\u003e getTaskName() {","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"zhangchengchuan"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"zhangchengchuan"},"content":"        public void setDescription(TaskDescription description) {","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"zhangchengchuan"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"zhangchengchuan"},"content":"        public Optional\u003cTaskDescription\u003e getTaskDescription() {","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"zhangchengchuan"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"zhangchengchuan"},"content":"        public void setModule(TaskModule module) {","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"zhangchengchuan"},"content":"            this.module \u003d module;","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"zhangchengchuan"},"content":"        public Optional\u003cTaskModule\u003e getModule() {","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"zhangchengchuan"},"content":"            return Optional.ofNullable(module);","lastModifiedDate":"2021-10-09"},{"lineNumber":172,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":173,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":174,"author":{"gitId":"zhangchengchuan"},"content":"        public void setStart(TaskTime start) {","lastModifiedDate":"2021-10-09"},{"lineNumber":175,"author":{"gitId":"zhangchengchuan"},"content":"            this.start \u003d start;","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":177,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":178,"author":{"gitId":"zhangchengchuan"},"content":"        public Optional\u003cTaskTime\u003e getStart() {","lastModifiedDate":"2021-10-09"},{"lineNumber":179,"author":{"gitId":"zhangchengchuan"},"content":"            return Optional.ofNullable(start);","lastModifiedDate":"2021-10-09"},{"lineNumber":180,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":181,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":182,"author":{"gitId":"zhangchengchuan"},"content":"        public void setEnd(TaskTime end) {","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"zhangchengchuan"},"content":"            this.end \u003d end;","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":186,"author":{"gitId":"zhangchengchuan"},"content":"        public Optional\u003cTaskTime\u003e getEnd() {","lastModifiedDate":"2021-10-09"},{"lineNumber":187,"author":{"gitId":"zhangchengchuan"},"content":"            return Optional.ofNullable(end);","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"zhangchengchuan"},"content":"        ///**","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"zhangchengchuan"},"content":"        // * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-10-09"},{"lineNumber":192,"author":{"gitId":"zhangchengchuan"},"content":"        // * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"zhangchengchuan"},"content":"        // */","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"zhangchengchuan"},"content":"        //public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"zhangchengchuan"},"content":"        //    this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"zhangchengchuan"},"content":"        //}","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":198,"author":{"gitId":"zhangchengchuan"},"content":"        ///**","lastModifiedDate":"2021-10-09"},{"lineNumber":199,"author":{"gitId":"zhangchengchuan"},"content":"        // * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"zhangchengchuan"},"content":"        // * if modification is attempted.","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"zhangchengchuan"},"content":"        // * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-10-09"},{"lineNumber":202,"author":{"gitId":"zhangchengchuan"},"content":"        // */","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"zhangchengchuan"},"content":"        //public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-10-09"},{"lineNumber":204,"author":{"gitId":"zhangchengchuan"},"content":"        //    return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-10-09"},{"lineNumber":205,"author":{"gitId":"zhangchengchuan"},"content":"        //}","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":208,"author":{"gitId":"zhangchengchuan"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":209,"author":{"gitId":"zhangchengchuan"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"zhangchengchuan"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"zhangchengchuan"},"content":"                return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":212,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":213,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":214,"author":{"gitId":"zhangchengchuan"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":215,"author":{"gitId":"zhangchengchuan"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":216,"author":{"gitId":"zhangchengchuan"},"content":"                return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":217,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":218,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":219,"author":{"gitId":"zhangchengchuan"},"content":"            // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":220,"author":{"gitId":"zhangchengchuan"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2021-10-09"},{"lineNumber":221,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":222,"author":{"gitId":"zhangchengchuan"},"content":"            return getTaskName().equals(e.getTaskName())","lastModifiedDate":"2021-10-09"},{"lineNumber":223,"author":{"gitId":"zhangchengchuan"},"content":"                    \u0026\u0026 getTaskDescription().equals(e.getTaskDescription())","lastModifiedDate":"2021-10-09"},{"lineNumber":224,"author":{"gitId":"zhangchengchuan"},"content":"                    \u0026\u0026 getModule().equals(e.getModule())","lastModifiedDate":"2021-10-09"},{"lineNumber":225,"author":{"gitId":"zhangchengchuan"},"content":"                    \u0026\u0026 getStart().equals(e.getStart())","lastModifiedDate":"2021-10-09"},{"lineNumber":226,"author":{"gitId":"zhangchengchuan"},"content":"                    \u0026\u0026 getEnd().equals(e.getEnd());","lastModifiedDate":"2021-10-09"},{"lineNumber":227,"author":{"gitId":"zhangchengchuan"},"content":"            //        \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-10-09"},{"lineNumber":228,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":229,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":230,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"markuslim24":9,"zhangchengchuan":204,"Tianqi-Zhu":17}},{"path":"src/main/java/manageme/logic/commands/task/FindTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package manageme.logic.commands.task;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":" * Finds and lists all tasks in ManageMe whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"    public static final String COMMAND_WORD \u003d \"findTask\";","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks whose names contain any of \"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"            + \"Example: \" + COMMAND_WORD + \" Do homework\";","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"    private final TaskNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    public FindTaskCommand(TaskNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"                || (other instanceof FindTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"                \u0026\u0026 predicate.equals(((FindTaskCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"zhangchengchuan":44}},{"path":"src/main/java/manageme/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.AddCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Address;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Email;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Name;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Phone;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"                CliSyntax.PREFIX_EMAIL, CliSyntax.PREFIX_ADDRESS, CliSyntax.PREFIX_TAG);","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_ADDRESS, CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"                CliSyntax.PREFIX_EMAIL) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get());","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(CliSyntax.PREFIX_PHONE).get());","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(CliSyntax.PREFIX_EMAIL).get());","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(CliSyntax.PREFIX_ADDRESS).get());","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Tianqi-Zhu":20,"-":34}},{"path":"src/main/java/manageme/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":59}},{"path":"src/main/java/manageme/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":147}},{"path":"src/main/java/manageme/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"    public static final Prefix PREFIX_LINK \u003d new Prefix(\"l/\");","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final Prefix PREFIX_LINK_NAME \u003d new Prefix(\"ln/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    /* Task Prefix definitions */","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"    public static final Prefix PREFIX_MODULE \u003d new Prefix(\"mod/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"    public static final Prefix PREFIX_START \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"    public static final Prefix PREFIX_END \u003d new Prefix(\"e/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"JinxinZhao315":1,"markuslim24":4,"zhangchengchuan":1,"Tianqi-Zhu":2,"-":14}},{"path":"src/main/java/manageme/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Tianqi-Zhu":6,"-":22}},{"path":"src/main/java/manageme/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.EditCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"                    pe);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Tianqi-Zhu":14,"-":68}},{"path":"src/main/java/manageme/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.FindCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Tianqi-Zhu":6,"-":26}},{"path":"src/main/java/manageme/logic/parser/ManageMeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.AddCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.EditCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.FindCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.ListCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.calendar.NextMonthCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.calendar.PreviousMonthCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.calendar.ReadDayCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.module.AddModuleCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.module.DeleteModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.module.EditModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.logic.commands.module.FindModuleCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.logic.commands.module.ListModuleCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.module.ReadModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.task.AddTaskCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.task.DeleteTaskCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.task.EditTaskCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.logic.commands.task.FindTaskCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.calendar.ReadDayCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.module.AddModuleCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.module.DeleteModuleCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.module.EditModuleCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.logic.parser.module.FindModuleCommandParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.module.ReadModuleCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.task.AddTaskCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.task.DeleteTaskCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.task.EditTaskCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.logic.parser.task.FindTaskCommandParser;","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"public class ManageMeParser {","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":92,"author":{"gitId":"markuslim24"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"markuslim24"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"markuslim24"},"content":"        case EditTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"markuslim24"},"content":"            return new EditTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"zhangchengchuan"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"zhangchengchuan"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"zhangchengchuan"},"content":"        case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"zhangchengchuan"},"content":"            return new FindTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"chowRuiYan"},"content":"        case AddModuleCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"chowRuiYan"},"content":"            return new AddModuleCommandParser().parse(arguments);","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"chowRuiYan"},"content":"        case DeleteModuleCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"chowRuiYan"},"content":"            return new DeleteModuleCommandParser().parse(arguments);","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"chowRuiYan"},"content":"        case ReadModuleCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"chowRuiYan"},"content":"            return new ReadModuleCommandParser().parse(arguments);","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"chowRuiYan"},"content":"        case EditModuleCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"chowRuiYan"},"content":"            return new EditModuleCommandParser().parse(arguments);","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"JinxinZhao315"},"content":"        case FindModuleCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"JinxinZhao315"},"content":"            return new FindModuleCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"JinxinZhao315"},"content":"        case ListModuleCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"JinxinZhao315"},"content":"            return new ListModuleCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"chowRuiYan"},"content":"        case NextMonthCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"chowRuiYan"},"content":"            return new NextMonthCommand();","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"chowRuiYan"},"content":"        case PreviousMonthCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"chowRuiYan"},"content":"            return new PreviousMonthCommand();","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"chowRuiYan"},"content":"        case ReadDayCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"chowRuiYan"},"content":"            return new ReadDayCommandParser().parse(arguments);","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":132,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JinxinZhao315":12,"markuslim24":4,"zhangchengchuan":10,"chowRuiYan":19,"Tianqi-Zhu":32,"-":59}},{"path":"src/main/java/manageme/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Tianqi-Zhu":3,"-":13}},{"path":"src/main/java/manageme/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.StringUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.link.Link;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.ModuleName;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Address;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Email;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Name;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Phone;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskDescription;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskModule;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskName;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"JinxinZhao315"},"content":"     * Parses a {@code String name} into a {@code ModuleName}.","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"JinxinZhao315"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"JinxinZhao315"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"JinxinZhao315"},"content":"     * @throws ParseException if the given {@code ModuleName} is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"JinxinZhao315"},"content":"    public static ModuleName parseModuleName(String name) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"JinxinZhao315"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"JinxinZhao315"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"JinxinZhao315"},"content":"        if (!ModuleName.isValidModuleName(trimmedName)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"JinxinZhao315"},"content":"            throw new ParseException(ModuleName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"JinxinZhao315"},"content":"        return new ModuleName(trimmedName);","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"JinxinZhao315"},"content":"     * Parses a {@code String name} into a {@code Link}.","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"JinxinZhao315"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"JinxinZhao315"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"JinxinZhao315"},"content":"     * @throws ParseException if the given {@code Link} is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"JinxinZhao315"},"content":"    public static Link parseLink(String link) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"JinxinZhao315"},"content":"        requireNonNull(link);","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"JinxinZhao315"},"content":"        String trimmedLink \u003d link.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"JinxinZhao315"},"content":"        if (!Link.isValidLink(trimmedLink)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"JinxinZhao315"},"content":"            throw new ParseException(Link.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"JinxinZhao315"},"content":"        return new Link(trimmedLink);","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":162,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"markuslim24"},"content":"     * Parses a {@code String task name} into a {@code TaskName}.","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"markuslim24"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"markuslim24"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"markuslim24"},"content":"     * @throws ParseException if the given {@code TaskName} is invalid.","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"markuslim24"},"content":"    public static TaskName parseTaskName(String taskName) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"markuslim24"},"content":"        requireNonNull(taskName);","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"markuslim24"},"content":"        String trimmedName \u003d taskName.trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"markuslim24"},"content":"        if (!TaskName.isValidName(trimmedName)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"markuslim24"},"content":"            throw new ParseException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"markuslim24"},"content":"        return new TaskName(trimmedName);","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"markuslim24"},"content":"     * Parses a {@code String task description} into a {@code TaskDescription}.","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"markuslim24"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"markuslim24"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"markuslim24"},"content":"     * @throws ParseException if the given {@code TaskDescription} is invalid.","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"markuslim24"},"content":"    public static TaskDescription parseTaskDescription(String taskDescription) {","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"markuslim24"},"content":"        requireNonNull(taskDescription);","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"markuslim24"},"content":"        String trimmedD \u003d taskDescription.trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"markuslim24"},"content":"        //  if (!TaskDescription.isValidDescription(trimmedD)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"markuslim24"},"content":"        //       throw new ParseException(TaskDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"markuslim24"},"content":"        // }","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"markuslim24"},"content":"        return new TaskDescription(trimmedD);","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"markuslim24"},"content":"     * Parses a {@code String task module} into a {@code TaskModule}.","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"markuslim24"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"markuslim24"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"markuslim24"},"content":"     * @throws ParseException if the given {@code TaskModule} is invalid.","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"markuslim24"},"content":"    public static TaskModule parseTaskModule(String taskModule) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":200,"author":{"gitId":"markuslim24"},"content":"        requireNonNull(taskModule);","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"markuslim24"},"content":"        String trimmedM \u003d taskModule.trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"markuslim24"},"content":"        if (!TaskModule.isValidModule(trimmedM)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":203,"author":{"gitId":"markuslim24"},"content":"            throw new ParseException(TaskModule.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":204,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":205,"author":{"gitId":"markuslim24"},"content":"        return new TaskModule(trimmedM);","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"markuslim24"},"content":"     * Parses a {@code String date/time} into a {@code TaskTime}.","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"markuslim24"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"markuslim24"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"markuslim24"},"content":"     * @throws ParseException if the given {@code TaskTime} is invalid.","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"markuslim24"},"content":"    public static TaskTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":215,"author":{"gitId":"markuslim24"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2021-10-10"},{"lineNumber":216,"author":{"gitId":"markuslim24"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"markuslim24"},"content":"        if (!TaskTime.isValidTaskTime(trimmedDateTime)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":218,"author":{"gitId":"markuslim24"},"content":"            throw new ParseException(TaskTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":219,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":220,"author":{"gitId":"markuslim24"},"content":"        return new TaskTime(trimmedDateTime);","lastModifiedDate":"2021-10-17"},{"lineNumber":221,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":223,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":224,"author":{"gitId":"chowRuiYan"},"content":"     * Parses a {@code String date} into a {@code LocalDate}.","lastModifiedDate":"2021-10-16"},{"lineNumber":225,"author":{"gitId":"chowRuiYan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-16"},{"lineNumber":226,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":227,"author":{"gitId":"chowRuiYan"},"content":"     * @throws ParseException if the given {@code LocalDate} is invalid.","lastModifiedDate":"2021-10-16"},{"lineNumber":228,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":229,"author":{"gitId":"chowRuiYan"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2021-10-16"},{"lineNumber":230,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-10-16"},{"lineNumber":231,"author":{"gitId":"chowRuiYan"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-10-16"},{"lineNumber":232,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":233,"author":{"gitId":"chowRuiYan"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":234,"author":{"gitId":"chowRuiYan"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(trimmedDate);","lastModifiedDate":"2021-10-16"},{"lineNumber":235,"author":{"gitId":"chowRuiYan"},"content":"            return parsedDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":236,"author":{"gitId":"chowRuiYan"},"content":"        } catch (DateTimeException dte) {","lastModifiedDate":"2021-10-16"},{"lineNumber":237,"author":{"gitId":"chowRuiYan"},"content":"            throw new ParseException(\"The date entered is in the incorrect format\");","lastModifiedDate":"2021-10-16"},{"lineNumber":238,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":239,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"JinxinZhao315":30,"markuslim24":60,"chowRuiYan":20,"Tianqi-Zhu":15,"-":115}},{"path":"src/main/java/manageme/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":38}},{"path":"src/main/java/manageme/logic/parser/calendar/ReadDayCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser.calendar;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.calendar.ReadDayCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.Parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"public class ReadDayCommandParser implements Parser\u003cReadDayCommand\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"     * Parses the given {@code String} of arguments in the context of the ReadDayCommand","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"     * and returns a ReadDayCommand object for execution.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"    public ReadDayCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"            LocalDate date \u003d ParserUtil.parseDate(args);","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"            return new ReadDayCommand(date);","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReadDayCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"chowRuiYan":19,"Tianqi-Zhu":8}},{"path":"src/main/java/manageme/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser.exceptions;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Tianqi-Zhu":2,"-":15}},{"path":"src/main/java/manageme/logic/parser/module/AddModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.module.AddModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.Parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.Prefix;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.link.Link;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.ModuleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"public class AddModuleCommandParser implements Parser\u003cAddModuleCommand\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"    public AddModuleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_LINK);","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_LINK)","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddModuleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"        ModuleName name \u003d ParserUtil.parseModuleName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"        Link link \u003d ParserUtil.parseLink(argMultimap.getValue(PREFIX_LINK).get());","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module module \u003d new Module(name, link);","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"        return new AddModuleCommand(module);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"JinxinZhao315":5,"chowRuiYan":1,"Tianqi-Zhu":42}},{"path":"src/main/java/manageme/logic/parser/module/DeleteModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.module.DeleteModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.Parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"public class DeleteModuleCommandParser implements Parser\u003cDeleteModuleCommand\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"    public DeleteModuleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"            return new DeleteModuleCommand(index);","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteModuleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Tianqi-Zhu":22}},{"path":"src/main/java/manageme/logic/parser/module/EditModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"JinxinZhao315"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.module.EditModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.Parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":" * Parses input arguments and creates a new EditModuleCommand object","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"public class EditModuleCommandParser implements Parser\u003cEditModuleCommand\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"     * Parses the given {@code String} of arguments in the context of the EditModuleCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"JinxinZhao315"},"content":"     * and returns an EditModuleCommand object for execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"JinxinZhao315"},"content":"    public EditModuleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"JinxinZhao315"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":"        Index index;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"JinxinZhao315"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"JinxinZhao315"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"JinxinZhao315"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"JinxinZhao315"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditModuleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand.EditModuleDescriptor editModuleDescriptor \u003d new EditModuleCommand.EditModuleDescriptor();","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"JinxinZhao315"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"JinxinZhao315"},"content":"            editModuleDescriptor.setModuleName(ParserUtil.parseModuleName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"JinxinZhao315"},"content":"        if (argMultimap.getValue(PREFIX_LINK).isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"JinxinZhao315"},"content":"            editModuleDescriptor.setLink(ParserUtil.parseLink(argMultimap.getValue(PREFIX_LINK).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"JinxinZhao315"},"content":"        if (!editModuleDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"JinxinZhao315"},"content":"            throw new ParseException(EditModuleCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"JinxinZhao315"},"content":"        return new EditModuleCommand(index, editModuleDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"JinxinZhao315":41,"chowRuiYan":1,"Tianqi-Zhu":13}},{"path":"src/main/java/manageme/logic/parser/module/FindModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JinxinZhao315"},"content":"package manageme.logic.parser.module;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"JinxinZhao315"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.logic.commands.module.FindModuleCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.logic.parser.Parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.model.module.ModNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"JinxinZhao315"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"JinxinZhao315"},"content":" * Parses input arguments and creates a new FindModuleCommand object","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"JinxinZhao315"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"JinxinZhao315"},"content":"public class FindModuleCommandParser implements Parser\u003cFindModuleCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"     * Parses the given {@code String} of arguments in the context of the FindModuleCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"     * and returns a FindModuleCommand object for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"JinxinZhao315"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"    public FindModuleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"JinxinZhao315"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"JinxinZhao315"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindModuleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"JinxinZhao315"},"content":"        return new FindModuleCommand(new ModNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"JinxinZhao315":33}},{"path":"src/main/java/manageme/logic/parser/module/ReadModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.module.ReadModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.Parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"public class ReadModuleCommandParser implements Parser\u003cReadModuleCommand\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"    public ReadModuleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"            return new ReadModuleCommand(index);","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReadModuleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"chowRuiYan":18,"Tianqi-Zhu":9}},{"path":"src/main/java/manageme/logic/parser/task/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.task.AddTaskCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.Parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.Prefix;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskDescription;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskModule;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskName;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_MODULE,","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"                        PREFIX_START,","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"                        PREFIX_END);","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DESCRIPTION)","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"                || (arePrefixesPresent(argMultimap, PREFIX_START)","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"                    \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_END))","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"                    AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"        TaskName name \u003d ParserUtil.parseTaskName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"        TaskDescription description \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"                ParserUtil.parseTaskDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"        TaskModule module \u003d argMultimap.getValue(PREFIX_MODULE).isPresent()","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"                ? ParserUtil.parseTaskModule(argMultimap.getValue(PREFIX_MODULE).get())","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"                : TaskModule.empty();","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"        TaskTime start \u003d argMultimap.getValue(PREFIX_START).isPresent()","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"                ? ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_START).get())","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"                : TaskTime.empty();","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"        TaskTime end \u003d argMultimap.getValue(PREFIX_END).isPresent()","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"markuslim24"},"content":"                ? ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_END).get())","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"markuslim24"},"content":"                : TaskTime.empty();","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"markuslim24"},"content":"        Task task \u003d new Task(name, description, module, start, end);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"markuslim24"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"markuslim24"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"markuslim24"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"markuslim24"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"markuslim24":47,"Tianqi-Zhu":19}},{"path":"src/main/java/manageme/logic/parser/task/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"//Maybe can extend from the DeleteCommand in .parser?","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.task.DeleteTaskCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.Parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"markuslim24":4,"zhangchengchuan":17,"Tianqi-Zhu":9}},{"path":"src/main/java/manageme/logic/parser/task/EditTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.task.EditTaskCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.Parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":" * Parses input arguments and creates a new EditTaskCommand object","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"public class EditTaskCommandParser implements Parser\u003cEditTaskCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTaskCommand","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"     * and returns an EditTaskCommand object for execution.","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"    public EditTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME,","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"                        PREFIX_DESCRIPTION, PREFIX_MODULE, PREFIX_START, PREFIX_END);","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"        Index index;","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"                    EditTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditTaskCommand.EditTaskDescriptor editTaskDescriptor \u003d new EditTaskCommand.EditTaskDescriptor();","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"            editTaskDescriptor.setName(ParserUtil.parseTaskName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"markuslim24"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"markuslim24"},"content":"            editTaskDescriptor.setDescription(ParserUtil","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"                    .parseTaskDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"markuslim24"},"content":"        if (argMultimap.getValue(PREFIX_MODULE).isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"markuslim24"},"content":"            editTaskDescriptor.setModule(ParserUtil.parseTaskModule(argMultimap.getValue(PREFIX_MODULE).get()));","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"markuslim24"},"content":"        if (argMultimap.getValue(PREFIX_START).isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"markuslim24"},"content":"            editTaskDescriptor.setStart(ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_START).get()));","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"markuslim24"},"content":"        if (argMultimap.getValue(PREFIX_END).isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"markuslim24"},"content":"            editTaskDescriptor.setEnd(ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_END).get()));","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"markuslim24"},"content":"        //parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editTaskDescriptor::setTags);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"markuslim24"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"markuslim24"},"content":"            throw new ParseException(EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"markuslim24"},"content":"        return new EditTaskCommand(index, editTaskDescriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"markuslim24"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"markuslim24"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"markuslim24"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"markuslim24"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"markuslim24"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"markuslim24"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"markuslim24"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"markuslim24"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"markuslim24"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"markuslim24":73,"Tianqi-Zhu":17}},{"path":"src/main/java/manageme/logic/parser/task/FindTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package manageme.logic.parser.task;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.logic.commands.task.FindTaskCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.logic.parser.Parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":" * Parses input arguments and creates a new FindTaskCommand object","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"public class FindTaskCommandParser implements Parser\u003cFindTaskCommand\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTaskCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"     * and returns a FindTaskCommand object for execution.","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"    public FindTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"        return new FindTaskCommand(new TaskNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"zhangchengchuan":33}},{"path":"src/main/java/manageme/model/ManageMe.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.UniqueModuleList;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.UniquePersonList;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.UniqueTaskList;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"public class ManageMe implements ReadOnlyManageMe {","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    private final UniqueModuleList modules;","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"    {","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        modules \u003d new UniqueModuleList();","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"    public ManageMe() {}","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"     * Creates an ManageMe using the Persons in the {@code toBeCopied}","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"    public ManageMe(ReadOnlyManageMe toBeCopied) {","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"     * Replaces the contents of the module list with {@code modules}.","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"     * {@code modules} must not contain duplicate modules.","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"    public void setModules(List\u003cModule\u003e modules) {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"        this.modules.setModules(modules);","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"     * Resets the existing data of this {@code ManageMe} with {@code newData}.","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"    public void resetData(ReadOnlyManageMe newData) {","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"        setModules(newData.getModuleList());","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"chowRuiYan"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"chowRuiYan"},"content":"     * Adds a person to the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"chowRuiYan"},"content":"     * The person must not already exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"chowRuiYan"},"content":"     * {@code target} must exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"chowRuiYan"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"chowRuiYan"},"content":"     * Removes {@code key} from this {@code ManageMe}.","lastModifiedDate":"2021-10-15"},{"lineNumber":118,"author":{"gitId":"chowRuiYan"},"content":"     * {@code key} must exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"chowRuiYan"},"content":"    //// module-level operations","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"chowRuiYan"},"content":"     * Returns true if a module with the same identity as {@code module} exists in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":128,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"chowRuiYan"},"content":"    public boolean hasModule(Module module) {","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"chowRuiYan"},"content":"        return modules.contains(module);","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"chowRuiYan"},"content":"     * Adds a module to the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":136,"author":{"gitId":"chowRuiYan"},"content":"     * The module must not already exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":137,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"chowRuiYan"},"content":"    public void addModule(Module p) {","lastModifiedDate":"2021-10-01"},{"lineNumber":139,"author":{"gitId":"chowRuiYan"},"content":"        modules.add(p);","lastModifiedDate":"2021-10-01"},{"lineNumber":140,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":142,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":143,"author":{"gitId":"chowRuiYan"},"content":"     * Replaces the given module {@code target} in the list with {@code editedModule}.","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"chowRuiYan"},"content":"     * {@code target} must exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":145,"author":{"gitId":"chowRuiYan"},"content":"     * The module identity of {@code editedModule} must not be the same as another existing module in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":146,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"chowRuiYan"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(editedModule);","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":150,"author":{"gitId":"chowRuiYan"},"content":"        modules.setModule(target, editedModule);","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":153,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":154,"author":{"gitId":"chowRuiYan"},"content":"     * Removes {@code key} from this {@code ManageMe}.","lastModifiedDate":"2021-10-15"},{"lineNumber":155,"author":{"gitId":"chowRuiYan"},"content":"     * {@code key} must exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":156,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"chowRuiYan"},"content":"    public void removeModule(Module key) {","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"chowRuiYan"},"content":"        modules.remove(key);","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":161,"author":{"gitId":"chowRuiYan"},"content":"    //// task-level operations","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":163,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":164,"author":{"gitId":"chowRuiYan"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":165,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":166,"author":{"gitId":"chowRuiYan"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-01"},{"lineNumber":167,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-01"},{"lineNumber":168,"author":{"gitId":"chowRuiYan"},"content":"        return tasks.contains(task);","lastModifiedDate":"2021-10-01"},{"lineNumber":169,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":170,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":171,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":172,"author":{"gitId":"chowRuiYan"},"content":"     * Adds a task to the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":173,"author":{"gitId":"chowRuiYan"},"content":"     * The task must not already exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":174,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":175,"author":{"gitId":"chowRuiYan"},"content":"    public void addTask(Task p) {","lastModifiedDate":"2021-10-01"},{"lineNumber":176,"author":{"gitId":"chowRuiYan"},"content":"        tasks.add(p);","lastModifiedDate":"2021-10-01"},{"lineNumber":177,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":178,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":179,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":180,"author":{"gitId":"chowRuiYan"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-10-01"},{"lineNumber":181,"author":{"gitId":"chowRuiYan"},"content":"     * {@code target} must exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":182,"author":{"gitId":"chowRuiYan"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":183,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":184,"author":{"gitId":"chowRuiYan"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-01"},{"lineNumber":185,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2021-10-01"},{"lineNumber":186,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":187,"author":{"gitId":"chowRuiYan"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2021-10-01"},{"lineNumber":188,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":189,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":190,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":191,"author":{"gitId":"chowRuiYan"},"content":"     * Removes {@code key} from this {@code ManageMe}.","lastModifiedDate":"2021-10-15"},{"lineNumber":192,"author":{"gitId":"chowRuiYan"},"content":"     * {@code key} must exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":193,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":194,"author":{"gitId":"chowRuiYan"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2021-10-01"},{"lineNumber":195,"author":{"gitId":"chowRuiYan"},"content":"        tasks.remove(key);","lastModifiedDate":"2021-10-01"},{"lineNumber":196,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":197,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"chowRuiYan"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\\n\"","lastModifiedDate":"2021-10-01"},{"lineNumber":203,"author":{"gitId":"chowRuiYan"},"content":"                + modules.asUnmodifiableObservableList().size() + \" modules\\n\"","lastModifiedDate":"2021-10-01"},{"lineNumber":204,"author":{"gitId":"chowRuiYan"},"content":"                + tasks.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2021-10-01"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":212,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":213,"author":{"gitId":"chowRuiYan"},"content":"    public ObservableList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":214,"author":{"gitId":"chowRuiYan"},"content":"        return modules.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-01"},{"lineNumber":215,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":216,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":217,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":218,"author":{"gitId":"chowRuiYan"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":219,"author":{"gitId":"chowRuiYan"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-01"},{"lineNumber":220,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":221,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":222,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"zhangchengchuan"},"content":"    public ArrayList\u003cTask\u003e getModifiableTaskList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"zhangchengchuan"},"content":"        return tasks.asModifiableObservableList();","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":230,"author":{"gitId":"chowRuiYan"},"content":"                || (other instanceof ManageMe // instanceof handles nulls","lastModifiedDate":"2021-10-15"},{"lineNumber":231,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 persons.equals(((ManageMe) other).persons)","lastModifiedDate":"2021-10-15"},{"lineNumber":232,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 modules.equals(((ManageMe) other).modules)","lastModifiedDate":"2021-10-15"},{"lineNumber":233,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 tasks.equals(((ManageMe) other).tasks));","lastModifiedDate":"2021-10-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":238,"author":{"gitId":"chowRuiYan"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-01"},{"lineNumber":239,"author":{"gitId":"chowRuiYan"},"content":"        return Objects.hash(persons, modules, tasks);","lastModifiedDate":"2021-10-01"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zhangchengchuan":6,"chowRuiYan":128,"Tianqi-Zhu":10,"-":97}},{"path":"src/main/java/manageme/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.GuiSettings;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"    Predicate\u003cModule\u003e PREDICATE_SHOW_ALL_MODULES \u003d unused -\u003e true;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"     * Returns the user prefs\u0027 ManageMe file path.","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"    Path getManageMeFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"     * Sets the user prefs\u0027 ManageMe file path.","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"    void setManageMeFilePath(Path manageMeFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"     * Replaces ManageMe data with the data in {@code manageMe}.","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"    void setManageMe(ReadOnlyManageMe manageMe);","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"    /** Returns the ManageMe */","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"    ReadOnlyManageMe getManageMe();","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"     * The person must exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"     * {@code person} must not already exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"     * {@code target} must exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"chowRuiYan"},"content":"     * Returns true if a module with the same identity as {@code module} exists in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"chowRuiYan"},"content":"    boolean hasModule(Module module);","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"chowRuiYan"},"content":"     * Deletes the given module.","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"chowRuiYan"},"content":"     * The module must exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"chowRuiYan"},"content":"    void deleteModule(Module target);","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"chowRuiYan"},"content":"     * Adds the given module.","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"chowRuiYan"},"content":"     * {@code module} must not already exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"chowRuiYan"},"content":"    void addModule(Module module);","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"chowRuiYan"},"content":"     * Replaces the given module {@code target} with {@code editedModule}.","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"chowRuiYan"},"content":"     * {@code target} must exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"chowRuiYan"},"content":"     * The module identity of {@code editedModule} must not be the same as another existing module in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":117,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"chowRuiYan"},"content":"    void setModule(Module target, Module editedModule);","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"chowRuiYan"},"content":"    /** Returns an unmodifiable view of the filtered module list */","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"chowRuiYan"},"content":"    ObservableList\u003cModule\u003e getFilteredModuleList();","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"chowRuiYan"},"content":"     * Updates the filter of the filtered module list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"chowRuiYan"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"chowRuiYan"},"content":"    void updateFilteredModuleList(Predicate\u003cModule\u003e predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"chowRuiYan"},"content":"     * Returns an unmodifiable view of the read module list","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"chowRuiYan"},"content":"    ObservableList\u003cModule\u003e getReadModuleList();","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"chowRuiYan"},"content":"     * Updates the filter of the read module list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"chowRuiYan"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"chowRuiYan"},"content":"    void updateReadModuleList(Predicate\u003cModule\u003e predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"chowRuiYan"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":143,"author":{"gitId":"chowRuiYan"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"chowRuiYan"},"content":"     * Deletes the given task.","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"chowRuiYan"},"content":"     * The task must exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":148,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"chowRuiYan"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2021-10-01"},{"lineNumber":150,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"chowRuiYan"},"content":"     * Adds the given task.","lastModifiedDate":"2021-10-01"},{"lineNumber":153,"author":{"gitId":"chowRuiYan"},"content":"     * {@code task} must not already exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":154,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":155,"author":{"gitId":"chowRuiYan"},"content":"    void addTask(Task task);","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"chowRuiYan"},"content":"     * Replaces the given task {@code target} with {@code editedtask}.","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"chowRuiYan"},"content":"     * {@code target} must exist in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":160,"author":{"gitId":"chowRuiYan"},"content":"     * The task identity of {@code editedtask} must not be the same as another existing task in the ManageMe.","lastModifiedDate":"2021-10-15"},{"lineNumber":161,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"chowRuiYan"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2021-10-01"},{"lineNumber":163,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":164,"author":{"gitId":"chowRuiYan"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2021-10-01"},{"lineNumber":165,"author":{"gitId":"chowRuiYan"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-10-01"},{"lineNumber":166,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":167,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":168,"author":{"gitId":"chowRuiYan"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-01"},{"lineNumber":169,"author":{"gitId":"chowRuiYan"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-01"},{"lineNumber":170,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":171,"author":{"gitId":"chowRuiYan"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":172,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":173,"author":{"gitId":"chowRuiYan"},"content":"    /** Returns an unmodifiable view of the unfiltered task list */","lastModifiedDate":"2021-10-16"},{"lineNumber":174,"author":{"gitId":"chowRuiYan"},"content":"    ObservableList\u003cTask\u003e getUnfilteredTaskList();","lastModifiedDate":"2021-10-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chowRuiYan":99,"Tianqi-Zhu":5,"-":71}},{"path":"src/main/java/manageme/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.GuiSettings;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.LogsCenter;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":" * Represents the in-memory model of the ManageMe data.","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    private final ManageMe manageMe;","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    private final FilteredList\u003cModule\u003e filteredModules;","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    private final FilteredList\u003cModule\u003e readModule;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"    private final FilteredList\u003cTask\u003e unfilteredTasks;","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"    private final ArrayList\u003cTask\u003e modifiableUnfilteredTasks;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"     * Initializes a ModelManager with the given manageMe and userPrefs.","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"    public ModelManager(ReadOnlyManageMe manageMe, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(manageMe, userPrefs);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"        logger.fine(\"Initializing with ManageMe: \" + manageMe + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"        this.manageMe \u003d new ManageMe(manageMe);","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.manageMe.getPersonList());","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"        filteredModules \u003d new FilteredList\u003c\u003e(this.manageMe.getModuleList());","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"        readModule \u003d new FilteredList\u003c\u003e(this.manageMe.getModuleList());","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.manageMe.getTaskList());","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"        unfilteredTasks \u003d new FilteredList\u003c\u003e(this.manageMe.getTaskList());","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"        // Time Manager use","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"        modifiableUnfilteredTasks \u003d new ArrayList\u003cTask\u003e(this.manageMe.getModifiableTaskList());","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"        this(new ManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"    public Path getManageMeFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"        return userPrefs.getManageMeFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"chowRuiYan"},"content":"    public void setManageMeFilePath(Path manageMeFilePath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(manageMeFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"chowRuiYan"},"content":"        userPrefs.setManageMeFilePath(manageMeFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"chowRuiYan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ManageMe \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"chowRuiYan"},"content":"    public void setManageMe(ReadOnlyManageMe manageMe) {","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"chowRuiYan"},"content":"        this.manageMe.resetData(manageMe);","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"chowRuiYan"},"content":"    public ReadOnlyManageMe getManageMe() {","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"chowRuiYan"},"content":"        return manageMe;","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"chowRuiYan"},"content":"        return manageMe.hasPerson(person);","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":114,"author":{"gitId":"chowRuiYan"},"content":"        manageMe.removePerson(target);","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":119,"author":{"gitId":"chowRuiYan"},"content":"        manageMe.addPerson(person);","lastModifiedDate":"2021-10-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":125,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(target, editedPerson);","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"chowRuiYan"},"content":"        manageMe.setPerson(target, editedPerson);","lastModifiedDate":"2021-10-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"chowRuiYan"},"content":"    public boolean hasModule(Module module) {","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"chowRuiYan"},"content":"        return manageMe.hasModule(module);","lastModifiedDate":"2021-10-15"},{"lineNumber":134,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"chowRuiYan"},"content":"    public void deleteModule(Module target) {","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"chowRuiYan"},"content":"        manageMe.removeModule(target);","lastModifiedDate":"2021-10-15"},{"lineNumber":139,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":140,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":142,"author":{"gitId":"chowRuiYan"},"content":"    public void addModule(Module module) {","lastModifiedDate":"2021-10-01"},{"lineNumber":143,"author":{"gitId":"chowRuiYan"},"content":"        manageMe.addModule(module);","lastModifiedDate":"2021-10-15"},{"lineNumber":144,"author":{"gitId":"chowRuiYan"},"content":"        updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"chowRuiYan"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(target, editedModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"chowRuiYan"},"content":"        manageMe.setModule(target, editedModule);","lastModifiedDate":"2021-10-15"},{"lineNumber":152,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":153,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":154,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":155,"author":{"gitId":"chowRuiYan"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"chowRuiYan"},"content":"        return manageMe.hasTask(task);","lastModifiedDate":"2021-10-15"},{"lineNumber":158,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":161,"author":{"gitId":"chowRuiYan"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"chowRuiYan"},"content":"        manageMe.removeTask(target);","lastModifiedDate":"2021-10-15"},{"lineNumber":163,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":164,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":165,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":166,"author":{"gitId":"chowRuiYan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-10-01"},{"lineNumber":167,"author":{"gitId":"chowRuiYan"},"content":"        manageMe.addTask(task);","lastModifiedDate":"2021-10-15"},{"lineNumber":168,"author":{"gitId":"chowRuiYan"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-01"},{"lineNumber":169,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":170,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":171,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":172,"author":{"gitId":"chowRuiYan"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-01"},{"lineNumber":173,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-10-16"},{"lineNumber":174,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":175,"author":{"gitId":"chowRuiYan"},"content":"        manageMe.setTask(target, editedTask);","lastModifiedDate":"2021-10-15"},{"lineNumber":176,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":177,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":182,"author":{"gitId":"chowRuiYan"},"content":"     * {@code versionedManageMe}","lastModifiedDate":"2021-10-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":195,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":196,"author":{"gitId":"chowRuiYan"},"content":"    public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":197,"author":{"gitId":"chowRuiYan"},"content":"        return filteredModules;","lastModifiedDate":"2021-10-01"},{"lineNumber":198,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":199,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":200,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":201,"author":{"gitId":"chowRuiYan"},"content":"    public void updateFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2021-10-01"},{"lineNumber":202,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":203,"author":{"gitId":"chowRuiYan"},"content":"        filteredModules.setPredicate(predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":204,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":205,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":206,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"chowRuiYan"},"content":"    public ObservableList\u003cModule\u003e getReadModuleList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":208,"author":{"gitId":"chowRuiYan"},"content":"        return readModule;","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":212,"author":{"gitId":"chowRuiYan"},"content":"    public void updateReadModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":213,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":214,"author":{"gitId":"chowRuiYan"},"content":"        readModule.setPredicate(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":216,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":217,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":218,"author":{"gitId":"chowRuiYan"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":219,"author":{"gitId":"chowRuiYan"},"content":"        return filteredTasks;","lastModifiedDate":"2021-10-01"},{"lineNumber":220,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":221,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":222,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":223,"author":{"gitId":"chowRuiYan"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-01"},{"lineNumber":224,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":225,"author":{"gitId":"chowRuiYan"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":226,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":227,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":228,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":229,"author":{"gitId":"chowRuiYan"},"content":"    public ObservableList\u003cTask\u003e getUnfilteredTaskList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":230,"author":{"gitId":"chowRuiYan"},"content":"        return unfilteredTasks;","lastModifiedDate":"2021-10-16"},{"lineNumber":231,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":232,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"chowRuiYan"},"content":"        return manageMe.equals(other.manageMe)","lastModifiedDate":"2021-10-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":249,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-10-01"},{"lineNumber":250,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 filteredModules.equals(other.filteredModules)","lastModifiedDate":"2021-10-01"},{"lineNumber":251,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 readModule.equals(other.readModule)","lastModifiedDate":"2021-10-11"},{"lineNumber":252,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks)","lastModifiedDate":"2021-10-16"},{"lineNumber":253,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 unfilteredTasks.equals(other.unfilteredTasks);","lastModifiedDate":"2021-10-16"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zhangchengchuan":5,"chowRuiYan":121,"Tianqi-Zhu":11,"-":119}},{"path":"src/main/java/manageme/model/ReadOnlyManageMe.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":" * Unmodifiable view of a ManageMe","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"public interface ReadOnlyManageMe {","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"     * Returns an unmodifiable view of the modules list.","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"     * This list will not contain any duplicate modules.","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    ObservableList\u003cModule\u003e getModuleList();","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"     * Returns an unmodifiable view of the tasks list.","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"     * Returns an Modifiable view of the tasks list just for .","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"    ArrayList\u003cTask\u003e getModifiableTaskList();","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zhangchengchuan":9,"chowRuiYan":14,"Tianqi-Zhu":4,"-":13}},{"path":"src/main/java/manageme/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.GuiSettings;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"    Path getManageMeFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"chowRuiYan":1,"Tianqi-Zhu":2,"-":13}},{"path":"src/main/java/manageme/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.GuiSettings;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    private Path manageMeFilePath \u003d Paths.get(\"data\" , \"manageme.json\");","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"        setManageMeFilePath(newUserPrefs.getManageMeFilePath());","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"    public Path getManageMeFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"        return manageMeFilePath;","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"    public void setManageMeFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"        this.manageMeFilePath \u003d addressBookFilePath;","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 manageMeFilePath.equals(o.manageMeFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"        return Objects.hash(guiSettings, manageMeFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"        sb.append(\"\\nLocal data file location : \" + manageMeFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chowRuiYan":9,"Tianqi-Zhu":2,"-":76}},{"path":"src/main/java/manageme/model/link/Link.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.link;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"JinxinZhao315"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.AppUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"JinxinZhao315"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"JinxinZhao315"},"content":" * Represents a link in the app.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"JinxinZhao315"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLink(String)}","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"JinxinZhao315"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"JinxinZhao315"},"content":"public class Link {","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"JinxinZhao315"},"content":"            \"Link must be a valid website address\";","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"    /*","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"     * The first character of the link must not be a whitespace,","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"    // TODO: Link content input validation","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"JinxinZhao315"},"content":"    // TODO: Implement name and link as two separate classes","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":"    public final String link;","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"    private String name;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"     * Constructs a {@code Link}.","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"JinxinZhao315"},"content":"     * @param link A valid link.","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":"    public Link(String name, String link) {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"JinxinZhao315"},"content":"        requireNonNull(name, link);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"        AppUtil.checkArgument(isValidLink(link), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"JinxinZhao315"},"content":"        // TODO: Link name input validation when name is a separate class.","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"JinxinZhao315"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"JinxinZhao315"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"JinxinZhao315"},"content":"    // TODO: Remove this constructor for v1.3 since name will be compulsory","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"JinxinZhao315"},"content":"     * Constructs a {@code Link}.","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"JinxinZhao315"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"JinxinZhao315"},"content":"     * @param link A valid link.","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"JinxinZhao315"},"content":"    public Link(String link) {","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"JinxinZhao315"},"content":"        requireNonNull(link);","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"Tianqi-Zhu"},"content":"        AppUtil.checkArgument(isValidLink(link), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"JinxinZhao315"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"     * Add a name to link","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"Tianqi-Zhu"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Tianqi-Zhu"},"content":"     * @param name name of the link","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void addName(String name) {","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Tianqi-Zhu"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"Tianqi-Zhu"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"Tianqi-Zhu"},"content":"     * Change the name of link to the new name","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"Tianqi-Zhu"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Tianqi-Zhu"},"content":"     * @param name the new name","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void updateName(String name) {","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"Tianqi-Zhu"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"Tianqi-Zhu"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"    public String getName() {","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"        return name;","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"    public String getLink() {","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"        return link;","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"JinxinZhao315"},"content":"     * Returns true if a given string is a valid link.","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"JinxinZhao315"},"content":"    public static boolean isValidLink(String test) {","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"JinxinZhao315"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"JinxinZhao315"},"content":"    public String toString() {","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"Tianqi-Zhu"},"content":"        if (name !\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"Tianqi-Zhu"},"content":"            return name + \": \" + link;","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"Tianqi-Zhu"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"JinxinZhao315"},"content":"            return link;","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"JinxinZhao315"},"content":"     * Returns true if both links have the same link content.","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"JinxinZhao315"},"content":"     * This defines a weaker notion of equality between two mods.","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"JinxinZhao315"},"content":"     * @param otherlink","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"JinxinZhao315"},"content":"    public boolean isSameLink(Link otherlink) {","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"JinxinZhao315"},"content":"        if (otherlink \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"JinxinZhao315"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"JinxinZhao315"},"content":"        return otherlink !\u003d null","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"JinxinZhao315"},"content":"                \u0026\u0026 otherlink.getLink().equals(getLink());","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"JinxinZhao315"},"content":"     * Returns true if both mods have the same name and link content.","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"JinxinZhao315"},"content":"     * This defines a stronger notion of equality between two mods.","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"JinxinZhao315"},"content":"     * @param other","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"JinxinZhao315"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"JinxinZhao315"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"JinxinZhao315"},"content":"                || (other instanceof Link // instanceof handles nulls","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"JinxinZhao315"},"content":"                \u0026\u0026 link.equals(((Link) other).link)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"JinxinZhao315"},"content":"                // TODO: Compare link names in equal when proper link class is done","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"JinxinZhao315"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"JinxinZhao315"},"content":"        return link.hashCode();","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"JinxinZhao315":91,"chowRuiYan":9,"Tianqi-Zhu":29}},{"path":"src/main/java/manageme/model/link/LinkAddress.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.link;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import java.net.MalformedURLException;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import java.net.URL;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.AppUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"public class LinkAddress {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"            \"The link should be a valid url, beginning with https:// or ftp://\";","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"    /*","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"     * The address should be in a valid url format.","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(https?|ftp|file)://\"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"            + \"[-a-zA-Z0-9+\u0026@#/%?\u003d~_|!:,.;]*[-a-zA-Z0-9+\u0026@#/%\u003d~_|]\";","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"    public final URL linkAddress;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"     * Constructs a {@code LinkAddress}.","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"     * @param linkAddress A valid url for the link.","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"    public LinkAddress(String linkAddress) {","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"        requireNonNull(linkAddress);","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"        AppUtil.checkArgument(isValidLinkName(linkAddress), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"            this.linkAddress \u003d new URL(linkAddress);","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"        } catch (MalformedURLException e) {","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"     * Returns true if a given string is a valid module name.","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static boolean isValidLinkName(String test) {","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"    public String toString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"        return linkAddress.toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"Tianqi-Zhu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"Tianqi-Zhu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"                || (other instanceof LinkAddress // instanceof handles nulls","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"Tianqi-Zhu"},"content":"                \u0026\u0026 linkAddress.equals(((LinkAddress) other).linkAddress)); // state check","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"Tianqi-Zhu"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"Tianqi-Zhu"},"content":"        return linkAddress.hashCode();","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Tianqi-Zhu":61}},{"path":"src/main/java/manageme/model/link/LinkName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.link;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"JinxinZhao315"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.AppUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"public class LinkName {","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"JinxinZhao315"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"JinxinZhao315"},"content":"    /*","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"     * The first character of the link name must not be a whitespace,","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"JinxinZhao315"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"    public final String name;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"     * Constructs a {@code LinkName}.","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"     * @param moduleName A valid mod name.","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"    public LinkName(String moduleName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(moduleName);","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"        AppUtil.checkArgument(isValidLinkName(moduleName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"        this.name \u003d moduleName;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":"     * Returns true if a given string is a valid module name.","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static boolean isValidLinkName(String test) {","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"JinxinZhao315"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"JinxinZhao315"},"content":"    public String toString() {","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"JinxinZhao315"},"content":"        return name;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"JinxinZhao315"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"JinxinZhao315"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"                || (other instanceof LinkName // instanceof handles nulls","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"                \u0026\u0026 name.equals(((LinkName) other).name)); // state check","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"JinxinZhao315"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"JinxinZhao315"},"content":"        return name.hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"JinxinZhao315":41,"chowRuiYan":2,"Tianqi-Zhu":11}},{"path":"src/main/java/manageme/model/link/UniqueLinkList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.link;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":" * TODO: V1.3","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"public class UniqueLinkList {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Tianqi-Zhu":7}},{"path":"src/main/java/manageme/model/module/ModNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"JinxinZhao315"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"JinxinZhao315"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.StringUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"JinxinZhao315"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"JinxinZhao315"},"content":" * Tests that a {@code Module}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"JinxinZhao315"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"JinxinZhao315"},"content":"public class ModNameContainsKeywordsPredicate implements Predicate\u003cModule\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"JinxinZhao315"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"JinxinZhao315"},"content":"    public ModNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"JinxinZhao315"},"content":"    public boolean test(Module module) {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(module.getModuleName().name, keyword));","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"JinxinZhao315"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"JinxinZhao315"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"JinxinZhao315"},"content":"                || (other instanceof ModNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"                \u0026\u0026 keywords.equals(((ModNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"JinxinZhao315":29,"Tianqi-Zhu":2}},{"path":"src/main/java/manageme/model/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"JinxinZhao315"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.link.Link;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"JinxinZhao315"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"JinxinZhao315"},"content":" * Represents a Module in the app.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"JinxinZhao315"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"JinxinZhao315"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"JinxinZhao315"},"content":"public class Module {","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"JinxinZhao315"},"content":"    // Identity fields","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"    private final ModuleName moduleName;","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"    // Data fields","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"    private Link link;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"    public Module(ModuleName moduleName, Link link) {","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(moduleName, link);","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"JinxinZhao315"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"     * Link optional","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"    public Module(ModuleName moduleName) {","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(moduleName);","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"JinxinZhao315"},"content":"    public ModuleName getModuleName() {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"        return moduleName;","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"JinxinZhao315"},"content":"    public Link getLink() {","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"JinxinZhao315"},"content":"        return link;","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"JinxinZhao315"},"content":"     * Returns true if both mods have the same name.","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"JinxinZhao315"},"content":"     * This defines a weaker notion of equality between two mods.","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"JinxinZhao315"},"content":"     * @param otherMod","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"    public boolean isSameModule(Module otherMod) {","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"JinxinZhao315"},"content":"        if (otherMod \u003d\u003d this) {","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"JinxinZhao315"},"content":"            return true;","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"JinxinZhao315"},"content":"        return otherMod !\u003d null","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"JinxinZhao315"},"content":"                \u0026\u0026 otherMod.getModuleName().equals(getModuleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"JinxinZhao315"},"content":"     * Returns true if both mods have the same identity and data fields.","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"JinxinZhao315"},"content":"     * This defines a stronger notion of equality between two mods.","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"JinxinZhao315"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"JinxinZhao315"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"JinxinZhao315"},"content":"            return true;","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"JinxinZhao315"},"content":"        if (!(other instanceof Module)) {","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"JinxinZhao315"},"content":"            return false;","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"JinxinZhao315"},"content":"        Module otherMod \u003d (Module) other;","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"JinxinZhao315"},"content":"        return otherMod.getModuleName().equals(getModuleName())","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"JinxinZhao315"},"content":"                \u0026\u0026 otherMod.getLink().equals(getLink());","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"JinxinZhao315"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"JinxinZhao315"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"        return Objects.hash(moduleName, link);","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"JinxinZhao315"},"content":"    public String toString() {","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"JinxinZhao315"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"JinxinZhao315"},"content":"        builder.append(getModuleName())","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"JinxinZhao315"},"content":"                .append(\"; Link: \")","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"JinxinZhao315"},"content":"                .append(getLink());","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"JinxinZhao315"},"content":"        return builder.toString();","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"JinxinZhao315":74,"chowRuiYan":6,"Tianqi-Zhu":13}},{"path":"src/main/java/manageme/model/module/ModuleName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"JinxinZhao315"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.AppUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"JinxinZhao315"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"JinxinZhao315"},"content":" * Represents a module\u0027s link in the app.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"JinxinZhao315"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidModuleName(String)}","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"JinxinZhao315"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"public class ModuleName {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"JinxinZhao315"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"    /*","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"     * The first character of the module name must not be a whitespace,","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"    public final String name;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"JinxinZhao315"},"content":"     * Constructs a {@code ModuleName}.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"JinxinZhao315"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"     * @param moduleName A valid mod name.","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    public ModuleName(String moduleName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(moduleName);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"        AppUtil.checkArgument(isValidModuleName(moduleName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":"        this.name \u003d moduleName;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"JinxinZhao315"},"content":"     * Returns true if a given string is a valid module name.","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"JinxinZhao315"},"content":"    public static boolean isValidModuleName(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"JinxinZhao315"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"JinxinZhao315"},"content":"    public String toString() {","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"JinxinZhao315"},"content":"        return name;","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"JinxinZhao315"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"JinxinZhao315"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"                || (other instanceof ModuleName // instanceof handles nulls","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"JinxinZhao315"},"content":"                \u0026\u0026 name.equals(((ModuleName) other).name)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"JinxinZhao315"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"JinxinZhao315"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"JinxinZhao315"},"content":"        return name.hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"JinxinZhao315":50,"chowRuiYan":5,"Tianqi-Zhu":4}},{"path":"src/main/java/manageme/model/module/UniqueModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.exceptions.DuplicateModuleException;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.exceptions.ModuleNotFoundException;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":" * A list of modules that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":" * A module is considered unique by comparing using {@code Module#isSameModule(module)}. As such, adding and updating of","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":" * modules uses Module#isSameModule(module) for equality so as to ensure that the module being added or updated is","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":" * unique in terms of identity in the UniqueModuleList. However, the removal of a module uses Module#equals(Object) so","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":" * as to ensure that the module with exactly the same fields will be removed.","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":" *","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":" *","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":" * @see Module#isSameModule(module)","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"public class UniqueModuleList implements Iterable\u003cModule\u003e {","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    private final ObservableList\u003cModule\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    private final ObservableList\u003cModule\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"     * Returns true if the list contains an equivalent module as the given argument.","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"    public boolean contains(Module toCheck) {","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        return internalList.stream().anyMatch(toCheck::isSameModule);","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"     * Adds a module to the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"     * The module must not already exist in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"    public void add(Module toAdd) {","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"     * Replaces the module {@code target} in the list with {@code editedModule}.","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"     * The module identity of {@code editedModule} must not be the same as another existing module in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(target, editedModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"            throw new ModuleNotFoundException();","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"        if (!target.isSameModule(editedModule) \u0026\u0026 contains(editedModule)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"        internalList.set(index, editedModule);","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"     * Removes the equivalent module from the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"     * The module must exist in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"    public void remove(Module toRemove) {","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"            throw new ModuleNotFoundException();","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"    public void setModules(UniqueModuleList replacement) {","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"chowRuiYan"},"content":"     * Replaces the contents of this list with {@code modules}.","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"chowRuiYan"},"content":"     * {@code modules} must not contain duplicate modules.","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"chowRuiYan"},"content":"    public void setModules(List\u003cModule\u003e modules) {","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(modules);","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"chowRuiYan"},"content":"        if (!modulesAreUnique(modules)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"chowRuiYan"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"chowRuiYan"},"content":"        internalList.setAll(modules);","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"chowRuiYan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"chowRuiYan"},"content":"    public ObservableList\u003cModule\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"chowRuiYan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"chowRuiYan"},"content":"    public Iterator\u003cModule\u003e iterator() {","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"chowRuiYan"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"chowRuiYan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"chowRuiYan"},"content":"                || (other instanceof UniqueModuleList // instanceof handles nulls","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 internalList.equals(((UniqueModuleList) other).internalList));","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"chowRuiYan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"chowRuiYan"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"chowRuiYan"},"content":"     * Returns true if {@code modules} contains only unique modules.","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"chowRuiYan"},"content":"    private boolean modulesAreUnique(List\u003cModule\u003e modules) {","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"chowRuiYan"},"content":"        for (int i \u003d 0; i \u003c modules.size() - 1; i++) {","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"chowRuiYan"},"content":"            for (int j \u003d i + 1; j \u003c modules.size(); j++) {","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"chowRuiYan"},"content":"                if (modules.get(i).isSameModule(modules.get(j))) {","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"chowRuiYan"},"content":"                    return false;","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"chowRuiYan"},"content":"                }","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"chowRuiYan"},"content":"        return true;","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"chowRuiYan":131,"Tianqi-Zhu":6}},{"path":"src/main/java/manageme/model/module/exceptions/DuplicateModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.module.exceptions;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":" * Signals that the operation will result in duplicate Modules (Modules are considered duplicates if they have the same","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":" * identity).","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"public class DuplicateModuleException extends RuntimeException {","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"    public DuplicateModuleException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"        super(\"Operation would result in duplicate modules\");","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"chowRuiYan":10,"Tianqi-Zhu":1}},{"path":"src/main/java/manageme/model/module/exceptions/ModuleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.module.exceptions;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":" * Signals that the operation is unable to find the specified module.","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"public class ModuleNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"chowRuiYan":4,"Tianqi-Zhu":2}},{"path":"src/main/java/manageme/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.AppUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"        AppUtil.checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tianqi-Zhu":4,"-":54}},{"path":"src/main/java/manageme/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.AppUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"        AppUtil.checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tianqi-Zhu":4,"-":68}},{"path":"src/main/java/manageme/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.AppUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"        AppUtil.checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tianqi-Zhu":4,"-":56}},{"path":"src/main/java/manageme/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.StringUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Tianqi-Zhu":2,"-":29}},{"path":"src/main/java/manageme/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tianqi-Zhu":4,"-":118}},{"path":"src/main/java/manageme/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.AppUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"        AppUtil.checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tianqi-Zhu":4,"-":50}},{"path":"src/main/java/manageme/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(target, editedPerson);","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(persons);","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tianqi-Zhu":6,"-":131}},{"path":"src/main/java/manageme/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.person.exceptions;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":10}},{"path":"src/main/java/manageme/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.person.exceptions;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":5}},{"path":"src/main/java/manageme/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.AppUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"        AppUtil.checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tianqi-Zhu":4,"-":51}},{"path":"src/main/java/manageme/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":" * Represents a Task in the Task List.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":" * Guarantees: details are present and not TaskTime.empty(), field values are validated, immutable.","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"public class Task {","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"    private final TaskName name;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"    private final TaskDescription description;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    //Optional: TaskModule that the task may be linked to. Can only be linked to max 1 module.","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"    private final TaskModule module;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"    //Optional: Task may have an end DateTime(Deadline) or both a start and end DateTime(Event).","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"    private final TaskTime start;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"    private final TaskTime end;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"     * Basic Task with only name and description, other attributes are initialized to TaskTime.empty().","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"     * Every field must be present and not TaskTime.empty().","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"    public Task(TaskName name, TaskDescription description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(name, description);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"        this.module \u003d TaskModule.empty();","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"        this.start \u003d TaskTime.empty();","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"        this.end \u003d TaskTime.empty();","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"     * Basic Task with an associated module.","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"     * Every field must be present and not TaskTime.empty().","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"    public Task(TaskName name, TaskDescription description, TaskModule module) {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(name, description, module);","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"        this.module \u003d module;","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"        this.start \u003d TaskTime.empty();","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"        this.end \u003d TaskTime.empty();","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"     * Task with an end date(Deadline). No modules.","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"     * Every field must be present and not TaskTime.empty().","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"    public Task(TaskName name, TaskDescription description, TaskTime end) {","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(name, description, end);","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"markuslim24"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"markuslim24"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"        this.module \u003d TaskModule.empty();","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"        this.start \u003d TaskTime.empty();","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"markuslim24"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"markuslim24"},"content":"     * Task with an end date(Deadline). Includes module.","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"     * Every field must be present and not TaskTime.empty().","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"    public Task(TaskName name, TaskDescription description, TaskModule module, TaskTime end) {","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(name, description, module, end);","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"markuslim24"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"markuslim24"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"markuslim24"},"content":"        this.module \u003d module;","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"        this.start \u003d TaskTime.empty();","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"markuslim24"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"markuslim24"},"content":"     * Task with a start and end date(Event). No module.","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"     * Every field must be present and not TaskTime.empty().","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"zhangchengchuan"},"content":"    public Task(TaskName name, TaskDescription description, TaskTime start, TaskTime end) {","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(name, description, start, end);","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"markuslim24"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"markuslim24"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"zhangchengchuan"},"content":"        this.module \u003d TaskModule.empty();","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"markuslim24"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"markuslim24"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"markuslim24"},"content":"     * Task with a start and end date(Event). Includes module.","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"zhangchengchuan"},"content":"     * Every field must be present and not TaskTime.empty().","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"zhangchengchuan"},"content":"    public Task(TaskName name, TaskDescription description, TaskModule module, TaskTime start,","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"zhangchengchuan"},"content":"                TaskTime end) {","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(name, description, module, start, end);","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"markuslim24"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"markuslim24"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"markuslim24"},"content":"        this.module \u003d module;","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"markuslim24"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"markuslim24"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"markuslim24"},"content":"    public TaskName getName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"markuslim24"},"content":"        return name;","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"markuslim24"},"content":"    public TaskDescription getDescription() {","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"markuslim24"},"content":"        return description;","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"zhangchengchuan"},"content":"    public TaskModule getTaskModule() {","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"chowRuiYan"},"content":"        return module;","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"zhangchengchuan"},"content":"    public TaskTime getStart() {","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"markuslim24"},"content":"        return start;","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"zhangchengchuan"},"content":"    public TaskTime getEnd() {","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"markuslim24"},"content":"        return end;","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"chowRuiYan"},"content":"     * Returns the dates that this {@code Task} object spans over.","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"chowRuiYan"},"content":"     * @return The sequential ordered stream of dates.","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"chowRuiYan"},"content":"    public Stream\u003cLocalDate\u003e getSpan() {","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"chowRuiYan"},"content":"        if (!end.isEmpty() \u0026\u0026 !start.isEmpty()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"chowRuiYan"},"content":"            return start.getTime().toLocalDate().datesUntil(end.time.get().plusDays(1).toLocalDate());","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"chowRuiYan"},"content":"        } else if (start.isEmpty() \u0026\u0026 !end.isEmpty()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"chowRuiYan"},"content":"            return end.getTime().toLocalDate().datesUntil(end.getTime().plusDays(1).toLocalDate());","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"chowRuiYan"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"zhangchengchuan"},"content":"            return Stream.empty();","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"zhangchengchuan"},"content":"    public LocalDateTime getFirstOccurrence() {","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"zhangchengchuan"},"content":"        if (start.isEmpty() \u0026\u0026 end.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"zhangchengchuan"},"content":"            // Should not happen","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"zhangchengchuan"},"content":"            System.out.println(\"getFirstOccurrence\");","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"zhangchengchuan"},"content":"            return null;","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"zhangchengchuan"},"content":"        } else if (start.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"zhangchengchuan"},"content":"            return end.getTime();","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"zhangchengchuan"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"zhangchengchuan"},"content":"            return start.getTime();","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"chowRuiYan"},"content":"     * Returns true if both tasks have the same name.","lastModifiedDate":"2021-10-01"},{"lineNumber":153,"author":{"gitId":"chowRuiYan"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2021-10-01"},{"lineNumber":154,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":155,"author":{"gitId":"chowRuiYan"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"chowRuiYan"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"chowRuiYan"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2021-10-01"},{"lineNumber":161,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 otherTask.getName().equals(getName());","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":163,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":164,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":165,"author":{"gitId":"chowRuiYan"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2021-10-01"},{"lineNumber":166,"author":{"gitId":"chowRuiYan"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2021-10-01"},{"lineNumber":167,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":168,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":169,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":170,"author":{"gitId":"chowRuiYan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-01"},{"lineNumber":171,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-10-01"},{"lineNumber":172,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":173,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":174,"author":{"gitId":"chowRuiYan"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":175,"author":{"gitId":"chowRuiYan"},"content":"            return false;","lastModifiedDate":"2021-10-01"},{"lineNumber":176,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":177,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":178,"author":{"gitId":"chowRuiYan"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2021-10-01"},{"lineNumber":179,"author":{"gitId":"chowRuiYan"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2021-10-01"},{"lineNumber":180,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription())","lastModifiedDate":"2021-10-01"},{"lineNumber":181,"author":{"gitId":"zhangchengchuan"},"content":"                \u0026\u0026 otherTask.getTaskModule().equals(getTaskModule())","lastModifiedDate":"2021-10-09"},{"lineNumber":182,"author":{"gitId":"markuslim24"},"content":"                \u0026\u0026 otherTask.getStart().equals(getStart())","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"markuslim24"},"content":"                \u0026\u0026 otherTask.getEnd().equals(getEnd());","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":185,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":186,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":187,"author":{"gitId":"chowRuiYan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-01"},{"lineNumber":188,"author":{"gitId":"chowRuiYan"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-01"},{"lineNumber":189,"author":{"gitId":"markuslim24"},"content":"        return Objects.hash(name, description, module, start, end);","lastModifiedDate":"2021-10-07"},{"lineNumber":190,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":191,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":192,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":193,"author":{"gitId":"chowRuiYan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-01"},{"lineNumber":194,"author":{"gitId":"chowRuiYan"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-01"},{"lineNumber":195,"author":{"gitId":"chowRuiYan"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-01"},{"lineNumber":196,"author":{"gitId":"chowRuiYan"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2021-10-01"},{"lineNumber":197,"author":{"gitId":"chowRuiYan"},"content":"                .append(getDescription())","lastModifiedDate":"2021-10-01"},{"lineNumber":198,"author":{"gitId":"zhangchengchuan"},"content":"                .append(\"; TaskModule: \")","lastModifiedDate":"2021-10-09"},{"lineNumber":199,"author":{"gitId":"zhangchengchuan"},"content":"                .append(getTaskModule())","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"zhangchengchuan"},"content":"                .append(\"; Start: \")","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"markuslim24"},"content":"                .append(getStart())","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"zhangchengchuan"},"content":"                .append(\"; End: \")","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"markuslim24"},"content":"                .append(getEnd());","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"chowRuiYan"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-01"},{"lineNumber":205,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":206,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"markuslim24":76,"zhangchengchuan":49,"chowRuiYan":72,"Tianqi-Zhu":9}},{"path":"src/main/java/manageme/model/task/TaskDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"import static manageme.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"public class TaskDescription {","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Description can take any values, and it should not be\"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"            + \" blank\";","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"    /*","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"    public final String value;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"     * Constructs a {@code TaskDescription}.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"     * @param taskDescription A Task Description.","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"    public TaskDescription(String taskDescription) {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"        requireNonNull(taskDescription);","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"        checkArgument(isValidDescription(taskDescription), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"        this.value \u003d taskDescription;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"        return value;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"                || (other instanceof TaskDescription // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"                \u0026\u0026 value.equals(((TaskDescription) other).value)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"markuslim24":50,"Tianqi-Zhu":1}},{"path":"src/main/java/manageme/model/task/TaskModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"import static manageme.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"public class TaskModule {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"            \"Modules should only contain alphanumeric characters \" + \"and spaces, and it should not be blank\";;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"    /*","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    public final String value;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"    public final Optional\u003cString\u003e moduleName;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"     * Constructs a {@code TaskModule}.","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"     * @param taskModule A Task Module.","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    public TaskModule(String taskModule) {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"        requireNonNull(taskModule);","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"        checkArgument(isValidModule(taskModule), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"        this.value \u003d taskModule;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"        this.moduleName \u003d Optional.of(taskModule);","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"     * Constructs an empty {@code TaskModule}.","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"    public TaskModule() {","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"        this.value \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"        this.moduleName \u003d Optional.empty();","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"     * Returns true if a given string is a valid Module.","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"    public static boolean isValidModule(String test) {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"        return value;","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"                || (other instanceof TaskModule // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"                \u0026\u0026 value.equals(((TaskModule) other).value)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"    public static TaskModule empty() {","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"        return new TaskModule();","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"markuslim24":16,"zhangchengchuan":51,"Tianqi-Zhu":1}},{"path":"src/main/java/manageme/model/task/TaskName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.AppUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"public class TaskName {","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Name can take any value, and it should not be blank\";","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"    /*","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"     * Reference on REGEX: https://www.regular-expressions.info/quickstart.html","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"    public final String value;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"     * Constructs a {@code TaskName}.","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"     * @param taskName A valid Task name.","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"    public TaskName(String taskName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"        requireNonNull(taskName);","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"        AppUtil.checkArgument(isValidName(taskName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"        this.value \u003d taskName;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"     * Checks if name has a whitespace in front.","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"     * @param test the name to test/check","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"     * @return name check boolean","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"        return value;","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"                || (other instanceof TaskName // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"                \u0026\u0026 value.equals(((TaskName) other).value)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"markuslim24"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"markuslim24":52,"Tianqi-Zhu":4}},{"path":"src/main/java/manageme/model/task/TaskNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.StringUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":" * Tests that a {@code Task}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"public class TaskNameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"    public TaskNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getName().value, keyword));","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"                || (other instanceof TaskNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"                \u0026\u0026 keywords.equals(((TaskNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"zhangchengchuan":28,"Tianqi-Zhu":2}},{"path":"src/main/java/manageme/model/task/TaskTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"import static manageme.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"public class TaskTime {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"            \"TaskTime can take any value, and it should not be blank\";","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"    private static final String DATETIME_PATTERN \u003d \"dd/MM/yyyy hh:mma\";","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"    private static final DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DATETIME_PATTERN);","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"    private static final String NO_TIME \u003d \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"    public final String value;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"    public final Optional\u003cLocalDateTime\u003e time;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"     * Constructs a {@code TaskTime}.","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"     * @param taskTime A Task Time.","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"    public TaskTime(String taskTime) {","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"        requireNonNull(taskTime);","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"        checkArgument(isValidTaskTime(taskTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"        String trimmedT \u003d taskTime.trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"        this.value \u003d trimmedT;","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"        this.time \u003d Optional.of(LocalDateTime.parse(trimmedT));","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"     * Constructs an empty {@code TaskTime}.","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"    public TaskTime() {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"        this.value \u003d NO_TIME;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"        this.time \u003d Optional.empty();","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"    public static boolean isValidTaskTime(String test) {","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"        return value;","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"markuslim24"},"content":"     * Returns a display-formatted string of TaskTime for the UI.","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"markuslim24"},"content":"     * @return display-formatted string","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"markuslim24"},"content":"    public String toDisplayString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"markuslim24"},"content":"        if (time.isPresent()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"markuslim24"},"content":"            return dateTimeFormatter.format(time.get());","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"markuslim24"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"markuslim24"},"content":"            return \"\";","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"                || (other instanceof TaskTime // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"                \u0026\u0026 value.equals(((TaskTime) other).value))","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"                \u0026\u0026 time.equals((((TaskTime) other).time)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"zhangchengchuan"},"content":"    public static TaskTime empty() {","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"        return new TaskTime();","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"        return time.isEmpty();","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"        if (time.isEmpty()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"            return null;","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"chowRuiYan"},"content":"        return time.get();","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"zhangchengchuan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"zhangchengchuan"},"content":"        return Objects.hash(value, time);","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"markuslim24":34,"zhangchengchuan":50,"chowRuiYan":11,"Tianqi-Zhu":1}},{"path":"src/main/java/manageme/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":" * updating of","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":" * tasks uses Task#isSameTask(task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a task uses Task#equals(Object) so","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":" *","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":" *","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"    private ArrayList\u003cTask\u003e sortedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"        sortedList.add(toAdd);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"        sortedList.set(index, editedTask);","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"     * The task must exist in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"zhangchengchuan"},"content":"        sortedList.remove(toRemove);","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"chowRuiYan"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"chowRuiYan"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"zhangchengchuan"},"content":"        sortedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"zhangchengchuan"},"content":"        sortedList.addAll(replacement.internalList);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"chowRuiYan"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"chowRuiYan"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"chowRuiYan"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"Tianqi-Zhu"},"content":"        CollectionUtil.requireAllNonNull(tasks);","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"chowRuiYan"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"chowRuiYan"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"chowRuiYan"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"zhangchengchuan"},"content":"        sortedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"zhangchengchuan"},"content":"        sortedList.addAll(tasks);","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"chowRuiYan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"chowRuiYan"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"chowRuiYan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"zhangchengchuan"},"content":"     * Returns the backing list as an modifiable {@code ObservableList}.","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"zhangchengchuan"},"content":"    public ArrayList\u003cTask\u003e asModifiableObservableList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"zhangchengchuan"},"content":"        sortTasksByTime();","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"zhangchengchuan"},"content":"        return sortedList;","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"chowRuiYan"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"chowRuiYan"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"chowRuiYan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"chowRuiYan"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":139,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":140,"author":{"gitId":"chowRuiYan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"chowRuiYan"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-01"},{"lineNumber":142,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":143,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"chowRuiYan"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"chowRuiYan"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"chowRuiYan"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"chowRuiYan"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2021-10-01"},{"lineNumber":150,"author":{"gitId":"chowRuiYan"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"chowRuiYan"},"content":"                    return false;","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"chowRuiYan"},"content":"                }","lastModifiedDate":"2021-10-01"},{"lineNumber":153,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-10-01"},{"lineNumber":154,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":155,"author":{"gitId":"chowRuiYan"},"content":"        return true;","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"zhangchengchuan"},"content":"     * Sorts the tasks by their first occurrence, be it start or end date. This also removes tasks without any","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"zhangchengchuan"},"content":"     * dates specified.","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"zhangchengchuan"},"content":"    private void sortTasksByTime() {","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"zhangchengchuan"},"content":"        Comparator\u003cTask\u003e comparator \u003d Comparator.comparing(Task::getFirstOccurrence);","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"zhangchengchuan"},"content":"        sortedList.removeIf(task -\u003e task.getStart().value.equals(\"\") \u0026\u0026 task.getEnd().value.equals(\"\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"zhangchengchuan"},"content":"        sortedList.sort(comparator);","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"markuslim24":3,"zhangchengchuan":29,"chowRuiYan":129,"Tianqi-Zhu":6}},{"path":"src/main/java/manageme/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.task.exceptions;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":" * identity).","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"chowRuiYan":10,"Tianqi-Zhu":1}},{"path":"src/main/java/manageme/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.task.exceptions;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"chowRuiYan":4,"Tianqi-Zhu":2}},{"path":"src/main/java/manageme/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.util;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Address;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Email;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Name;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Phone;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":" * Contains utility methods for populating {@code ManageMe} with sample data.","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"    public static ReadOnlyManageMe getSampleManageMe() {","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"        ManageMe sampleAb \u003d new ManageMe();","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"chowRuiYan":3,"Tianqi-Zhu":9,"-":48}},{"path":"src/main/java/manageme/storage/JsonAdaptedModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"JinxinZhao315"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"JinxinZhao315"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.link.Link;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.ModuleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"JinxinZhao315"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"JinxinZhao315"},"content":" * Jackson-friendly version of {@link Module}.","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"JinxinZhao315"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"public class JsonAdaptedModule {","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Module\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"    private final String modName;","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"JinxinZhao315"},"content":"    private final String link;","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"     * Constructs a {@code JsonAdaptedModule} with the given details.","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"JinxinZhao315"},"content":"    public JsonAdaptedModule(@JsonProperty(\"modName\") String modName, @JsonProperty(\"link\") String link) {","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"JinxinZhao315"},"content":"        this.modName \u003d modName;","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"JinxinZhao315"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"     * Converts a given {@code Module} into this class for Jackson use.","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"JinxinZhao315"},"content":"    public JsonAdaptedModule(Module source) {","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"JinxinZhao315"},"content":"        modName \u003d source.getModuleName().name;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"JinxinZhao315"},"content":"        link \u003d source.getLink().link;","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"JinxinZhao315"},"content":"     * Converts this Jackson-friendly adapted module object into the model\u0027s {@code Module} object.","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"JinxinZhao315"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"JinxinZhao315"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"JinxinZhao315"},"content":"    public Module toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"JinxinZhao315"},"content":"        if (modName \u003d\u003d null) {","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"JinxinZhao315"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"modName\"));","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"JinxinZhao315"},"content":"        if (!ModuleName.isValidModuleName(modName)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"            throw new IllegalValueException(ModuleName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"        final ModuleName modelName \u003d new ModuleName(modName);","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"JinxinZhao315"},"content":"        if (link \u003d\u003d null) {","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"JinxinZhao315"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"link\"));","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"JinxinZhao315"},"content":"        if (!Link.isValidLink(link)) {","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"JinxinZhao315"},"content":"            throw new IllegalValueException(Link.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"JinxinZhao315"},"content":"        final Link modelLink \u003d new Link(link);","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"JinxinZhao315"},"content":"        return new Module(modelName, modelLink);","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"JinxinZhao315":56,"chowRuiYan":2,"Tianqi-Zhu":6}},{"path":"src/main/java/manageme/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Address;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Email;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Name;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Phone;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Tianqi-Zhu":8,"-":101}},{"path":"src/main/java/manageme/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Tianqi-Zhu":3,"-":45}},{"path":"src/main/java/manageme/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskDescription;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskModule;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskName;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"    // 3 Optional - time/end-time/modules","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"    private final String taskName;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"    private final String taskDescription;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"    private final String module;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"    private final String start;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"    private final String end;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    // private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e(); // Link to Module","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given person details.","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"    public JsonAdaptedTask(@JsonProperty(\"name\") String taskName, @JsonProperty(\"description\") String description,","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"                           @JsonProperty(\"module\") String module, @JsonProperty(\"start\") String start,","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"                           @JsonProperty(\"end\") String end) {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"        //                   @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"        this.taskDescription \u003d description;","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"        this.module \u003d module;","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"        //if (tagged !\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"        //    this.tagged.addAll(tagged);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"        //  }","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"        this.taskName \u003d source.getName().value;","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"        this.taskDescription \u003d source.getDescription().value;","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"        //tagged.addAll(source.getTag().stream()","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"        //        .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"        //        .collect(Collectors.toList());","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"        this.module \u003d source.getTaskModule().value;","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"        this.start \u003d source.getStart().value;","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"        this.end \u003d source.getEnd().value;","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"        //final List\u003cTag\u003e taskTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"        //for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"        //    taskTags.add(tag.toModelType());","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"        //}","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"        if (taskName \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"TaskName\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"zhangchengchuan"},"content":"        if (!TaskName.isValidName(taskName)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"zhangchengchuan"},"content":"            throw new IllegalValueException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"        final TaskName modelName \u003d new TaskName(taskName);","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"zhangchengchuan"},"content":"        if (taskDescription \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"zhangchengchuan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Task Description\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"markuslim24"},"content":"        if (!TaskDescription.isValidDescription(taskDescription)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"markuslim24"},"content":"            throw new IllegalValueException(TaskDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"zhangchengchuan"},"content":"        final TaskDescription modelDescription \u003d new TaskDescription(taskDescription);","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"markuslim24"},"content":"        final TaskModule modelModule \u003d !module.equals(\"\") ? new TaskModule(module) : null;","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"markuslim24"},"content":"        final TaskTime modelStart \u003d !start.equals(\"\") ? new TaskTime(start) : null;","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"markuslim24"},"content":"        final TaskTime modelEnd \u003d !end.equals(\"\") ? new TaskTime(end) : null;","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"zhangchengchuan"},"content":"        // final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(taskTags);","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"zhangchengchuan"},"content":"        if (modelModule \u003d\u003d null \u0026\u0026 modelStart \u003d\u003d null \u0026\u0026 modelEnd \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"zhangchengchuan"},"content":"            return new Task(modelName, modelDescription);","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"zhangchengchuan"},"content":"        } else if (modelModule !\u003d null \u0026\u0026 modelStart \u003d\u003d null \u0026\u0026 modelEnd \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"zhangchengchuan"},"content":"            return new Task(modelName, modelDescription, modelModule);","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"zhangchengchuan"},"content":"        } else if (modelModule \u003d\u003d null \u0026\u0026 modelStart \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"zhangchengchuan"},"content":"            return new Task(modelName, modelDescription, modelEnd);","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"zhangchengchuan"},"content":"        } else if (modelModule !\u003d null \u0026\u0026 modelStart \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"zhangchengchuan"},"content":"            return new Task(modelName, modelDescription, modelModule, modelEnd);","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"zhangchengchuan"},"content":"        } else if (modelModule \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"zhangchengchuan"},"content":"            return new Task(modelName, modelDescription, modelStart, modelEnd);","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"zhangchengchuan"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"zhangchengchuan"},"content":"            return new Task(modelName, modelDescription, modelModule, modelStart, modelEnd);","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"markuslim24":9,"zhangchengchuan":94,"Tianqi-Zhu":7}},{"path":"src/main/java/manageme/storage/JsonManageMeStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.LogsCenter;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.FileUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.JsonUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":" * A class to access ManageMe data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"public class JsonManageMeStorage implements ManageMeStorage {","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonManageMeStorage.class);","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    public JsonManageMeStorage(Path filePath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"    public Path getManageMeFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"    public Optional\u003cReadOnlyManageMe\u003e readManageMe() throws DataConversionException {","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        return readManageMe(filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"     * Similar to {@link #readManageMe()}.","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"    public Optional\u003cReadOnlyManageMe\u003e readManageMe(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"        Optional\u003cJsonSerializableManageMe\u003e jsonManageMe \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"                filePath, JsonSerializableManageMe.class);","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"        if (!jsonManageMe.isPresent()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"            return Optional.of(jsonManageMe.get().toModelType());","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"    public void saveManageMe(ReadOnlyManageMe manageMe) throws IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"        saveManageMe(manageMe, filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"     * Similar to {@link #saveManageMe(ReadOnlyManageMe)}.","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"    public void saveManageMe(ReadOnlyManageMe manageMe, Path filePath) throws IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"        requireNonNull(manageMe);","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableManageMe(manageMe), filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chowRuiYan":19,"Tianqi-Zhu":7,"-":54}},{"path":"src/main/java/manageme/storage/JsonSerializableManageMe.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyManageMe;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":" * An Immutable ManageMe that is serializable to JSON format.","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"@JsonRootName(value \u003d \"manageme\")","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"class JsonSerializableManageMe {","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"Modules list contains duplicate module(s).\";","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"    private final List\u003cJsonAdaptedModule\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"     * Constructs a {@code JsonSerializableManageMe} with the given persons.","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"    public JsonSerializableManageMe(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"                                    @JsonProperty(\"modules\") List\u003cJsonAdaptedModule\u003e modules,","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"                                    @JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"        this.modules.addAll(modules);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"     * Converts a given {@code ReadOnlyManageMe} into this class for Jackson use.","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableManageMe}.","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"    public JsonSerializableManageMe(ReadOnlyManageMe source) {","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"        modules.addAll(source.getModuleList().stream().map(JsonAdaptedModule::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"     * Converts this ManageMe into the model\u0027s {@code ManageMe} object.","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"    public ManageMe toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"        ManageMe manageMe \u003d new ManageMe();","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"            if (manageMe.hasPerson(person)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"            manageMe.addPerson(person);","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"        for (JsonAdaptedModule jsonAdaptedModule: modules) {","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"            Module module \u003d jsonAdaptedModule.toModelType();","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"            if (manageMe.hasModule(module)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"            manageMe.addModule(module);","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"        for (JsonAdaptedTask jsonAdaptedTask: tasks) {","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"            if (manageMe.hasTask(task)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"            manageMe.addTask(task);","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"        return manageMe;","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zhangchengchuan":5,"chowRuiYan":37,"Tianqi-Zhu":8,"-":40}},{"path":"src/main/java/manageme/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.JsonUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Tianqi-Zhu":5,"-":42}},{"path":"src/main/java/manageme/storage/ManageMeStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":" * Represents a storage for {@link ManageMe}.","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"public interface ManageMeStorage {","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"    Path getManageMeFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"     * Returns ManageMe data as a {@link ReadOnlyManageMe}.","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    Optional\u003cReadOnlyManageMe\u003e readManageMe() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"     * @see #getManageMeFilePath()","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"    Optional\u003cReadOnlyManageMe\u003e readManageMe(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"     * Saves the given {@link ReadOnlyManageMe} to the storage.","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"     * @param manageMe cannot be null.","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"    void saveManageMe(ReadOnlyManageMe manageMe) throws IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"     * @see #saveManageMe(ReadOnlyManageMe)","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"    void saveManageMe(ReadOnlyManageMe manageMe, Path filePath) throws IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chowRuiYan":12,"Tianqi-Zhu":4,"-":30}},{"path":"src/main/java/manageme/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"public interface Storage extends ManageMeStorage, UserPrefsStorage {","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    Path getManageMeFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    Optional\u003cReadOnlyManageMe\u003e readManageMe() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"    void saveManageMe(ReadOnlyManageMe addressBook) throws IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chowRuiYan":4,"Tianqi-Zhu":5,"-":23}},{"path":"src/main/java/manageme/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.LogsCenter;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":" * Manages storage of ManageMe data in local storage.","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"    private ManageMeStorage manageMeStorage;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"     * Creates a {@code StorageManager} with the given {@code ManageMeStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    public StorageManager(ManageMeStorage manageMeStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"        this.manageMeStorage \u003d manageMeStorage;","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ManageMe methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"    public Path getManageMeFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"        return manageMeStorage.getManageMeFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"    public Optional\u003cReadOnlyManageMe\u003e readManageMe() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"        return readManageMe(manageMeStorage.getManageMeFilePath());","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"    public Optional\u003cReadOnlyManageMe\u003e readManageMe(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"        return manageMeStorage.readManageMe(filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"    public void saveManageMe(ReadOnlyManageMe manageMe) throws IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"        saveManageMe(manageMe, manageMeStorage.getManageMeFilePath());","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"    public void saveManageMe(ReadOnlyManageMe manageMe, Path filePath) throws IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"        manageMeStorage.saveManageMe(manageMe, filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chowRuiYan":16,"Tianqi-Zhu":6,"-":57}},{"path":"src/main/java/manageme/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Tianqi-Zhu":6,"-":30}},{"path":"src/main/java/manageme/time/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package manageme.time;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.model.ReadOnlyManageMe;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":" * API of the Time component","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"public interface Time {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"    /** Starts the Time component to constantly check tasks\u0027 start and end time. */","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    void startTime();","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"    void updateTasks(ReadOnlyManageMe manageMe);","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"zhangchengchuan":14}},{"path":"src/main/java/manageme/time/TimeManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package manageme.time;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.model.ReadOnlyManageMe;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"public class TimeManager implements Time {","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    private ArrayList\u003cTask\u003e allTasks;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"    public TimeManager(ReadOnlyManageMe manageMe) {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"        this.allTasks \u003d manageMe.getModifiableTaskList();","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"     * Searches the current sorted task list for any tasks that may begin or end at the current time","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"    public void checkAlarm() {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"        for (Task task: allTasks) {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"            // Addition function to set how much time before actual task that you want the reminder to pop out.","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"            LocalDateTime time \u003d task.getFirstOccurrence();","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"            LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"            if (now.isAfter(time)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"            //    System.out.println(\"POP OUT! \" + task.getName().value);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"     * Updates the current list of tasks based on the newest model. This is called whenver changes to model is made.","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"     * @param manageMe is the latest version of manageMe with the update tasks.","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"    public void updateTasks(ReadOnlyManageMe manageMe) {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"        this.allTasks \u003d manageMe.getModifiableTaskList();","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"     * Starts a asynchronous thread that checks the task list every X seconds.","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"     * Whenever a task is due, a pop-up is launched.","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"    public void startTime() {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"        new Thread(() -\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"            while (true) {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"                try {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"                    checkAlarm();","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"                    Thread.sleep(60000);","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"                } catch (Exception e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"                    System.out.println(\"Error with timer.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"                    break;","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"        }).start();","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"zhangchengchuan":63}},{"path":"src/main/java/manageme/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.Logic;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"Tianqi-Zhu"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Tianqi-Zhu":6,"-":80}},{"path":"src/main/java/manageme/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.LogsCenter;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String USERGUIDE_URL \u003d \"https://se-education.org/addressbook-level3/UserGuide.html\";","lastModifiedDate":"2019-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Tianqi-Zhu":2,"-":100}},{"path":"src/main/java/manageme/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.GuiSettings;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.LogsCenter;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.Logic;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"chowRuiYan"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getManageMeFilePath());","lastModifiedDate":"2021-10-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"Tianqi-Zhu"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2021-10-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chowRuiYan":1,"Tianqi-Zhu":8,"-":187}},{"path":"src/main/java/manageme/ui/MmMainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.GuiSettings;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.LogsCenter;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.Logic;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"import manageme.ui.calendar.CalendarPanel;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.ui.module.ModuleListPanel;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.ui.module.ModuleWindow;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.ui.task.TaskListPanel;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"public class MmMainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"    private static final String FXML \u003d \"MmMainWindow.fxml\";","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"    private Stage primaryStage;","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"    private Logic logic;","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"    private ModuleListPanel moduleListPanel;","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"    private CalendarPanel calendarPanel;","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"    private ModuleWindow moduleWindow;","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"    private HBox contentPlaceholder;","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"    private StackPane moduleListPanelPlaceholder;","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"    private StackPane calendarPanelPlaceholder;","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"    private Label module;","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"    private Label task;","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"    public MmMainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"        // Set dependencies","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"        // Configure the UI","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"        setAccelerators();","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"chowRuiYan"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"chowRuiYan"},"content":"        moduleWindow \u003d new ModuleWindow();","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"chowRuiYan"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"chowRuiYan"},"content":"        return primaryStage;","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"chowRuiYan"},"content":"    private void setAccelerators() {","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"chowRuiYan"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"chowRuiYan"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"chowRuiYan"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"chowRuiYan"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"chowRuiYan"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"chowRuiYan"},"content":"        /*","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"chowRuiYan"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"chowRuiYan"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"chowRuiYan"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"chowRuiYan"},"content":"         *","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"chowRuiYan"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"chowRuiYan"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"chowRuiYan"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"chowRuiYan"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"chowRuiYan"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"chowRuiYan"},"content":"         *","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"chowRuiYan"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"chowRuiYan"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"chowRuiYan"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"chowRuiYan"},"content":"         */","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"chowRuiYan"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"chowRuiYan"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"chowRuiYan"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"chowRuiYan"},"content":"                event.consume();","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"chowRuiYan"},"content":"        });","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"chowRuiYan"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"chowRuiYan"},"content":"    void fillInnerParts() {","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"chowRuiYan"},"content":"        moduleListPanel \u003d new ModuleListPanel(logic.getFilteredModuleList());","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"chowRuiYan"},"content":"        moduleListPanelPlaceholder.getChildren().add(moduleListPanel.getRoot());","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":138,"author":{"gitId":"chowRuiYan"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"chowRuiYan"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"chowRuiYan"},"content":"        calendarPanel \u003d new CalendarPanel(logic.getUnfilteredTaskList());","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"chowRuiYan"},"content":"        calendarPanelPlaceholder.getChildren().add(calendarPanel.getRoot());","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"chowRuiYan"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"chowRuiYan"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"chowRuiYan"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"chowRuiYan"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2021-09-28"},{"lineNumber":149,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":150,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":151,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":152,"author":{"gitId":"chowRuiYan"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2021-09-28"},{"lineNumber":153,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":154,"author":{"gitId":"chowRuiYan"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"chowRuiYan"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2021-09-28"},{"lineNumber":156,"author":{"gitId":"chowRuiYan"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2021-09-28"},{"lineNumber":157,"author":{"gitId":"chowRuiYan"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2021-09-28"},{"lineNumber":158,"author":{"gitId":"chowRuiYan"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2021-09-28"},{"lineNumber":159,"author":{"gitId":"chowRuiYan"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2021-09-28"},{"lineNumber":160,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":161,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":162,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":163,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":164,"author":{"gitId":"chowRuiYan"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-09-28"},{"lineNumber":165,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":166,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":167,"author":{"gitId":"chowRuiYan"},"content":"    public void handleHelp() {","lastModifiedDate":"2021-09-28"},{"lineNumber":168,"author":{"gitId":"chowRuiYan"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":169,"author":{"gitId":"chowRuiYan"},"content":"            helpWindow.show();","lastModifiedDate":"2021-09-28"},{"lineNumber":170,"author":{"gitId":"chowRuiYan"},"content":"        } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":171,"author":{"gitId":"chowRuiYan"},"content":"            helpWindow.focus();","lastModifiedDate":"2021-09-28"},{"lineNumber":172,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":173,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":174,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":175,"author":{"gitId":"chowRuiYan"},"content":"    void show() {","lastModifiedDate":"2021-09-28"},{"lineNumber":176,"author":{"gitId":"chowRuiYan"},"content":"        primaryStage.show();","lastModifiedDate":"2021-09-28"},{"lineNumber":177,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":178,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":179,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":180,"author":{"gitId":"chowRuiYan"},"content":"     * Closes the application.","lastModifiedDate":"2021-09-28"},{"lineNumber":181,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":182,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":183,"author":{"gitId":"chowRuiYan"},"content":"    private void handleExit() {","lastModifiedDate":"2021-09-28"},{"lineNumber":184,"author":{"gitId":"chowRuiYan"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2021-09-28"},{"lineNumber":185,"author":{"gitId":"chowRuiYan"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2021-09-28"},{"lineNumber":186,"author":{"gitId":"chowRuiYan"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2021-09-28"},{"lineNumber":187,"author":{"gitId":"chowRuiYan"},"content":"        helpWindow.hide();","lastModifiedDate":"2021-09-28"},{"lineNumber":188,"author":{"gitId":"chowRuiYan"},"content":"        primaryStage.hide();","lastModifiedDate":"2021-09-28"},{"lineNumber":189,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":190,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":191,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":192,"author":{"gitId":"chowRuiYan"},"content":"     * Opens the module window.","lastModifiedDate":"2021-10-02"},{"lineNumber":193,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":194,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":195,"author":{"gitId":"chowRuiYan"},"content":"    private void handleModule() {","lastModifiedDate":"2021-10-02"},{"lineNumber":196,"author":{"gitId":"chowRuiYan"},"content":"        moduleWindow.display(logic.getReadModuleList());","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":198,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":199,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"chowRuiYan"},"content":"     * Handles the various command on calendar.","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"chowRuiYan"},"content":"     * Passes control over to {@code CalendarListPanel} to execute the command.","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"chowRuiYan"},"content":"     * @param feedbackToSystem the respective commands to be executed","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"chowRuiYan"},"content":"    private void handleCalendar(String feedbackToSystem) {","lastModifiedDate":"2021-10-16"},{"lineNumber":206,"author":{"gitId":"chowRuiYan"},"content":"        calendarPanel.executeCommand(feedbackToSystem);","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":208,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":209,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":210,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":211,"author":{"gitId":"chowRuiYan"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-09-28"},{"lineNumber":212,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":213,"author":{"gitId":"Tianqi-Zhu"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2021-10-16"},{"lineNumber":214,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":215,"author":{"gitId":"chowRuiYan"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2021-09-28"},{"lineNumber":216,"author":{"gitId":"chowRuiYan"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":217,"author":{"gitId":"chowRuiYan"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2021-09-28"},{"lineNumber":218,"author":{"gitId":"chowRuiYan"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2021-09-28"},{"lineNumber":219,"author":{"gitId":"chowRuiYan"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2021-09-28"},{"lineNumber":220,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":221,"author":{"gitId":"chowRuiYan"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":222,"author":{"gitId":"chowRuiYan"},"content":"                handleHelp();","lastModifiedDate":"2021-09-28"},{"lineNumber":223,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":224,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":225,"author":{"gitId":"chowRuiYan"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":226,"author":{"gitId":"chowRuiYan"},"content":"                handleExit();","lastModifiedDate":"2021-09-28"},{"lineNumber":227,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":228,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":229,"author":{"gitId":"chowRuiYan"},"content":"            if (commandResult.isReadModule()) {","lastModifiedDate":"2021-10-02"},{"lineNumber":230,"author":{"gitId":"chowRuiYan"},"content":"                handleModule();","lastModifiedDate":"2021-10-02"},{"lineNumber":231,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":232,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":233,"author":{"gitId":"chowRuiYan"},"content":"            if (commandResult.isCalendarCommand()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":234,"author":{"gitId":"chowRuiYan"},"content":"                handleCalendar(commandResult.getFeedbackToSystem());","lastModifiedDate":"2021-10-16"},{"lineNumber":235,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":236,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":237,"author":{"gitId":"chowRuiYan"},"content":"            return commandResult;","lastModifiedDate":"2021-09-28"},{"lineNumber":238,"author":{"gitId":"chowRuiYan"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":239,"author":{"gitId":"chowRuiYan"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2021-09-28"},{"lineNumber":240,"author":{"gitId":"chowRuiYan"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2021-09-28"},{"lineNumber":241,"author":{"gitId":"chowRuiYan"},"content":"            throw e;","lastModifiedDate":"2021-09-28"},{"lineNumber":242,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":243,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":244,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"chowRuiYan":233,"Tianqi-Zhu":11}},{"path":"src/main/java/manageme/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Tianqi-Zhu":2,"-":75}},{"path":"src/main/java/manageme/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.LogsCenter;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Tianqi-Zhu":3,"-":46}},{"path":"src/main/java/manageme/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":27}},{"path":"src/main/java/manageme/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":27}},{"path":"src/main/java/manageme/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":12}},{"path":"src/main/java/manageme/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.MainApp;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.LogsCenter;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.StringUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.Logic;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    private MmMainWindow mainWindow;","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"        assert false;","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"            mainWindow \u003d new MmMainWindow(primaryStage, logic);","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zhangchengchuan":1,"chowRuiYan":2,"Tianqi-Zhu":5,"-":82}},{"path":"src/main/java/manageme/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.MainApp;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Tianqi-Zhu":2,"-":86}},{"path":"src/main/java/manageme/ui/calendar/CalendarPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui.calendar;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.LogsCenter;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.calendar.NextMonthCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.calendar.PreviousMonthCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.calendar.ReadDayCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.ui.UiPart;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.ui.task.TaskListPanel;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"public class CalendarPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    private static final String FXML \u003d \"CalendarPanel.fxml\";","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    private static final String TITLE_TEMPLATE \u003d \"There %s %d %s today!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CalendarPanel.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"    private LocalDate currentDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"    private LocalDate referenceDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"    private ObservableList\u003cTask\u003e taskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"    private Label date;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"    private GridPane calendarPlaceholder;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"    private StackPane readDayPanelPlaceholder;","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"    private Label readDayTitle;","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"     * Creates a {@code CalendarListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"    public CalendarPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"        super(FXML);","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"        currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"        fillCalendarPanel(currentDate);","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"        taskList.addListener((ListChangeListener\u003c? super Task\u003e) change -\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"            fillCalendar();","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"        });","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"     * Fills up the entire CalendarPanel with a specified date as reference.","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"     * @param referenceDate the LocalDate object used as reference","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"    private void fillCalendarPanel(LocalDate referenceDate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"        this.referenceDate \u003d referenceDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"        fillCalendar();","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"        fillReadDayPanel();","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"     * Fills up the calendar based on reference date.","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"    private void fillCalendar() {","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"        date.setText(currentDate.toString());","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"        clearCalendar();","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"        fillLayout();","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"        fillDay();","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"     * Fills up the readDayPanel with the list of tasks on reference date.","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"    private void fillReadDayPanel() {","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"        int numOfTask \u003d getTaskInCurrentDay(taskList, referenceDate).size();","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"chowRuiYan"},"content":"        readDayTitle.setText(numOfTask \u003e 1","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"chowRuiYan"},"content":"                ? String.format(TITLE_TEMPLATE, \"are\", numOfTask, \"tasks\")","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"chowRuiYan"},"content":"                : String.format(TITLE_TEMPLATE, \"is\", numOfTask, \"task\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"chowRuiYan"},"content":"        TaskListPanel taskListPanel \u003d new TaskListPanel(getTaskInCurrentDay(taskList, referenceDate));","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"chowRuiYan"},"content":"        readDayPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"chowRuiYan"},"content":"        readDayPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"chowRuiYan"},"content":"     * Clears the calendar.","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"chowRuiYan"},"content":"    private void clearCalendar() {","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"chowRuiYan"},"content":"        calendarPlaceholder.getChildren().clear();","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"chowRuiYan"},"content":"     * Fills up the layout of a calendar.","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"chowRuiYan"},"content":"    private void fillLayout() {","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"chowRuiYan"},"content":"        calendarPlaceholder.add(createLayoutLabel(String.format(\"%s %s\",","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"chowRuiYan"},"content":"                referenceDate.getMonth().toString(), referenceDate.getYear())), 0, 0, 7, 1);","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"chowRuiYan"},"content":"        calendarPlaceholder.add(createLayoutLabel(\"Su\"), 0, 1, 1, 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"chowRuiYan"},"content":"        calendarPlaceholder.add(createLayoutLabel(\"Mo\"), 1, 1, 1, 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"chowRuiYan"},"content":"        calendarPlaceholder.add(createLayoutLabel(\"Tu\"), 2, 1, 1, 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"chowRuiYan"},"content":"        calendarPlaceholder.add(createLayoutLabel(\"We\"), 3, 1, 1, 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"chowRuiYan"},"content":"        calendarPlaceholder.add(createLayoutLabel(\"Th\"), 4, 1, 1, 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"chowRuiYan"},"content":"        calendarPlaceholder.add(createLayoutLabel(\"Fr\"), 5, 1, 1, 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"chowRuiYan"},"content":"        calendarPlaceholder.add(createLayoutLabel(\"Sa\"), 6, 1, 1, 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"chowRuiYan"},"content":"     * Fills up the days in a month.","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"chowRuiYan"},"content":"    private void fillDay() {","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"chowRuiYan"},"content":"        int numOfDayInMonth \u003d referenceDate.lengthOfMonth();","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"chowRuiYan"},"content":"        int currentDay \u003d 1;","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"chowRuiYan"},"content":"        int row \u003d 2;","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"chowRuiYan"},"content":"        int column \u003d startColumn();","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"chowRuiYan"},"content":"        while (currentDay \u003c\u003d numOfDayInMonth) {","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"chowRuiYan"},"content":"            LocalDate date \u003d LocalDate.of(referenceDate.getYear(), referenceDate.getMonth(), currentDay);","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"chowRuiYan"},"content":"            DayCard dayCard \u003d date.equals(referenceDate)","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"chowRuiYan"},"content":"                    ? new DayCard(getTaskInCurrentDay(taskList, date), date, true)","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"chowRuiYan"},"content":"                    : new DayCard(getTaskInCurrentDay(taskList, date), date, false);","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"chowRuiYan"},"content":"            calendarPlaceholder.add(dayCard.getRoot(), column, row, 1, 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"chowRuiYan"},"content":"            column++;","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"chowRuiYan"},"content":"            if (column \u003e 6) {","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"chowRuiYan"},"content":"                column %\u003d 7;","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"chowRuiYan"},"content":"                row++;","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"chowRuiYan"},"content":"            currentDay++;","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"chowRuiYan"},"content":"     * Returns the list of tasks happening on specified date from an original list of tasks.","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"chowRuiYan"},"content":"     * @param taskList the original list of tasks.","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"chowRuiYan"},"content":"     * @param current the specified date.","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"chowRuiYan"},"content":"     * @return the filtered task list","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"chowRuiYan"},"content":"    private ObservableList\u003cTask\u003e getTaskInCurrentDay(ObservableList\u003cTask\u003e taskList, LocalDate current) {","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"chowRuiYan"},"content":"        return taskList.filtered((task -\u003e task.getSpan().anyMatch(dates -\u003e dates.equals(current))));","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"chowRuiYan"},"content":"     * Sets the style for layout of calendar.","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"chowRuiYan"},"content":"     * @param str text for the label","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"chowRuiYan"},"content":"     * @return the styled label","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"chowRuiYan"},"content":"    private Label createLayoutLabel(String str) {","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"chowRuiYan"},"content":"        Label result \u003d new Label(str);","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"chowRuiYan"},"content":"        result.setPadding(new Insets(5, 5, 5, 5));","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"chowRuiYan"},"content":"        return result;","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":168,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":169,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"chowRuiYan"},"content":"     * Determines what is the column index of the first day of the month.","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":172,"author":{"gitId":"chowRuiYan"},"content":"     * @return the column index","lastModifiedDate":"2021-10-16"},{"lineNumber":173,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":174,"author":{"gitId":"chowRuiYan"},"content":"    private int startColumn() {","lastModifiedDate":"2021-10-09"},{"lineNumber":175,"author":{"gitId":"chowRuiYan"},"content":"        int column;","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"chowRuiYan"},"content":"        LocalDate firstDayOfMonth \u003d referenceDate.withDayOfMonth(1);","lastModifiedDate":"2021-10-16"},{"lineNumber":177,"author":{"gitId":"chowRuiYan"},"content":"        DayOfWeek dayOfWeek \u003d firstDayOfMonth.getDayOfWeek();","lastModifiedDate":"2021-10-09"},{"lineNumber":178,"author":{"gitId":"chowRuiYan"},"content":"        switch (dayOfWeek) {","lastModifiedDate":"2021-10-09"},{"lineNumber":179,"author":{"gitId":"chowRuiYan"},"content":"        case SUNDAY:","lastModifiedDate":"2021-10-09"},{"lineNumber":180,"author":{"gitId":"chowRuiYan"},"content":"            column \u003d 0;","lastModifiedDate":"2021-10-09"},{"lineNumber":181,"author":{"gitId":"chowRuiYan"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":182,"author":{"gitId":"chowRuiYan"},"content":"        case MONDAY:","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"chowRuiYan"},"content":"            column \u003d 1;","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"chowRuiYan"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"chowRuiYan"},"content":"        case TUESDAY:","lastModifiedDate":"2021-10-09"},{"lineNumber":186,"author":{"gitId":"chowRuiYan"},"content":"            column \u003d 2;","lastModifiedDate":"2021-10-09"},{"lineNumber":187,"author":{"gitId":"chowRuiYan"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"chowRuiYan"},"content":"        case WEDNESDAY:","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"chowRuiYan"},"content":"            column \u003d 3;","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"chowRuiYan"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"chowRuiYan"},"content":"        case THURSDAY:","lastModifiedDate":"2021-10-09"},{"lineNumber":192,"author":{"gitId":"chowRuiYan"},"content":"            column \u003d 4;","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"chowRuiYan"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"chowRuiYan"},"content":"        case FRIDAY:","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"chowRuiYan"},"content":"            column \u003d 5;","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"chowRuiYan"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"chowRuiYan"},"content":"        case SATURDAY:","lastModifiedDate":"2021-10-09"},{"lineNumber":198,"author":{"gitId":"chowRuiYan"},"content":"            column \u003d 6;","lastModifiedDate":"2021-10-09"},{"lineNumber":199,"author":{"gitId":"chowRuiYan"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"chowRuiYan"},"content":"        default:","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"chowRuiYan"},"content":"            column \u003d -1;","lastModifiedDate":"2021-10-09"},{"lineNumber":202,"author":{"gitId":"chowRuiYan"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":204,"author":{"gitId":"chowRuiYan"},"content":"        return column;","lastModifiedDate":"2021-10-09"},{"lineNumber":205,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":206,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":207,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":208,"author":{"gitId":"chowRuiYan"},"content":"     * Parses system input to perform calendar-specific execution.","lastModifiedDate":"2021-10-16"},{"lineNumber":209,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"chowRuiYan"},"content":"     * @param feedbackToSystem system input","lastModifiedDate":"2021-10-16"},{"lineNumber":211,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":212,"author":{"gitId":"chowRuiYan"},"content":"    public void executeCommand(String feedbackToSystem) {","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"chowRuiYan"},"content":"        String[] feedback \u003d feedbackToSystem.split(\" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":214,"author":{"gitId":"chowRuiYan"},"content":"        switch (feedback[0]) {","lastModifiedDate":"2021-10-16"},{"lineNumber":215,"author":{"gitId":"chowRuiYan"},"content":"        case NextMonthCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-16"},{"lineNumber":216,"author":{"gitId":"chowRuiYan"},"content":"            showNextMonth();","lastModifiedDate":"2021-10-16"},{"lineNumber":217,"author":{"gitId":"chowRuiYan"},"content":"            break;","lastModifiedDate":"2021-10-16"},{"lineNumber":218,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":219,"author":{"gitId":"chowRuiYan"},"content":"        case PreviousMonthCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-16"},{"lineNumber":220,"author":{"gitId":"chowRuiYan"},"content":"            showPreviousMonth();","lastModifiedDate":"2021-10-16"},{"lineNumber":221,"author":{"gitId":"chowRuiYan"},"content":"            break;","lastModifiedDate":"2021-10-16"},{"lineNumber":222,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":223,"author":{"gitId":"chowRuiYan"},"content":"        case ReadDayCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-16"},{"lineNumber":224,"author":{"gitId":"chowRuiYan"},"content":"            LocalDate date \u003d LocalDate.parse(feedback[1]);","lastModifiedDate":"2021-10-16"},{"lineNumber":225,"author":{"gitId":"chowRuiYan"},"content":"            fillCalendarPanel(date);","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"chowRuiYan"},"content":"            break;","lastModifiedDate":"2021-10-16"},{"lineNumber":227,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":228,"author":{"gitId":"chowRuiYan"},"content":"        default:","lastModifiedDate":"2021-10-16"},{"lineNumber":229,"author":{"gitId":"chowRuiYan"},"content":"            return;","lastModifiedDate":"2021-10-16"},{"lineNumber":230,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":231,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":232,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":233,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":234,"author":{"gitId":"chowRuiYan"},"content":"     * Displays the next month of the calendar.","lastModifiedDate":"2021-10-16"},{"lineNumber":235,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":236,"author":{"gitId":"chowRuiYan"},"content":"    private void showNextMonth() {","lastModifiedDate":"2021-10-16"},{"lineNumber":237,"author":{"gitId":"chowRuiYan"},"content":"        referenceDate \u003d referenceDate.plusMonths(1);","lastModifiedDate":"2021-10-16"},{"lineNumber":238,"author":{"gitId":"chowRuiYan"},"content":"        fillCalendar();","lastModifiedDate":"2021-10-16"},{"lineNumber":239,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":240,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":241,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":242,"author":{"gitId":"chowRuiYan"},"content":"     * Displays the previous month of the calendar.","lastModifiedDate":"2021-10-16"},{"lineNumber":243,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":244,"author":{"gitId":"chowRuiYan"},"content":"    private void showPreviousMonth() {","lastModifiedDate":"2021-10-16"},{"lineNumber":245,"author":{"gitId":"chowRuiYan"},"content":"        referenceDate \u003d referenceDate.minusMonths(1);","lastModifiedDate":"2021-10-16"},{"lineNumber":246,"author":{"gitId":"chowRuiYan"},"content":"        fillCalendar();","lastModifiedDate":"2021-10-16"},{"lineNumber":247,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":248,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"chowRuiYan":240,"Tianqi-Zhu":8}},{"path":"src/main/java/manageme/ui/calendar/DayCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui.calendar;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import javafx.css.PseudoClass;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.ui.UiPart;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"public class DayCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"    private static final PseudoClass HAS_TASK \u003d PseudoClass.getPseudoClass(\"hasTask\");","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    private static final PseudoClass IS_SELECTED \u003d PseudoClass.getPseudoClass(\"selected\");","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"    private static final String FXML \u003d \"DayCard.fxml\";","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    private ObservableList\u003cTask\u003e taskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    private LocalDate date;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    private boolean isSelected;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"    private VBox dayCardPane;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"    private Label day;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"    private Rectangle hasTask;","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"    public DayCard(ObservableList\u003cTask\u003e taskList, LocalDate date, boolean isSelected) {","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"        super(FXML);","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"        this.isSelected \u003d isSelected;","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"        fillDay();","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"     * Fills up the DayCard.","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"    private void fillDay() {","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"        day.setText(String.format(\"%d\", date.getDayOfMonth()));","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"        if (!taskList.isEmpty()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"            hasTask.pseudoClassStateChanged(HAS_TASK, true);","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"        if (isSelected) {","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"            dayCardPane.pseudoClassStateChanged(IS_SELECTED, true);","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"        if (!(other instanceof DayCard)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"        // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"        DayCard card \u003d (DayCard) other;","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"        return taskList.equals(card.taskList)","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 date.equals(card.date)","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 isSelected \u003d\u003d card.isSelected;","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"chowRuiYan":84,"Tianqi-Zhu":3}},{"path":"src/main/java/manageme/ui/module/LinkCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.link.Link;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.ui.UiPart;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":" * An UI component that displays information of a {@code Module}.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"public class LinkCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"    private static final String FXML \u003d \"LinkListCard.fxml\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    public final Link link;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"    private Label name;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"    private Label id;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"    private Label url;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"    private Button copyButton;","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"     * Creates a {@code linkCode} with the given {@code link} and index to display.","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"    public LinkCard(Link link, int displayedIndex) {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"        super(FXML);","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"        //name.setText(link.getName() + \": \");","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"        url.setText(link.getLink());","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"        if (!(other instanceof LinkCard)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"        // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"        LinkCard card \u003d (LinkCard) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 link.equals(card.link);","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"    private void copyUrl() {","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"        url.putString(link.getLink());","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"chowRuiYan":77,"Tianqi-Zhu":3}},{"path":"src/main/java/manageme/ui/module/ModuleCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.ui.UiPart;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":" * An UI component that displays information of a {@code Module}.","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"public class ModuleCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"    private static final String FXML \u003d \"ModuleListCard.fxml\";","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    public final Module module;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"    private Label name;","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"    private Label id;","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"     * Creates a {@code moduleCode} with the given {@code module} and index to display.","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"    public ModuleCard(Module module, int displayedIndex) {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"        super(FXML);","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"        this.module \u003d module;","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"JinxinZhao315"},"content":"        name.setText(module.getModuleName().name);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"        // short circuit if same object","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"        if (!(other instanceof ModuleCard)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"            return false;","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"        // state check","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"        ModuleCard card \u003d (ModuleCard) other;","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 module.equals(card.module);","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"JinxinZhao315":1,"chowRuiYan":57,"Tianqi-Zhu":3}},{"path":"src/main/java/manageme/ui/module/ModuleListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.LogsCenter;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.ui.UiPart;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":" * Panel containing the list of modules.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"public class ModuleListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"    private static final String FXML \u003d \"ModuleListPanel.fxml\";","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ModuleListPanel.class);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    private ListView\u003cModule\u003e moduleListView;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"     * Creates a {@code ModuleListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    public ModuleListPanel(ObservableList\u003cModule\u003e moduleList) {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"        super(FXML);","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"        moduleListView.setItems(moduleList);","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"        moduleListView.setCellFactory(listView -\u003e new ModuleListViewCell());","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Module} using a {@code ModuleCard}.","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"    class ModuleListViewCell extends ListCell\u003cModule\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"        protected void updateItem(Module module, boolean empty) {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"            super.updateItem(module, empty);","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"            if (empty || module \u003d\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"                setGraphic(null);","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"                setText(null);","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"            } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"                setGraphic(new ModuleCard(module, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"chowRuiYan":46,"Tianqi-Zhu":4}},{"path":"src/main/java/manageme/ui/module/ModuleWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.link.Link;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.ui.UiPart;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.ui.task.TaskCard;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"public class ModuleWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"    private static final String FXML \u003d \"ModuleWindow.fxml\";","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"    private Stage moduleWindow;","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"    private Module module;","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"    private Label name;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    private VBox linkList;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    private VBox taskList;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"    public ModuleWindow(Stage root) {","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"        super(FXML, root);","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"        this.moduleWindow \u003d root;","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"    public ModuleWindow() {","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"        this(new Stage());","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"     * Displays module details to the user.","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"     * @param onlyModuleInList The filterModuleList that only contains the specific module that user requested to read.","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"    public void display(List\u003cModule\u003e onlyModuleInList) {","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"        this.module \u003d onlyModuleInList.get(0);","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"        resetWindow();","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"JinxinZhao315"},"content":"        moduleWindow.setTitle(module.getModuleName().name);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"JinxinZhao315"},"content":"        name.setText(module.getModuleName().name);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"        fillLinkList(module.getLink());","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"        //fillTaskList(module.getTask());","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"        moduleWindow.showAndWait();","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"     * Resets Module Window.","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"    private void resetWindow() {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"        linkList.getChildren().clear();","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"        taskList.getChildren().clear();","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"     * Fills up the task list.","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"     * @param tasks the Task objects.","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"    public void fillTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"            taskList.getChildren().add(new TaskCard(tasks.get(i), i).getRoot());","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"     * Fills up the link list.","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"     * @param links the Link objects.","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"    public void fillLinkList(List\u003cLink\u003e links) {","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"        for (int i \u003d 0; i \u003c links.size(); i++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"chowRuiYan"},"content":"            linkList.getChildren().add(new LinkCard(links.get(i), i).getRoot());","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"chowRuiYan"},"content":"     * Fills up the link list.","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"chowRuiYan"},"content":"     * @param link the Link object.","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"chowRuiYan"},"content":"    public void fillLinkList(Link link) {","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"chowRuiYan"},"content":"        linkList.getChildren().add(new LinkCard(link, 1).getRoot());","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"JinxinZhao315":2,"chowRuiYan":92,"Tianqi-Zhu":6}},{"path":"src/main/java/manageme/ui/task/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.ui.UiPart;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    public final Task task;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    private VBox cardPane;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"    private Label taskName;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"    private Label taskId;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"    private Label taskDescription;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"    private Label taskModule;","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"    private Label startTime;","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"    private Label endTime;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"     * Creates a {@code taskCode} with the given {@code task} and index to display.","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"        super(FXML);","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"        taskId.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"        taskName.setText(task.getName().value);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"        taskDescription.setText(task.getDescription().value);","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"        taskModule.setText(task.getTaskModule().value);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"        startTime.setText(task.getStart().isEmpty() ? \"\" : \"Start Time: \" + task.getStart().value);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"        endTime.setText(task.getEnd().isEmpty() ? \"\" : \"End Time: \" + task.getEnd().value);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"        // short circuit if same object","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"            return true;","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"            return false;","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"        // state check","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"        return taskId.getText().equals(card.taskId.getText())","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"chowRuiYan":70,"Tianqi-Zhu":3}},{"path":"src/main/java/manageme/ui/task/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.LogsCenter;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.ui.UiPart;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":" * Panel containing the list of Tasks.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"        super(FXML);","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"                setGraphic(null);","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"                setText(null);","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"            } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"chowRuiYan":46,"Tianqi-Zhu":4}},{"path":"src/main/resources/view/CalendarPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"   \u003cLabel fx:id\u003d\"date\" text\u003d\"\\$date\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"      \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"         \u003cFont size\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"      \u003c/font\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"         \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"      \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"   \u003cGridPane fx:id\u003d\"calendarPlaceholder\" prefHeight\u003d\"200.0\" prefWidth\u003d\"400.0\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"     \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"       \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"       \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"     \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"     \u003crowConstraints\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"         \u003cRowConstraints minHeight\u003d\"15.0\" prefHeight\u003d\"15.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"         \u003cRowConstraints minHeight\u003d\"15.0\" prefHeight\u003d\"15.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"         \u003cRowConstraints minHeight\u003d\"30.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"         \u003cRowConstraints minHeight\u003d\"30.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"       \u003cRowConstraints minHeight\u003d\"30.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"       \u003cRowConstraints minHeight\u003d\"30.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"       \u003cRowConstraints minHeight\u003d\"30.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"         \u003cRowConstraints maxHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"     \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"         \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"      \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"   \u003c/GridPane\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"   \u003cHBox fx:id\u003d\"readDayTitlePlaceholder\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"         \u003cLabel fx:id\u003d\"readDayTitle\" alignment\u003d\"CENTER\" text\u003d\"Task For The Day\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"               \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"         \u003c/Label\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"      \u003c/children\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"         \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"      \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"   \u003c/HBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"   \u003cStackPane fx:id\u003d\"readDayPanelPlaceholder\" alignment\u003d\"TOP_LEFT\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"         \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"      \u003c/VBox.margin\u003e\u003c/StackPane\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"chowRuiYan":64}},{"path":"src/main/resources/view/DayCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"\u003cVBox fx:id\u003d\"dayCardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"      \u003cLabel fx:id\u003d\"day\" prefHeight\u003d\"15.0\" prefWidth\u003d\"50.0\" text\u003d\"\\$day\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"      \u003cRectangle fx:id\u003d\"hasTask\" arcHeight\u003d\"5.0\" arcWidth\u003d\"5.0\" fill\u003d\"FLORALWHITE\" height\u003d\"5.0\" stroke\u003d\"FLORALWHITE\" strokeType\u003d\"INSIDE\" width\u003d\"10.0\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"         \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"         \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"      \u003c/Rectangle\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"      \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"chowRuiYan":20}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"chowRuiYan":1,"-":43,"Tianqi-Zhu":1}},{"path":"src/main/resources/view/LinkListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"      \u003cLabel fx:id\u003d\"id\" text\u003d\"\\$id\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"      \u003cLabel fx:id\u003d\"name\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"      \u003cLabel fx:id\u003d\"url\" text\u003d\"\\$url\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"      \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"      \u003c/Button\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"chowRuiYan":36}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":58,"Tianqi-Zhu":2}},{"path":"src/main/resources/view/ManageMe.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"* {","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"    -menuBar-color: salmon;","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"    -bg-color: lightpink;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"    -panel-color:mistyrose;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"    -calendar-color: floralwhite;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"    -cardPane-color: navajowhite;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"    -hasTask-color: mediumspringgreen;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"    -readDay-color: cornsilk;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"#menuBar {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"    -fx-background-color: -menuBar-color;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"#menuBar .menu-item {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"    -fx-background-color: -menuBar-color;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"#menuBar .label{","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"#moduleListPanelPlaceholder,","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"#taskListPanelPlaceholder,","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"#calendarPanelPlaceholder,","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"#resultDisplay .content {","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    -fx-background-color: -panel-color;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"#resultDisplayPlaceholder,","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"#commandBoxPlaceholder,","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"#calendar,","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"#taskList,","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"#moduleList {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"    -fx-background-color: -bg-color;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"#commandTextField {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"    -fx-background-color: -panel-color;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"    -fx-prompt-text-fill: #000000;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"#resultDisplay {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"#module,","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"#task {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"    -fx-background-color: -panel-color;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"#moduleListView,","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"#cardPane,","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"#taskListView,","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"#taskListView .list-cell:empty,","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"#moduleListView .list-cell:empty,","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"#calendarPanelPlaceholder .cell .label,","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"#dayCardPane {","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"#calendarPlaceholder {","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"    -fx-background-color: -calendar-color;","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"#date {","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"#readDayPanelPlaceholder,","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"#readDayTitlePlaceholder {","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"    -fx-background-color: -readDay-color;","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":".list-view .list-cell {","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"    -fx-background-color: -cardPane-color;","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"    -fx-background-insets: 5px;","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":".label {","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"chowRuiYan"},"content":"#hasTask {","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"chowRuiYan"},"content":"    -fx-fill: -calendar-color;","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"chowRuiYan"},"content":"    -fx-stroke: -calendar-color;","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"chowRuiYan"},"content":"    -fx-smooth: true;","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"chowRuiYan"},"content":"#hasTask:hasTask {","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"chowRuiYan"},"content":"    -fx-fill: -hasTask-color;","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"chowRuiYan"},"content":"    -fx-stroke: -hasTask-color;","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"chowRuiYan"},"content":"#dayCardPane:selected {","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"chowRuiYan"},"content":"    -fx-background-color: tomato;","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"chowRuiYan"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"chowRuiYan"},"content":"#dayCardPane:selected #hasTask {","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"chowRuiYan"},"content":"    -fx-fill: transparent;","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"chowRuiYan"},"content":"    -fx-stroke: transparent;","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"chowRuiYan"},"content":"#dayCardPane:selected #hasTask:hasTask {","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"chowRuiYan"},"content":"    -fx-fill: -hasTask-color;","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"chowRuiYan"},"content":"    -fx-stroke: -hasTask-color;","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"chowRuiYan"},"content":".scroll-bar .increment-arrow,","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"chowRuiYan"},"content":".scroll-bar .decrement-arrow,","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"chowRuiYan"},"content":".scroll-bar .increment-button,","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"chowRuiYan"},"content":".scroll-bar .decrement-button {","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"chowRuiYan"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"chowRuiYan"},"content":"#taskId,","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"chowRuiYan"},"content":"#taskName {","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"chowRuiYan"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"chowRuiYan"},"content":"#taskModule,","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"chowRuiYan"},"content":"#startTime,","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"chowRuiYan"},"content":"#endTime {","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"chowRuiYan"},"content":"    -fx-font-size: 10px;","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"chowRuiYan":130}},{"path":"src/main/resources/view/MmMainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"\u003cfx:root minHeight\u003d\"630.0\" minWidth\u003d\"1000.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"ManageMe\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"    \u003cicons\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"                \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"                \u003cURL value\u003d\"@ManageMe.css\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"                \u003cHBox fx:id\u003d\"contentPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"                   \u003cchildren\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"                      \u003cVBox fx:id\u003d\"moduleList\" maxWidth\u003d\"200.0\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"200.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"                          \u003cpadding\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"                              \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"                          \u003c/padding\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"                          \u003cchildren\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"                              \u003cLabel fx:id\u003d\"module\" maxWidth\u003d\"200.0\" prefWidth\u003d\"200.0\" text\u003d\"Module\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"                                  \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"                                      \u003cFont size\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"                                  \u003c/font\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"                                  \u003cpadding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"                                      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"                                  \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"                              \u003cStackPane fx:id\u003d\"moduleListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"                          \u003c/children\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"                      \u003c/VBox\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"                      \u003cVBox fx:id\u003d\"taskList\" layoutX\u003d\"10.0\" layoutY\u003d\"10.0\" maxWidth\u003d\"200.0\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"200.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"                         \u003cpadding\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"                         \u003c/padding\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"                         \u003cchildren\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"                             \u003cLabel fx:id\u003d\"task\" maxWidth\u003d\"200.0\" prefWidth\u003d\"200.0\" text\u003d\"Task\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"                                 \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"                                     \u003cFont size\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"                                 \u003c/font\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"                                 \u003cpadding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"                                     \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"                                 \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"                            \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"                         \u003c/children\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"chowRuiYan"},"content":"                      \u003c/VBox\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"                      \u003cVBox fx:id\u003d\"calendar\" layoutX\u003d\"350.0\" layoutY\u003d\"10.0\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"550.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"                         \u003cpadding\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"                         \u003c/padding\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"                         \u003cchildren\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"                            \u003cStackPane fx:id\u003d\"calendarPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"                         \u003c/children\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"                      \u003c/VBox\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"                   \u003c/children\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"                  \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"chowRuiYan"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"chowRuiYan"},"content":"                \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"chowRuiYan"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"chowRuiYan"},"content":"                  \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"chowRuiYan"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"chowRuiYan"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"chowRuiYan"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"chowRuiYan"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"chowRuiYan"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"chowRuiYan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"chowRuiYan":98}},{"path":"src/main/resources/view/ModuleListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"80.0\" prefWidth\u003d\"100.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"       \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$id\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"           \u003cminWidth\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"               \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"               \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"           \u003c/minWidth\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"       \u003c/Label\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"       \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"chowRuiYan":19}},{"path":"src/main/resources/view/ModuleListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"   \u003cListView fx:id\u003d\"moduleListView\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"         \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"      \u003c/padding\u003e\u003c/ListView\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"chowRuiYan":11}},{"path":"src/main/resources/view/ModuleWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"\u003cfx:root alwaysOnTop\u003d\"true\" minHeight\u003d\"100.0\" minWidth\u003d\"100.0\" title\u003d\"Module Name\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"    \u003cicons\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"                \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"                \u003cURL value\u003d\"@ManageMe.css\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$name\"\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"                \u003cVBox fx:id\u003d\"linkList\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"                        \u003cLabel text\u003d\"Link:\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"                \u003cVBox fx:id\u003d\"taskList\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"                        \u003cLabel text\u003d\"Task:\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"chowRuiYan":47,"Tianqi-Zhu":1}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"\u003cVBox fx:id\u003d\"cardPane\" prefWidth\u003d\"100.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"      \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"            \u003cLabel fx:id\u003d\"taskId\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$id\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"               \u003cminWidth\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"                  \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"               \u003c/minWidth\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"            \u003cLabel fx:id\u003d\"taskName\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"      \u003cLabel fx:id\u003d\"taskDescription\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"      \u003cLabel fx:id\u003d\"taskModule\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"      \u003cLabel fx:id\u003d\"startTime\" styleClass\u003d\"cell_small_label\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"      \u003cLabel fx:id\u003d\"endTime\" layoutX\u003d\"25.0\" layoutY\u003d\"80.0\" styleClass\u003d\"cell_small_label\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"chowRuiYan":29}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"\u003cListView fx:id\u003d\"taskListView\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"      \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"\u003c/ListView\u003e","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"chowRuiYan":10}},{"path":"src/test/data/JsonAddressBookStorageTest/Task/invalidAndValidTaskAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"{","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"  \"persons\": [ ],","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"  \"modules\": [],","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"  \"tasks\": [","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"    {","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"      \"module\": \"@@\",","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"      \"start\": \"2021-10-05T11:50\",","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"      \"end\": \"2021-10-05T14:00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"      \"taskName\": \" \",","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"      \"taskDescription\": \"At NUS UTown\"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"      \"module\": \"\",","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"      \"start\": \"2021-10-07T23:59\",","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"      \"end\": \"2021-10-14T23:59\",","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"      \"taskName\": \"Work on CS2100 Assignment 2\",","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"      \"taskDescription\": \"Refer to lectures 7-13\"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"  ]","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"markuslim24":2,"zhangchengchuan":17}},{"path":"src/test/data/JsonAddressBookStorageTest/Task/invalidTaskManageMe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"{","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"  \"persons\": [ ],","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"  \"modules\": [],","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"  \"tasks\": [","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"    {","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"      \"module\": \"@@\",","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"      \"start\": \"2021-10-05T11:50\",","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"      \"end\": \"2021-10-05T14:00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"      \"taskName\": \" \",","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"      \"taskDescription\": \"At NUS UTown\"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"  ]","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"markuslim24":2,"zhangchengchuan":11}},{"path":"src/test/data/JsonSerializableManageMeTest/Task/duplicateTaskManageMe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"{","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"  \"persons\": [ ],","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"  \"modules\": [],","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"  \"tasks\": [","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"    {","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"      \"module\": \"\",","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"      \"start\": \"2021-10-05T11:50\",","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"      \"end\": \"2021-10-05T14:00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"      \"taskName\": \"Eat with friends\",","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"      \"taskDescription\": \"At NUS UTown\"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    },","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"    {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"      \"module\": \"\",","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"      \"start\": \"2021-10-05T11:50\",","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"      \"end\": \"2021-10-05T14:00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"      \"taskName\": \"Eat with friends\",","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"      \"taskDescription\": \"At NUS UTown\"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    },","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"    {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"      \"module\": \"\",","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"      \"start\": \"2021-10-07T23:59\",","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"      \"end\": \"2021-10-14T23:59\",","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"      \"taskName\": \"Work on CS2100 Assignment 2\",","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"      \"taskDescription\": \"Refer to lectures 7-13\"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"  ]","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"zhangchengchuan":27}},{"path":"src/test/data/JsonSerializableManageMeTest/Task/invalidTaskManageMe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"{","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"  \"persons\": [ ],","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"  \"modules\": [],","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"  \"tasks\": [","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"    {","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"      \"module\": \"\",","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"      \"start\": \"2021-10-05T11:50\",","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"      \"end\": \"2021-10-05T14:00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"      \"taskName\": \" \",","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"      \"taskDescription\": \"At NUS UTown\"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"  ]","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"markuslim24":1,"zhangchengchuan":12}},{"path":"src/test/data/JsonSerializableManageMeTest/Task/typicalTasksManageMe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"{","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"  \"persons\": [ ],","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"  \"modules\": [ ],","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"  \"tasks\": [","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"    {","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"      \"module\": \"\",","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"      \"start\": \"2021-10-05T11:50\",","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"      \"end\": \"2021-10-05T14:00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"      \"taskName\": \"Eat with friends\",","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"      \"taskDescription\": \"At NUS UTown\"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    },","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"    {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"      \"module\": \"CS2100\",","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"      \"start\": \"2021-10-07T23:59\",","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"      \"end\": \"2021-10-14T23:59\",","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"      \"taskName\": \"Work on CS2100 Assignment 2\",","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"      \"taskDescription\": \"Refer to lectures 7-13\"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"  ]","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"zhangchengchuan":20}},{"path":"src/test/data/JsonSerializableManageMeTest/duplicateModuleManageMe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"{","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"  \"persons\" : [ ],","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"  \"modules\": [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"    \"modName\" : \"CS111\",","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"    \"link\" : \"https://www.google.com\"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"  } , {","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"    \"modName\" : \"CS111\",","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"    \"link\" : \"https://www.google.com\"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"  } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"  \"tasks\": [ ]","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"chowRuiYan":11}},{"path":"src/test/data/JsonSerializableManageMeTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"  } ],","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"  \"modules\": [ ],","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"  \"tasks\": [ ]","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zhangchengchuan":2,"chowRuiYan":1,"-":13}},{"path":"src/test/data/JsonSerializableManageMeTest/duplicateTaskManageMe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chowRuiYan"},"content":"{","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"  \"persons\" : [ ],","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"  \"modules\": [ ],","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"  \"tasks\": [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"    \"module\" : \"\",","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"    \"start\" : \"2021-10-05T11:50\",","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"    \"end\" : \"2021-10-05T14:00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"    \"taskName\" : \"Eat with friends\",","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"    \"taskDescription\" : \"At NUS UTown\"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"    \"module\" : \"\",","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"    \"start\" : \"2021-10-05T11:50\",","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"    \"end\" : \"2021-10-05T14:00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"    \"taskName\" : \"Eat with friends\",","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"    \"taskDescription\" : \"At NUS UTown\"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"  } ]","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"chowRuiYan":17}},{"path":"src/test/data/JsonSerializableManageMeTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"  } ],","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"  \"modules\": [ ],","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"  \"tasks\": [ ]","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zhangchengchuan":2,"chowRuiYan":1,"-":7}},{"path":"src/test/data/JsonSerializableManageMeTest/typicalManageMe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"  \"_comment\": \"AddressBook save file which contains the same values as in TypicalAddressBook#getTypicalAddressBook()\",","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"  } ],","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"  \"modules\": [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"    \"modName\" : \"CS111\",","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"    \"link\" : \"https://www.google.com\"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"  } , {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"    \"modName\" : \"CS222\",","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"    \"link\" : \"https://www.github.com\"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"  } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"  \"tasks\": [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"    \"module\" : \"\",","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"    \"start\" : \"2021-10-05T11:50\",","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"    \"end\" : \"2021-10-05T14:00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"    \"taskName\" : \"Eat with friends\",","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"    \"taskDescription\" : \"At NUS UTown\"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"  }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"    \"module\" : \"CS2100\",","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"    \"start\" : \"2021-10-07T23:59\",","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"    \"end\" : \"2021-10-14T23:59\",","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"    \"taskName\" : \"Work on CS2100 Assignment 2\",","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"    \"taskDescription\" : \"Refer to lectures 7-13\"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chowRuiYan":21,"-":45}},{"path":"src/test/java/manageme/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":57}},{"path":"src/test/java/manageme/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.core;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":26}},{"path":"src/test/java/manageme/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.core;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tianqi-Zhu":2,"-":133}},{"path":"src/test/java/manageme/commons/core/index/TaskIndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.core.index;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"public class TaskIndexTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"zhangchengchuan":1,"Tianqi-Zhu":2,"-":57}},{"path":"src/test/java/manageme/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.util;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Tianqi-Zhu":2,"-":34}},{"path":"src/test/java/manageme/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.util;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"Tianqi-Zhu":3,"-":105}},{"path":"src/test/java/manageme/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.util;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Config;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Tianqi-Zhu":4,"-":112}},{"path":"src/test/java/manageme/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.util;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tianqi-Zhu":2,"-":21}},{"path":"src/test/java/manageme/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.util;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.SerializableTestClass;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TestUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tianqi-Zhu":3,"-":42}},{"path":"src/test/java/manageme/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.commons.util;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Tianqi-Zhu":2,"-":141}},{"path":"src/test/java/manageme/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.AddCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.ListCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.storage.JsonManageMeStorage;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.storage.StorageManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.Assert;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.PersonBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TypicalPersons;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.time.TimeManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"        JsonManageMeStorage addressBookStorage \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"                new JsonManageMeStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"        TimeManager time \u003d new TimeManager(model.getManageMe());","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"        logic \u003d new LogicManager(model, storage, time);","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"        JsonManageMeStorage addressBookStorage \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"                new JsonManageMeIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"        TimeManager time \u003d new TimeManager(model.getManageMe());","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"        logic \u003d new LogicManager(model, storage, time);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"Tianqi-Zhu"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"Tianqi-Zhu"},"content":"        Person expectedPerson \u003d new PersonBuilder(TypicalPersons.AMY).withTags().build();","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"chowRuiYan"},"content":"    public void getFilteredModuleList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredModuleList().remove(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"chowRuiYan"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTaskList().remove(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"chowRuiYan"},"content":"    public void getReadModuleList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e logic.getReadModuleList().remove(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"chowRuiYan"},"content":"    public void getUnfilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e logic.getUnfilteredTaskList().remove(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"chowRuiYan"},"content":"        Model expectedModel \u003d new ModelManager(model.getManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2021-10-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"chowRuiYan"},"content":"    private static class JsonManageMeIoExceptionThrowingStub extends JsonManageMeStorage {","lastModifiedDate":"2021-10-15"},{"lineNumber":173,"author":{"gitId":"chowRuiYan"},"content":"        private JsonManageMeIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"chowRuiYan"},"content":"        public void saveManageMe(ReadOnlyManageMe addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"zhangchengchuan":5,"chowRuiYan":22,"Tianqi-Zhu":29,"-":126}},{"path":"src/test/java/manageme/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalManageMe.getTypicalManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.PersonBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"        model \u003d new ModelManager(getTypicalManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"        Model expectedModel \u003d new ModelManager(model.getManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"        Person personInList \u003d model.getManageMe().getPersonList().get(0);","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"        CommandTestUtil.assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"chowRuiYan":3,"Tianqi-Zhu":9,"-":32}},{"path":"src/test/java/manageme/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.GuiSettings;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.PersonBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"chowRuiYan"},"content":"        public Path getManageMeFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"chowRuiYan"},"content":"        public void setManageMeFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"chowRuiYan"},"content":"        public void setManageMe(ReadOnlyManageMe newData) {","lastModifiedDate":"2021-10-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"chowRuiYan"},"content":"        public ReadOnlyManageMe getManageMe() {","lastModifiedDate":"2021-10-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"chowRuiYan"},"content":"        public boolean hasModule(Module module) {","lastModifiedDate":"2021-10-02"},{"lineNumber":155,"author":{"gitId":"chowRuiYan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":156,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":157,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":158,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":159,"author":{"gitId":"chowRuiYan"},"content":"        public void deleteModule(Module target) {","lastModifiedDate":"2021-10-02"},{"lineNumber":160,"author":{"gitId":"chowRuiYan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":161,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":162,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":163,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":164,"author":{"gitId":"chowRuiYan"},"content":"        public void addModule(Module module) {","lastModifiedDate":"2021-10-02"},{"lineNumber":165,"author":{"gitId":"chowRuiYan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":166,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":167,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":168,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":169,"author":{"gitId":"chowRuiYan"},"content":"        public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2021-10-02"},{"lineNumber":170,"author":{"gitId":"chowRuiYan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":171,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":172,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":173,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":174,"author":{"gitId":"chowRuiYan"},"content":"        public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":175,"author":{"gitId":"chowRuiYan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":176,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":177,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":178,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":179,"author":{"gitId":"chowRuiYan"},"content":"        public void updateFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2021-10-02"},{"lineNumber":180,"author":{"gitId":"chowRuiYan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":181,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":182,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":183,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"chowRuiYan"},"content":"        public ObservableList\u003cModule\u003e getReadModuleList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"chowRuiYan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"chowRuiYan"},"content":"        public void updateReadModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"chowRuiYan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":194,"author":{"gitId":"chowRuiYan"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-02"},{"lineNumber":195,"author":{"gitId":"chowRuiYan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":196,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":197,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":198,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":199,"author":{"gitId":"chowRuiYan"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2021-10-02"},{"lineNumber":200,"author":{"gitId":"chowRuiYan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":201,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":202,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":203,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":204,"author":{"gitId":"chowRuiYan"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-10-02"},{"lineNumber":205,"author":{"gitId":"chowRuiYan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":206,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":207,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":208,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":209,"author":{"gitId":"chowRuiYan"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-02"},{"lineNumber":210,"author":{"gitId":"chowRuiYan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":211,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":212,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":213,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":214,"author":{"gitId":"chowRuiYan"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":215,"author":{"gitId":"chowRuiYan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":216,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":217,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":218,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":219,"author":{"gitId":"chowRuiYan"},"content":"        public ObservableList\u003cTask\u003e getUnfilteredTaskList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":220,"author":{"gitId":"chowRuiYan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":221,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":222,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":223,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":224,"author":{"gitId":"chowRuiYan"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-02"},{"lineNumber":225,"author":{"gitId":"chowRuiYan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":226,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"chowRuiYan"},"content":"        public ReadOnlyManageMe getManageMe() {","lastModifiedDate":"2021-10-15"},{"lineNumber":267,"author":{"gitId":"chowRuiYan"},"content":"            return new ManageMe();","lastModifiedDate":"2021-10-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"chowRuiYan":81,"Tianqi-Zhu":12,"-":178}},{"path":"src/test/java/manageme/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalManageMe.getTypicalManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"        Model model \u003d new ModelManager(getTypicalManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"        expectedModel.setManageMe(new ManageMe());","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"chowRuiYan":3,"Tianqi-Zhu":7,"-":22}},{"path":"src/test/java/manageme/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"    public void getFeedbackToSystem_validCommandResult_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(CommandResult.FEEDBACK_TO_SYSTEM, commandResult.getFeedbackToSystem());","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"    public void isCalendarCommand_validCommandResult_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(false, commandResult.isCalendarCommand());","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"        // different readModule value -\u003e returns false","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true)));","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"        // different readModule value -\u003e returns different hashcode","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false, true).hashCode());","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"chowRuiYan":23,"Tianqi-Zhu":1,"-":48}},{"path":"src/test/java/manageme/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.module.EditModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.ModNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.EditModuleDescriptorBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String VALID_MODNAME_CS2100 \u003d \"CS2100\";","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String VALID_MODNAME_CS2103 \u003d \"CS2103\";","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String VALID_LINK_ZOOM \u003d \"www.zoom.com\";","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String VALID_LINK_GOOGLE \u003d \"www.google.com\";","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String VALID_LINK_NAME_YOUTUBE \u003d \"Youtube\";","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String MODNAME_DESC_CS2100 \u003d \" \" + PREFIX_NAME + VALID_MODNAME_CS2100;","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String MODNAME_DESC_CS2103 \u003d \" \" + PREFIX_NAME + VALID_MODNAME_CS2103;","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String LINK_DESC_ZOOM \u003d \" \" + PREFIX_LINK + VALID_LINK_ZOOM;","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String LINK_DESC_GOOGLE \u003d \" \" + PREFIX_LINK + VALID_LINK_GOOGLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"JinxinZhao315"},"content":"    public static final EditModuleCommand.EditModuleDescriptor DESC_CS2100;","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"JinxinZhao315"},"content":"    public static final EditModuleCommand.EditModuleDescriptor DESC_CS2103;","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"JinxinZhao315"},"content":"        DESC_CS2100 \u003d new EditModuleDescriptorBuilder().withName(VALID_MODNAME_CS2100)","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"JinxinZhao315"},"content":"                .withLink(VALID_LINK_ZOOM).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"JinxinZhao315"},"content":"        DESC_CS2103 \u003d new EditModuleDescriptorBuilder().withName(VALID_MODNAME_CS2103)","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"JinxinZhao315"},"content":"                .withLink(VALID_LINK_GOOGLE).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"chowRuiYan"},"content":"        ManageMe expectedManageMe \u003d new ManageMe(actualModel.getManageMe());","lastModifiedDate":"2021-10-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(expectedManageMe, actualModel.getManageMe());","lastModifiedDate":"2021-10-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"JinxinZhao315"},"content":"     * Updates {@code model}\u0027s filtered list to show only the module at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"JinxinZhao315"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"JinxinZhao315"},"content":"    public static void showModuleAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"JinxinZhao315"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredModuleList().size());","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"JinxinZhao315"},"content":"        Module module \u003d model.getFilteredModuleList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"JinxinZhao315"},"content":"        final String[] splitName \u003d module.getModuleName().name.split(\"\\\\s+\");","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"JinxinZhao315"},"content":"        model.updateFilteredModuleList(new ModNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"JinxinZhao315"},"content":"        assertEquals(1, model.getFilteredModuleList().size());","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"JinxinZhao315":25,"chowRuiYan":2,"Tianqi-Zhu":24,"-":112}},{"path":"src/test/java/manageme/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalManageMe.getTypicalManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    private Model model \u003d new ModelManager(getTypicalManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"Tianqi-Zhu"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"Tianqi-Zhu"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"Tianqi-Zhu"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"        Model expectedModel \u003d new ModelManager(model.getManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getManageMe().getPersonList().size());","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"Tianqi-Zhu"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"Tianqi-Zhu"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"Tianqi-Zhu"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"chowRuiYan":4,"Tianqi-Zhu":23,"-":82}},{"path":"src/test/java/manageme/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalManageMe.getTypicalManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.PersonBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"    private Model model \u003d new ModelManager(getTypicalManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"        Model expectedModel \u003d new ModelManager(new ManageMe(model.getManageMe()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"        Model expectedModel \u003d new ModelManager(new ManageMe(model.getManageMe()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, new EditPersonDescriptor());","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"Tianqi-Zhu"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"        Model expectedModel \u003d new ModelManager(new ManageMe(model.getManageMe()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"Tianqi-Zhu"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"Tianqi-Zhu"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"chowRuiYan"},"content":"        Model expectedModel \u003d new ModelManager(new ManageMe(model.getManageMe()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"Tianqi-Zhu"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"Tianqi-Zhu"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"Tianqi-Zhu"},"content":"        Person personInList \u003d model.getManageMe().getPersonList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"Tianqi-Zhu"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getManageMe().getPersonList().size());","lastModifiedDate":"2021-10-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"Tianqi-Zhu"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST, DESC_AMY);","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND, DESC_AMY)));","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST, DESC_BOB)));","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"chowRuiYan":6,"Tianqi-Zhu":39,"-":128}},{"path":"src/test/java/manageme/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Tianqi-Zhu":10,"-":48}},{"path":"src/test/java/manageme/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"chowRuiYan":1,"Tianqi-Zhu":5,"-":14}},{"path":"src/test/java/manageme/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalManageMe.getTypicalManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    private Model model \u003d new ModelManager(getTypicalManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"chowRuiYan":2,"Tianqi-Zhu":11,"-":70}},{"path":"src/test/java/manageme/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"chowRuiYan":1,"Tianqi-Zhu":5,"-":14}},{"path":"src/test/java/manageme/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalManageMe.getTypicalManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"        model \u003d new ModelManager(getTypicalManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"        expectedModel \u003d new ModelManager(model.getManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"chowRuiYan":2,"Tianqi-Zhu":9,"-":28}},{"path":"src/test/java/manageme/logic/commands/calendar/CalendarCommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.calendar;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"public class CalendarCommandResultTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"    public void getFeedbackToSystem_validCalendarCommandResult_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"        CalendarCommandResult calendarCommandResult \u003d new CalendarCommandResult(\"feedback\", \"feedbackToSystem\");","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(\"feedbackToSystem\", calendarCommandResult.getFeedbackToSystem());","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    public void isCalendarCommand_validCalendarCommandResult_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"        CalendarCommandResult calendarCommandResult \u003d new CalendarCommandResult(\"feedback\", \"feedbackToSystem\");","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(true, calendarCommandResult.isCalendarCommand());","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"        CalendarCommandResult calendarCommandResult \u003d new CalendarCommandResult(\"feedback\", \"feedbackToSystem\");","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(calendarCommandResult.equals(new CalendarCommandResult(\"feedback\", \"feedbackToSystem\")));","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(calendarCommandResult.equals(calendarCommandResult));","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"        assertFalse(calendarCommandResult.equals(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        assertFalse(calendarCommandResult.equals(0.5f));","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"        assertFalse(calendarCommandResult.equals(new CalendarCommandResult(\"different\", \"feedbackToSystem\")));","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"        // different feedbackToSystem value -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"        assertFalse(calendarCommandResult.equals(new CalendarCommandResult(\"feedback\", \"different\")));","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"chowRuiYan":44,"Tianqi-Zhu":1}},{"path":"src/test/java/manageme/logic/commands/calendar/NextMonthCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.calendar;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.calendar.NextMonthCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.calendar.NextMonthCommand.SHOWING_NEXT_MONTH;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"public class NextMonthCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    public void execute_nextMonth_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"        CalendarCommandResult calendarCommandResult \u003d new CalendarCommandResult(SHOWING_NEXT_MONTH, COMMAND_WORD);","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"        assertCommandSuccess(new NextMonthCommand(), model, calendarCommandResult, expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"chowRuiYan":15,"Tianqi-Zhu":6}},{"path":"src/test/java/manageme/logic/commands/calendar/PreviousMonthCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.calendar;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.calendar.PreviousMonthCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.calendar.PreviousMonthCommand.SHOWING_PREVIOUS_MONTH;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"public class PreviousMonthCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    public void execute_prevMonth_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"        CalendarCommandResult calendarCommandResult \u003d new CalendarCommandResult(SHOWING_PREVIOUS_MONTH, COMMAND_WORD);","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"        assertCommandSuccess(new PreviousMonthCommand(), model, calendarCommandResult, expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"chowRuiYan":15,"Tianqi-Zhu":6}},{"path":"src/test/java/manageme/logic/commands/calendar/ReadDayCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.calendar;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.calendar.ReadDayCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.calendar.ReadDayCommand.SHOWING_TASKS_IN_DAY;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"public class ReadDayCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    public void execute_readDay_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"        LocalDate dummyDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"        CalendarCommandResult calendarCommandResult \u003d new CalendarCommandResult(","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"                String.format(SHOWING_TASKS_IN_DAY, dummyDate), COMMAND_WORD + \" \" + dummyDate);","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"        assertCommandSuccess(new ReadDayCommand(dummyDate), model, calendarCommandResult, expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"        ReadDayCommand readDayCommand \u003d new ReadDayCommand(LocalDate.now());","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"        // same object -\u003e return true","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(readDayCommand.equals(readDayCommand));","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        // same value -\u003e return true","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(readDayCommand.equals(new ReadDayCommand(LocalDate.now())));","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"        // null -\u003e return false","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"        assertFalse(readDayCommand.equals(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"        // different type -\u003e return false","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"        assertFalse(readDayCommand.equals(new NextMonthCommand()));","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"        // different value -\u003e return false","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"        assertFalse(readDayCommand.equals(new ReadDayCommand(LocalDate.now().plusDays(1))));","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"chowRuiYan":40,"Tianqi-Zhu":8}},{"path":"src/test/java/manageme/logic/commands/module/AddModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.GuiSettings;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.ModuleBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"public class AddModuleCommandTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void constructor_nullModule_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddModuleCommand(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void execute_moduleAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"        AddModuleCommandTest.ModelStubAcceptingModuleAdded modelStub \u003d new AddModuleCommandTest","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"                .ModelStubAcceptingModuleAdded();","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module validModule \u003d new ModuleBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"        CommandResult commandResult \u003d new AddModuleCommand(validModule).execute(modelStub);","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(String.format(AddModuleCommand.MESSAGE_SUCCESS, validModule), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(Arrays.asList(validModule), modelStub.modulesAdded);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void execute_duplicateModule_throwsCommandException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module validModule \u003d new ModuleBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"Tianqi-Zhu"},"content":"        AddModuleCommand addCommand \u003d new AddModuleCommand(validModule);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"Tianqi-Zhu"},"content":"        AddModuleCommandTest.ModelStub modelStub \u003d new AddModuleCommandTest.ModelStubWithModule(validModule);","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(CommandException.class, AddModuleCommand.MESSAGE_DUPLICATE_MODULE, () -\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"Tianqi-Zhu"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module cs110 \u003d new ModuleBuilder().withName(\"CS110\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module cs220 \u003d new ModuleBuilder().withName(\"CS220\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"Tianqi-Zhu"},"content":"        AddModuleCommand addCs110Command \u003d new AddModuleCommand(cs110);","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"Tianqi-Zhu"},"content":"        AddModuleCommand addCs220Command \u003d new AddModuleCommand(cs220);","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"Tianqi-Zhu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(addCs110Command.equals(addCs110Command));","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Tianqi-Zhu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"        AddModuleCommand addCs110CommandCopy \u003d new AddModuleCommand(cs110);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(addCs110Command.equals(addCs110CommandCopy));","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(addCs110Command.equals(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"Tianqi-Zhu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(addCs110Command.equals(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different module -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(addCs110Command.equals(addCs220Command));","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"Tianqi-Zhu"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"Tianqi-Zhu"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"Tianqi-Zhu"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"Tianqi-Zhu"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"Tianqi-Zhu"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"Tianqi-Zhu"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"chowRuiYan"},"content":"        public Path getManageMeFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"chowRuiYan"},"content":"        public void setManageMeFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"Tianqi-Zhu"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"chowRuiYan"},"content":"        public void setManageMe(ReadOnlyManageMe newData) {","lastModifiedDate":"2021-10-15"},{"lineNumber":122,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"chowRuiYan"},"content":"        public ReadOnlyManageMe getManageMe() {","lastModifiedDate":"2021-10-15"},{"lineNumber":127,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"Tianqi-Zhu"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"Tianqi-Zhu"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"Tianqi-Zhu"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"Tianqi-Zhu"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"Tianqi-Zhu"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"Tianqi-Zhu"},"content":"        public boolean hasModule(Module module) {","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"Tianqi-Zhu"},"content":"        public void deleteModule(Module target) {","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"Tianqi-Zhu"},"content":"        public void addModule(Module module) {","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"Tianqi-Zhu"},"content":"        public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"Tianqi-Zhu"},"content":"        public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"Tianqi-Zhu"},"content":"        public void updateFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"Tianqi-Zhu"},"content":"        public ObservableList\u003cModule\u003e getReadModuleList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"Tianqi-Zhu"},"content":"        public void updateReadModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"Tianqi-Zhu"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"Tianqi-Zhu"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":205,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"Tianqi-Zhu"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"Tianqi-Zhu"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":216,"author":{"gitId":"Tianqi-Zhu"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":221,"author":{"gitId":"chowRuiYan"},"content":"        public ObservableList\u003cTask\u003e getUnfilteredTaskList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":222,"author":{"gitId":"chowRuiYan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":223,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":224,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":225,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":226,"author":{"gitId":"Tianqi-Zhu"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"Tianqi-Zhu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":231,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":232,"author":{"gitId":"Tianqi-Zhu"},"content":"     * A Model stub that contains a single module.","lastModifiedDate":"2021-10-10"},{"lineNumber":233,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":234,"author":{"gitId":"Tianqi-Zhu"},"content":"    private class ModelStubWithModule extends AddModuleCommandTest.ModelStub {","lastModifiedDate":"2021-10-10"},{"lineNumber":235,"author":{"gitId":"Tianqi-Zhu"},"content":"        private final Module module;","lastModifiedDate":"2021-10-10"},{"lineNumber":236,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":237,"author":{"gitId":"Tianqi-Zhu"},"content":"        ModelStubWithModule(Module module) {","lastModifiedDate":"2021-10-10"},{"lineNumber":238,"author":{"gitId":"Tianqi-Zhu"},"content":"            requireNonNull(module);","lastModifiedDate":"2021-10-10"},{"lineNumber":239,"author":{"gitId":"Tianqi-Zhu"},"content":"            this.module \u003d module;","lastModifiedDate":"2021-10-10"},{"lineNumber":240,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":241,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":242,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":243,"author":{"gitId":"Tianqi-Zhu"},"content":"        public boolean hasModule(Module module) {","lastModifiedDate":"2021-10-10"},{"lineNumber":244,"author":{"gitId":"Tianqi-Zhu"},"content":"            requireNonNull(module);","lastModifiedDate":"2021-10-10"},{"lineNumber":245,"author":{"gitId":"Tianqi-Zhu"},"content":"            return this.module.isSameModule(module);","lastModifiedDate":"2021-10-10"},{"lineNumber":246,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":247,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":248,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":249,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":250,"author":{"gitId":"Tianqi-Zhu"},"content":"     * A Model stub that always accept the module being added.","lastModifiedDate":"2021-10-10"},{"lineNumber":251,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":252,"author":{"gitId":"Tianqi-Zhu"},"content":"    private class ModelStubAcceptingModuleAdded extends AddModuleCommandTest.ModelStub {","lastModifiedDate":"2021-10-10"},{"lineNumber":253,"author":{"gitId":"Tianqi-Zhu"},"content":"        final ArrayList\u003cModule\u003e modulesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":254,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":255,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":256,"author":{"gitId":"Tianqi-Zhu"},"content":"        public boolean hasModule(Module module) {","lastModifiedDate":"2021-10-10"},{"lineNumber":257,"author":{"gitId":"Tianqi-Zhu"},"content":"            requireNonNull(module);","lastModifiedDate":"2021-10-10"},{"lineNumber":258,"author":{"gitId":"Tianqi-Zhu"},"content":"            return modulesAdded.stream().anyMatch(module::isSameModule);","lastModifiedDate":"2021-10-10"},{"lineNumber":259,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":260,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":261,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":262,"author":{"gitId":"Tianqi-Zhu"},"content":"        public void addModule(Module module) {","lastModifiedDate":"2021-10-10"},{"lineNumber":263,"author":{"gitId":"Tianqi-Zhu"},"content":"            requireNonNull(module);","lastModifiedDate":"2021-10-10"},{"lineNumber":264,"author":{"gitId":"Tianqi-Zhu"},"content":"            modulesAdded.add(module);","lastModifiedDate":"2021-10-10"},{"lineNumber":265,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":266,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":267,"author":{"gitId":"Tianqi-Zhu"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":268,"author":{"gitId":"chowRuiYan"},"content":"        public ReadOnlyManageMe getManageMe() {","lastModifiedDate":"2021-10-15"},{"lineNumber":269,"author":{"gitId":"chowRuiYan"},"content":"            return new ManageMe();","lastModifiedDate":"2021-10-15"},{"lineNumber":270,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":271,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":272,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"chowRuiYan":11,"Tianqi-Zhu":261}},{"path":"src/test/java/manageme/logic/commands/module/DeleteModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalManageMe.getTypicalManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"public class DeleteModuleCommandTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    private Model model \u003d new ModelManager(getTypicalManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module moduleToDelete \u003d model.getFilteredModuleList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"        DeleteModuleCommand deleteCommand \u003d new DeleteModuleCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"        String expectedMessage \u003d String.format(DeleteModuleCommand.MESSAGE_DELETE_MODULE_SUCCESS, moduleToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"        expectedModel.deleteModule(moduleToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredModuleList().size() + 1);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"        DeleteModuleCommand deleteCommand \u003d new DeleteModuleCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"        DeleteModuleCommand deleteFirstCommand \u003d new DeleteModuleCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"        DeleteModuleCommand deleteSecondCommand \u003d new DeleteModuleCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Tianqi-Zhu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Tianqi-Zhu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"        DeleteModuleCommand deleteFirstCommandCopy \u003d new DeleteModuleCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Tianqi-Zhu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different module -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Tianqi-Zhu"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Tianqi-Zhu"},"content":"    private void showNoModule(Model model) {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Tianqi-Zhu"},"content":"        model.updateFilteredModuleList(p -\u003e false);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(model.getFilteredModuleList().isEmpty());","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"chowRuiYan":2,"Tianqi-Zhu":72}},{"path":"src/test/java/manageme/logic/commands/module/EditModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.DESC_CS2100;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.DESC_CS2103;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_LINK_ZOOM;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_MODNAME_CS2100;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_MODNAME_CS2103;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.showModuleAtIndex;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"JinxinZhao315"},"content":"import static manageme.testutil.TypicalModules.getTypicalManageMe;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.EditModuleDescriptorBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.ModuleBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"JinxinZhao315"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditModuleCommand.","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"public class EditModuleCommandTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"JinxinZhao315"},"content":"    private Model model \u003d new ModelManager(getTypicalManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"JinxinZhao315"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"JinxinZhao315"},"content":"        Module editedModule \u003d new ModuleBuilder().build();","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand.EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder(editedModule).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditModuleCommand editModuleCommand \u003d new EditModuleCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"JinxinZhao315"},"content":"        String expectedMessage \u003d String.format(EditModuleCommand.MESSAGE_EDIT_MODULE_SUCCESS, editedModule);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"        Model expectedModel \u003d new ModelManager(new ManageMe(model.getManageMe()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"JinxinZhao315"},"content":"        expectedModel.setModule(model.getFilteredModuleList().get(0), editedModule);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"JinxinZhao315"},"content":"        assertCommandSuccess(editModuleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"JinxinZhao315"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"JinxinZhao315"},"content":"        Index indexLastModule \u003d Index.fromOneBased(model.getFilteredModuleList().size());","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"JinxinZhao315"},"content":"        Module lastModule \u003d model.getFilteredModuleList().get(indexLastModule.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"JinxinZhao315"},"content":"        ModuleBuilder moduleInList \u003d new ModuleBuilder(lastModule);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"JinxinZhao315"},"content":"        Module editedModule \u003d moduleInList.withName(VALID_MODNAME_CS2100).withLink(VALID_LINK_ZOOM).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand.EditModuleDescriptor descriptor \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"JinxinZhao315"},"content":"                new EditModuleDescriptorBuilder().withName(VALID_MODNAME_CS2100)","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"JinxinZhao315"},"content":"                .withLink(VALID_LINK_ZOOM).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand editModuleCommand \u003d new EditModuleCommand(indexLastModule, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"JinxinZhao315"},"content":"        String expectedMessage \u003d String.format(EditModuleCommand.MESSAGE_EDIT_MODULE_SUCCESS, editedModule);","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"        Model expectedModel \u003d new ModelManager(new ManageMe(model.getManageMe()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"JinxinZhao315"},"content":"        expectedModel.setModule(lastModule, editedModule);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"JinxinZhao315"},"content":"        assertCommandSuccess(editModuleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"JinxinZhao315"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand editModuleCommand \u003d new EditModuleCommand(","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Tianqi-Zhu"},"content":"                INDEX_FIRST, new EditModuleCommand.EditModuleDescriptor());","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module editedModule \u003d model.getFilteredModuleList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"JinxinZhao315"},"content":"        String expectedMessage \u003d String.format(editModuleCommand.MESSAGE_EDIT_MODULE_SUCCESS, editedModule);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"        Model expectedModel \u003d new ModelManager(new ManageMe(model.getManageMe()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"JinxinZhao315"},"content":"        assertCommandSuccess(editModuleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"JinxinZhao315"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"Tianqi-Zhu"},"content":"        showModuleAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module moduleInFilteredList \u003d model.getFilteredModuleList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"JinxinZhao315"},"content":"        Module editedModule \u003d new ModuleBuilder(moduleInFilteredList).withName(VALID_MODNAME_CS2103).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditModuleCommand editModuleCommand \u003d new EditModuleCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"JinxinZhao315"},"content":"                new EditModuleDescriptorBuilder().withName(VALID_MODNAME_CS2103).build());","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"JinxinZhao315"},"content":"        String expectedMessage \u003d String.format(EditModuleCommand.MESSAGE_EDIT_MODULE_SUCCESS, editedModule);","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"chowRuiYan"},"content":"        Model expectedModel \u003d new ModelManager(new ManageMe(model.getManageMe()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"JinxinZhao315"},"content":"        expectedModel.setModule(model.getFilteredModuleList().get(0), editedModule);","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"JinxinZhao315"},"content":"        assertCommandSuccess(editModuleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"JinxinZhao315"},"content":"    public void execute_duplicateModuleUnfilteredList_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module firstModule \u003d model.getFilteredModuleList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand.EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder(firstModule).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditModuleCommand editModuleCommand \u003d new EditModuleCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"JinxinZhao315"},"content":"        assertCommandFailure(editModuleCommand, model, EditModuleCommand.MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"JinxinZhao315"},"content":"    public void execute_duplicateModuleFilteredList_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"Tianqi-Zhu"},"content":"        showModuleAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"JinxinZhao315"},"content":"        // edit module  in filtered list into a duplicate","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module moduleInList \u003d model.getManageMe().getModuleList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditModuleCommand editModuleCommand \u003d new EditModuleCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"JinxinZhao315"},"content":"                new EditModuleDescriptorBuilder(moduleInList).build());","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"JinxinZhao315"},"content":"        assertCommandFailure(editModuleCommand, model, EditModuleCommand.MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"JinxinZhao315"},"content":"    public void execute_invalidModuleIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"JinxinZhao315"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredModuleList().size() + 1);","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand.EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"JinxinZhao315"},"content":"                .withName(VALID_MODNAME_CS2100).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand editModuleCommand \u003d new EditModuleCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"JinxinZhao315"},"content":"        assertCommandFailure(editModuleCommand, model, Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"JinxinZhao315"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"JinxinZhao315"},"content":"     * but smaller than size of ManageMe","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"JinxinZhao315"},"content":"    public void execute_invalidModuleIndexFilteredList_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"Tianqi-Zhu"},"content":"        showModuleAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"JinxinZhao315"},"content":"        // ensures that outOfBoundIndex is still in bounds of ManageMe list","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getManageMe().getModuleList().size());","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand editModuleCommand \u003d new EditModuleCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"JinxinZhao315"},"content":"                new EditModuleDescriptorBuilder().withName(VALID_MODNAME_CS2100).build());","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"JinxinZhao315"},"content":"        assertCommandFailure(editModuleCommand, model, Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"JinxinZhao315"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"Tianqi-Zhu"},"content":"        final EditModuleCommand standardCommand \u003d new EditModuleCommand(INDEX_FIRST, DESC_CS2100);","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"JinxinZhao315"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand.EditModuleDescriptor copyDescriptor \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"JinxinZhao315"},"content":"                new EditModuleCommand.EditModuleDescriptor(DESC_CS2100);","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditModuleCommand commandWithSameValues \u003d new EditModuleCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"JinxinZhao315"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"JinxinZhao315"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"JinxinZhao315"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"JinxinZhao315"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"JinxinZhao315"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"JinxinZhao315"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"JinxinZhao315"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"JinxinZhao315"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(standardCommand.equals(new EditModuleCommand(INDEX_SECOND, DESC_CS2100)));","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"JinxinZhao315"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(standardCommand.equals(new EditModuleCommand(INDEX_FIRST, DESC_CS2103)));","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"JinxinZhao315":127,"chowRuiYan":5,"Tianqi-Zhu":43}},{"path":"src/test/java/manageme/logic/commands/module/FindModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JinxinZhao315"},"content":"package manageme.logic.commands.module;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"JinxinZhao315"},"content":"import static manageme.commons.core.Messages.MESSAGE_MODULES_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"JinxinZhao315"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"JinxinZhao315"},"content":"import static manageme.testutil.TypicalManageMe.getTypicalManageMe;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"JinxinZhao315"},"content":"import static manageme.testutil.TypicalModules.MODULE_A;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"JinxinZhao315"},"content":"import static manageme.testutil.TypicalModules.MODULE_B;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"JinxinZhao315"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"JinxinZhao315"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"JinxinZhao315"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"JinxinZhao315"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"JinxinZhao315"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.model.module.ModNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"JinxinZhao315"},"content":" * Contains integration tests (interaction with the Model) for {@code FindModuleCommand}.","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"JinxinZhao315"},"content":"public class FindModuleCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"JinxinZhao315"},"content":"    private Model model \u003d new ModelManager(getTypicalManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"JinxinZhao315"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"JinxinZhao315"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"        ModNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":"                new ModNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"JinxinZhao315"},"content":"        ModNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"JinxinZhao315"},"content":"                new ModNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"JinxinZhao315"},"content":"        FindModuleCommand findFirstCommand \u003d new FindModuleCommand(firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"JinxinZhao315"},"content":"        FindModuleCommand findSecondCommand \u003d new FindModuleCommand(secondPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"JinxinZhao315"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"JinxinZhao315"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"JinxinZhao315"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"JinxinZhao315"},"content":"        FindModuleCommand findFirstCommandCopy \u003d new FindModuleCommand(firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"JinxinZhao315"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"JinxinZhao315"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"JinxinZhao315"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"JinxinZhao315"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"JinxinZhao315"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"JinxinZhao315"},"content":"        // different module -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"JinxinZhao315"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"JinxinZhao315"},"content":"    public void execute_zeroKeywords_noModuleFound() {","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"JinxinZhao315"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MODULES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"JinxinZhao315"},"content":"        ModNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"JinxinZhao315"},"content":"        FindModuleCommand command \u003d new FindModuleCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"JinxinZhao315"},"content":"        expectedModel.updateFilteredModuleList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"JinxinZhao315"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"JinxinZhao315"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredModuleList());","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"JinxinZhao315"},"content":"    public void execute_multipleKeywords_multipleModulesFound() {","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"JinxinZhao315"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MODULES_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"JinxinZhao315"},"content":"        ModNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"CS111 CS222\");","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"JinxinZhao315"},"content":"        FindModuleCommand command \u003d new FindModuleCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"JinxinZhao315"},"content":"        expectedModel.updateFilteredModuleList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"JinxinZhao315"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"JinxinZhao315"},"content":"        assertEquals(Arrays.asList(MODULE_A, MODULE_B), model.getFilteredModuleList());","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"JinxinZhao315"},"content":"     * Parses {@code userInput} into a {@code ModNameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"JinxinZhao315"},"content":"    private ModNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"JinxinZhao315"},"content":"        return new ModNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"JinxinZhao315":82}},{"path":"src/test/java/manageme/logic/commands/module/ListModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JinxinZhao315"},"content":"package manageme.logic.commands.module;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"JinxinZhao315"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"JinxinZhao315"},"content":"import static manageme.logic.commands.CommandTestUtil.showModuleAtIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"JinxinZhao315"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"JinxinZhao315"},"content":"import static manageme.testutil.TypicalManageMe.getTypicalManageMe;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"JinxinZhao315"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"JinxinZhao315"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"public class ListModuleCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"    private Model model;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"        model \u003d new ModelManager(getTypicalManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"JinxinZhao315"},"content":"        expectedModel \u003d new ModelManager(model.getManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"JinxinZhao315"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"        assertCommandSuccess(new ListModuleCommand(), model, ListModuleCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"JinxinZhao315"},"content":"        showModuleAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"JinxinZhao315"},"content":"        assertCommandSuccess(new ListModuleCommand(), model, ListModuleCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"JinxinZhao315":36}},{"path":"src/test/java/manageme/logic/commands/module/ModuleCommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"public class ModuleCommandTestUtil {","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String VALID_NAME_MODULE_A \u003d \"CS111\";","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String VALID_NAME_MODULE_B \u003d \"CS222\";","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String VALID_LINK_MODULE_A \u003d \"https://www.google.com\";","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String VALID_LINK_MODULE_B \u003d \"https://www.github.com\";","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String NAME_DESC_MODULE_A \u003d \" \" + PREFIX_NAME + VALID_NAME_MODULE_A;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String NAME_DESC_MODULE_B \u003d \" \" + PREFIX_NAME + VALID_NAME_MODULE_B;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String LINK_DESC_MODULE_A \u003d \" \" + PREFIX_LINK + VALID_LINK_MODULE_A;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String LINK_DESC_MODULE_B \u003d \" \" + PREFIX_LINK + VALID_LINK_MODULE_B;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Tianqi-Zhu":16}},{"path":"src/test/java/manageme/logic/commands/module/ReadModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalManageMe.getTypicalManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":" * {@code ReadModuleCommand}.","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"public class ReadModuleCommandTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"    private Model model \u003d new ModelManager(getTypicalManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module moduleToRead \u003d model.getReadModuleList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"        ReadModuleCommand readModuleCommand \u003d new ReadModuleCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(readModuleCommand.MESSAGE_SUCCESS, false, false, true);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"        expectedModel.updateReadModuleList(module -\u003e module.equals(moduleToRead));","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"        assertCommandSuccess(readModuleCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"        ReadModuleCommand readModuleCommand \u003d new ReadModuleCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"        assertCommandFailure(readModuleCommand, model, Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Tianqi-Zhu"},"content":"        ReadModuleCommand readModuleFirstCommand \u003d new ReadModuleCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"        ReadModuleCommand readModuleSecondCommand \u003d new ReadModuleCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"chowRuiYan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(readModuleFirstCommand.equals(readModuleFirstCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Tianqi-Zhu"},"content":"        ReadModuleCommand deleteFirstCommandCopy \u003d new ReadModuleCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(readModuleFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"chowRuiYan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"chowRuiYan"},"content":"        assertFalse(readModuleFirstCommand.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"        assertFalse(readModuleFirstCommand.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"        // different module -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"chowRuiYan"},"content":"        assertFalse(readModuleFirstCommand.equals(readModuleSecondCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"chowRuiYan":48,"Tianqi-Zhu":23}},{"path":"src/test/java/manageme/logic/commands/task/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.GuiSettings;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TaskBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"        AddTaskCommandTest.ModelStubAcceptingTaskAdded modelStub \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"                new AddTaskCommandTest.ModelStubAcceptingTaskAdded();","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"        CommandResult commandResult \u003d new AddTaskCommand(validTask).execute(modelStub);","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"        assertEquals(String.format(AddTaskCommand.MESSAGE_SUCCESS, validTask),","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(validTask);","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"        AddTaskCommandTest.ModelStub modelStub \u003d new AddTaskCommandTest.ModelStubWithTask(validTask);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(CommandException.class, AddTaskCommand.MESSAGE_DUPLICATE_TASK, ()","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"markuslim24"},"content":"            -\u003e addTaskCommand.execute(modelStub));","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"markuslim24"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"markuslim24"},"content":"        Task taskA \u003d new TaskBuilder().withName(\"TaskA\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"markuslim24"},"content":"        Task taskB \u003d new TaskBuilder().withName(\"TaskB\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"markuslim24"},"content":"        AddTaskCommand addACommand \u003d new AddTaskCommand(taskA);","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"markuslim24"},"content":"        AddTaskCommand addBCommand \u003d new AddTaskCommand(taskB);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"markuslim24"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"markuslim24"},"content":"        assertTrue(addACommand.equals(addACommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"markuslim24"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"markuslim24"},"content":"        AddTaskCommand addACommandCopy \u003d new AddTaskCommand(taskA);","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"markuslim24"},"content":"        assertTrue(addACommand.equals(addACommandCopy));","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"markuslim24"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"markuslim24"},"content":"        assertFalse(addACommand.equals(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"markuslim24"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"markuslim24"},"content":"        assertFalse(addACommand.equals(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"markuslim24"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"markuslim24"},"content":"        assertFalse(addACommand.equals(addBCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"markuslim24"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"markuslim24"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"markuslim24"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"markuslim24"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"markuslim24"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"markuslim24"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"chowRuiYan"},"content":"        public Path getManageMeFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"chowRuiYan"},"content":"        public void setManageMeFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"markuslim24"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"chowRuiYan"},"content":"        public void setManageMe(ReadOnlyManageMe newData) {","lastModifiedDate":"2021-10-15"},{"lineNumber":122,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"chowRuiYan"},"content":"        public ReadOnlyManageMe getManageMe() {","lastModifiedDate":"2021-10-15"},{"lineNumber":127,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"markuslim24"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"markuslim24"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"markuslim24"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"markuslim24"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"markuslim24"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"markuslim24"},"content":"        public boolean hasModule(Module module) {","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"markuslim24"},"content":"        public void deleteModule(Module target) {","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"markuslim24"},"content":"        public void addModule(Module module) {","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"markuslim24"},"content":"        public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"markuslim24"},"content":"        public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"markuslim24"},"content":"        public void updateFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"markuslim24"},"content":"        public ObservableList\u003cModule\u003e getReadModuleList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"markuslim24"},"content":"        public void updateReadModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"markuslim24"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"markuslim24"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":205,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"markuslim24"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"markuslim24"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":216,"author":{"gitId":"markuslim24"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":221,"author":{"gitId":"chowRuiYan"},"content":"        public ObservableList\u003cTask\u003e getUnfilteredTaskList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":222,"author":{"gitId":"chowRuiYan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":223,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":224,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":225,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":226,"author":{"gitId":"markuslim24"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":231,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":232,"author":{"gitId":"markuslim24"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2021-10-10"},{"lineNumber":233,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":234,"author":{"gitId":"markuslim24"},"content":"    private class ModelStubWithTask extends AddTaskCommandTest.ModelStub {","lastModifiedDate":"2021-10-10"},{"lineNumber":235,"author":{"gitId":"markuslim24"},"content":"        private final Task task;","lastModifiedDate":"2021-10-10"},{"lineNumber":236,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":237,"author":{"gitId":"markuslim24"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2021-10-10"},{"lineNumber":238,"author":{"gitId":"markuslim24"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-10"},{"lineNumber":239,"author":{"gitId":"markuslim24"},"content":"            this.task \u003d task;","lastModifiedDate":"2021-10-10"},{"lineNumber":240,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":241,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":242,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":243,"author":{"gitId":"markuslim24"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-10"},{"lineNumber":244,"author":{"gitId":"markuslim24"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-10"},{"lineNumber":245,"author":{"gitId":"markuslim24"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2021-10-10"},{"lineNumber":246,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":247,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":248,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":249,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":250,"author":{"gitId":"markuslim24"},"content":"     * A Model stub that always accept the task being added.","lastModifiedDate":"2021-10-10"},{"lineNumber":251,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":252,"author":{"gitId":"markuslim24"},"content":"    private class ModelStubAcceptingTaskAdded extends AddTaskCommandTest.ModelStub {","lastModifiedDate":"2021-10-10"},{"lineNumber":253,"author":{"gitId":"markuslim24"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":254,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":255,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":256,"author":{"gitId":"markuslim24"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-10"},{"lineNumber":257,"author":{"gitId":"markuslim24"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-10"},{"lineNumber":258,"author":{"gitId":"markuslim24"},"content":"            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2021-10-10"},{"lineNumber":259,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":260,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":261,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":262,"author":{"gitId":"markuslim24"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-10-10"},{"lineNumber":263,"author":{"gitId":"markuslim24"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-10"},{"lineNumber":264,"author":{"gitId":"markuslim24"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2021-10-10"},{"lineNumber":265,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":266,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":267,"author":{"gitId":"markuslim24"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":268,"author":{"gitId":"chowRuiYan"},"content":"        public ReadOnlyManageMe getManageMe() {","lastModifiedDate":"2021-10-15"},{"lineNumber":269,"author":{"gitId":"chowRuiYan"},"content":"            return new ManageMe();","lastModifiedDate":"2021-10-15"},{"lineNumber":270,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":271,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":272,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"markuslim24":246,"chowRuiYan":11,"Tianqi-Zhu":15}},{"path":"src/test/java/manageme/logic/commands/task/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.task.TaskCommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":" * {@code DeleteTaskCommand}.","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Tianqi-Zhu"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Tianqi-Zhu"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"Tianqi-Zhu"},"content":"        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"        Model expectedModel \u003d new ModelManager(model.getManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getManageMe().getTaskList().size());","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"zhangchengchuan"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"zhangchengchuan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"Tianqi-Zhu"},"content":"        DeleteTaskCommand deleteFirstCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"Tianqi-Zhu"},"content":"        DeleteTaskCommand deleteSecondCommand \u003d new DeleteTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"zhangchengchuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"zhangchengchuan"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"zhangchengchuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"Tianqi-Zhu"},"content":"        DeleteTaskCommand deleteFirstCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"zhangchengchuan"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"zhangchengchuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"zhangchengchuan"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"zhangchengchuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"zhangchengchuan"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"zhangchengchuan"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"zhangchengchuan"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"zhangchengchuan"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"zhangchengchuan"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"zhangchengchuan"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"zhangchengchuan"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"zhangchengchuan":80,"chowRuiYan":3,"Tianqi-Zhu":26}},{"path":"src/test/java/manageme/logic/commands/task/EditTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.task.TaskCommandTestUtil.DESC_A;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.task.TaskCommandTestUtil.DESC_B;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.task.TaskCommandTestUtil.VALID_DESCRIPTION_B;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.task.TaskCommandTestUtil.VALID_MODULE_B;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.task.TaskCommandTestUtil.VALID_NAME_B;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.task.TaskCommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalManageMe.getTypicalManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TaskBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditTaskCommand.","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"public class EditTaskCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"    private Model model \u003d new ModelManager(getTypicalManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"        Task editedTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"                new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditTaskCommand editCommand \u003d new EditTaskCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"        Model expectedModel \u003d new ModelManager(new ManageMe(model.getManageMe()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"markuslim24"},"content":"        Index indexLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"markuslim24"},"content":"        Task lastTask \u003d model.getFilteredTaskList().get(indexLastTask.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"        TaskBuilder taskInList \u003d new TaskBuilder(lastTask);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Tianqi-Zhu"},"content":"        Task editedTask \u003d taskInList.withName(VALID_NAME_B).withDescription(VALID_DESCRIPTION_B)","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withModule(VALID_MODULE_B).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"markuslim24"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Tianqi-Zhu"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_NAME_B)","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withDescription(VALID_DESCRIPTION_B).withModule(VALID_MODULE_B).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"markuslim24"},"content":"        EditTaskCommand editCommand \u003d new EditTaskCommand(indexLastTask, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"markuslim24"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"        Model expectedModel \u003d new ModelManager(new ManageMe(model.getManageMe()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"markuslim24"},"content":"        expectedModel.setTask(lastTask, editedTask);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"markuslim24"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"markuslim24"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditTaskCommand editCommand \u003d new EditTaskCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"markuslim24"},"content":"                new EditTaskCommand.EditTaskDescriptor());","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"Tianqi-Zhu"},"content":"        Task editedTask \u003d model.getFilteredTaskList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"markuslim24"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"        Model expectedModel \u003d new ModelManager(new ManageMe(model.getManageMe()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"markuslim24"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"markuslim24"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"Tianqi-Zhu"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"Tianqi-Zhu"},"content":"        Task taskInFilteredList \u003d model.getFilteredTaskList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"Tianqi-Zhu"},"content":"        Task editedTask \u003d new TaskBuilder(taskInFilteredList).withName(VALID_NAME_B).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditTaskCommand editCommand \u003d new EditTaskCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"Tianqi-Zhu"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_NAME_B).build());","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"markuslim24"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"chowRuiYan"},"content":"        Model expectedModel \u003d new ModelManager(new ManageMe(model.getManageMe()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"markuslim24"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"markuslim24"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"markuslim24"},"content":"    public void execute_duplicateTaskUnfilteredList_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"Tianqi-Zhu"},"content":"        Task firstTask \u003d model.getFilteredTaskList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"markuslim24"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"markuslim24"},"content":"                new EditTaskDescriptorBuilder(firstTask).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditTaskCommand editCommand \u003d new EditTaskCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"markuslim24"},"content":"        assertCommandFailure(editCommand, model, EditTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"markuslim24"},"content":"    public void execute_invalidTaskIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"markuslim24"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"markuslim24"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"Tianqi-Zhu"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_NAME_B).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"markuslim24"},"content":"        EditTaskCommand editCommand \u003d new EditTaskCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"markuslim24"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"markuslim24"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"markuslim24"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"markuslim24"},"content":"    public void execute_invalidTaskIndexFilteredList_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"Tianqi-Zhu"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"markuslim24"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getManageMe().getTaskList().size());","lastModifiedDate":"2021-10-15"},{"lineNumber":134,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"markuslim24"},"content":"        EditTaskCommand editCommand \u003d new EditTaskCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"Tianqi-Zhu"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_NAME_B).build());","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"markuslim24"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"markuslim24"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"Tianqi-Zhu"},"content":"        final EditTaskCommand standardCommand \u003d new EditTaskCommand(INDEX_FIRST, DESC_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"markuslim24"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditTaskCommand.EditTaskDescriptor copyDescriptor \u003d new EditTaskCommand.EditTaskDescriptor(DESC_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditTaskCommand commandWithSameValues \u003d new EditTaskCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"markuslim24"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"markuslim24"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"markuslim24"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"markuslim24"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"markuslim24"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"markuslim24"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"markuslim24"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"markuslim24"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_SECOND, DESC_A)));","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"markuslim24"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_FIRST, DESC_B)));","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"markuslim24":112,"chowRuiYan":6,"Tianqi-Zhu":47}},{"path":"src/test/java/manageme/logic/commands/task/FindTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package manageme.logic.commands.task;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import static manageme.commons.core.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import static manageme.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import static manageme.testutil.TypicalManageMe.getTypicalManageMe;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import static manageme.testutil.TypicalTasks.TASK_A;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import static manageme.testutil.TypicalTasks.TASK_B;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"import manageme.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":" * Contains integration tests (interaction with the Model) for {@code FindTaskCommand}.","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"public class FindTaskCommandTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    private Model model \u003d new ModelManager(getTypicalManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalManageMe(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"        TaskNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"                new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"        TaskNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"                new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"        FindTaskCommand findFirstCommand \u003d new FindTaskCommand(firstPredicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"        FindTaskCommand findSecondCommand \u003d new FindTaskCommand(secondPredicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"        FindTaskCommand findFirstCommandCopy \u003d new FindTaskCommand(firstPredicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"        // different task-\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"    public void execute_zeroKeywords_noTaskFound() {","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"        TaskNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTaskList());","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"    public void execute_multipleKeywords_multipleTasksFound() {","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"        TaskNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Eat Work\");","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"        assertEquals(Arrays.asList(TASK_A, TASK_B), model.getFilteredTaskList());","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"zhangchengchuan"},"content":"     * Parses {@code userInput} into a {@code TaskNameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"    private TaskNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"zhangchengchuan"},"content":"        return new TaskNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"zhangchengchuan":82}},{"path":"src/test/java/manageme/logic/commands/task/TaskCommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.commands.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"public class TaskCommandTestUtil {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"    public static final String VALID_NAME_A \u003d \"sleep early\";","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"    public static final String VALID_NAME_B \u003d \"Do work\";","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"    public static final String VALID_DESCRIPTION_A \u003d \"Early lesson tomorrow\";","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"    public static final String VALID_DESCRIPTION_B \u003d \"Finish before Friday 2pm\";","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"    public static final String VALID_MODULE_A \u003d \"CS1231\";","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"    public static final String VALID_MODULE_B \u003d \"MA1521\";","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"    public static final String VALID_START_A \u003d \"2021-10-07T22:00\";","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"    public static final String VALID_START_B \u003d \"2021-10-09T14:00\";","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"    public static final String VALID_END_A \u003d \"2021-10-07T23:59\";","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"    public static final String VALID_END_B \u003d \"2021-10-09T20:00\";","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"    public static final String NAME_DESC_A \u003d \" \" + PREFIX_NAME + VALID_NAME_A;","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"    public static final String NAME_DESC_B \u003d \" \" + PREFIX_NAME + VALID_NAME_B;","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"    public static final String DESCRIPTION_DESC_A \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_A;","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"    public static final String DESCRIPTION_DESC_B \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_B;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"    public static final String MODULE_DESC_A \u003d \" \" + PREFIX_MODULE + VALID_MODULE_A;","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"    public static final String MODULE_DESC_B \u003d \" \" + PREFIX_MODULE + VALID_MODULE_B;","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"    public static final String START_DESC_A \u003d \" \" + PREFIX_START + VALID_START_A;","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"    public static final String START_DESC_B \u003d \" \" + PREFIX_START + VALID_START_B;","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"    public static final String END_DESC_A \u003d \" \" + PREFIX_END + VALID_END_A;","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"    public static final String END_DESC_B \u003d \" \" + PREFIX_END + VALID_END_B;","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"markuslim24"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \" \"; // whitespace not allowed in names","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"markuslim24"},"content":"    public static final String INVALID_DESCRIPTION_DESC \u003d \" \" + PREFIX_DESCRIPTION; //empty string not","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"markuslim24"},"content":"    // allowed for description","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"    public static final String INVALID_MODULE_DESC \u003d \" \" + PREFIX_MODULE; // empty string not allowed for","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"markuslim24"},"content":"    // module","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"markuslim24"},"content":"    public static final String INVALID_START_DESC \u003d \" \" + PREFIX_START + \"haha\"; // unable to parse such a","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"markuslim24"},"content":"    // string into a datetime","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"markuslim24"},"content":"    public static final String INVALID_END_DESC \u003d \" \" + PREFIX_END + \"124012240\"; // unable to parse such a","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"markuslim24"},"content":"    // string into a datetime","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"markuslim24"},"content":"    public static final EditTaskCommand.EditTaskDescriptor DESC_A;","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"markuslim24"},"content":"    public static final EditTaskCommand.EditTaskDescriptor DESC_B;","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"markuslim24"},"content":"    static {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"markuslim24"},"content":"        DESC_A \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_A)","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"markuslim24"},"content":"                .withDescription(VALID_DESCRIPTION_A).withModule(VALID_MODULE_A).withStartDateTime(VALID_START_A)","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"markuslim24"},"content":"                .withEndDateTime(VALID_END_A).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"markuslim24"},"content":"        DESC_B \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_B)","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"markuslim24"},"content":"                .withDescription(VALID_DESCRIPTION_B).withModule(VALID_MODULE_B).withStartDateTime(VALID_START_B)","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"markuslim24"},"content":"                .withEndDateTime(VALID_END_B).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"markuslim24"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"markuslim24"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"markuslim24"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"markuslim24"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"markuslim24"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"markuslim24"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"markuslim24"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"markuslim24"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"markuslim24"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"markuslim24"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"markuslim24"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"markuslim24"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"markuslim24"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"markuslim24"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"markuslim24"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"markuslim24"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"markuslim24"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"markuslim24"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"markuslim24"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"markuslim24"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"markuslim24"},"content":"     * - the ManageMe book, filtered task list and selected task in {@code actualModel} remain","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"markuslim24"},"content":"     * unchanged","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"markuslim24"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"markuslim24"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"markuslim24"},"content":"        // only do so by copying its components.","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"chowRuiYan"},"content":"        ManageMe expectedManageMe \u003d new ManageMe(actualModel.getManageMe());","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"markuslim24"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"markuslim24"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(expectedManageMe, actualModel.getManageMe());","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"markuslim24"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"zhangchengchuan"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"zhangchengchuan"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"zhangchengchuan"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"zhangchengchuan"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"zhangchengchuan"},"content":"        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"zhangchengchuan"},"content":"        //final String[] splitName \u003d task.getName().value.split(\"\\\\s+\");","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"zhangchengchuan"},"content":"        final String[] splitName \u003d task.getName().value.split(\"\\\\s+\");","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"zhangchengchuan"},"content":"        model.updateFilteredTaskList(new TaskNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"zhangchengchuan"},"content":"        assertEquals(1, model.getFilteredTaskList().size());","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"markuslim24":96,"zhangchengchuan":20,"chowRuiYan":2,"Tianqi-Zhu":17}},{"path":"src/test/java/manageme/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.AddCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Address;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Email;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Name;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Phone;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.PersonBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, CommandTestUtil.PREAMBLE_WHITESPACE + CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"Tianqi-Zhu"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(CommandTestUtil.VALID_TAG_FRIEND,","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"Tianqi-Zhu"},"content":"                        CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"Tianqi-Zhu"},"content":"        // zero tags","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"Tianqi-Zhu"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"Tianqi-Zhu"},"content":"                        + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.ADDRESS_DESC_AMY,","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"Tianqi-Zhu"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"Tianqi-Zhu"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"Tianqi-Zhu"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, CommandTestUtil.VALID_NAME_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"Tianqi-Zhu"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"Tianqi-Zhu"},"content":"        // missing phone prefix","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.VALID_PHONE_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"Tianqi-Zhu"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"Tianqi-Zhu"},"content":"        // missing email prefix","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"Tianqi-Zhu"},"content":"                        + CommandTestUtil.VALID_EMAIL_BOB + CommandTestUtil.ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"Tianqi-Zhu"},"content":"        // missing address prefix","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"Tianqi-Zhu"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"Tianqi-Zhu"},"content":"        // all prefixes missing","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, CommandTestUtil.VALID_NAME_BOB + CommandTestUtil.VALID_PHONE_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"Tianqi-Zhu"},"content":"                        + CommandTestUtil.VALID_EMAIL_BOB + CommandTestUtil.VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"Tianqi-Zhu"},"content":"        // invalid name","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, CommandTestUtil.INVALID_NAME_DESC + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"Tianqi-Zhu"},"content":"        // invalid phone","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.INVALID_PHONE_DESC","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"Tianqi-Zhu"},"content":"        // invalid email","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.INVALID_EMAIL_DESC + CommandTestUtil.ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"Tianqi-Zhu"},"content":"        // invalid address","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.INVALID_ADDRESS_DESC","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"Tianqi-Zhu"},"content":"        // invalid tag","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.INVALID_TAG_DESC + CommandTestUtil.VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"Tianqi-Zhu"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, CommandTestUtil.INVALID_NAME_DESC + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"Tianqi-Zhu"},"content":"                        + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"Tianqi-Zhu"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"Tianqi-Zhu"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, CommandTestUtil.PREAMBLE_NON_EMPTY + CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"Tianqi-Zhu"},"content":"                        + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"Tianqi-Zhu"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Tianqi-Zhu":133}},{"path":"src/test/java/manageme/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":149}},{"path":"src/test/java/manageme/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Tianqi-Zhu":3,"-":35}},{"path":"src/test/java/manageme/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Tianqi-Zhu":7,"-":25}},{"path":"src/test/java/manageme/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.EditCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Address;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Email;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Name;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Phone;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, CommandTestUtil.VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"-5\" + CommandTestUtil.NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"0\" + CommandTestUtil.NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.EMAIL_DESC_AMY,","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"Tianqi-Zhu"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"1\" + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.INVALID_PHONE_DESC,","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"Tianqi-Zhu"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"1\" + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"1\" + CommandTestUtil.TAG_DESC_FRIEND + TAG_EMPTY","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_NAME_DESC + CommandTestUtil.INVALID_EMAIL_DESC","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"Tianqi-Zhu"},"content":"                        + CommandTestUtil.VALID_ADDRESS_AMY + CommandTestUtil.VALID_PHONE_AMY,","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"Tianqi-Zhu"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.ADDRESS_DESC_AMY + CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_AMY)","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB).withEmail(CommandTestUtil.VALID_EMAIL_AMY).withAddress(","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"Tianqi-Zhu"},"content":"                        CommandTestUtil.VALID_ADDRESS_AMY)","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND, CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"Tianqi-Zhu"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withEmail(CommandTestUtil.VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"Tianqi-Zhu"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_AMY)","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"Tianqi-Zhu"},"content":"                .build();","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"Tianqi-Zhu"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"Tianqi-Zhu"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(CommandTestUtil.VALID_PHONE_AMY).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"Tianqi-Zhu"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"Tianqi-Zhu"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(CommandTestUtil.VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"Tianqi-Zhu"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"Tianqi-Zhu"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(CommandTestUtil.VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"Tianqi-Zhu"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"Tianqi-Zhu"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":157,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"Tianqi-Zhu"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.ADDRESS_DESC_AMY + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2021-10-17"},{"lineNumber":165,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withEmail(CommandTestUtil.VALID_EMAIL_BOB).withAddress(CommandTestUtil.VALID_ADDRESS_BOB).withTags(","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"Tianqi-Zhu"},"content":"                        CommandTestUtil.VALID_TAG_FRIEND, CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"Tianqi-Zhu"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil","lastModifiedDate":"2021-10-17"},{"lineNumber":178,"author":{"gitId":"Tianqi-Zhu"},"content":"                .PHONE_DESC_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":179,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2021-10-17"},{"lineNumber":180,"author":{"gitId":"Tianqi-Zhu"},"content":"                .build();","lastModifiedDate":"2021-10-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"Tianqi-Zhu"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.INVALID_PHONE_DESC","lastModifiedDate":"2021-10-17"},{"lineNumber":186,"author":{"gitId":"Tianqi-Zhu"},"content":"                + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":187,"author":{"gitId":"Tianqi-Zhu"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(CommandTestUtil.VALID_PHONE_BOB).withEmail(","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"Tianqi-Zhu"},"content":"                        CommandTestUtil.VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-17"},{"lineNumber":189,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withAddress(CommandTestUtil.VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":196,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-10-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Tianqi-Zhu":85,"-":119}},{"path":"src/test/java/manageme/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.FindCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Tianqi-Zhu":33}},{"path":"src/test/java/manageme/logic/parser/ManageMeParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.AddCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.EditCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.FindCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.ListCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.calendar.NextMonthCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.calendar.PreviousMonthCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.calendar.ReadDayCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.logic.commands.module.AddModuleCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.logic.commands.module.DeleteModuleCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.logic.commands.module.EditModuleCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.logic.commands.module.EditModuleCommand.EditModuleDescriptor;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.logic.commands.module.FindModuleCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.logic.commands.module.ListModuleCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.model.module.ModNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.testutil.EditModuleDescriptorBuilder;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.testutil.ModuleBuilder;","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.testutil.ModuleUtil;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.PersonBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.PersonUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"public class ManageMeParserTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"    private final ManageMeParser parser \u003d new ManageMeParser();","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"Tianqi-Zhu"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"Tianqi-Zhu"},"content":"                + INDEX_FIRST.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(new EditCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"JinxinZhao315"},"content":"    public void parseCommand_addModule() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"JinxinZhao315"},"content":"        Module module \u003d new ModuleBuilder().build();","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"JinxinZhao315"},"content":"        AddModuleCommand command \u003d (AddModuleCommand) parser.parseCommand(ModuleUtil.getAddModuleCommand(module));","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"JinxinZhao315"},"content":"        assertEquals(new AddModuleCommand(module), command);","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"JinxinZhao315"},"content":"    public void parseCommand_deleteModule() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"JinxinZhao315"},"content":"        DeleteModuleCommand command \u003d (DeleteModuleCommand) parser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"JinxinZhao315"},"content":"                DeleteModuleCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"JinxinZhao315"},"content":"        assertEquals(new DeleteModuleCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"JinxinZhao315"},"content":"    public void parseCommand_editModule() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"JinxinZhao315"},"content":"        Module module \u003d new ModuleBuilder().build();","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder(module).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand command \u003d (EditModuleCommand) parser.parseCommand(EditModuleCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"JinxinZhao315"},"content":"                + INDEX_FIRST.getOneBased() + \" \" + ModuleUtil.getEditModuleDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"JinxinZhao315"},"content":"        assertEquals(new EditModuleCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"JinxinZhao315"},"content":"    public void parseCommand_findModule() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"JinxinZhao315"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"JinxinZhao315"},"content":"        FindModuleCommand command \u003d (FindModuleCommand) parser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"JinxinZhao315"},"content":"                FindModuleCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"JinxinZhao315"},"content":"        assertEquals(new FindModuleCommand(new ModNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"JinxinZhao315"},"content":"    public void parseCommand_listModule() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"JinxinZhao315"},"content":"        assertTrue(parser.parseCommand(ListModuleCommand.COMMAND_WORD) instanceof ListModuleCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"JinxinZhao315"},"content":"        assertTrue(parser.parseCommand(ListModuleCommand.COMMAND_WORD + \" 3\") instanceof ListModuleCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":156,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":158,"author":{"gitId":"chowRuiYan"},"content":"    public void parseCommand_nextMonth() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(parser.parseCommand(NextMonthCommand.COMMAND_WORD) instanceof NextMonthCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(parser.parseCommand(NextMonthCommand.COMMAND_WORD + \" 3\") instanceof NextMonthCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":161,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":162,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":163,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":164,"author":{"gitId":"chowRuiYan"},"content":"    public void parseCommand_previousMonth() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":165,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(parser.parseCommand(PreviousMonthCommand.COMMAND_WORD) instanceof PreviousMonthCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":166,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(parser.parseCommand(PreviousMonthCommand.COMMAND_WORD + \" 3\") instanceof PreviousMonthCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":167,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":168,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":169,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":170,"author":{"gitId":"chowRuiYan"},"content":"    public void parseCommand_readDay() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":171,"author":{"gitId":"chowRuiYan"},"content":"        ReadDayCommand command \u003d (ReadDayCommand) parser.parseCommand(","lastModifiedDate":"2021-10-16"},{"lineNumber":172,"author":{"gitId":"chowRuiYan"},"content":"                ReadDayCommand.COMMAND_WORD + \" \" + LocalDate.now());","lastModifiedDate":"2021-10-16"},{"lineNumber":173,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(new ReadDayCommand(LocalDate.now()), command);","lastModifiedDate":"2021-10-16"},{"lineNumber":174,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"JinxinZhao315":51,"chowRuiYan":22,"Tianqi-Zhu":29,"-":73}},{"path":"src/test/java/manageme/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Address;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Email;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Name;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Phone;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskDescription;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskModule;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskName;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"    private static final String INVALID_TASKNAME \u003d \"\";","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"    private static final String VALID_TASKNAME \u003d \"Do work\";","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"    private static final String VALID_TASKDESCRIPTION \u003d \"immediately\";","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"    private static final String VALID_TASKMODULE \u003d \"CS2103T\";","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"    private static final String VALID_TASKTIME \u003d \"2021-10-05T11:40\";","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"markuslim24"},"content":"    public void parseTaskName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"markuslim24"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTaskName((String) null));","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"markuslim24"},"content":"    public void parseTaskName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"markuslim24"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTaskName(INVALID_TASKNAME));","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"markuslim24"},"content":"    public void parseTaskName_validValueWithoutWhitespace_returnsTaskName() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"markuslim24"},"content":"        TaskName expectedTaskName \u003d new TaskName(VALID_TASKNAME);","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"markuslim24"},"content":"        assertEquals(expectedTaskName, ParserUtil.parseTaskName(VALID_TASKNAME));","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":223,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":224,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"markuslim24"},"content":"    public void parseTaskName_validValueWithWhitespace_returnsTrimmedTaskName() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":226,"author":{"gitId":"markuslim24"},"content":"        String taskNameWithWhitespace \u003d WHITESPACE + VALID_TASKNAME + WHITESPACE;","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"markuslim24"},"content":"        TaskName expectedTaskName \u003d new TaskName(VALID_TASKNAME);","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"markuslim24"},"content":"        assertEquals(expectedTaskName, ParserUtil.parseTaskName(taskNameWithWhitespace));","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":231,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":232,"author":{"gitId":"markuslim24"},"content":"    public void parseTaskDescription_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":233,"author":{"gitId":"markuslim24"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTaskDescription((String) null));","lastModifiedDate":"2021-10-10"},{"lineNumber":234,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":235,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":236,"author":{"gitId":"markuslim24"},"content":"    public void parseTaskDescription_validValueWithoutWhitespace_returnsTaskDescription() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":237,"author":{"gitId":"markuslim24"},"content":"        TaskDescription expectedTaskDescription \u003d new TaskDescription(VALID_TASKDESCRIPTION);","lastModifiedDate":"2021-10-10"},{"lineNumber":238,"author":{"gitId":"markuslim24"},"content":"        assertEquals(expectedTaskDescription, ParserUtil.parseTaskDescription(VALID_TASKDESCRIPTION));","lastModifiedDate":"2021-10-10"},{"lineNumber":239,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":240,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":241,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":242,"author":{"gitId":"markuslim24"},"content":"    public void parseTaskDescription_validValueWithWhitespace_returnsTrimmedTaskDescription() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":243,"author":{"gitId":"markuslim24"},"content":"        String taskDescriptionWithWhitespace \u003d WHITESPACE + VALID_TASKDESCRIPTION + WHITESPACE;","lastModifiedDate":"2021-10-10"},{"lineNumber":244,"author":{"gitId":"markuslim24"},"content":"        TaskDescription expectedTaskDescription \u003d new TaskDescription(VALID_TASKDESCRIPTION);","lastModifiedDate":"2021-10-10"},{"lineNumber":245,"author":{"gitId":"markuslim24"},"content":"        assertEquals(expectedTaskDescription, ParserUtil.parseTaskDescription(taskDescriptionWithWhitespace));","lastModifiedDate":"2021-10-10"},{"lineNumber":246,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":247,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":248,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":249,"author":{"gitId":"markuslim24"},"content":"    public void parseTaskModule_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":250,"author":{"gitId":"markuslim24"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTaskModule((String) null));","lastModifiedDate":"2021-10-10"},{"lineNumber":251,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":252,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":253,"author":{"gitId":"markuslim24"},"content":"    public void parseTaskModule_validValueWithoutWhitespace_returnsTaskModule() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":254,"author":{"gitId":"markuslim24"},"content":"        TaskModule expectedTaskModule \u003d new TaskModule(VALID_TASKMODULE);","lastModifiedDate":"2021-10-10"},{"lineNumber":255,"author":{"gitId":"markuslim24"},"content":"        assertEquals(expectedTaskModule, ParserUtil.parseTaskModule(VALID_TASKMODULE));","lastModifiedDate":"2021-10-10"},{"lineNumber":256,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":257,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":258,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":259,"author":{"gitId":"markuslim24"},"content":"    public void parseTaskModule_validValueWithWhitespace_returnsTrimmedTaskModule() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":260,"author":{"gitId":"markuslim24"},"content":"        String taskModuleWithWhitespace \u003d WHITESPACE + VALID_TASKMODULE + WHITESPACE;","lastModifiedDate":"2021-10-10"},{"lineNumber":261,"author":{"gitId":"markuslim24"},"content":"        TaskModule expectedTaskModule \u003d new TaskModule(VALID_TASKMODULE);","lastModifiedDate":"2021-10-10"},{"lineNumber":262,"author":{"gitId":"markuslim24"},"content":"        assertEquals(expectedTaskModule, ParserUtil.parseTaskModule(taskModuleWithWhitespace));","lastModifiedDate":"2021-10-10"},{"lineNumber":263,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":264,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":265,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":266,"author":{"gitId":"markuslim24"},"content":"    public void parseTaskTime_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":267,"author":{"gitId":"markuslim24"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDateTime((String) null));","lastModifiedDate":"2021-10-10"},{"lineNumber":268,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":269,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":270,"author":{"gitId":"markuslim24"},"content":"    public void parseTaskTime_validValueWithoutWhitespace_returnsTaskTime() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":271,"author":{"gitId":"markuslim24"},"content":"        TaskTime expectedTaskTime \u003d new TaskTime(VALID_TASKTIME);","lastModifiedDate":"2021-10-10"},{"lineNumber":272,"author":{"gitId":"markuslim24"},"content":"        assertEquals(expectedTaskTime, ParserUtil.parseDateTime(VALID_TASKTIME));","lastModifiedDate":"2021-10-10"},{"lineNumber":273,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":274,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":275,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":276,"author":{"gitId":"markuslim24"},"content":"    public void parseTaskTime_validValueWithWhitespace_returnsTrimmedTaskTime() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":277,"author":{"gitId":"markuslim24"},"content":"        String taskTimeWithWhitespace \u003d WHITESPACE + VALID_TASKTIME + WHITESPACE;","lastModifiedDate":"2021-10-10"},{"lineNumber":278,"author":{"gitId":"markuslim24"},"content":"        TaskTime expectedTaskTime \u003d new TaskTime(VALID_TASKTIME);","lastModifiedDate":"2021-10-10"},{"lineNumber":279,"author":{"gitId":"markuslim24"},"content":"        assertEquals(expectedTaskTime, ParserUtil.parseDateTime(taskTimeWithWhitespace));","lastModifiedDate":"2021-10-10"},{"lineNumber":280,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"markuslim24":81,"chowRuiYan":2,"Tianqi-Zhu":14,"-":184}},{"path":"src/test/java/manageme/logic/parser/calendar/ReadDayCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser.calendar;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.calendar.ReadDayCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"public class ReadDayCommandParserTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"    private ReadDayCommandParser parser \u003d new ReadDayCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_validArgs_returnsReadDayCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, LocalDate.now().toString(), new ReadDayCommand(LocalDate.now()));","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReadDayCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Tianqi-Zhu":25}},{"path":"src/test/java/manageme/logic/parser/module/AddModuleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalModules.MODULE_B;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.module.AddModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.module.ModuleCommandTestUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.ModuleBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"public class AddModuleCommandParserTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"    private AddModuleCommandParser parser \u003d new AddModuleCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module expectedModule \u003d new ModuleBuilder(MODULE_B).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + ModuleCommandTestUtil.NAME_DESC_MODULE_B","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"                + ModuleCommandTestUtil.LINK_DESC_MODULE_B, new AddModuleCommand(expectedModule));","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddModuleCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, ModuleCommandTestUtil.VALID_NAME_MODULE_B","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"                + ModuleCommandTestUtil.LINK_DESC_MODULE_B, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"        // missing link prefix","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, ModuleCommandTestUtil.NAME_DESC_MODULE_B","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"                + ModuleCommandTestUtil.VALID_LINK_MODULE_B , expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"        // all prefixes missing","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, ModuleCommandTestUtil.VALID_NAME_MODULE_B","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"                + ModuleCommandTestUtil.VALID_LINK_MODULE_B, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"Tianqi-Zhu"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + ModuleCommandTestUtil.NAME_DESC_MODULE_B","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"Tianqi-Zhu"},"content":"                + ModuleCommandTestUtil.LINK_DESC_MODULE_B, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"Tianqi-Zhu"},"content":"                        AddModuleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Tianqi-Zhu":54}},{"path":"src/test/java/manageme/logic/parser/module/DeleteModuleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.module.DeleteModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"public class DeleteModuleCommandParserTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"    private DeleteModuleCommandParser parser \u003d new DeleteModuleCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_validArgs_returnsDeleteModuleCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, \"1\", new DeleteModuleCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"                DeleteModuleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Tianqi-Zhu":25}},{"path":"src/test/java/manageme/logic/parser/module/EditModuleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.LINK_DESC_GOOGLE;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.LINK_DESC_ZOOM;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.MODNAME_DESC_CS2100;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.MODNAME_DESC_CS2103;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_LINK_GOOGLE;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_LINK_ZOOM;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_MODNAME_CS2100;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_MODNAME_CS2103;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"JinxinZhao315"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.module.EditModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.ModuleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.EditModuleDescriptorBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"public class EditModuleCommandParserTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditModuleCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"    private EditModuleCommandParser parser \u003d new EditModuleCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"JinxinZhao315"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"JinxinZhao315"},"content":"        // no index specified","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"JinxinZhao315"},"content":"        assertParseFailure(parser, VALID_MODNAME_CS2103, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"JinxinZhao315"},"content":"        // no field specified","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"JinxinZhao315"},"content":"        assertParseFailure(parser, \"1\", EditModuleCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"JinxinZhao315"},"content":"        // no index and no field specified","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"JinxinZhao315"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"JinxinZhao315"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"JinxinZhao315"},"content":"        // negative index","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"JinxinZhao315"},"content":"        assertParseFailure(parser, \"-5\" + MODNAME_DESC_CS2103, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"JinxinZhao315"},"content":"        // zero index","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"JinxinZhao315"},"content":"        assertParseFailure(parser, \"0\" + MODNAME_DESC_CS2103, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"JinxinZhao315"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"JinxinZhao315"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"JinxinZhao315"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"JinxinZhao315"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"JinxinZhao315"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"JinxinZhao315"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, ModuleName.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"JinxinZhao315"},"content":"        // TODO: Test Link inputs when its validation is implemented","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"JinxinZhao315"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"JinxinZhao315"},"content":"        String userInput \u003d targetIndex.getOneBased() + MODNAME_DESC_CS2100 + LINK_DESC_ZOOM;","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand.EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"JinxinZhao315"},"content":"                .withName(VALID_MODNAME_CS2100).withLink(VALID_LINK_ZOOM).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand expectedCommand \u003d new EditModuleCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"JinxinZhao315"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"JinxinZhao315"},"content":"    public void parse_linkSpecified_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"JinxinZhao315"},"content":"        String userInput \u003d targetIndex.getOneBased() + LINK_DESC_ZOOM;","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand.EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"JinxinZhao315"},"content":"                .withLink(VALID_LINK_ZOOM).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand expectedCommand \u003d new EditModuleCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"JinxinZhao315"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"JinxinZhao315"},"content":"    public void parse_nameSpecified_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"JinxinZhao315"},"content":"        // name","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"JinxinZhao315"},"content":"        String userInput \u003d targetIndex.getOneBased() + MODNAME_DESC_CS2103;","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand.EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"JinxinZhao315"},"content":"                .withName(VALID_MODNAME_CS2103).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand expectedCommand \u003d new EditModuleCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"JinxinZhao315"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"JinxinZhao315"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"JinxinZhao315"},"content":"        String userInput \u003d targetIndex.getOneBased() + MODNAME_DESC_CS2100 + MODNAME_DESC_CS2103","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"JinxinZhao315"},"content":"                + LINK_DESC_ZOOM + LINK_DESC_GOOGLE;","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand.EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"JinxinZhao315"},"content":"                .withName(VALID_MODNAME_CS2103).withLink(VALID_LINK_GOOGLE).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand expectedCommand \u003d new EditModuleCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"JinxinZhao315"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"JinxinZhao315"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"JinxinZhao315"},"content":"        // no other valid values specified","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"JinxinZhao315"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_NAME_DESC + MODNAME_DESC_CS2100;","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand.EditModuleDescriptor descriptor \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"JinxinZhao315"},"content":"                new EditModuleDescriptorBuilder().withName(VALID_MODNAME_CS2100).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"JinxinZhao315"},"content":"        EditModuleCommand expectedCommand \u003d new EditModuleCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"JinxinZhao315"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"JinxinZhao315"},"content":"        // other valid values specified","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"JinxinZhao315"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_NAME_DESC + MODNAME_DESC_CS2100 + LINK_DESC_ZOOM;","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"JinxinZhao315"},"content":"        descriptor \u003d new EditModuleDescriptorBuilder().withName(VALID_MODNAME_CS2100)","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"JinxinZhao315"},"content":"                .withLink(VALID_LINK_ZOOM).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"JinxinZhao315"},"content":"        expectedCommand \u003d new EditModuleCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"JinxinZhao315"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"JinxinZhao315":104,"Tianqi-Zhu":28}},{"path":"src/test/java/manageme/logic/parser/module/ReadModuleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"chowRuiYan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.module.ReadModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"chowRuiYan"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"chowRuiYan"},"content":" * outside of the ReadModuleCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":" * same path through the ReadModuleCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"public class ReadModuleCommandParserTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    private ReadModuleCommandParser parser \u003d new ReadModuleCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, \"1\", new ReadModuleCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReadModuleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"chowRuiYan":22,"Tianqi-Zhu":10}},{"path":"src/test/java/manageme/logic/parser/task/AddTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalTasks.TASK_A_MANUAL;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalTasks.TASK_B_MANUAL;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.task.AddTaskCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.task.TaskCommandTestUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskName;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TaskBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"public class AddTaskCommandParserTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"    private AddTaskCommandParser parser \u003d new AddTaskCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"        Task expectedTask \u003d new TaskBuilder(TASK_B_MANUAL).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + TaskCommandTestUtil.NAME_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.DESCRIPTION_DESC_B + TaskCommandTestUtil.MODULE_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.START_DESC_B + TaskCommandTestUtil.END_DESC_B, new AddTaskCommand(expectedTask));","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, TaskCommandTestUtil.NAME_DESC_A + TaskCommandTestUtil.NAME_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.DESCRIPTION_DESC_B + TaskCommandTestUtil.MODULE_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.START_DESC_B + TaskCommandTestUtil.END_DESC_B, new AddTaskCommand(expectedTask));","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"        // multiple description - last description accepted","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, TaskCommandTestUtil.NAME_DESC_B + TaskCommandTestUtil.DESCRIPTION_DESC_A","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.DESCRIPTION_DESC_B + TaskCommandTestUtil.MODULE_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.START_DESC_B + TaskCommandTestUtil.END_DESC_B, new AddTaskCommand(expectedTask));","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"        // multiple modules - last module accepted","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, TaskCommandTestUtil.NAME_DESC_B + TaskCommandTestUtil.DESCRIPTION_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.MODULE_DESC_A + TaskCommandTestUtil.MODULE_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.START_DESC_B + TaskCommandTestUtil.END_DESC_B, new AddTaskCommand(expectedTask));","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"        // multiple start date/times - last date/time accepted","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, TaskCommandTestUtil.NAME_DESC_B + TaskCommandTestUtil.DESCRIPTION_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.MODULE_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.START_DESC_A + TaskCommandTestUtil.START_DESC_B + TaskCommandTestUtil.END_DESC_B,","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Tianqi-Zhu"},"content":"                new AddTaskCommand(expectedTask));","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"Tianqi-Zhu"},"content":"        // multiple end date/times - last date/time accepted","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, TaskCommandTestUtil.NAME_DESC_B + TaskCommandTestUtil.DESCRIPTION_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.MODULE_DESC_B + TaskCommandTestUtil.START_DESC_B + TaskCommandTestUtil.END_DESC_A","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.END_DESC_B, new AddTaskCommand(expectedTask));","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"Tianqi-Zhu"},"content":"        // zero modules","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"Tianqi-Zhu"},"content":"        Task expectedTask \u003d new TaskBuilder(TASK_A_MANUAL).withModule(\"\").build();","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, TaskCommandTestUtil.NAME_DESC_A + TaskCommandTestUtil.DESCRIPTION_DESC_A","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.START_DESC_A + TaskCommandTestUtil.END_DESC_A, new AddTaskCommand(expectedTask));","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"Tianqi-Zhu"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"Tianqi-Zhu"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, TaskCommandTestUtil.VALID_NAME_B + TaskCommandTestUtil.DESCRIPTION_DESC_B,","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"Tianqi-Zhu"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"Tianqi-Zhu"},"content":"        // missing phone prefix","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, TaskCommandTestUtil.NAME_DESC_B + TaskCommandTestUtil.VALID_DESCRIPTION_B,","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"Tianqi-Zhu"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"Tianqi-Zhu"},"content":"        // all prefixes missing","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, TaskCommandTestUtil.VALID_NAME_B + TaskCommandTestUtil.VALID_DESCRIPTION_B,","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"Tianqi-Zhu"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"Tianqi-Zhu"},"content":"        // invalid name","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, TaskCommandTestUtil.INVALID_NAME_DESC","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.DESCRIPTION_DESC_B + TaskCommandTestUtil.MODULE_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.START_DESC_B + TaskCommandTestUtil.END_DESC_B , TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"Tianqi-Zhu"},"content":"        //Add more invalid testcases here once more are included","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"Tianqi-Zhu"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + TaskCommandTestUtil.NAME_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"Tianqi-Zhu"},"content":"                        + TaskCommandTestUtil.DESCRIPTION_DESC_B + TaskCommandTestUtil.MODULE_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"Tianqi-Zhu"},"content":"                        + TaskCommandTestUtil.START_DESC_B + TaskCommandTestUtil.END_DESC_B,","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"Tianqi-Zhu"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Tianqi-Zhu":97}},{"path":"src/test/java/manageme/logic/parser/task/DeleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.task.DeleteTaskCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"public class DeleteTaskCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"    private DeleteTaskCommandParser parser \u003d new DeleteTaskCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"    public void parse_validArgs_returnsDeleteTaskCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTaskCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"    public void parse_invalidArgs_throwsParseTaskException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"zhangchengchuan":23,"Tianqi-Zhu":9}},{"path":"src/test/java/manageme/logic/parser/task/EditTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.logic.parser.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.task.EditTaskCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.task.TaskCommandTestUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskName;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"public class EditTaskCommandParserTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"    private EditTaskCommandParser parser \u003d new EditTaskCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"        // no index specified","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, TaskCommandTestUtil.VALID_NAME_A, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"        // no field specified","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"1\", EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"        // no index and no field specified","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"        // negative index","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"-5\" + TaskCommandTestUtil.NAME_DESC_A, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"        // zero index","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"0\" + TaskCommandTestUtil.NAME_DESC_A, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"1\" + TaskCommandTestUtil.INVALID_NAME_DESC, TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Tianqi-Zhu"},"content":"        // valid name followed by invalid name. The test case for invalid name followed by valid name","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"Tianqi-Zhu"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"1\" + TaskCommandTestUtil.NAME_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.INVALID_NAME_DESC, TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"Tianqi-Zhu"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseFailure(parser, \"1\" + TaskCommandTestUtil.INVALID_NAME_DESC","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.DESCRIPTION_DESC_A + TaskCommandTestUtil.MODULE_DESC_A,","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Tianqi-Zhu"},"content":"                TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"Tianqi-Zhu"},"content":"        String userInput \u003d targetIndex.getOneBased() + TaskCommandTestUtil.DESCRIPTION_DESC_A","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.MODULE_DESC_A + TaskCommandTestUtil.NAME_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.START_DESC_A + TaskCommandTestUtil.END_DESC_A;","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"Tianqi-Zhu"},"content":"                new EditTaskDescriptorBuilder().withName(TaskCommandTestUtil.VALID_NAME_B)","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withDescription(TaskCommandTestUtil.VALID_DESCRIPTION_A)","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withModule(TaskCommandTestUtil.VALID_MODULE_A)","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withStartDateTime(TaskCommandTestUtil.VALID_START_A)","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withEndDateTime(TaskCommandTestUtil.VALID_END_A).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"Tianqi-Zhu"},"content":"        String userInput \u003d targetIndex.getOneBased() + TaskCommandTestUtil.DESCRIPTION_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.NAME_DESC_A;","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"Tianqi-Zhu"},"content":"                new EditTaskDescriptorBuilder().withDescription(TaskCommandTestUtil.VALID_DESCRIPTION_B)","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withName(TaskCommandTestUtil.VALID_NAME_A).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"Tianqi-Zhu"},"content":"        // name","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"Tianqi-Zhu"},"content":"        String userInput \u003d targetIndex.getOneBased() + TaskCommandTestUtil.NAME_DESC_A;","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"Tianqi-Zhu"},"content":"                new EditTaskDescriptorBuilder().withName(TaskCommandTestUtil.VALID_NAME_A).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"Tianqi-Zhu"},"content":"        // description","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"Tianqi-Zhu"},"content":"        userInput \u003d targetIndex.getOneBased() + TaskCommandTestUtil.DESCRIPTION_DESC_A;","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"Tianqi-Zhu"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDescription(TaskCommandTestUtil.VALID_DESCRIPTION_A).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"Tianqi-Zhu"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"Tianqi-Zhu"},"content":"        // module","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"Tianqi-Zhu"},"content":"        userInput \u003d targetIndex.getOneBased() + TaskCommandTestUtil.MODULE_DESC_A;","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"Tianqi-Zhu"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withModule(TaskCommandTestUtil.VALID_MODULE_A).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"Tianqi-Zhu"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"Tianqi-Zhu"},"content":"        // start","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"Tianqi-Zhu"},"content":"        userInput \u003d targetIndex.getOneBased() + TaskCommandTestUtil.START_DESC_A;","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"Tianqi-Zhu"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withStartDateTime(TaskCommandTestUtil.VALID_START_A).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"Tianqi-Zhu"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"Tianqi-Zhu"},"content":"        // end","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"Tianqi-Zhu"},"content":"        userInput \u003d targetIndex.getOneBased() + TaskCommandTestUtil.END_DESC_A;","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"Tianqi-Zhu"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withEndDateTime(TaskCommandTestUtil.VALID_END_A).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"Tianqi-Zhu"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"Tianqi-Zhu"},"content":"        String userInput \u003d targetIndex.getOneBased() + TaskCommandTestUtil.NAME_DESC_A","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.DESCRIPTION_DESC_A + TaskCommandTestUtil.MODULE_DESC_A","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.START_DESC_A + TaskCommandTestUtil.END_DESC_A","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.DESCRIPTION_DESC_B + TaskCommandTestUtil.NAME_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.MODULE_DESC_B;","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(TaskCommandTestUtil","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"Tianqi-Zhu"},"content":"                        .VALID_NAME_B)","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withDescription(TaskCommandTestUtil.VALID_DESCRIPTION_B).withModule(TaskCommandTestUtil.VALID_MODULE_B)","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withStartDateTime(TaskCommandTestUtil.VALID_START_A).withEndDateTime(TaskCommandTestUtil.VALID_END_A)","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"Tianqi-Zhu"},"content":"                .build();","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"Tianqi-Zhu"},"content":"        // no other valid values specified","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"Tianqi-Zhu"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"Tianqi-Zhu"},"content":"        String userInput \u003d targetIndex.getOneBased() + TaskCommandTestUtil.INVALID_NAME_DESC + TaskCommandTestUtil","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"Tianqi-Zhu"},"content":"                .NAME_DESC_B;","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"Tianqi-Zhu"},"content":"                new EditTaskDescriptorBuilder().withName(TaskCommandTestUtil.VALID_NAME_B).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":161,"author":{"gitId":"Tianqi-Zhu"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-16"},{"lineNumber":162,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":164,"author":{"gitId":"Tianqi-Zhu"},"content":"        // other valid values specified","lastModifiedDate":"2021-10-16"},{"lineNumber":165,"author":{"gitId":"Tianqi-Zhu"},"content":"        userInput \u003d targetIndex.getOneBased() + TaskCommandTestUtil.DESCRIPTION_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.INVALID_NAME_DESC + TaskCommandTestUtil.MODULE_DESC_B","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"Tianqi-Zhu"},"content":"                + TaskCommandTestUtil.NAME_DESC_B;","lastModifiedDate":"2021-10-16"},{"lineNumber":168,"author":{"gitId":"Tianqi-Zhu"},"content":"        descriptor \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":169,"author":{"gitId":"Tianqi-Zhu"},"content":"                new EditTaskDescriptorBuilder().withName(TaskCommandTestUtil.VALID_NAME_B).withDescription(","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"Tianqi-Zhu"},"content":"                                TaskCommandTestUtil.VALID_DESCRIPTION_B)","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withModule(TaskCommandTestUtil.VALID_MODULE_B).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":172,"author":{"gitId":"Tianqi-Zhu"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-16"},{"lineNumber":173,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":174,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":175,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Tianqi-Zhu":175}},{"path":"src/test/java/manageme/model/ManageMeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.task.TaskCommandTestUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.exceptions.DuplicateModuleException;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.Assert;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.ModuleBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.PersonBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TaskBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TypicalManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TypicalModules;","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TypicalPersons;","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TypicalTasks;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"public class ManageMeTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"    private final ManageMe manageMe \u003d new ManageMe();","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(Collections.emptyList(), manageMe.getPersonList());","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e manageMe.resetData(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"Tianqi-Zhu"},"content":"        ManageMe newData \u003d TypicalManageMe.getTypicalManageMe();","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"        manageMe.resetData(newData);","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(newData, manageMe);","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"Tianqi-Zhu"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withAddress(CommandTestUtil.VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"Tianqi-Zhu"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(TypicalPersons.ALICE, editedAlice);","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"chowRuiYan"},"content":"        ManageMePersonStub newData \u003d new ManageMePersonStub(newPersons);","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(DuplicatePersonException.class, () -\u003e manageMe.resetData(newData));","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"    public void resetData_withDuplicateModules_throwsDuplicateModuleException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"chowRuiYan"},"content":"        // Two modules with the same identity fields","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module editedModuleA \u003d new ModuleBuilder(TypicalModules.MODULE_A).withLink(CommandTestUtil.VALID_LINK_ZOOM)","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"chowRuiYan"},"content":"                .build();","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Tianqi-Zhu"},"content":"        List\u003cModule\u003e newModules \u003d Arrays.asList(TypicalModules.MODULE_A, editedModuleA);","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"        ManageMeModuleStub newData \u003d new ManageMeModuleStub(newModules);","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(DuplicateModuleException.class, () -\u003e manageMe.resetData(newData));","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"    public void resetData_withDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"        // Two tasks with the same identity fields","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"Tianqi-Zhu"},"content":"        Task editedTaskA \u003d new TaskBuilder(TypicalTasks.TASK_A).withDescription(TaskCommandTestUtil.VALID_DESCRIPTION_A)","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"                .build();","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"Tianqi-Zhu"},"content":"        List\u003cTask\u003e newTasks \u003d Arrays.asList(TypicalTasks.TASK_A, editedTaskA);","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"        ManageMeTaskStub newData \u003d new ManageMeTaskStub(newTasks);","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(DuplicateTaskException.class, () -\u003e manageMe.resetData(newData));","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e manageMe.hasPerson(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(manageMe.hasPerson(TypicalPersons.ALICE));","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"Tianqi-Zhu"},"content":"        manageMe.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(manageMe.hasPerson(TypicalPersons.ALICE));","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"Tianqi-Zhu"},"content":"        manageMe.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"Tianqi-Zhu"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withAddress(CommandTestUtil.VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(manageMe.hasPerson(editedAlice));","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e manageMe.getPersonList().remove(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"chowRuiYan"},"content":"    public void hasModule_nullModule_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e manageMe.hasModule(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"chowRuiYan"},"content":"    public void hasModule_moduleNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(manageMe.hasModule(TypicalModules.MODULE_A));","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"chowRuiYan"},"content":"    public void hasModule_moduleInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"Tianqi-Zhu"},"content":"        manageMe.addModule(TypicalModules.MODULE_A);","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(manageMe.hasModule(TypicalModules.MODULE_A));","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"chowRuiYan"},"content":"    public void hasModule_moduleWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"Tianqi-Zhu"},"content":"        manageMe.addModule(TypicalModules.MODULE_A);","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module editedModule \u003d new ModuleBuilder(TypicalModules.MODULE_A).withLink(CommandTestUtil.VALID_LINK_ZOOM)","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"Tianqi-Zhu"},"content":"                .build();","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(manageMe.hasModule(editedModule));","lastModifiedDate":"2021-10-15"},{"lineNumber":139,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"chowRuiYan"},"content":"    public void getModuleList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e manageMe.getModuleList().remove(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"chowRuiYan"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e manageMe.hasTask(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"chowRuiYan"},"content":"    public void hasTask_taskNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(manageMe.hasTask(TypicalTasks.TASK_A));","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"chowRuiYan"},"content":"    public void hasTask_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"Tianqi-Zhu"},"content":"        manageMe.addTask(TypicalTasks.TASK_A);","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(manageMe.hasTask(TypicalTasks.TASK_A));","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"chowRuiYan"},"content":"    public void hasTask_taskWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"Tianqi-Zhu"},"content":"        manageMe.addTask(TypicalTasks.TASK_A);","lastModifiedDate":"2021-10-16"},{"lineNumber":165,"author":{"gitId":"Tianqi-Zhu"},"content":"        Task editedTask \u003d new TaskBuilder(TypicalTasks.TASK_A).withDescription(TaskCommandTestUtil.VALID_DESCRIPTION_A)","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withModule(TaskCommandTestUtil.VALID_MODULE_A).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"chowRuiYan"},"content":"        assertTrue(manageMe.hasTask(editedTask));","lastModifiedDate":"2021-10-15"},{"lineNumber":168,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"chowRuiYan"},"content":"    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e manageMe.getTaskList().remove(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":173,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":178,"author":{"gitId":"chowRuiYan"},"content":"    private static class ManageMePersonStub implements ReadOnlyManageMe {","lastModifiedDate":"2021-10-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":181,"author":{"gitId":"chowRuiYan"},"content":"        private final ObservableList\u003cModule\u003e modules \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"chowRuiYan"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"zhangchengchuan"},"content":"        private final ArrayList\u003cTask\u003e modifiableTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"chowRuiYan"},"content":"        ManageMePersonStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2021-10-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":195,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":196,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":197,"author":{"gitId":"chowRuiYan"},"content":"        public ObservableList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":198,"author":{"gitId":"chowRuiYan"},"content":"            return modules;","lastModifiedDate":"2021-10-11"},{"lineNumber":199,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":200,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"chowRuiYan"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":203,"author":{"gitId":"chowRuiYan"},"content":"            return tasks;","lastModifiedDate":"2021-10-11"},{"lineNumber":204,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":205,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"zhangchengchuan"},"content":"        public ArrayList\u003cTask\u003e getModifiableTaskList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"zhangchengchuan"},"content":"            return modifiableTasks;","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":211,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"chowRuiYan"},"content":"     * A stub ReadOnlyAddressBook whose Modules list can violate interface constraints.","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"chowRuiYan"},"content":"    private static class ManageMeModuleStub implements ReadOnlyManageMe {","lastModifiedDate":"2021-10-15"},{"lineNumber":216,"author":{"gitId":"chowRuiYan"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":217,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":218,"author":{"gitId":"chowRuiYan"},"content":"        private final ObservableList\u003cModule\u003e modules \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":219,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":220,"author":{"gitId":"chowRuiYan"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":221,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":222,"author":{"gitId":"zhangchengchuan"},"content":"        private final ArrayList\u003cTask\u003e modifiableTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"chowRuiYan"},"content":"        ManageMeModuleStub(Collection\u003cModule\u003e modules) {","lastModifiedDate":"2021-10-15"},{"lineNumber":225,"author":{"gitId":"chowRuiYan"},"content":"            this.modules.setAll(modules);","lastModifiedDate":"2021-10-11"},{"lineNumber":226,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":227,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":228,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":229,"author":{"gitId":"chowRuiYan"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":230,"author":{"gitId":"chowRuiYan"},"content":"            return persons;","lastModifiedDate":"2021-10-11"},{"lineNumber":231,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":232,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":233,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":234,"author":{"gitId":"chowRuiYan"},"content":"        public ObservableList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":235,"author":{"gitId":"chowRuiYan"},"content":"            return modules;","lastModifiedDate":"2021-10-11"},{"lineNumber":236,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":237,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":238,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":239,"author":{"gitId":"chowRuiYan"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":240,"author":{"gitId":"chowRuiYan"},"content":"            return tasks;","lastModifiedDate":"2021-10-11"},{"lineNumber":241,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":242,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"zhangchengchuan"},"content":"        public ArrayList\u003cTask\u003e getModifiableTaskList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"zhangchengchuan"},"content":"            return modifiableTasks;","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":248,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":249,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":250,"author":{"gitId":"chowRuiYan"},"content":"     * A stub ReadOnlyAddressBook whose Tasks list can violate interface constraints.","lastModifiedDate":"2021-10-11"},{"lineNumber":251,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":252,"author":{"gitId":"chowRuiYan"},"content":"    private static class ManageMeTaskStub implements ReadOnlyManageMe {","lastModifiedDate":"2021-10-15"},{"lineNumber":253,"author":{"gitId":"chowRuiYan"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":254,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":255,"author":{"gitId":"chowRuiYan"},"content":"        private final ObservableList\u003cModule\u003e modules \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":256,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":257,"author":{"gitId":"chowRuiYan"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":258,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"zhangchengchuan"},"content":"        private final ArrayList\u003cTask\u003e modifiableTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":260,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"chowRuiYan"},"content":"        ManageMeTaskStub(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-15"},{"lineNumber":262,"author":{"gitId":"chowRuiYan"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2021-10-11"},{"lineNumber":263,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":264,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":265,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":266,"author":{"gitId":"chowRuiYan"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":267,"author":{"gitId":"chowRuiYan"},"content":"            return persons;","lastModifiedDate":"2021-10-11"},{"lineNumber":268,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":269,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":270,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":271,"author":{"gitId":"chowRuiYan"},"content":"        public ObservableList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":272,"author":{"gitId":"chowRuiYan"},"content":"            return modules;","lastModifiedDate":"2021-10-11"},{"lineNumber":273,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":274,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":275,"author":{"gitId":"chowRuiYan"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":276,"author":{"gitId":"chowRuiYan"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":277,"author":{"gitId":"chowRuiYan"},"content":"            return tasks;","lastModifiedDate":"2021-10-11"},{"lineNumber":278,"author":{"gitId":"chowRuiYan"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":279,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":281,"author":{"gitId":"zhangchengchuan"},"content":"        public ArrayList\u003cTask\u003e getModifiableTaskList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":282,"author":{"gitId":"zhangchengchuan"},"content":"            return modifiableTasks;","lastModifiedDate":"2021-10-21"},{"lineNumber":283,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"zhangchengchuan":23,"chowRuiYan":140,"Tianqi-Zhu":56,"-":67}},{"path":"src/test/java/manageme/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.GuiSettings;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.Assert;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.ManageMeBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TypicalModules;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TypicalPersons;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TypicalTasks;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(new ManageMe(), new ManageMe(modelManager.getManageMe()));","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"        userPrefs.setManageMeFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"        userPrefs.setManageMeFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setManageMeFilePath(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"        modelManager.setManageMeFilePath(path);","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(path, modelManager.getManageMeFilePath());","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(modelManager.hasPerson(TypicalPersons.ALICE));","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"Tianqi-Zhu"},"content":"        modelManager.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(modelManager.hasPerson(TypicalPersons.ALICE));","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"chowRuiYan"},"content":"    public void hasModule_nullModule_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.hasModule(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"chowRuiYan"},"content":"    public void hasModule_moduleNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(modelManager.hasModule(TypicalModules.MODULE_A));","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"chowRuiYan"},"content":"    public void hasModule_moduleInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"Tianqi-Zhu"},"content":"        modelManager.addModule(TypicalModules.MODULE_A);","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(modelManager.hasModule(TypicalModules.MODULE_A));","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"chowRuiYan"},"content":"    public void getFilteredModuleList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredModuleList().remove(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"chowRuiYan"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"chowRuiYan"},"content":"    public void hasTask_taskNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(modelManager.hasTask(TypicalTasks.TASK_A));","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"chowRuiYan"},"content":"    public void hasTask_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"Tianqi-Zhu"},"content":"        modelManager.addTask(TypicalTasks.TASK_A);","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(modelManager.hasTask(TypicalTasks.TASK_A));","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"chowRuiYan"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"Tianqi-Zhu"},"content":"        ManageMe manageMe \u003d new ManageMeBuilder().withModule(TypicalModules.MODULE_A)","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withModule(TypicalModules.MODULE_B)","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withPerson(TypicalPersons.ALICE).withPerson(TypicalPersons.BENSON).withTask(TypicalTasks.TASK_A)","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withTask(TypicalTasks.TASK_B).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"chowRuiYan"},"content":"        ManageMe differentManageMe \u003d new ManageMe();","lastModifiedDate":"2021-10-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"chowRuiYan"},"content":"        modelManager \u003d new ModelManager(manageMe, userPrefs);","lastModifiedDate":"2021-10-15"},{"lineNumber":150,"author":{"gitId":"chowRuiYan"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(manageMe, userPrefs);","lastModifiedDate":"2021-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"chowRuiYan"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentManageMe, userPrefs)));","lastModifiedDate":"2021-10-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"Tianqi-Zhu"},"content":"        String[] keywords \u003d TypicalPersons.ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":168,"author":{"gitId":"chowRuiYan"},"content":"        assertFalse(modelManager.equals(new ModelManager(manageMe, userPrefs)));","lastModifiedDate":"2021-10-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"chowRuiYan"},"content":"        differentUserPrefs.setManageMeFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":176,"author":{"gitId":"chowRuiYan"},"content":"        assertFalse(modelManager.equals(new ModelManager(manageMe, differentUserPrefs)));","lastModifiedDate":"2021-10-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"chowRuiYan":44,"Tianqi-Zhu":35,"-":99}},{"path":"src/test/java/manageme/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.Assert;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPrefs.setManageMeFilePath(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Tianqi-Zhu":5,"-":16}},{"path":"src/test/java/manageme/model/link/LinkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.link;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_LINK_GOOGLE;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_LINK_NAME_YOUTUBE;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalLinks.LINK_LUMINUS;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalLinks.LINK_YOUTUBE;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.LinkBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"public class LinkTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"     * This tests if two Link objects have the same link content","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void isSameLink() {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(LINK_LUMINUS.isSameLink(LINK_LUMINUS));","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(LINK_LUMINUS.isSameLink(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"        // same link, different name -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"        Link editedLuminus \u003d new LinkBuilder(LINK_LUMINUS).withName(VALID_LINK_NAME_YOUTUBE).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(LINK_LUMINUS.isSameLink(editedLuminus));","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different link, same name -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"        editedLuminus \u003d new LinkBuilder(LINK_LUMINUS).withLink(VALID_LINK_GOOGLE).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(LINK_LUMINUS.isSameLink(editedLuminus));","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"     * This tests if two Link objects have both the same link content and the same name.","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"        Link luminusCopy \u003d new LinkBuilder(LINK_LUMINUS).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(LINK_LUMINUS.equals(luminusCopy));","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(LINK_LUMINUS.equals(LINK_LUMINUS));","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(LINK_LUMINUS.equals(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(LINK_LUMINUS.equals(5));","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different Link object -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(LINK_LUMINUS.equals(LINK_YOUTUBE));","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Tianqi-Zhu"},"content":"        // TODO: This test only works if the equal method in Link class compares names","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"Tianqi-Zhu"},"content":"        // Link editedLuminus \u003d new LinkBuilder(LINK_LUMINUS).withName(VALID_LINK_NAME_YOUTUBE).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"Tianqi-Zhu"},"content":"        // assertFalse(LINK_LUMINUS.equals(editedLuminus));","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different link content -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"Tianqi-Zhu"},"content":"        Link editedLuminus \u003d new LinkBuilder(LINK_LUMINUS).withLink(VALID_LINK_GOOGLE).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(LINK_LUMINUS.equals(editedLuminus));","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Tianqi-Zhu":66}},{"path":"src/test/java/manageme/model/link/UniqueLinkListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.link;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":" * TODO: v1.3","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"public class UniqueLinkListTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Tianqi-Zhu":7}},{"path":"src/test/java/manageme/model/module/ModuleNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"JinxinZhao315"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"JinxinZhao315"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"JinxinZhao315"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"public class ModuleNameTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"JinxinZhao315"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModuleName(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"    public void constructor_invalidModuleName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"        String invalidModuleName \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ModuleName(invalidModuleName));","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"JinxinZhao315"},"content":"    public void isValidModuleName() {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":"        // null ModuleName","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e ModuleName.isValidModuleName(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"JinxinZhao315"},"content":"        // invalid ModuleName","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"        assertFalse(ModuleName.isValidModuleName(\"\")); // empty string","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"        assertFalse(ModuleName.isValidModuleName(\" \")); // spaces only","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"JinxinZhao315"},"content":"        assertFalse(ModuleName.isValidModuleName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"        assertFalse(ModuleName.isValidModuleName(\"CS2100*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"JinxinZhao315"},"content":"        // valid ModuleName","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"JinxinZhao315"},"content":"        assertTrue(ModuleName.isValidModuleName(\"CSCS\")); // alphabets only","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"JinxinZhao315"},"content":"        assertTrue(ModuleName.isValidModuleName(\"12345\")); // numbers only","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"JinxinZhao315"},"content":"        assertTrue(ModuleName.isValidModuleName(\"cs2100\")); // alphanumeric characters","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"JinxinZhao315"},"content":"        assertTrue(ModuleName.isValidModuleName(\"CS2100\")); // with capital letters","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"JinxinZhao315"},"content":"        assertTrue(ModuleName.isValidModuleName(\"CS2100 Computer Organization\")); // long ModuleNames","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"JinxinZhao315":32,"Tianqi-Zhu":8}},{"path":"src/test/java/manageme/model/module/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_LINK_GOOGLE;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_MODNAME_CS2100;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalModules.MODULE_A;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalModules.MODULE_B;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.ModuleBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"public class ModuleTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void isSameModule() {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(MODULE_A.isSameModule(MODULE_A));","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(MODULE_A.isSameModule(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module editedCS111 \u003d new ModuleBuilder(MODULE_A).withLink(VALID_LINK_GOOGLE).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(MODULE_A.isSameModule(editedCS111));","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"        editedCS111 \u003d new ModuleBuilder(MODULE_A).withName(VALID_MODNAME_CS2100).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(MODULE_A.isSameModule(editedCS111));","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module editedCS2100 \u003d new ModuleBuilder(MODULE_B).withName(VALID_MODNAME_CS2100.toLowerCase()).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(MODULE_B.isSameModule(editedCS2100));","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"        String nameWithTrailingSpaces \u003d VALID_MODNAME_CS2100 + \" \";","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"        editedCS2100 \u003d new ModuleBuilder(MODULE_B).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(MODULE_B.isSameModule(editedCS2100));","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module moduleCS111Copy \u003d new ModuleBuilder(MODULE_A).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(MODULE_A.equals(moduleCS111Copy));","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(MODULE_A.equals(MODULE_A));","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"Tianqi-Zhu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(MODULE_A.equals(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(MODULE_A.equals(5));","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different Module object -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(MODULE_A.equals(MODULE_B));","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module editedCS111 \u003d new ModuleBuilder(MODULE_A).withName(VALID_MODNAME_CS2100).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(MODULE_A.equals(editedCS111));","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different Link -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"Tianqi-Zhu"},"content":"        editedCS111 \u003d new ModuleBuilder(MODULE_A).withLink(VALID_LINK_GOOGLE).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(MODULE_A.equals(editedCS111));","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Tianqi-Zhu":68}},{"path":"src/test/java/manageme/model/module/UniqueModuleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_LINK_GOOGLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalModules.MODULE_A;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalModules.MODULE_B;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.exceptions.DuplicateModuleException;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.exceptions.ModuleNotFoundException;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.ModuleBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"public class UniqueModuleListTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"    private final UniqueModuleList uniqueModuleList \u003d new UniqueModuleList();","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void contains_nullModule_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueModuleList.contains(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void contains_moduleNotInList_returnsFalse() {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(uniqueModuleList.contains(MODULE_A));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void contains_moduleInList_returnsTrue() {","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueModuleList.add(MODULE_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(uniqueModuleList.contains(MODULE_A));","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void contains_moduleWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueModuleList.add(MODULE_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module editedAlice \u003d new ModuleBuilder(MODULE_A).withLink(VALID_LINK_GOOGLE).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(uniqueModuleList.contains(editedAlice));","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void add_nullModule_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueModuleList.add(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void add_duplicateModule_throwsDuplicateModuleException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueModuleList.add(MODULE_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(DuplicateModuleException.class, () -\u003e uniqueModuleList.add(MODULE_A));","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setModule_nullTargetModule_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueModuleList.setModule(null, MODULE_A));","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setModule_nullEditedModule_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueModuleList.setModule(MODULE_A, null));","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setModule_targetModuleNotInList_throwsModuleNotFoundException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(ModuleNotFoundException.class, () -\u003e uniqueModuleList.setModule(MODULE_A, MODULE_A));","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setModule_editedModuleIsSameModule_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueModuleList.add(MODULE_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueModuleList.setModule(MODULE_A, MODULE_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"Tianqi-Zhu"},"content":"        UniqueModuleList expectedUniqueModuleList \u003d new UniqueModuleList();","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"Tianqi-Zhu"},"content":"        expectedUniqueModuleList.add(MODULE_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(expectedUniqueModuleList, uniqueModuleList);","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setModule_editedModuleHasSameIdentity_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueModuleList.add(MODULE_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"Tianqi-Zhu"},"content":"        Module editedAlice \u003d new ModuleBuilder(MODULE_A).withLink(VALID_LINK_GOOGLE).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueModuleList.setModule(MODULE_A, editedAlice);","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"Tianqi-Zhu"},"content":"        UniqueModuleList expectedUniqueModuleList \u003d new UniqueModuleList();","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"Tianqi-Zhu"},"content":"        expectedUniqueModuleList.add(editedAlice);","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(expectedUniqueModuleList, uniqueModuleList);","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setModule_editedModuleHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueModuleList.add(MODULE_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueModuleList.setModule(MODULE_A, MODULE_B);","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"Tianqi-Zhu"},"content":"        UniqueModuleList expectedUniqueModuleList \u003d new UniqueModuleList();","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"Tianqi-Zhu"},"content":"        expectedUniqueModuleList.add(MODULE_B);","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(expectedUniqueModuleList, uniqueModuleList);","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setModule_editedModuleHasNonUniqueIdentity_throwsDuplicateModuleException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueModuleList.add(MODULE_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueModuleList.add(MODULE_B);","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(DuplicateModuleException.class, () -\u003e uniqueModuleList.setModule(MODULE_A, MODULE_B));","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void remove_nullModule_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueModuleList.remove(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void remove_moduleDoesNotExist_throwsModuleNotFoundException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(ModuleNotFoundException.class, () -\u003e uniqueModuleList.remove(MODULE_A));","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void remove_existingModule_removesModule() {","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueModuleList.add(MODULE_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueModuleList.remove(MODULE_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"Tianqi-Zhu"},"content":"        UniqueModuleList expectedUniqueModuleList \u003d new UniqueModuleList();","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(expectedUniqueModuleList, uniqueModuleList);","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setModules_nullUniqueModuleList_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueModuleList.setModules((UniqueModuleList) null));","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setModules_uniqueModuleList_replacesOwnListWithProvidedUniqueModuleList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueModuleList.add(MODULE_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"Tianqi-Zhu"},"content":"        UniqueModuleList expectedUniqueModuleList \u003d new UniqueModuleList();","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"Tianqi-Zhu"},"content":"        expectedUniqueModuleList.add(MODULE_B);","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueModuleList.setModules(expectedUniqueModuleList);","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(expectedUniqueModuleList, uniqueModuleList);","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setModules_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueModuleList.setModules((List\u003cModule\u003e) null));","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setModules_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueModuleList.add(MODULE_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"Tianqi-Zhu"},"content":"        List\u003cModule\u003e moduleList \u003d Collections.singletonList(MODULE_B);","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueModuleList.setModules(moduleList);","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"Tianqi-Zhu"},"content":"        UniqueModuleList expectedUniqueModuleList \u003d new UniqueModuleList();","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"Tianqi-Zhu"},"content":"        expectedUniqueModuleList.add(MODULE_B);","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(expectedUniqueModuleList, uniqueModuleList);","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setModules_listWithDuplicateModules_throwsDuplicateModuleException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"Tianqi-Zhu"},"content":"        List\u003cModule\u003e listWithDuplicateModules \u003d Arrays.asList(MODULE_A, MODULE_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(DuplicateModuleException.class, () -\u003e uniqueModuleList.setModules(listWithDuplicateModules));","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":161,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":162,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":163,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"Tianqi-Zhu"},"content":"                uniqueModuleList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":165,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":166,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Tianqi-Zhu":166}},{"path":"src/test/java/manageme/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Tianqi-Zhu":2,"-":34}},{"path":"src/test/java/manageme/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Tianqi-Zhu":2,"-":66}},{"path":"src/test/java/manageme/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.PersonBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Tianqi-Zhu":2,"-":73}},{"path":"src/test/java/manageme/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Tianqi-Zhu":2,"-":38}},{"path":"src/test/java/manageme/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.PersonBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Tianqi-Zhu":10,"-":81}},{"path":"src/test/java/manageme/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Tianqi-Zhu":2,"-":38}},{"path":"src/test/java/manageme/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.PersonBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Tianqi-Zhu":9,"-":161}},{"path":"src/test/java/manageme/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Tianqi-Zhu":2,"-":24}},{"path":"src/test/java/manageme/model/task/TaskDescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalTasks.TASK_A;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"public class TaskDescriptionTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskDescription(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"    public void constructor_invalidTaskDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TaskDescription(invalidDescription));","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"    public void isValidDescription() {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"        // null description","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskDescription.isValidDescription(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"        // invalid description","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"        assertFalse(TaskDescription.isValidDescription(\"\")); // empty string","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"        assertFalse(TaskDescription.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"        // valid description","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskDescription.isValidDescription(\"do work\")); // alphabets only","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskDescription.isValidDescription(\"12345\")); // numbers only","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskDescription.isValidDescription(\"sleep by 12pm\")); // alphanumeric characters","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskDescription.isValidDescription(\"Work on CS2103T\")); // with capital letters","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskDescription.isValidDescription(\"Plan out next week timetable by this Friday\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"        // long description","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"        // same description, returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TASK_A.getDescription().equals(TASK_A.getDescription()));","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"markuslim24":44,"Tianqi-Zhu":3}},{"path":"src/test/java/manageme/model/task/TaskModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalTasks.TASK_A;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"public class TaskModuleTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskModule(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"    public void constructor_invalidTaskModule_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"        String invalidModule \u003d \"\";","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TaskModule(invalidModule));","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"    public void isValidModule() {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"        // null module","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskModule.isValidModule(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"        // invalid module","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"        assertFalse(TaskModule.isValidModule(\"\")); // empty string","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"        assertFalse(TaskModule.isValidModule(\" \")); // spaces only","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"        assertFalse(TaskModule.isValidModule(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"        assertFalse(TaskModule.isValidModule(\"hello*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"        // valid module","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskModule.isValidModule(\"CSABCD\")); // alphabets only","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskModule.isValidModule(\"12345\")); // numbers only","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskModule.isValidModule(\"cs2100\")); // alphanumeric characters","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskModule.isValidModule(\"CS2103T\")); // with capital letters","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"        // same module, returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TASK_A.getTaskModule().equals(TASK_A.getTaskModule()));","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"    public void empty() {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"        // Empty TaskModule with value set as \"\"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskModule.empty().value.equals(\"\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"        // Empty TaskModule with moduleName set as an empty Optional\u003cString\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskModule.empty().moduleName.isEmpty());","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"markuslim24":48,"Tianqi-Zhu":3}},{"path":"src/test/java/manageme/model/task/TaskNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalTasks.TASK_A;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"public class TaskNameTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskName(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"    public void constructor_invalidTaskName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TaskName(invalidName));","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"    public void isValidName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"        // null name","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskName.isValidName(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"        // invalid name","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"        assertFalse(TaskName.isValidName(\"\")); // empty string","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"        assertFalse(TaskName.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"        // valid name","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskName.isValidName(\"do work\")); // alphabets only","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskName.isValidName(\"sleep by 12pm\")); // alphanumeric characters","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskName.isValidName(\"Work on CS2103T\")); // with capital letters","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskName.isValidName(\"Plan out next week timetable by this Friday\")); // long names","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"        // same name, returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TASK_A.getName().equals(TASK_A.getName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"markuslim24":43,"Tianqi-Zhu":3}},{"path":"src/test/java/manageme/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalTasks.TASK_A;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalTasks.TASK_B;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.task.TaskCommandTestUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TaskBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"public class TaskTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void isSameTask() {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(TASK_A.isSameTask(TASK_A));","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(TASK_A.isSameTask(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"        Task editedA \u003d new TaskBuilder(TASK_A).withDescription(TaskCommandTestUtil.VALID_DESCRIPTION_B).withModule(","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"                        TaskCommandTestUtil.VALID_MODULE_B)","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"                .withStartDateTime(TaskCommandTestUtil.VALID_START_B).withEndDateTime(TaskCommandTestUtil.VALID_END_B)","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"                .build();","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(TASK_A.isSameTask(editedA));","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"        editedA \u003d new TaskBuilder(TASK_A).withName(TaskCommandTestUtil.VALID_NAME_B).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(TASK_A.isSameTask(editedA));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"        Task editedB \u003d new TaskBuilder(TASK_B).withName(TaskCommandTestUtil.VALID_NAME_B.toLowerCase()).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(TASK_B.isSameTask(editedB));","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"        String nameWithTrailingSpaces \u003d TaskCommandTestUtil.VALID_NAME_B + \" \";","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"        editedB \u003d new TaskBuilder(TASK_B).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(TASK_B.isSameTask(editedB));","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"        Task copyA \u003d new TaskBuilder(TASK_A).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(TASK_A.equals(copyA));","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(TASK_A.equals(TASK_A));","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"Tianqi-Zhu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(TASK_A.equals(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(TASK_A.equals(5));","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(TASK_A.equals(TASK_B));","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"Tianqi-Zhu"},"content":"        Task editedA \u003d new TaskBuilder(TASK_A).withName(TaskCommandTestUtil.VALID_NAME_B).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(TASK_A.equals(editedA));","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"Tianqi-Zhu"},"content":"        editedA \u003d new TaskBuilder(TASK_A).withDescription(TaskCommandTestUtil.VALID_DESCRIPTION_B).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(TASK_A.equals(editedA));","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different module -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"Tianqi-Zhu"},"content":"        editedA \u003d new TaskBuilder(TASK_A).withModule(TaskCommandTestUtil.VALID_MODULE_B).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(TASK_A.equals(editedA));","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different start date/time -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"Tianqi-Zhu"},"content":"        editedA \u003d new TaskBuilder(TASK_A).withStartDateTime(TaskCommandTestUtil.VALID_START_B).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(TASK_A.equals(editedA));","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"Tianqi-Zhu"},"content":"        // different end date/time -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"Tianqi-Zhu"},"content":"        editedA \u003d new TaskBuilder(TASK_A).withEndDateTime(TaskCommandTestUtil.VALID_END_B).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(TASK_A.equals(editedA));","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Tianqi-Zhu":80}},{"path":"src/test/java/manageme/model/task/TaskTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalTasks.TASK_A;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"public class TaskTimeTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskTime(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"    public void constructor_invalidTaskTime_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TaskTime(invalidTime));","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"    public void isValidTime() {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"        // null time","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskTime.isValidTaskTime(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"        // invalid time","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"        assertFalse(TaskTime.isValidTaskTime(\"\")); // empty string","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"        assertFalse(TaskTime.isValidTaskTime(\" \")); // spaces only","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"        // valid time","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskTime.isValidTaskTime(\"abcd\")); // alphabets only","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskTime.isValidTaskTime(\"12345\")); // numbers only","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskTime.isValidTaskTime(\"abcd12345\")); // alphanumeric characters","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskTime.isValidTaskTime(\"LM456NOP\")); // with capital letters","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskTime.isValidTaskTime(\"11/05/2021T11:49:57\")); // long time","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"    public void toDisplayString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"        // empty TaskTime, returns \"\"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskTime.empty().toDisplayString().equals(\"\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"        // same date/time, returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TASK_A.getStart().equals(TASK_A.getStart()));","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TASK_A.getEnd().equals(TASK_A.getEnd()));","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"    public void empty() {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"        // Empty TaskModule with value set as \"\"","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskTime.empty().value.equals(\"\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"markuslim24"},"content":"        // Empty TaskModule with moduleName set as an empty Optional\u003cString\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskTime.empty().time.isEmpty());","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"markuslim24"},"content":"    public void isEmpty() {","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"markuslim24"},"content":"        // Empty TaskModule, returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"markuslim24"},"content":"        assertTrue(TaskTime.empty().isEmpty());","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"markuslim24"},"content":"        // Empty TaskModule, returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"markuslim24"},"content":"        assertFalse(TASK_A.getStart().isEmpty());","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"markuslim24":64,"Tianqi-Zhu":3}},{"path":"src/test/java/manageme/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.model.task;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalTasks.TASK_A;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalTasks.TASK_B;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.task.TaskCommandTestUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TaskBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertFalse(uniqueTaskList.contains(TASK_A));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueTaskList.add(TASK_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(uniqueTaskList.contains(TASK_A));","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void contains_taskWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueTaskList.add(TASK_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"        Task editedA \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"                new TaskBuilder(TASK_A).withDescription(TaskCommandTestUtil.VALID_DESCRIPTION_B).withStartDateTime(","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"                                TaskCommandTestUtil.VALID_START_B)","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"                .build();","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertTrue(uniqueTaskList.contains(editedA));","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueTaskList.add(TASK_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(TASK_A));","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, TASK_A));","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(TASK_A, null));","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(TASK_A, TASK_A));","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueTaskList.add(TASK_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueTaskList.setTask(TASK_A, TASK_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"Tianqi-Zhu"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"Tianqi-Zhu"},"content":"        expectedUniqueTaskList.add(TASK_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setTask_editedTaskHasSameIdentity_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueTaskList.add(TASK_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"Tianqi-Zhu"},"content":"        Task editedA \u003d new TaskBuilder(TASK_A).withDescription(TaskCommandTestUtil.VALID_DESCRIPTION_B).withEndDateTime(","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"Tianqi-Zhu"},"content":"                        TaskCommandTestUtil.VALID_END_B)","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"Tianqi-Zhu"},"content":"                .build();","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueTaskList.setTask(TASK_A, editedA);","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"Tianqi-Zhu"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"Tianqi-Zhu"},"content":"        expectedUniqueTaskList.add(editedA);","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueTaskList.add(TASK_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueTaskList.setTask(TASK_A, TASK_B);","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"Tianqi-Zhu"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"Tianqi-Zhu"},"content":"        expectedUniqueTaskList.add(TASK_B);","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueTaskList.add(TASK_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueTaskList.add(TASK_B);","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(TASK_A, TASK_B));","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(TASK_A));","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueTaskList.add(TASK_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueTaskList.remove(TASK_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"Tianqi-Zhu"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueTaskList.add(TASK_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"Tianqi-Zhu"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"Tianqi-Zhu"},"content":"        expectedUniqueTaskList.add(TASK_B);","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueTaskList.setTasks(expectedUniqueTaskList);","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueTaskList.add(TASK_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"Tianqi-Zhu"},"content":"        List\u003cTask\u003e taskList \u003d Collections.singletonList(TASK_B);","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"Tianqi-Zhu"},"content":"        uniqueTaskList.setTasks(taskList);","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"Tianqi-Zhu"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"Tianqi-Zhu"},"content":"        expectedUniqueTaskList.add(TASK_B);","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-10-16"},{"lineNumber":158,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":161,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":162,"author":{"gitId":"Tianqi-Zhu"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(TASK_A, TASK_A);","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":165,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":166,"author":{"gitId":"Tianqi-Zhu"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":167,"author":{"gitId":"Tianqi-Zhu"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":168,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-17"},{"lineNumber":169,"author":{"gitId":"Tianqi-Zhu"},"content":"            -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":170,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":171,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Tianqi-Zhu":171}},{"path":"src/test/java/manageme/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Address;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Email;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Name;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Phone;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.Assert;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TypicalPersons;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"    private static final String VALID_NAME \u003d TypicalPersons.BENSON.getName().toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"    private static final String VALID_PHONE \u003d TypicalPersons.BENSON.getPhone().toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"    private static final String VALID_EMAIL \u003d TypicalPersons.BENSON.getEmail().toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"    private static final String VALID_ADDRESS \u003d TypicalPersons.BENSON.getAddress().toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d TypicalPersons.BENSON.getTags().stream()","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(TypicalPersons.BENSON);","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(TypicalPersons.BENSON, person.toModelType());","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Tianqi-Zhu":25,"-":85}},{"path":"src/test/java/manageme/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskName;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.Assert;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TypicalTasks;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"    private static final String INVALID_NAME \u003d \" \";","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"    //private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"    //private static final String INVALID_MODULE \u003d \"example.com\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"    private static final String INVALID_START \u003d \"10-10-2021\";","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    private static final String INVALID_END \u003d \"11-11-2021\";","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"    private static final String VALID_NAME \u003d TypicalTasks.TASK_A.getName().toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"    private static final String VALID_DESCRIPTION \u003d TypicalTasks.TASK_A.getDescription().toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"    private static final String VALID_MODULE \u003d TypicalTasks.TASK_A.getTaskModule().toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"    private static final String VALID_START \u003d TypicalTasks.TASK_A.getStart().toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"    private static final String VALID_END \u003d TypicalTasks.TASK_A.getEnd().toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"    //private static final List\u003cJsonAdaptedTag\u003e VALID_END \u003d TASK_A.getEnd().stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    //       .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"    //        .collect(Collectors.toList());V","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(TypicalTasks.TASK_A);","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"        assertEquals(TypicalTasks.TASK_A, task.toModelType());","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"                new JsonAdaptedTask(INVALID_NAME, VALID_DESCRIPTION, VALID_MODULE, VALID_START, VALID_END);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"        String expectedMessage \u003d TaskName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(null, VALID_DESCRIPTION, VALID_MODULE, VALID_START, VALID_END);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskName.class.getSimpleName());","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"    //@Test","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"    //public void toModelType_invalidTask_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"    //    JsonAdaptedTask task \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"    //            new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_MODULE, INVALID_START, VALID_END);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"    //    String expectedMessage \u003d TaskTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"    //    assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"    //}","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"    //@Test","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"    //public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"    //    JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, null, VALID_START, VALID_END);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"    //    String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"    //    assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"    //}","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"    //@Test","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"    //public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"    //    JsonAdaptedTask task \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"    //            new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_MODULE, INVALID_START, VALID_END);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"    //    String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"    //   assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"    //}","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"    //@Test","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"    //public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"    //    JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_MODULE, null, VALID_END);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"zhangchengchuan"},"content":"    //    String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"zhangchengchuan"},"content":"    //    assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"    //}","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"zhangchengchuan"},"content":"    //@Test","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"zhangchengchuan"},"content":"    //public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"zhangchengchuan"},"content":"    //    List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_END);","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"zhangchengchuan"},"content":"    //    invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"zhangchengchuan"},"content":"    //    JsonAdaptedTask task \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"zhangchengchuan"},"content":"    //            new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_MODULE, VALID_START, invalidTags);","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"zhangchengchuan"},"content":"    //    assertThrows(IllegalValueException.class, task::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"zhangchengchuan"},"content":"    //}","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"markuslim24":1,"zhangchengchuan":73,"Tianqi-Zhu":15}},{"path":"src/test/java/manageme/storage/JsonManageMeStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.Assert;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TypicalManageMe;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TypicalPersons;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"public class JsonManageMeStorageTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"chowRuiYan"},"content":"    private java.util.Optional\u003cReadOnlyManageMe\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"chowRuiYan"},"content":"        return new JsonManageMeStorage(Paths.get(filePath)).readManageMe(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"    public void readAddressBook_invalidTaskAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"Task/invalidTaskManageMe.json\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(DataConversionException.class, ()","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Tianqi-Zhu"},"content":"            -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"    public void readAddressBook_invalidAndValidTaskAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(DataConversionException.class, ()","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"Tianqi-Zhu"},"content":"            -\u003e readAddressBook(\"Task/invalidAndValidTaskAddressBook.json\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"Tianqi-Zhu"},"content":"        ManageMe original \u003d TypicalManageMe.getTypicalManageMe();","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"        JsonManageMeStorage jsonAddressBookStorage \u003d new JsonManageMeStorage(filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"        jsonAddressBookStorage.saveManageMe(original, filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"        ReadOnlyManageMe readBack \u003d jsonAddressBookStorage.readManageMe(filePath).get();","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(original, new ManageMe(readBack));","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"Tianqi-Zhu"},"content":"        original.addPerson(TypicalPersons.HOON);","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"Tianqi-Zhu"},"content":"        original.removePerson(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"chowRuiYan"},"content":"        jsonAddressBookStorage.saveManageMe(original, filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"chowRuiYan"},"content":"        readBack \u003d jsonAddressBookStorage.readManageMe(filePath).get();","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(original, new ManageMe(readBack));","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"Tianqi-Zhu"},"content":"        original.addPerson(TypicalPersons.IDA);","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"chowRuiYan"},"content":"        jsonAddressBookStorage.saveManageMe(original); // file path not specified","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"chowRuiYan"},"content":"        readBack \u003d jsonAddressBookStorage.readManageMe().get(); // file path not specified","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(original, new ManageMe(readBack));","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"chowRuiYan"},"content":"    private void saveAddressBook(ReadOnlyManageMe addressBook, String filePath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"chowRuiYan"},"content":"            new JsonManageMeStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"chowRuiYan"},"content":"                    .saveManageMe(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new ManageMe(), null));","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zhangchengchuan":8,"chowRuiYan":16,"Tianqi-Zhu":23,"-":73}},{"path":"src/test/java/manageme/storage/JsonSerializableManageMeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.util.JsonUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.Assert;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TypicalManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TypicalTasks;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"public class JsonSerializableManageMeTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"    private static final Path TEST_DATA_FOLDER \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"chowRuiYan"},"content":"            Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableManageMeTest\");","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    private static final Path TYPICAL_MANAGE_ME_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalManageMe.json\");","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"    private static final Path TEST_TASK_DATA_FOLDER \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"chowRuiYan"},"content":"            Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableManageMeTest\", \"Task\");","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"chowRuiYan"},"content":"    private static final Path TYPICAL_TASKS_FILE \u003d TEST_TASK_DATA_FOLDER.resolve(\"typicalTasksManageMe.json\");","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"chowRuiYan"},"content":"    private static final Path INVALID_TASK_FILE \u003d TEST_TASK_DATA_FOLDER.resolve(\"invalidTaskManageMe.json\");","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"chowRuiYan"},"content":"    private static final Path DUPLICATE_TASK_FILE \u003d TEST_TASK_DATA_FOLDER.resolve(\"duplicateTaskManageMe.json\");","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"    private static final Path DUPLICATE_MODULE_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateModuleManageMe.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"    //private static final Path DUPLICATE_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTaskManageMe.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"    public void toModelType_typicalTasksFile_success() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"        JsonSerializableManageMe dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"                JsonSerializableManageMe.class).get();","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"        ManageMe manageMeFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"        ManageMe typicalTasksManageMe \u003d TypicalTasks.getTypicalAddressBook();","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(manageMeFromFile, typicalTasksManageMe);","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"    public void toModelType_invalidTasksFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"        JsonSerializableManageMe dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"                JsonSerializableManageMe.class).orElse(null);","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"    public void toModelType_typicalManageMeFile_success() throws Exception {","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"        JsonSerializableManageMe dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_MANAGE_ME_FILE,","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"                JsonSerializableManageMe.class).get();","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"chowRuiYan"},"content":"        ManageMe manageMeFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"chowRuiYan"},"content":"        ManageMe typicalManageMe \u003d TypicalManageMe.getTypicalManageMe();","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(manageMeFromFile, typicalManageMe);","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"        JsonSerializableManageMe dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"                JsonSerializableManageMe.class).orElse(null);","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"chowRuiYan"},"content":"        JsonSerializableManageMe dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"chowRuiYan"},"content":"                JsonSerializableManageMe.class).orElse(null);","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(IllegalValueException.class, JsonSerializableManageMe.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"chowRuiYan"},"content":"    public void toModelType_duplicateModules_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"chowRuiYan"},"content":"        JsonSerializableManageMe dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_MODULE_FILE,","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"chowRuiYan"},"content":"                JsonSerializableManageMe.class).orElse(null);","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(IllegalValueException.class, JsonSerializableManageMe.MESSAGE_DUPLICATE_MODULE,","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"chowRuiYan"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"chowRuiYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"chowRuiYan"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"chowRuiYan"},"content":"        JsonSerializableManageMe dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TASK_FILE,","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"chowRuiYan"},"content":"                JsonSerializableManageMe.class).orElse(null);","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(IllegalValueException.class, JsonSerializableManageMe.MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"chowRuiYan"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zhangchengchuan":11,"chowRuiYan":38,"Tianqi-Zhu":12,"-":26}},{"path":"src/test/java/manageme/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.GuiSettings;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.Assert;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"chowRuiYan"},"content":"        userPrefs.setManageMeFilePath(Paths.get(\"data/manageme.json\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chowRuiYan":1,"Tianqi-Zhu":9,"-":113}},{"path":"src/test/java/manageme/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.GuiSettings;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ReadOnlyManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.TypicalManageMe;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"chowRuiYan"},"content":"        JsonManageMeStorage addressBookStorage \u003d new JsonManageMeStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"Tianqi-Zhu"},"content":"        ManageMe original \u003d TypicalManageMe.getTypicalManageMe();","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"chowRuiYan"},"content":"        storageManager.saveManageMe(original);","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"chowRuiYan"},"content":"        ReadOnlyManageMe retrieved \u003d storageManager.readManageMe().get();","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"chowRuiYan"},"content":"        assertEquals(original, new ManageMe(retrieved));","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"chowRuiYan"},"content":"        assertNotNull(storageManager.getManageMeFilePath());","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chowRuiYan":5,"Tianqi-Zhu":7,"-":56}},{"path":"src/test/java/manageme/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":33}},{"path":"src/test/java/manageme/testutil/EditModuleDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.module.EditModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.link.Link;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.ModuleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"JinxinZhao315"},"content":"public class EditModuleDescriptorBuilder {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"JinxinZhao315"},"content":"    private EditModuleCommand.EditModuleDescriptor descriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"JinxinZhao315"},"content":"    public EditModuleDescriptorBuilder() {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"JinxinZhao315"},"content":"        descriptor \u003d new EditModuleCommand.EditModuleDescriptor();","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"    public EditModuleDescriptorBuilder(EditModuleCommand.EditModuleDescriptor descriptor) {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"        this.descriptor \u003d new EditModuleCommand.EditModuleDescriptor(descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"     * Returns an {@code EditModuleDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"JinxinZhao315"},"content":"    public EditModuleDescriptorBuilder(Module module) {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":"        descriptor \u003d new EditModuleCommand.EditModuleDescriptor();","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"JinxinZhao315"},"content":"        descriptor.setModuleName(module.getModuleName());","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"JinxinZhao315"},"content":"        descriptor.setLink(module.getLink());","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"JinxinZhao315"},"content":"     * Sets the {@code ModuleName} of the {@code EditModuleDescriptor} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":"    public EditModuleDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"JinxinZhao315"},"content":"        descriptor.setModuleName(new ModuleName(name));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"JinxinZhao315"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"JinxinZhao315"},"content":"     * Sets the {@code Link} of the {@code EditModuleDescriptor} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"JinxinZhao315"},"content":"    public EditModuleDescriptorBuilder withLink(String link) {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"JinxinZhao315"},"content":"        descriptor.setLink(new Link(link));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"JinxinZhao315"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"JinxinZhao315"},"content":"    public EditModuleCommand.EditModuleDescriptor build() {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"JinxinZhao315"},"content":"        return descriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"JinxinZhao315":44,"Tianqi-Zhu":5}},{"path":"src/test/java/manageme/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Address;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Email;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Name;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Phone;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Tianqi-Zhu":8,"-":79}},{"path":"src/test/java/manageme/testutil/EditTaskDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.task.EditTaskCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskDescription;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskModule;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskName;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":" * A utility class to help with building EditTaskDescriptor objects.","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"public class EditTaskDescriptorBuilder {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"    private EditTaskCommand.EditTaskDescriptor descriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"    public EditTaskDescriptorBuilder() {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"        descriptor \u003d new EditTaskCommand.EditTaskDescriptor();","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"    public EditTaskDescriptorBuilder(EditTaskCommand.EditTaskDescriptor descriptor) {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"        this.descriptor \u003d new EditTaskCommand.EditTaskDescriptor(descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"     * Returns an {@code EditTaskDescriptor} with fields containing {@code task}\u0027s details","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"    public EditTaskDescriptorBuilder(Task task) {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"        descriptor \u003d new EditTaskCommand.EditTaskDescriptor();","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"        descriptor.setName(task.getName());","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"        descriptor.setDescription(task.getDescription());","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"        descriptor.setModule(task.getTaskModule());","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"        descriptor.setStart(task.getStart());","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"        descriptor.setEnd(task.getEnd());","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"     * Sets the {@code TaskName} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"    public EditTaskDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"        descriptor.setName(new TaskName(name));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"     * Sets the {@code TaskDescription} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"    public EditTaskDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"        descriptor.setDescription(new TaskDescription(description));","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"markuslim24"},"content":"     * Sets the {@code TaskModule} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"    public EditTaskDescriptorBuilder withModule(String module) {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"markuslim24"},"content":"        descriptor.setModule(new TaskModule(module));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"markuslim24"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"markuslim24"},"content":"     * Sets the {@code start} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"markuslim24"},"content":"    public EditTaskDescriptorBuilder withStartDateTime(String start) {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"markuslim24"},"content":"        descriptor.setStart(new TaskTime(start));","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"markuslim24"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"markuslim24"},"content":"     * Sets the {@code end} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"markuslim24"},"content":"    public EditTaskDescriptorBuilder withEndDateTime(String end) {","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"markuslim24"},"content":"        descriptor.setEnd(new TaskTime(end));","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"markuslim24"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"markuslim24"},"content":"    public EditTaskCommand.EditTaskDescriptor build() {","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"markuslim24"},"content":"        return descriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"markuslim24":73,"Tianqi-Zhu":7}},{"path":"src/test/java/manageme/testutil/LinkBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.link.Link;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"JinxinZhao315"},"content":"public class LinkBuilder {","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String DEFAULT_NAME \u003d \"Tutorial Link\";","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"JinxinZhao315"},"content":"    public static final String DEFAULT_LINK \u003d \"www.luminus.com\";","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"JinxinZhao315"},"content":"    private String name;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"JinxinZhao315"},"content":"    private String link;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"JinxinZhao315"},"content":"     * Creates a {@code LinkBuilder} with the default details.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"    public LinkBuilder() {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"        name \u003d DEFAULT_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"        link \u003d DEFAULT_LINK;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"     * Initializes the LinkBuilder with the data of {@code LinkToCopy}.","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"JinxinZhao315"},"content":"    public LinkBuilder(Link linkToCopy) {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":"        name \u003d linkToCopy.getName();","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"JinxinZhao315"},"content":"        link \u003d linkToCopy.getLink();","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"     * Sets the {@code Name} of the {@code Link} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"    public LinkBuilder withName(String name) {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"JinxinZhao315"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"JinxinZhao315"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"JinxinZhao315"},"content":"     * Sets the {@code Link} of the {@code Link} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"JinxinZhao315"},"content":"    public LinkBuilder withLink(String link) {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"JinxinZhao315"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"JinxinZhao315"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"JinxinZhao315"},"content":"    public Link build() {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"JinxinZhao315"},"content":"        return new Link(name, link);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"JinxinZhao315":45,"Tianqi-Zhu":2}},{"path":"src/test/java/manageme/testutil/ManageMeBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"chowRuiYan"},"content":"public class ManageMeBuilder {","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"    private ManageMe manageMe;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    public ManageMeBuilder() {","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"chowRuiYan"},"content":"        manageMe \u003d new ManageMe();","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"chowRuiYan"},"content":"    public ManageMeBuilder(ManageMe manageMe) {","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"        this.manageMe \u003d manageMe;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":28,"author":{"gitId":"chowRuiYan"},"content":"    public ManageMeBuilder withPerson(Person person) {","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"chowRuiYan"},"content":"        manageMe.addPerson(person);","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"chowRuiYan"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"chowRuiYan"},"content":"    public ManageMeBuilder withModule(Module module) {","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"        manageMe.addModule(module);","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"chowRuiYan"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"chowRuiYan"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"chowRuiYan"},"content":"    public ManageMeBuilder withTask(Task task) {","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"chowRuiYan"},"content":"        manageMe.addTask(task);","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"chowRuiYan"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"    public ManageMe build() {","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"        return manageMe;","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chowRuiYan":26,"Tianqi-Zhu":5,"-":21}},{"path":"src/test/java/manageme/testutil/ModuleBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.link.Link;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.ModuleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"public class ModuleBuilder {","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String DEFAULT_NAME \u003d \"CS2103T\";","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final String DEFAULT_LINK \u003d \"https://nus-cs2103-ay2122s1.github.io/website/\";","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"    private ModuleName name;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"    private Link link;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"     * Creates a {@code ModuleBuilder} with the default details.","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"    public ModuleBuilder() {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"        name \u003d new ModuleName(DEFAULT_NAME);","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"        link \u003d new Link(DEFAULT_LINK);","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"     * Initializes the ModuleBuilder with the data of {@code moduleToCopy}.","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"    public ModuleBuilder(Module moduleToCopy) {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"        name \u003d moduleToCopy.getModuleName();","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"        link \u003d moduleToCopy.getLink();","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"     * Sets the {@code Name} of the {@code Module} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"    public ModuleBuilder withName(String name) {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"        this.name \u003d new ModuleName(name);","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Tianqi-Zhu"},"content":"     * Sets the {@code Address} of the {@code Module} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"    public ModuleBuilder withLink(String link) {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"        this.link \u003d new Link(link);","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"    public Module build() {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"        return new Module(name, link);","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Tianqi-Zhu":49}},{"path":"src/test/java/manageme/testutil/ModuleUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_LINK;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"JinxinZhao315"},"content":"import manageme.logic.commands.module.AddModuleCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.module.EditModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"public class ModuleUtil {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"     * Returns an add command string for adding the {@code module}.","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"JinxinZhao315"},"content":"    public static String getAddModuleCommand(Module module) {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"JinxinZhao315"},"content":"        return AddModuleCommand.COMMAND_WORD + \" \" + getModuleDetails(module);","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"     * Returns the part of command string for the given {@code module}\u0027s details.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static String getModuleDetails(Module module) {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":"        sb.append(PREFIX_NAME + module.getModuleName().name + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"        sb.append(PREFIX_LINK + module.getLink().link + \" \");","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"     * Returns the part of command string for the given {@code EditModuleDescriptor}\u0027s details.","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static String getEditModuleDescriptorDetails(EditModuleCommand.EditModuleDescriptor descriptor) {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"JinxinZhao315"},"content":"        descriptor.getModuleName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.name).append(\" \"));","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Tianqi-Zhu"},"content":"        descriptor.getLink().ifPresent(link -\u003e sb.append(PREFIX_LINK).append(link.link).append(\" \"));","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"JinxinZhao315":5,"Tianqi-Zhu":33}},{"path":"src/test/java/manageme/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Address;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Email;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Name;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Phone;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Tianqi-Zhu":8,"-":88}},{"path":"src/test/java/manageme/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.AddCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Tianqi-Zhu":10,"-":52}},{"path":"src/test/java/manageme/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":71}},{"path":"src/test/java/manageme/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskDescription;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskModule;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskName;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.TaskTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"public class TaskBuilder {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"    public static final String DEFAULT_NAME \u003d \"Finish CS2103T TP\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"This is a default template text to test \"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"            + \"TaskDescription\";","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"    public static final String DEFAULT_MODULE \u003d \"CS2103T\";","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"    public static final String DEFAULT_STARTDATETIME \u003d \"2021-10-05T11:00\";","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"    public static final String DEFAULT_ENDDATETIME \u003d \"2021-10-12T23:59\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"    private TaskName name;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"    private TaskDescription description;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"    private TaskModule module;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"    private TaskTime start;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"    private TaskTime end;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"    public TaskBuilder() {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"        name \u003d new TaskName(DEFAULT_NAME);","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"        description \u003d new TaskDescription(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"        module \u003d new TaskModule();","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"        start \u003d new TaskTime(DEFAULT_STARTDATETIME);","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"        end \u003d new TaskTime(DEFAULT_ENDDATETIME);","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"        name \u003d taskToCopy.getName();","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"        module \u003d taskToCopy.getTaskModule();","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"        start \u003d taskToCopy.getStart();","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"        end \u003d taskToCopy.getEnd();","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"     * Sets the {@code name} of the {@code Task} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"    public TaskBuilder withName(String name) {","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"        this.name \u003d new TaskName(name);","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"markuslim24"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"markuslim24"},"content":"     * Sets the {@code description} of the {@code Task} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"markuslim24"},"content":"    public TaskBuilder withDescription(String description) {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"markuslim24"},"content":"        this.description \u003d new TaskDescription(description);","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"markuslim24"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"markuslim24"},"content":"     * Sets the {@code module} of the {@code Task} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"markuslim24"},"content":"    public TaskBuilder withModule(String taskModule) {","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"markuslim24"},"content":"        this.module \u003d taskModule.equals(\"\") ? TaskModule.empty() : new TaskModule(taskModule);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"markuslim24"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"markuslim24"},"content":"     * Sets the {@code start} of the {@code Task} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"markuslim24"},"content":"    public TaskBuilder withStartDateTime(String start) {","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"markuslim24"},"content":"        this.start \u003d new TaskTime(start);","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"markuslim24"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"markuslim24"},"content":"     * Sets the {@code end} of the {@code Task} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"markuslim24"},"content":"    public TaskBuilder withEndDateTime(String end) {","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"markuslim24"},"content":"        this.end \u003d new TaskTime(end);","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"markuslim24"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"markuslim24"},"content":"    public Task build() {","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"markuslim24"},"content":"        return new Task(name, description, module, start, end);","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"markuslim24":86,"Tianqi-Zhu":6}},{"path":"src/test/java/manageme/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tianqi-Zhu":4,"-":51}},{"path":"src/test/java/manageme/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"chowRuiYan"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"chowRuiYan"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"chowRuiYan"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"zhangchengchuan":6,"chowRuiYan":3,"Tianqi-Zhu":2,"-":7}},{"path":"src/test/java/manageme/testutil/TypicalLinks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.link.Link;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"JinxinZhao315"},"content":"public class TypicalLinks {","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"JinxinZhao315"},"content":"    public static final Link LINK_LUMINUS \u003d new LinkBuilder().withLink(\"www.luminus.com\")","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"JinxinZhao315"},"content":"            .withName(\"Tutorial\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"JinxinZhao315"},"content":"    public static final Link LINK_YOUTUBE \u003d new LinkBuilder().withLink(\"www.youtube.com\")","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"JinxinZhao315"},"content":"            .withName(\"Lecture\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"JinxinZhao315"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"JinxinZhao315":9,"Tianqi-Zhu":2}},{"path":"src/test/java/manageme/testutil/TypicalManageMe.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"import static manageme.testutil.TypicalTasks.getTypicalTasks;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"public class TypicalManageMe {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Tianqi-Zhu"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"Tianqi-Zhu"},"content":"     * Returns an {@code ManageMe} with all the typical persons, modules and tasks.","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static ManageMe getTypicalManageMe() {","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"        ManageMe ab \u003d new ManageMe();","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"        for (Person person : TypicalPersons.getTypicalPersons()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Tianqi-Zhu"},"content":"            ab.addPerson(person);","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Tianqi-Zhu"},"content":"        for (Module module : TypicalModules.getTypicalModules()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Tianqi-Zhu"},"content":"            ab.addModule(module);","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"            ab.addTask(task);","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"        return ab;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Tianqi-Zhu":29}},{"path":"src/test/java/manageme/testutil/TypicalModules.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"JinxinZhao315"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"JinxinZhao315"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"JinxinZhao315"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Tianqi-Zhu"},"content":"public class TypicalModules {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"JinxinZhao315"},"content":"    public static final Module MODULE_A \u003d new ModuleBuilder().withName(\"CS111\")","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"JinxinZhao315"},"content":"            .withLink(\"https://www.google.com\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"JinxinZhao315"},"content":"    public static final Module MODULE_B \u003d new ModuleBuilder().withName(\"CS222\")","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"            .withLink(\"https://www.github.com\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Tianqi-Zhu"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Tianqi-Zhu"},"content":"    private TypicalModules() {} // prevents instantiation","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"JinxinZhao315"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"JinxinZhao315"},"content":"     * Returns an {@code ManageMe} with all the typical modules.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"JinxinZhao315"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"JinxinZhao315"},"content":"    public static ManageMe getTypicalManageMe() {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"chowRuiYan"},"content":"        ManageMe ab \u003d new ManageMe();","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"JinxinZhao315"},"content":"        for (Module module : getTypicalModules()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"JinxinZhao315"},"content":"            ab.addModule(module);","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"JinxinZhao315"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"JinxinZhao315"},"content":"        return ab;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"JinxinZhao315"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"JinxinZhao315"},"content":"    public static List\u003cModule\u003e getTypicalModules() {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"chowRuiYan"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MODULE_A, MODULE_B));","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"JinxinZhao315"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"JinxinZhao315":20,"chowRuiYan":2,"Tianqi-Zhu":10}},{"path":"src/test/java/manageme/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":41,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(CommandTestUtil.VALID_NAME_AMY).withPhone(","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Tianqi-Zhu"},"content":"                    CommandTestUtil.VALID_PHONE_AMY)","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"            .withEmail(CommandTestUtil.VALID_EMAIL_AMY).withAddress(CommandTestUtil.VALID_ADDRESS_AMY).withTags(","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"                    CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Tianqi-Zhu"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(CommandTestUtil.VALID_NAME_BOB).withPhone(","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Tianqi-Zhu"},"content":"                    CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Tianqi-Zhu"},"content":"            .withEmail(CommandTestUtil.VALID_EMAIL_BOB).withAddress(CommandTestUtil.VALID_ADDRESS_BOB).withTags(","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Tianqi-Zhu"},"content":"                    CommandTestUtil.VALID_TAG_HUSBAND, CommandTestUtil.VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Tianqi-Zhu":11,"-":45}},{"path":"src/test/java/manageme/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"chowRuiYan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"chowRuiYan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"chowRuiYan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.logic.commands.task.TaskCommandTestUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.ManageMe;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.model.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"public class TypicalTasks {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"    public static final Task TASK_A \u003d new TaskBuilder().withName(\"Eat with friends\")","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"            .withDescription(\"At NUS UTown\")","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"            .withStartDateTime(\"2021-10-05T11:50\")","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"            .withEndDateTime(\"2021-10-05T14:00\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"    public static final Task TASK_B \u003d new TaskBuilder().withName(\"Work on CS2100 Assignment 2\")","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"            .withDescription(\"Refer to lectures 7-13\")","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"            .withModule(\"CS2100\")","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"            .withStartDateTime(\"2021-10-07T23:59\")","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"            .withEndDateTime(\"2021-10-14T23:59\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"    // Manually added - Task\u0027s details found in {@code TaskCommandTestUtil}","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"    public static final Task TASK_A_MANUAL \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"Tianqi-Zhu"},"content":"            new TaskBuilder().withName(TaskCommandTestUtil.VALID_NAME_A)","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Tianqi-Zhu"},"content":"                    .withDescription(TaskCommandTestUtil.VALID_DESCRIPTION_A)","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Tianqi-Zhu"},"content":"                    .withModule(TaskCommandTestUtil.VALID_MODULE_A)","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Tianqi-Zhu"},"content":"                    .withStartDateTime(TaskCommandTestUtil.VALID_START_A)","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Tianqi-Zhu"},"content":"                    .withEndDateTime(TaskCommandTestUtil.VALID_END_A).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"    public static final Task TASK_B_MANUAL \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"            new TaskBuilder().withName(TaskCommandTestUtil.VALID_NAME_B)","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Tianqi-Zhu"},"content":"                    .withDescription(TaskCommandTestUtil.VALID_DESCRIPTION_B)","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Tianqi-Zhu"},"content":"                    .withModule(TaskCommandTestUtil.VALID_MODULE_B)","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Tianqi-Zhu"},"content":"                    .withStartDateTime(TaskCommandTestUtil.VALID_START_B)","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Tianqi-Zhu"},"content":"                    .withEndDateTime(TaskCommandTestUtil.VALID_END_B).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"chowRuiYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"     * Returns an {@code AddressBook} with all the typical tasks.","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"chowRuiYan"},"content":"    public static ManageMe getTypicalAddressBook() {","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"chowRuiYan"},"content":"        ManageMe ab \u003d new ManageMe();","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"            ab.addTask(task);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"        return ab;","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"chowRuiYan"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"chowRuiYan"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(TASK_A, TASK_B));","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"chowRuiYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"markuslim24":16,"zhangchengchuan":9,"chowRuiYan":12,"Tianqi-Zhu":15}},{"path":"src/test/java/manageme/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Tianqi-Zhu":1,"-":34}},{"path":"src/test/java/manageme/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tianqi-Zhu"},"content":"package manageme.ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.MainApp;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Tianqi-Zhu"},"content":"import manageme.testutil.Assert;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"Tianqi-Zhu"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Tianqi-Zhu":15,"-":99}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"\u003c?import manageme.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"Tianqi-Zhu":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"Tianqi-Zhu"},"content":"\u003c?import manageme.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Tianqi-Zhu"},"content":"\u003cfx:root type\u003d\"TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"Tianqi-Zhu":2}}]
