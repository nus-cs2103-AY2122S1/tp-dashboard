[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-F12-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-F12-1/tp/actions)","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-F12-1/tp/branch/master/graph/badge.svg?token\u003d6LH2DLRN3E)](https://codecov.io/gh/AY2122S1-CS2103T-F12-1/tp)","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"**SmartNUS** is a desktop app specifically designed for students to revise for their exams. It has been optimized for use via a Command Line Interface but it also incorporates a Graphical User Interface (GUI). SmartNUS is the go-to app if youâ€™re a fast typer or if you need a tool to streamline your revision process. Download today!","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"For the detailed documentation of this project, see the **[SmartNUS Product Website](https://ay2122s1-cs2103t-f12-1.github.io/tp/)**.","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"## Acknowledgements","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"This project is based on the AddressBook-Level3 project by [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"ryanpeh":9,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"mainClassName \u003d \u0027seedu.smartnus.Main\u0027","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"    archiveName \u003d \u0027smartnus.jar\u0027","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"ryanpeh"},"content":"run {","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"ryanpeh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"neojxuan":2,"ryanpeh":2,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"**SmartNUS** is a project built for CS2103T Software Engineering.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"## Project Team","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"### Abhishek Gupta","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"\u003cimg src\u003d\"images/agentum07.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"[[github](https://github.com/agentum07)]","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"* Role: Developer","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"### Arya Nagatama Giat","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"\u003cimg src\u003d\"images/aryagiat.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"[[github](http://github.com/aryagiat)]","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"* Role: Developer","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"### Neo Jing Xuan","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"\u003cimg src\u003d\"images/neojxuan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"[[github](http://github.com/neojxuan)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"### Ong Jun Heng, Cedric","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"\u003cimg src\u003d\"images/cedricongjh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"[[github](http://github.com/cedricongjh)]","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"ryanpeh"},"content":"### Peh Kai Min, Ryan","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"ryanpeh"},"content":"\u003cimg src\u003d\"images/ryanpeh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"ryanpeh"},"content":"[[github](http://github.com/ryanpeh)]","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"ryanpeh"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"ryanpeh":25,"-":34}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"aryagiat"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/smartnus/ui/Ui.java)","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `QuestionListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"* depends on some classes in the `Model` component, as it displays `Question` object residing in the `Model`.","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"aryagiat"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/smartnus/logic/Logic.java)","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"ryanpeh"},"content":"1. When `Logic` is called upon to execute a command, it uses either the `SmartNusParser` or the `QuizInputParser` class to parse the user command.","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"neojxuan"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a question).","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"ryanpeh"},"content":"* When called upon to parse a user command, either the `SmartNusParser` class or the `QuizInputParser`class will create a `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"ryanpeh"},"content":"How the `Logic` component determines which parser to use:","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"ryanpeh"},"content":"- The `Logic` component uses either the `SmartNusParser` or the `QuizInputParser` class to parse the user command, depending on whether the user is entering the command while in a quiz.","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"ryanpeh"},"content":"- Different parsers are used due to different commands being available to the user during the quiz.","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"ryanpeh"},"content":"- The `LogicManager` class achieves this through the usage of overloaded methods, `parseCommand(String)` and `parseCommand(String, QuizManager)`, with the latter for parsing commands while in a quiz.","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"ryanpeh"},"content":"- This was implemented with the consideration that the `QuizInputParser` would require a `QuizManager` argument to be passed to various `XYZCommandParser` and `Command` classes to carry out the various quiz functionality.","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"aryagiat"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/smartnus/model/Model.java)","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"neojxuan"},"content":"* stores the smartNUS data i.e., all [`Question`](#question-class) and `Quiz` objects (which are contained in a `UniqueQuestionList` object).","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"neojxuan"},"content":"* stores the currently \u0027selected\u0027 `Question` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cQuestion\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"neojxuan"},"content":"* stores another list of the currently \u0027selected\u0027 `Question` objects for a `Quiz` as a separate _filtered_ list which is also exposed to outsiders as an unmodifiable `ObservableList\u003cQuestion\u003e` that can be used in the Quiz UI","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"neojxuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `SmartNus` model, which `Question` references. This allows `SmartNus` to only require one `Tag` object per unique tag, instead of each `Question` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"neojxuan"},"content":"## Question class","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"neojxuan"},"content":"The `Question` class is an abstract class that stores a name, importance, and any number of tags and `Choices`.","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"neojxuan"},"content":"A `Choice` stores a name and a boolean value `isCorrect` representing if it is a correct answer to the `Question`.","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"neojxuan"},"content":"The validity of a `Question` depends on the type of question.","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"neojxuan"},"content":"Types of Questions currently supported by SmartNUS and their conditions for validity are:","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"neojxuan"},"content":"1. Multiple Choice Questions","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"neojxuan"},"content":"   * Has four `Choices` in total, exactly one of which is correct","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"neojxuan"},"content":"2. True-False Questions","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"cedricongjh"},"content":"   * Has two `Choices` in total, which can only be \"True\" and \"False\", exactly one of which is correct","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"neojxuan"},"content":"3. Multiple Response Questions (coming soon)","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"neojxuan"},"content":"   * Has four `Choices` in total, at least one of which is correct","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"neojxuan"},"content":"4. Open-Ended Questions (coming soon)","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"aryagiat"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/smartnus/storage/Storage.java)","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"neojxuan"},"content":"Classes used by multiple components are in the `seedu.smartnus.commons` package.","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"neojxuan"},"content":"Step 2. The user executes `delete 5` command to delete the 5th question in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-09-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"neojxuan"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new question. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-09-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"neojxuan"},"content":"Step 4. The user now decides that adding the question was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-09-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"neojxuan"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the question being deleted).","lastModifiedDate":"2021-09-25"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"neojxuan"},"content":"* needs to organise and revise materials for many modules","lastModifiedDate":"2021-10-01"},{"lineNumber":284,"author":{"gitId":"neojxuan"},"content":"* wants to note down important information in the form of questions and answers that they can quiz themselves on","lastModifiedDate":"2021-10-01"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"neojxuan"},"content":"**Value proposition**: organise and revise information faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-10-01"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹                                    | I want to â€¦â€‹                     | So that I canâ€¦â€‹                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"Agentum07"},"content":"| `* * *`  | NUS Student | add a multiple choice question to the topic         | review the question in MCQ style|","lastModifiedDate":"2021-09-30"},{"lineNumber":300,"author":{"gitId":"Agentum07"},"content":"| `* * *`  | NUS Student | add an answer to the multiple choice question       | see the correct answer during the review                                                                        |","lastModifiedDate":"2021-09-30"},{"lineNumber":301,"author":{"gitId":"Agentum07"},"content":"| `* * *`  | NUS Student | delete the question and at the same time delete all answers belonging to that question | remove questions and answer that are not needed|","lastModifiedDate":"2021-09-30"},{"lineNumber":302,"author":{"gitId":"Agentum07"},"content":"| `* * *`  | NUS Student | do a quiz containing only questions from a certain tag       | revise questions for the specific tag|","lastModifiedDate":"2021-09-30"},{"lineNumber":303,"author":{"gitId":"Agentum07"},"content":"| `* * *`  | NUS Student | specify the number of questions to be included in any quiz| revise the number of questions taking into account time constraints or the importance I place on that module/topic, rather than having to go through all questions|","lastModifiedDate":"2021-09-30"},{"lineNumber":304,"author":{"gitId":"Agentum07"},"content":"| `* * *`  | NUS Student | see the list of all commands | know what commands to use to perform a specific task that I want|","lastModifiedDate":"2021-09-30"},{"lineNumber":305,"author":{"gitId":"Agentum07"},"content":"| `* * *`  | NUS Student | specify the number of questions to be included in any quiz| revise the number of questions taking into account time constraints or the importance I place on that module/topic, rather than having to go through all questions|","lastModifiedDate":"2021-09-30"},{"lineNumber":306,"author":{"gitId":"Agentum07"},"content":"| `* * *`  | NUS Student | add tags | tag questions to categorise them and search through them easily|","lastModifiedDate":"2021-09-30"},{"lineNumber":307,"author":{"gitId":"Agentum07"},"content":"| `* * *`  | NUS Student | delete existing tag | delete unneeded tags|","lastModifiedDate":"2021-09-30"},{"lineNumber":308,"author":{"gitId":"Agentum07"},"content":"| `* * *`  | NUS Student | add a True or False question to the topic | review the question in T/F style|","lastModifiedDate":"2021-09-30"},{"lineNumber":309,"author":{"gitId":"Agentum07"},"content":"| `* * *`  | NUS Student | add an open ended question to the topic | review the question open endedly|","lastModifiedDate":"2021-09-30"},{"lineNumber":310,"author":{"gitId":"Agentum07"},"content":"| `* * *`  | NUS Student | add an answer to the True or False question | see the correct answer during the review|","lastModifiedDate":"2021-09-30"},{"lineNumber":311,"author":{"gitId":"Agentum07"},"content":"| `* * *`  | NUS Student | add an answer to the open ended question | see the correct answer during the review|","lastModifiedDate":"2021-09-30"},{"lineNumber":312,"author":{"gitId":"Agentum07"},"content":"| `* * *`  | NUS Student | tag questions with custom tags (e.g. midterm, quiz, finals) | mark questions (add a note)|","lastModifiedDate":"2021-09-30"},{"lineNumber":313,"author":{"gitId":"Agentum07"},"content":"| `* *`    | NUS Student | end the quiz mid way | end the quiz without finishing it, and return to question list|","lastModifiedDate":"2021-09-30"},{"lineNumber":314,"author":{"gitId":"Agentum07"},"content":"| `* * `   | NUS Student | search questions by tag | filter out questions based on the specific tags|","lastModifiedDate":"2021-09-30"},{"lineNumber":315,"author":{"gitId":"Agentum07"},"content":"| `* * `   | NUS Student | search questions by keyword | filter out questions based on the specific keyword|","lastModifiedDate":"2021-09-30"},{"lineNumber":316,"author":{"gitId":"Agentum07"},"content":"| `* *`    | NUS Student | update existing tag | change a tag if there is a typo|","lastModifiedDate":"2021-09-30"},{"lineNumber":317,"author":{"gitId":"Agentum07"},"content":"| `* *`    | NUS Student | edit the multiple choice question | amend the question just in case I made a mistake |","lastModifiedDate":"2021-09-30"},{"lineNumber":318,"author":{"gitId":"Agentum07"},"content":"| `* *`    | NUS Student | edit the True or False question | amend the question just in case I made a mistake |","lastModifiedDate":"2021-09-30"},{"lineNumber":319,"author":{"gitId":"Agentum07"},"content":"| `* *`    | NUS Student | edit the open ended question | amend the question just in case I made a mistake |","lastModifiedDate":"2021-09-30"},{"lineNumber":320,"author":{"gitId":"Agentum07"},"content":"| `* *`    | NUS Student | edit the multiple choice answer | amend the answer just in case I made a mistake |","lastModifiedDate":"2021-09-30"},{"lineNumber":321,"author":{"gitId":"Agentum07"},"content":"| `* *`    | NUS Student | edit the True or False answer | amend the answer just in case I made a mistake |","lastModifiedDate":"2021-09-30"},{"lineNumber":322,"author":{"gitId":"Agentum07"},"content":"| `* *`    | NUS Student | edit the open ended answer | amend the answer just in case I made a mistake |","lastModifiedDate":"2021-09-30"},{"lineNumber":323,"author":{"gitId":"Agentum07"},"content":"| `* *`    | NUS Student | mark a review as correct | track which questions I answered correctly |","lastModifiedDate":"2021-09-30"},{"lineNumber":324,"author":{"gitId":"Agentum07"},"content":"| `* *`    | NUS Student | mark a review as incorrect | track which questions I need to review again |","lastModifiedDate":"2021-09-30"},{"lineNumber":325,"author":{"gitId":"Agentum07"},"content":"| `*`      | NUS Student | undo a command | undo something that I did carelessly |","lastModifiedDate":"2021-09-30"},{"lineNumber":326,"author":{"gitId":"Agentum07"},"content":"| `*`      | NUS Student | add an exam date to a tag | prioritize which modules to study for |","lastModifiedDate":"2021-09-30"},{"lineNumber":327,"author":{"gitId":"Agentum07"},"content":"| `*`      | NUS Student | view how many times I have answered any question correctly and incorrectly | identify areas of improvement to focus on during revision|","lastModifiedDate":"2021-09-30"},{"lineNumber":328,"author":{"gitId":"Agentum07"},"content":"| `*`      | NUS Student | view how many times I have answered questions from a particular topic correctly and incorrectly| identify areas of improvement to focus on during revision|","lastModifiedDate":"2021-09-30"},{"lineNumber":329,"author":{"gitId":"Agentum07"},"content":"| `*`      | NUS Student | have Demo data already in the application [modules, QnA, tags]| see how the application works and try it out easily|","lastModifiedDate":"2021-09-30"},{"lineNumber":330,"author":{"gitId":"Agentum07"},"content":"| `*`      | NUS Student | create a deadline (date) for the selected topic| manage my time to review topics|","lastModifiedDate":"2021-09-30"},{"lineNumber":331,"author":{"gitId":"Agentum07"},"content":"| `*`      | NUS Student | view deleted questions | still see the questions I might need but have deleted|","lastModifiedDate":"2021-09-30"},{"lineNumber":332,"author":{"gitId":"Agentum07"},"content":"| `*`      | NUS Student | restore deleted questions | to restore questions that I deleted but need again|","lastModifiedDate":"2021-09-30"},{"lineNumber":333,"author":{"gitId":"Agentum07"},"content":"| `*`      | NUS Student | delete everything and start fresh | get rid of all data I have entered so far|","lastModifiedDate":"2021-09-30"},{"lineNumber":334,"author":{"gitId":"Agentum07"},"content":"| `*`      | NUS Student | go back or forward in the question list | review again the questions I have answered |","lastModifiedDate":"2021-09-30"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"neojxuan"},"content":"(For all use cases below, the **System** is the `SmartNUS` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-30"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":342,"author":{"gitId":"neojxuan"},"content":"**Use case: Add Multiple Choice question and options**","lastModifiedDate":"2021-09-30"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"neojxuan"},"content":"1.  User requests to add an MCQ question and its options, indicating the correct answer.","lastModifiedDate":"2021-09-30"},{"lineNumber":347,"author":{"gitId":"neojxuan"},"content":"2.  SmartNUS saves the question, its options and the correct answer.","lastModifiedDate":"2021-09-30"},{"lineNumber":348,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":349,"author":{"gitId":"neojxuan"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":350,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":351,"author":{"gitId":"neojxuan"},"content":"* 1a. User does not specify any options.","lastModifiedDate":"2021-09-30"},{"lineNumber":352,"author":{"gitId":"neojxuan"},"content":"* SmartNUS shows error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":353,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":354,"author":{"gitId":"neojxuan"},"content":"  Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":355,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":356,"author":{"gitId":"neojxuan"},"content":"* 1b. User does not specify the correct answer.","lastModifiedDate":"2021-09-30"},{"lineNumber":357,"author":{"gitId":"neojxuan"},"content":"* SmartNUS shows error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":358,"author":{"gitId":"neojxuan"},"content":"  ","lastModifiedDate":"2021-10-05"},{"lineNumber":359,"author":{"gitId":"neojxuan"},"content":"  Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"neojxuan"},"content":"* 1c. User specifies more than one correct answer.","lastModifiedDate":"2021-09-30"},{"lineNumber":362,"author":{"gitId":"neojxuan"},"content":"* SmartNUS shows error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":363,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":364,"author":{"gitId":"neojxuan"},"content":"  Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":365,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":366,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":367,"author":{"gitId":"neojxuan"},"content":"**Use case: Add True/False question**","lastModifiedDate":"2021-09-30"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"neojxuan"},"content":"1.  User requests to add a True/False question, indicating the correct answer.","lastModifiedDate":"2021-09-30"},{"lineNumber":372,"author":{"gitId":"neojxuan"},"content":"2.  SmartNUS saves the question and the correct answer.","lastModifiedDate":"2021-09-30"},{"lineNumber":373,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":374,"author":{"gitId":"neojxuan"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":375,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":376,"author":{"gitId":"neojxuan"},"content":"* 1a. User does not specify the correct answer.","lastModifiedDate":"2021-09-30"},{"lineNumber":377,"author":{"gitId":"neojxuan"},"content":"    * 1a1. SmartNUS shows error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":378,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":379,"author":{"gitId":"neojxuan"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":380,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":381,"author":{"gitId":"neojxuan"},"content":"* 1b. User specifies more than one correct answer.","lastModifiedDate":"2021-09-30"},{"lineNumber":382,"author":{"gitId":"neojxuan"},"content":"    * 1b1. SmartNUS shows error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":383,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":384,"author":{"gitId":"neojxuan"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":385,"author":{"gitId":"neojxuan"},"content":"      ","lastModifiedDate":"2021-09-30"},{"lineNumber":386,"author":{"gitId":"cedricongjh"},"content":"* 1c. User does not specify an appropriate answer.","lastModifiedDate":"2021-10-22"},{"lineNumber":387,"author":{"gitId":"cedricongjh"},"content":"    * 1c1. SmartNUS shows error message.","lastModifiedDate":"2021-10-22"},{"lineNumber":388,"author":{"gitId":"cedricongjh"},"content":"    ","lastModifiedDate":"2021-10-22"},{"lineNumber":389,"author":{"gitId":"cedricongjh"},"content":"        Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":390,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":391,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":392,"author":{"gitId":"neojxuan"},"content":"**Use case: Delete a question**","lastModifiedDate":"2021-09-30"},{"lineNumber":393,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":394,"author":{"gitId":"neojxuan"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"neojxuan"},"content":"1. User requests to list questions.","lastModifiedDate":"2021-09-30"},{"lineNumber":397,"author":{"gitId":"neojxuan"},"content":"2. SmartNUS shows a list of all questions.","lastModifiedDate":"2021-09-30"},{"lineNumber":398,"author":{"gitId":"neojxuan"},"content":"3. User requests to delete a specific question in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":399,"author":{"gitId":"neojxuan"},"content":"4. SmartNUS deletes the question.","lastModifiedDate":"2021-09-30"},{"lineNumber":400,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":401,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"neojxuan"},"content":"    * 2a1. SmartNUS shows message that there are no questions.","lastModifiedDate":"2021-09-30"},{"lineNumber":407,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":408,"author":{"gitId":"neojxuan"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"neojxuan"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":411,"author":{"gitId":"neojxuan"},"content":"    * 3a1. SmartNUS shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":412,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":413,"author":{"gitId":"neojxuan"},"content":"      Use case resumes at Step 2.","lastModifiedDate":"2021-09-30"},{"lineNumber":414,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":415,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":416,"author":{"gitId":"neojxuan"},"content":"**Use case: Tag a question**","lastModifiedDate":"2021-09-30"},{"lineNumber":417,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":418,"author":{"gitId":"neojxuan"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"neojxuan"},"content":"1.  User requests to list questions.","lastModifiedDate":"2021-09-30"},{"lineNumber":421,"author":{"gitId":"neojxuan"},"content":"2.  SmartNUS shows a list of all questions.","lastModifiedDate":"2021-09-30"},{"lineNumber":422,"author":{"gitId":"neojxuan"},"content":"3.  User requests to tag a specific question in the list with specific tag(s).","lastModifiedDate":"2021-09-30"},{"lineNumber":423,"author":{"gitId":"neojxuan"},"content":"4.  SmartNUS tags the question with the specified tags.  ","lastModifiedDate":"2021-09-30"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":426,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":428,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":429,"author":{"gitId":"neojxuan"},"content":"    * 2a1. SmartNUS shows message that there are no questions.","lastModifiedDate":"2021-09-30"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":431,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"neojxuan"},"content":"    * 3a1. SmartNUS shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":436,"author":{"gitId":"neojxuan"},"content":"      Use case resumes at Step 2.","lastModifiedDate":"2021-09-30"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"neojxuan"},"content":"* 3b. At least one specified tag does not exist.","lastModifiedDate":"2021-09-30"},{"lineNumber":439,"author":{"gitId":"neojxuan"},"content":"    * 3b1. SmartNUS creates tags that do not exist.","lastModifiedDate":"2021-09-30"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":441,"author":{"gitId":"neojxuan"},"content":"      Use case resumes at Step 4.","lastModifiedDate":"2021-09-30"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"neojxuan"},"content":"**Use case: List questions containing specific tags**","lastModifiedDate":"2021-10-23"},{"lineNumber":444,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":445,"author":{"gitId":"neojxuan"},"content":"**MSS**","lastModifiedDate":"2021-10-23"},{"lineNumber":446,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":447,"author":{"gitId":"neojxuan"},"content":"1. User requests to list questions containing specific tags.","lastModifiedDate":"2021-10-23"},{"lineNumber":448,"author":{"gitId":"neojxuan"},"content":"2. SmartNUS shows a list of questions that contain at least one of the tags.","lastModifiedDate":"2021-10-23"},{"lineNumber":449,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":450,"author":{"gitId":"neojxuan"},"content":"**Extensions**","lastModifiedDate":"2021-10-23"},{"lineNumber":451,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":452,"author":{"gitId":"neojxuan"},"content":"* 1a. User does not specify any tags.","lastModifiedDate":"2021-10-23"},{"lineNumber":453,"author":{"gitId":"neojxuan"},"content":"    * 1a1. SmartNUS shows an error message.","lastModifiedDate":"2021-10-23"},{"lineNumber":454,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":455,"author":{"gitId":"neojxuan"},"content":"    Use case ends.","lastModifiedDate":"2021-10-23"},{"lineNumber":456,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":457,"author":{"gitId":"neojxuan"},"content":"* 1b. User specifies tag names that are not alphanumeric.","lastModifiedDate":"2021-10-23"},{"lineNumber":458,"author":{"gitId":"neojxuan"},"content":"    * 1b1. SmartNUS shows an error message.","lastModifiedDate":"2021-10-23"},{"lineNumber":459,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":460,"author":{"gitId":"neojxuan"},"content":"    Use case ends.","lastModifiedDate":"2021-10-23"},{"lineNumber":461,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":462,"author":{"gitId":"neojxuan"},"content":"* 2a. There are no questions in SmartNUS that contain at least one of the specified tags.","lastModifiedDate":"2021-10-23"},{"lineNumber":463,"author":{"gitId":"neojxuan"},"content":"    * 2a1. SmartNUS shows message that there are no questions.","lastModifiedDate":"2021-10-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":465,"author":{"gitId":"neojxuan"},"content":"      Use case ends.","lastModifiedDate":"2021-10-23"},{"lineNumber":466,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"neojxuan"},"content":"**Use case: Start a quiz**","lastModifiedDate":"2021-09-30"},{"lineNumber":469,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":470,"author":{"gitId":"neojxuan"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":471,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":472,"author":{"gitId":"neojxuan"},"content":"1.  User requests to start a quiz, specifying number of questions and tags.","lastModifiedDate":"2021-09-30"},{"lineNumber":473,"author":{"gitId":"neojxuan"},"content":"2.  SmartNUS shows a question from one of the specified tags and its options.","lastModifiedDate":"2021-09-30"},{"lineNumber":474,"author":{"gitId":"neojxuan"},"content":"3.  User chooses one option.","lastModifiedDate":"2021-09-30"},{"lineNumber":475,"author":{"gitId":"neojxuan"},"content":"4.  SmartNUS shows the correct option (answer).","lastModifiedDate":"2021-09-30"},{"lineNumber":476,"author":{"gitId":"neojxuan"},"content":"5.  Steps 2 to 4 are repeated until the user has answered the number of questions he/she specified when starting the quiz.","lastModifiedDate":"2021-09-30"},{"lineNumber":477,"author":{"gitId":"neojxuan"},"content":"6.  SmartNUS shows the userâ€™s score (number of questions correct and total number of questions answered).","lastModifiedDate":"2021-09-30"},{"lineNumber":478,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":479,"author":{"gitId":"neojxuan"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":480,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":481,"author":{"gitId":"neojxuan"},"content":"* 1a. Number of questions is invalid (negative or more than total number of questions).","lastModifiedDate":"2021-09-30"},{"lineNumber":482,"author":{"gitId":"neojxuan"},"content":"    * 1a1. SmartNUS shows error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":483,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":484,"author":{"gitId":"neojxuan"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":485,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":486,"author":{"gitId":"neojxuan"},"content":"* 1b. At least one tag does not exist.","lastModifiedDate":"2021-09-30"},{"lineNumber":487,"author":{"gitId":"neojxuan"},"content":"    * 1b1. SmartNUS shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":488,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":489,"author":{"gitId":"neojxuan"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":490,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":491,"author":{"gitId":"neojxuan"},"content":"* 2a. User did not specify any tags.","lastModifiedDate":"2021-09-30"},{"lineNumber":492,"author":{"gitId":"neojxuan"},"content":"    * 2a1. SmartNUS shows any question (that has not yet been shown in the quiz) and its options.","lastModifiedDate":"2021-09-30"},{"lineNumber":493,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":494,"author":{"gitId":"neojxuan"},"content":"      Use case resumes at Step 3.","lastModifiedDate":"2021-09-30"},{"lineNumber":495,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":496,"author":{"gitId":"neojxuan"},"content":"* 5a. User did not specify number of questions.","lastModifiedDate":"2021-09-30"},{"lineNumber":497,"author":{"gitId":"neojxuan"},"content":"    * 5a1. Steps 2 to 4 are repeated until all questions from the specified tags have been shown.","lastModifiedDate":"2021-09-30"},{"lineNumber":498,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":499,"author":{"gitId":"neojxuan"},"content":"      Use case resumes at Step 6.","lastModifiedDate":"2021-09-30"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"neojxuan"},"content":"2. Should be able to hold up to 1000 questions without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-25"},{"lineNumber":507,"author":{"gitId":"Agentum07"},"content":"3. A student with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-30"},{"lineNumber":508,"author":{"gitId":"Agentum07"},"content":"4. The data should be stored locally and should be in an editable json file.","lastModifiedDate":"2021-09-30"},{"lineNumber":509,"author":{"gitId":"Agentum07"},"content":"5. The product should be for a single user at a time.","lastModifiedDate":"2021-09-30"},{"lineNumber":510,"author":{"gitId":"Agentum07"},"content":"6. The final product should be a result of morphing the given AB3 code base.","lastModifiedDate":"2021-09-30"},{"lineNumber":511,"author":{"gitId":"Agentum07"},"content":"7. The final product should be self-contained i.e should not prompt the user to open any links.","lastModifiedDate":"2021-09-30"},{"lineNumber":512,"author":{"gitId":"Agentum07"},"content":"8. The final product should be fully functional without the internet.","lastModifiedDate":"2021-09-30"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"neojxuan"},"content":"### Deleting a question","lastModifiedDate":"2021-09-25"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"neojxuan"},"content":"1. Deleting a question while all questions are being shown","lastModifiedDate":"2021-09-25"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"neojxuan"},"content":"   1. Prerequisites: List all questions using the `list` command. Multiple questions in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"neojxuan"},"content":"      Expected: No question is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-09-25"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"neojxuan":160,"aryagiat":4,"ryanpeh":8,"cedricongjh":6,"-":349,"Agentum07":42}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"   1. Run the `seedu.smartnus.Main` and try a few commands.","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBookâ€™s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"neojxuan":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"   e.g. `seedu.smartnus.commons.StringUtilTest`","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"   e.g. `seedu.smartnus.storage.StorageManagerTest`","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"   e.g. `seedu.smartnus.logic.LogicManagerTest`","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"neojxuan":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"SmartNUS is a **desktop app for students to revise for their exams, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SmartNUS can get your review session more effective and faster than traditional GUI apps.","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Download the latest `smartnus.jar` from [here](https://github.com/AY2122S1-CS2103T-F12-1/tp/releases).","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your SmartNUS app.","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"   ![Ui](images/UiMainWindow.png)","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003c!-- 1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app. --\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"  e.g. in `mcq qn/QUESTION ans/ANSWER opt/OPTION1 i/IMPORTANCE`, `QUESTION`, `ANSWER`, `OPTION1`, `IMPORTANCE` is a parameter which can be used as `mcq qn/what is 1 + 1? opt/3 opt/1 opt/0 ans/2 i/1`.","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003c!-- * Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":" --\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `â€¦`â€‹ after them can be used multiple times.\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"cedricongjh"},"content":"  e.g. `/optâ€¦â€‹` can be used as `opt/ OPTION1`, `opt/ OPTION1 opt/ OPTION2` etc.","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"  e.g. if the command specifies `ans/ ANSWER opt/ OPTION1`, `opt/ OPTION1 ans/ ANSWER` is also acceptable.","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c!-- * If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken. --\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"## Main Window Commands","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"aryagiat"},"content":"Format: `help`","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"cedricongjh"},"content":"### Add a Multiple Choice Question: `mcq`","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"cedricongjh"},"content":"Adds a multiple choice question to the question bank.","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"aryagiat"},"content":"Format: `mcq qn/QUESTION opt/OPTION1 opt/OPTION2 opt/OPTION3 ans/ANSWER i/IMPORTANCE`","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"A multiple choice question must have exactly three incorrect options and one correct answer","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"aryagiat"},"content":"* `mcq qn/what is 1 + 1? opt/3 opt/1 opt/0 ans/2 i/1`","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"cedricongjh"},"content":"### Add a True False Question: `tf`","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"cedricongjh"},"content":"Adds a true false question to the question bank.","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"cedricongjh"},"content":"Format: `tf qn/QUESTION ans/ANSWER i/IMPORTANCE`","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"cedricongjh"},"content":"A true false question can only have one answer, either \"T\" or \"F\"","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"cedricongjh"},"content":"* `tf qn/Is 1+1 \u003d 2 ? ans/T i/1`","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003c!-- ### Listing all persons : `list`","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"neojxuan"},"content":"Shows a list of all questions in the address book.","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Format: `list` --\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"aryagiat"},"content":"### Deleting a Question and Answer: `delete`","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Deletes an existing question and answer in the question bank.","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"aryagiat"},"content":"Format: `delete QUESTION_ID`","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* Deletes the question and answer with the specified `QUESTION_ID`.","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"aryagiat"},"content":"* The question id refers to the index number shown in the displayed question list. The index **must be a positive integer** 1, 2, 3, â€¦â€‹ --\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"neojxuan"},"content":"### Find Questions by Tag: `tag`","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"neojxuan"},"content":"Shows a list of all questions in SmartNUS that have at least one of the specified tags. ","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"neojxuan"},"content":"* The search is case-insensitive (e.g. `math` will match a tag named `MaTH`).","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"neojxuan"},"content":"* Only full words will be matched (e.g. `CS2100` will not match a tag named `CS210`).","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"neojxuan"},"content":"* Any question that has at least one of the tags will be listed.","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"neojxuan"},"content":"Format: `tag [TAGNAME]`","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"neojxuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"neojxuan"},"content":"You can search for more than one tag.","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"neojxuan"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"neojxuan"},"content":"* `tag CS2100 MIPS Hexadecimal` returns questions tagged with at least one of the tags.","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"aryagiat"},"content":"### Start a Quiz: `quiz`","lastModifiedDate":"2021-10-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"aryagiat"},"content":"Starts a quiz session using all the questions in the question list.","lastModifiedDate":"2021-10-15"},{"lineNumber":138,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":139,"author":{"gitId":"aryagiat"},"content":"Format: `quiz`","lastModifiedDate":"2021-10-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"aryagiat"},"content":"* Opens a new window for the quiz.","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":143,"author":{"gitId":"aryagiat"},"content":"Examples:","lastModifiedDate":"2021-10-15"},{"lineNumber":144,"author":{"gitId":"aryagiat"},"content":"*  `quiz` Opens a new quiz window and only [quiz commands](#quiz_window_commands) can be used.","lastModifiedDate":"2021-10-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"aryagiat"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2021-10-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Clears all entries from the question bank.","lastModifiedDate":"2021-09-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"aryagiat"},"content":"Format: `clear`","lastModifiedDate":"2021-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"aryagiat"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-10-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"aryagiat"},"content":"Format: `exit`","lastModifiedDate":"2021-10-15"},{"lineNumber":157,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":158,"author":{"gitId":"aryagiat"},"content":"## \u003ca name\u003d\"quiz_window_commands\"\u003e\u003c/a\u003eQuiz Window Commands","lastModifiedDate":"2021-10-15"},{"lineNumber":159,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":160,"author":{"gitId":"aryagiat"},"content":"### Answering a multiple choice question: `a` `b` `c` `d`","lastModifiedDate":"2021-10-15"},{"lineNumber":161,"author":{"gitId":"aryagiat"},"content":"Answers the multiple choice question with the options.","lastModifiedDate":"2021-10-15"},{"lineNumber":162,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":163,"author":{"gitId":"aryagiat"},"content":"Possible options are: `a` `b` `c` or `d`","lastModifiedDate":"2021-10-15"},{"lineNumber":164,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":165,"author":{"gitId":"aryagiat"},"content":"### Go to the next question: `next`","lastModifiedDate":"2021-10-15"},{"lineNumber":166,"author":{"gitId":"aryagiat"},"content":"Navigate to the next question.","lastModifiedDate":"2021-10-15"},{"lineNumber":167,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":168,"author":{"gitId":"aryagiat"},"content":"Format: `next`","lastModifiedDate":"2021-10-15"},{"lineNumber":169,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":170,"author":{"gitId":"aryagiat"},"content":"### Go to the previous question: `prev`","lastModifiedDate":"2021-10-15"},{"lineNumber":171,"author":{"gitId":"aryagiat"},"content":"Navigate to the previous question.","lastModifiedDate":"2021-10-15"},{"lineNumber":172,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":173,"author":{"gitId":"aryagiat"},"content":"Format `prev`","lastModifiedDate":"2021-10-15"},{"lineNumber":174,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":175,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":176,"author":{"gitId":"aryagiat"},"content":"### Exit the quiz: `exit`","lastModifiedDate":"2021-10-15"},{"lineNumber":177,"author":{"gitId":"aryagiat"},"content":"Exits the quiz.","lastModifiedDate":"2021-10-15"},{"lineNumber":178,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":179,"author":{"gitId":"aryagiat"},"content":"Format: `exit`","lastModifiedDate":"2021-10-15"},{"lineNumber":180,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":181,"author":{"gitId":"aryagiat"},"content":"## Data File","lastModifiedDate":"2021-10-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"SmartNUS data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"SmartNUS data are saved as a JSON file `[JAR file location]/data/smartnus.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, SmartNUS will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-16"},{"lineNumber":193,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2021-09-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"_Details coming soon ..._ --\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous SmartNUS home folder.","lastModifiedDate":"2021-09-16"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"aryagiat"},"content":"## Main Window Command summary","lastModifiedDate":"2021-10-15"},{"lineNumber":209,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":210,"author":{"gitId":"aryagiat"},"content":"Action | Format, Examples","lastModifiedDate":"2021-10-15"},{"lineNumber":211,"author":{"gitId":"aryagiat"},"content":"--------|------------------","lastModifiedDate":"2021-10-15"},{"lineNumber":212,"author":{"gitId":"aryagiat"},"content":"**MCQ** | `mcq qn/QUESTION opt/OPTION1 opt/OPTION2 opt/OPTION3 ans/ANSWER i/IMPORTANCE` \u003cbr\u003e e.g., `mcq qn/what is 1 + 1? opt/3 opt/1 opt/0 ans/2 i/1`","lastModifiedDate":"2021-10-15"},{"lineNumber":213,"author":{"gitId":"aryagiat"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-10-15"},{"lineNumber":214,"author":{"gitId":"aryagiat"},"content":"**Quiz** | `quiz` \u003cbr\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":215,"author":{"gitId":"aryagiat"},"content":"**Exit** | `exit` \u003cbr\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":216,"author":{"gitId":"aryagiat"},"content":"**Help** | `help` \u003cbr\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":217,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":218,"author":{"gitId":"aryagiat"},"content":"## Quiz Window Command Summary","lastModifiedDate":"2021-10-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"aryagiat"},"content":"**Option a** | `a` \u003cbr\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":223,"author":{"gitId":"aryagiat"},"content":"**Option b** | `b` \u003cbr\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":224,"author":{"gitId":"aryagiat"},"content":"**Option c** | `c` \u003cbr\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":225,"author":{"gitId":"aryagiat"},"content":"**Option d** | `d` \u003cbr\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":226,"author":{"gitId":"aryagiat"},"content":"**Next** | `next` \u003cbr\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":227,"author":{"gitId":"aryagiat"},"content":"**Prev** | `prev` \u003cbr\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":228,"author":{"gitId":"aryagiat"},"content":"**Exit** | `exit` \u003cbr\u003e","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"neojxuan":16,"aryagiat":65,"cedricongjh":9,"-":138}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteQuestion(p)","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"neojxuan":1,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"SmartNus *-right-\u003e \"1\" UniqueQuestionList","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"SmartNus *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"UniqueTagList -[hidden]down- UniqueQuestionList","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"UniqueTagList -[hidden]down- UniqueQuestionList","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"UniqueQuestionList -right-\u003e Question","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"Question -up-\u003e \"*\" Tag","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"Question *--\u003e Name","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"Question *--\u003e Importance","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"neojxuan":8,"-":11}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"DeleteCommand -\u003e Model : deleteQuestion(1)","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"neojxuan":1,"-":68}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"Class UniqueQuestionList","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"Class Question","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"Class Importance","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"AddressBook *--\u003e \"1\" UniqueQuestionList","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"UniqueQuestionList --\u003e \"~* all\" Question","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"Question *--\u003e Name","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"Question *--\u003e Phone","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"Question *--\u003e Email","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"Question *--\u003e Address","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"Question *--\u003e \"*\" Tag","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"ModelManager --\u003e\"~* filtered\" Question","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"neojxuan":11,"-":41}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"Class JsonAdaptedQuestion","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedQuestion","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"JsonAdaptedQuestion --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"neojxuan":3,"-":40}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"Class QuestionListPanel","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"Class QuestionCard","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"MainWindow *-down-\u003e \"1\" QuestionListPanel","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"QuestionListPanel -down-\u003e \"*\" QuestionCard","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"QuestionListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"QuestionCard --|\u003e UiPart","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"QuestionCard ..\u003e Model","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"QuestionListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"neojxuan":8,"-":52}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"ecp -\u003e ec ++: index, editQuestionDescriptor","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"neojxuan":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: SmartNUS Level-1","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-F12-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-F12-1/tp/actions)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-F12-1/tp/branch/master/graph/badge.svg?token\u003d6LH2DLRN3E)](https://codecov.io/gh/AY2122S1-CS2103T-F12-1/tp)","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"**SmartNUS is a desktop app specifically designed for students to revise for their exams.** It has been optimized for use via a Command Line Interface but it also incorporates a Graphical User Interface (GUI). SmartNUS is the go-to app if youâ€™re a fast typer or if you need a tool to streamline your revision process. Download today!","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using SmartNUS, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing SmartNUS, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ryanpeh":1,"-":18}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new commandâ€‰â€”â€‰`remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Weâ€™ll assume that you have already set up the development environment as outlined in the Developerâ€™s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Letâ€™s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, letâ€™s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":" * Changes the remark of an existing question in the address book.","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Letâ€™s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"            + \": Edits the remark of the question identified \"","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"            + \"by the index number used in the last question listing. \"","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, letâ€™s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"neojxuan"},"content":"     * @param index of the question in the filtered question list to edit the remark","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"neojxuan"},"content":"     * @param remark of the question to be updated to","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now letâ€™s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"neojxuan"},"content":"Create a `RemarkCommandParser` class in the `seedu.smartnus.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-10-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Letâ€™s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now letâ€™s find out what we need to do in order to obtain the Index and String that we need. Letâ€™s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the userâ€™s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Donâ€™t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"neojxuan"},"content":"Now that we have all the information that we need, letâ€™s lay the groundwork for propagating the remarks added into the in-memory storage of question data. We achieve that by working with the `Question` model. Each field in a Question is implemented as a separate class (e.g. a `Name` object represents the questionâ€™s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a question.","lastModifiedDate":"2021-10-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"neojxuan"},"content":"Create a new `Remark` in `seedu.smartnus.model.question`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-10-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"neojxuan"},"content":"Without getting too deep into `fxml`, letâ€™s go on a 5 minute adventure to get some placeholder text to show up for each question.","lastModifiedDate":"2021-09-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"neojxuan"},"content":"Simply add the following to [`seedu.smartnus.ui.QuestionCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-10-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"neojxuan"},"content":"**`QuestionCard.java`:**","lastModifiedDate":"2021-10-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, donâ€™t worryâ€‰â€”â€‰we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"neojxuan"},"content":"Then insert the following into [`main/resources/view/QuestionListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2021-10-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"neojxuan"},"content":"**`QuestionListCard.fxml`:**","lastModifiedDate":"2021-10-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"Thatâ€™s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"neojxuan"},"content":"## Modify `Question` to support a `Remark` field","lastModifiedDate":"2021-10-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"neojxuan"},"content":"Since `QuestionCard` displays data from a `Question`, we need to update `Question` to get our `Remark` displayed!","lastModifiedDate":"2021-10-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"neojxuan"},"content":"### Modify `Question`","lastModifiedDate":"2021-10-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"neojxuan"},"content":"We change the constructor of `Question` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2021-10-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"neojxuan"},"content":"### Update other usages of `Question`","lastModifiedDate":"2021-10-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"neojxuan"},"content":"Unfortunately, a change to `Question` will cause other commands to break, you will have to modify these commands to use the updated `Question`!","lastModifiedDate":"2021-10-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"neojxuan"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Question` class to find these commands.","lastModifiedDate":"2021-10-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"neojxuan"},"content":"AddressBook stores data by serializing `JsonAdaptedQuestion` into `json` with the help of an external libraryâ€‰â€”â€‰Jackson. Letâ€™s update `JsonAdaptedQuestion` to work with our new `Question`!","lastModifiedDate":"2021-10-07"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBookâ€™s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"neojxuan"},"content":"Now that we have finalized the `Question` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2021-10-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"neojxuan"},"content":"**`QuestionCard.java`:**","lastModifiedDate":"2021-10-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"neojxuan"},"content":"public QuestionCard(Question question, int displayedIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"neojxuan"},"content":"    remark.setText(question.getRemark().value);","lastModifiedDate":"2021-09-25"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regressionâ€‰â€”â€‰we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"neojxuan"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Question`. Since all fields in a `Question` are immutable, we create a new instance of a `Question` with the values that we want and","lastModifiedDate":"2021-10-07"},{"lineNumber":329,"author":{"gitId":"neojxuan"},"content":"save it with `Model#setQuestion()`.","lastModifiedDate":"2021-10-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Question: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":336,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Question: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"neojxuan"},"content":"        List\u003cQuestion\u003e lastShownList \u003d model.getFilteredQuestionList();","lastModifiedDate":"2021-10-07"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"neojxuan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_QUESTION_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"neojxuan"},"content":"        Question questionToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":347,"author":{"gitId":"neojxuan"},"content":"        Question editedQuestion \u003d new Question(","lastModifiedDate":"2021-10-07"},{"lineNumber":348,"author":{"gitId":"neojxuan"},"content":"                questionToEdit.getName(), questionToEdit.getImportance(), remark, questionToEdit.getTags());","lastModifiedDate":"2021-10-07"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"neojxuan"},"content":"        model.setQuestion(questionToEdit, editedQuestion);","lastModifiedDate":"2021-10-07"},{"lineNumber":351,"author":{"gitId":"neojxuan"},"content":"        model.updateFilteredQuestionList(PREDICATE_SHOW_ALL_QUESTIONS);","lastModifiedDate":"2021-10-07"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"neojxuan"},"content":"        return new CommandResult(generateSuccessMessage(editedQuestion));","lastModifiedDate":"2021-09-25"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"neojxuan"},"content":"     * {@code questionToEdit}.","lastModifiedDate":"2021-09-25"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"neojxuan"},"content":"    private String generateSuccessMessage(Question questionToEdit) {","lastModifiedDate":"2021-10-07"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"neojxuan"},"content":"        return String.format(message, questionToEdit);","lastModifiedDate":"2021-09-25"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs donâ€™t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Letâ€™s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"Letâ€™s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"Following convention, letâ€™s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"Letâ€™s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"neojxuan":43,"-":357}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Question` class.","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Letâ€™s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"The `address` field in `Question` is actually an instance of the `seedu.smartnus.model.question.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditQuestionDescriptor` may require more careful inspection.","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"Letâ€™s try removing references to `Address` in `EditQuestionDescriptor`.","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"1. Safe delete the field `address` in `EditQuestionDescriptor`.","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Question` class will require you to modify its constructor.","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `QuestionCard` that has not been removed nor identified.","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"A quick look at the `QuestionCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"**`QuestionCard.java`**","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"**`QuestionCard.fxml`**","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. Whatâ€™s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"neojxuan"},"content":"**`invalidQuestionAddressBook.json`:**","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"neojxuan"},"content":"  \"questions\": [ {","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"neojxuan"},"content":"    \"name\": \"Question with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"neojxuan"},"content":"    \"importance\": \"2\",","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"neojxuan":14,"-":98}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. â€¦â€‹\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEAâ€™s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.smartnus.logic.Logic`.","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"A quick look at the `seedu.smartnus.logic.Logic` (an extract given below) confirms that this indeed might be what weâ€™re looking for.","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what weâ€™re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now letâ€™s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so letâ€™s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Letâ€™s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Letâ€™s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Letâ€™s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"neojxuan"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditQuestionDescriptor`. Recall that we can verify the contents of `editQuestionDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Letâ€™s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"neojxuan"},"content":"       Question questionToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"neojxuan"},"content":"       Question editedQuestion \u003d createEditedQuestion(questionToEdit, editQuestionDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"neojxuan"},"content":"       if (!questionToEdit.isSameQuestion(editedQuestion) \u0026\u0026 model.hasQuestion(editedQuestion)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"neojxuan"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_QUESTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"neojxuan"},"content":"       model.setQuestion(questionToEdit, editedQuestion);","lastModifiedDate":"2021-10-05"},{"lineNumber":198,"author":{"gitId":"neojxuan"},"content":"       model.updateFilteredQuestionList(PREDICATE_SHOW_ALL_QUESTIONS);","lastModifiedDate":"2021-10-05"},{"lineNumber":199,"author":{"gitId":"neojxuan"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_QUESTION_SUCCESS, editedQuestion));","lastModifiedDate":"2021-10-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"neojxuan"},"content":"   * it uses the `setQuestion()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the question data.","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"neojxuan"},"content":"   * it uses the `updateFilteredQuestionList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ questions.\u003cbr\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"neojxuan"},"content":"     FYI, The \u0027filtered list\u0027 is the list of questions resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the questions so that the user can see the edited question along with all other questions. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":207,"author":{"gitId":"neojxuan"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of questions is being tracked.","lastModifiedDate":"2021-09-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"neojxuan"},"content":"        questions.addAll(","lastModifiedDate":"2021-09-25"},{"lineNumber":235,"author":{"gitId":"neojxuan"},"content":"            source.getQuestionList()","lastModifiedDate":"2021-10-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"neojxuan"},"content":"                  .map(JsonAdaptedQuestion::new)","lastModifiedDate":"2021-10-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"neojxuan"},"content":"1. It appears that a `JsonAdaptedQuestion` is created for each `Question` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2021-10-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/ã‚¢ãƒªã‚¹ ãƒ¦ãƒ¼`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"neojxuan"},"content":"    5.  Add a new field to `Question`","lastModifiedDate":"2021-10-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"neojxuan":19,"-":282}},{"path":"src/main/java/seedu/smartnus/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.LogsCenter;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.util.FileUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"neojxuan":3,"-":61}},{"path":"src/main/java/seedu/smartnus/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"neojxuan":1,"-":24}},{"path":"src/main/java/seedu/smartnus/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.Config;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.LogsCenter;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.Version;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.util.ConfigUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.util.StringUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.Logic;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.LogicManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.SmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.storage.JsonSmartNusStorage;","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.storage.SmartNusStorage;","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.storage.Storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.storage.StorageManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.storage.UserPrefsStorage;","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.ui.Ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.ui.UiManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing SmartNus ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"        SmartNusStorage smartNusStorage \u003d new JsonSmartNusStorage(userPrefs.getSmartNusFilePath());","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"Agentum07"},"content":"        storage \u003d new StorageManager(smartNusStorage, userPrefsStorage);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s SmartNus and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"neojxuan"},"content":"     * The data from the sample SmartNus will be used instead if {@code storage}\u0027s SmartNus is not found,","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"neojxuan"},"content":"     * or an empty SmartNus will be used instead if errors occur when reading {@code storage}\u0027s SmartNus.","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"        Optional\u003cReadOnlySmartNus\u003e smartNusOptional;","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"        ReadOnlySmartNus initialData;","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"            smartNusOptional \u003d storage.readSmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"            if (!smartNusOptional.isPresent()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"neojxuan"},"content":"                logger.info(\"Data file not found. Will be starting with a sample SmartNus\");","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"neojxuan"},"content":"            initialData \u003d smartNusOptional.orElseGet(SampleDataUtil::getSampleSmartNus);","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"neojxuan"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty SmartNus\");","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"neojxuan"},"content":"            initialData \u003d new SmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"neojxuan"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty SmartNus\");","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"neojxuan"},"content":"            initialData \u003d new SmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"neojxuan"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty SmartNus\");","lastModifiedDate":"2021-10-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"neojxuan"},"content":"        logger.info(\"Starting SmartNus \" + MainApp.VERSION);","lastModifiedDate":"2021-10-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"neojxuan"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping SmartNus ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":42,"-":140,"Agentum07":1}},{"path":"src/main/java/seedu/smartnus/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.core;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":1,"-":62}},{"path":"src/main/java/seedu/smartnus/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.core;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":1,"-":78}},{"path":"src/main/java/seedu/smartnus/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.core;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"    private static final String LOG_FILE \u003d \"smartnus.log\";","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":2,"-":110}},{"path":"src/main/java/seedu/smartnus/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.core;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.logic.commands.quiz.NextQuestionCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.logic.commands.quiz.PrevQuestionCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_INVALID_QUESTION_DISPLAYED_INDEX \u003d \"The question index provided is invalid\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"    public static final String MESSAGE_TOO_MANY_ARGUMENTS \u003d \"Inserted too many arguments! \\n%1$s\";","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_QUESTIONS_LISTED_OVERVIEW \u003d \"%1$d questions listed!\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"    public static final String MESSAGE_INVALID_MCQ_ANSWER_FORMAT \u003d \"Invalid answer format!\"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"            + \" Acceptable answers are \u0027a\u0027, \u0027b\u0027, \u0027c\u0027, \u0027d\u0027 (Case-insensitive)\\n\";","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"    public static final String MESSAGE_INVALID_TF_ANSWER_FORMAT \u003d \"Invalid answer format!\"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"            + \" Acceptable answers are \u0027t\u0027, \u0027f\u0027, \u0027true\u0027, \u0027false\u0027 (Case-insensitive)\\n\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"    public static final String MESSAGE_END_OF_QUIZ \u003d \"You have reached the end of the quiz, enter \u0027\"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"            + ExitCommand.COMMAND_WORD + \"\u0027 to exit the quiz, or enter \" + PrevQuestionCommand.COMMAND_WORD","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"            + \"to view the previous question.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"    public static final String MESSAGE_CONTINUE_QUIZ \u003d \"Enter \u0027\" + NextQuestionCommand.COMMAND_WORD","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"            + \"\u0027 to proceed with the next question, or \u0027\" + ExitCommand.COMMAND_WORD + \"\u0027 to exit the quiz\";","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"neojxuan":3,"ryanpeh":12,"aryagiat":1,"cedricongjh":1,"-":10}},{"path":"src/main/java/seedu/smartnus/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.core;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":1,"-":115}},{"path":"src/main/java/seedu/smartnus/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.core.index;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"neojxuan":1,"aryagiat":5,"-":53}},{"path":"src/main/java/seedu/smartnus/commons/core/theme/DarkTheme.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.commons.core.theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"public class DarkTheme extends Theme {","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"    protected static final String DARK_THEME_CSS_FILE \u003d \"DarkTheme.css\";","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"    protected static final String DARK_EXTENSION_CSS_FILE \u003d \"Extensions.css\";","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"    public DarkTheme() {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"        super(DARK_THEME_CSS_FILE, DARK_EXTENSION_CSS_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"        return \"Dark Theme\";","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"aryagiat":16}},{"path":"src/main/java/seedu/smartnus/commons/core/theme/LightTheme.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.commons.core.theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"public class LightTheme extends Theme {","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"    protected static final String LIGHT_THEME_CSS_FILE \u003d \"LightTheme.css\";","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"    protected static final String LIGHT_EXTENSION_CSS_FILE \u003d \"LightExtensions.css\";","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"    public LightTheme() {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"        super(LIGHT_THEME_CSS_FILE, LIGHT_EXTENSION_CSS_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"        return \"Light Theme\";","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"aryagiat":16}},{"path":"src/main/java/seedu/smartnus/commons/core/theme/Theme.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.commons.core.theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import static seedu.smartnus.commons.core.theme.LightTheme.LIGHT_EXTENSION_CSS_FILE;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import static seedu.smartnus.commons.core.theme.LightTheme.LIGHT_THEME_CSS_FILE;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":" * The UI Theme.","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"public class Theme {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"    private final String themeCssFile;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"    private final String extensionCssFile;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"     * Default constructor for theme.","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"    public Theme() {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"        this.themeCssFile \u003d LIGHT_THEME_CSS_FILE;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"        this.extensionCssFile \u003d LIGHT_EXTENSION_CSS_FILE;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"     * Constructor for a theme.","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"     * @param themeCssFile The theme css file name.","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"     * @param extensionCssFile The extension css file name.","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"    public Theme(String themeCssFile, String extensionCssFile) {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"        this.themeCssFile \u003d themeCssFile;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"        this.extensionCssFile \u003d extensionCssFile;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"     * Returns the filename of the theme css file.","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"     * @return The filename of the theme css file.","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"    public String getThemeCssFile() {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"        return themeCssFile;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"     * Returns the filename of the extensions css file.","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"     * @return The filename of the extensions css file.","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"    public String getExtensionsCssFile() {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"        return extensionCssFile;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"            return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"        if (!(other instanceof Theme)) { //this handles null as well.","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"        Theme o \u003d (Theme) other;","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"        return themeCssFile.equals(o.themeCssFile)","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"                \u0026\u0026 extensionCssFile.equals(o.extensionCssFile);","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"        return \"Theme\";","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"aryagiat":69}},{"path":"src/main/java/seedu/smartnus/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.exceptions;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":1,"-":10}},{"path":"src/main/java/seedu/smartnus/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.exceptions;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"neojxuan":1,"-":20}},{"path":"src/main/java/seedu/smartnus/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.util;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.MainApp;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"neojxuan":2,"-":40}},{"path":"src/main/java/seedu/smartnus/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.util;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"neojxuan":1,"-":34}},{"path":"src/main/java/seedu/smartnus/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.util;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.Config;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"neojxuan":3,"-":20}},{"path":"src/main/java/seedu/smartnus/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.util;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":1,"-":82}},{"path":"src/main/java/seedu/smartnus/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.util;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.LogsCenter;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":3,"-":140}},{"path":"src/main/java/seedu/smartnus/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.util;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":2,"-":66}},{"path":"src/main/java/seedu/smartnus/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.GuiSettings;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.Theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.CommandResult;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"     * Executes the command during a quiz and returns the result.","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"    CommandResult execute(String commandText, QuizManager quizManager) throws CommandException, ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"     * Returns the SmartNus.","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"     * @see seedu.smartnus.model.Model#getSmartNus()","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"    ReadOnlySmartNus getSmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"    /** Returns an unmodifiable view of the filtered list of questions */","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"    ObservableList\u003cQuestion\u003e getFilteredQuestionList();","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"    /** Returns an unmodifiable view of the filtered list of questions for quizzes */","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"    ObservableList\u003cQuestion\u003e getFilteredQuizQuestionList();","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"     * Returns the user prefs\u0027 SmartNUS file path.","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"    Path getSmartNusFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"     * Returns the user pref\u0027s theme.","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"    Theme getTheme();","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"aryagiat"},"content":"     * Sets the user pref\u0027s tehme.","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"aryagiat"},"content":"    void setTheme(Theme theme);","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"neojxuan":18,"aryagiat":11,"ryanpeh":9,"-":36}},{"path":"src/main/java/seedu/smartnus/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.GuiSettings;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.LogsCenter;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.Theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.CommandResult;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.QuizInputParser;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.SmartNusParser;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.storage.Storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"    private final SmartNusParser smartNusParser;","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"    private final QuizInputParser quizInputParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"        smartNusParser \u003d new SmartNusParser();","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"        quizInputParser \u003d new QuizInputParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"        Command command \u003d smartNusParser.parseCommand(commandText);","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"            storage.saveSmartNus(model.getSmartNus());","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"ryanpeh"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"ryanpeh"},"content":"    public CommandResult execute(String commandText, QuizManager quizManager) throws CommandException, ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"ryanpeh"},"content":"        logger.info(\"----------------[USER QUIZ COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"ryanpeh"},"content":"        Command command \u003d quizInputParser.parseCommand(commandText, quizManager);","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"ryanpeh"},"content":"        CommandResult commandResult \u003d command.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"ryanpeh"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"            storage.saveSmartNus(model.getSmartNus());","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"ryanpeh"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"ryanpeh"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"ryanpeh"},"content":"        return commandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"    public ReadOnlySmartNus getSmartNus() {","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"        return model.getSmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"neojxuan"},"content":"    public ObservableList\u003cQuestion\u003e getFilteredQuestionList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"neojxuan"},"content":"        return model.getFilteredQuestionList();","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":87,"author":{"gitId":"neojxuan"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"neojxuan"},"content":"    public ObservableList\u003cQuestion\u003e getFilteredQuizQuestionList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"neojxuan"},"content":"        return model.getFilteredQuizQuestionList();","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"neojxuan"},"content":"    public Path getSmartNusFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"neojxuan"},"content":"        return model.getSmartNusFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"aryagiat"},"content":"    public Theme getTheme() {","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"aryagiat"},"content":"        return model.getTheme();","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"aryagiat"},"content":"    public void setTheme(Theme theme) {","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"aryagiat"},"content":"        model.setTheme(theme);","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"neojxuan":30,"aryagiat":11,"ryanpeh":16,"-":59}},{"path":"src/main/java/seedu/smartnus/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.SmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":" * Clears SmartNUS.","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"SmartNUS has been cleared!\";","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"        model.setSmartNus(new SmartNus());","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"neojxuan":6,"-":17}},{"path":"src/main/java/seedu/smartnus/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"neojxuan":3,"-":17}},{"path":"src/main/java/seedu/smartnus/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"    /** The quiz should start. */","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"    private final boolean quizStart;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean quizStart) {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"        this.quizStart \u003d quizStart;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"     * indicates the command is a {@code QuizCommand}, and other fields set to their","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"     * default value.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"ryanpeh"},"content":"    public CommandResult(String feedbackToUser, Boolean isQuizStart) {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"        this.exit \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"ryanpeh"},"content":"        this.quizStart \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"ryanpeh"},"content":"    public boolean isQuizStart() {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"ryanpeh"},"content":"        return quizStart;","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"neojxuan":1,"ryanpeh":22,"-":68}},{"path":"src/main/java/seedu/smartnus/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.Messages;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.index.Index;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":" * Deletes a question identified using it\u0027s displayed index from SmartNus.","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"            + \": Deletes the question identified by the index number used in the displayed question list.\\n\"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_DELETE_QUESTION_SUCCESS \u003d \"Deleted Question: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"        List\u003cQuestion\u003e lastShownList \u003d model.getFilteredQuestionList();","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_QUESTION_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"        Question questionToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"        model.deleteQuestion(questionToDelete);","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_QUESTION_SUCCESS, questionToDelete));","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"neojxuan":14,"-":39}},{"path":"src/main/java/seedu/smartnus/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_IMPORTANCE;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.model.Model.PREDICATE_SHOW_ALL_QUESTIONS;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.Messages;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.index.Index;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Importance;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.MultipleChoiceQuestion;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Name;","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.TrueFalseQuestion;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":" * Edits the details of an existing question in SmartNus.","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the question identified \"","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"            + \"by the index number used in the displayed question list. \"","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"            + \"[\" + PREFIX_QUESTION + \"QUESTION] \"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"            + \"[\" + PREFIX_IMPORTANCE + \"IMPORTANCE] \"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"            + \"[\" + PREFIX_ANSWER + \"ANSWER] \"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"            + \"[\" + PREFIX_OPTION + \"OPTION]... \\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"            + PREFIX_IMPORTANCE + \"3 \";","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_UNRECOGNISED_QUESTION_TYPE \u003d \"Unrecognised question type to edit.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_EDIT_QUESTION_SUCCESS \u003d \"Edited Question: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_DUPLICATE_QUESTION \u003d \"This question already exists in SmartNUS.\";","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_NO_ANSWER \u003d \"Answer (ans/) must be specified.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_NO_OPTIONS \u003d \"Options (opt/) must be specified.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"neojxuan"},"content":"    private final EditQuestionDescriptor editQuestionDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"neojxuan"},"content":"     * @param index of the question in the filtered question list to edit","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"     * @param editQuestionDescriptor details to edit the question with","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"    public EditCommand(Index index, EditQuestionDescriptor editQuestionDescriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"        requireNonNull(editQuestionDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"        this.editQuestionDescriptor \u003d new EditQuestionDescriptor(editQuestionDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"neojxuan"},"content":"        List\u003cQuestion\u003e lastShownList \u003d model.getFilteredQuestionList();","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_QUESTION_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"        Question questionToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"neojxuan"},"content":"        assert questionToEdit !\u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"neojxuan"},"content":"        Name updatedName \u003d editQuestionDescriptor.getName().orElse(questionToEdit.getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"        Importance updatedImportance \u003d editQuestionDescriptor.getImportance().orElse(questionToEdit.getImportance());","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"neojxuan"},"content":"        Set\u003cTag\u003e updatedTags \u003d editQuestionDescriptor.getTags().orElse(questionToEdit.getTags());","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"neojxuan"},"content":"        Question editedQuestion \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"neojxuan"},"content":"        if (questionToEdit instanceof MultipleChoiceQuestion) {","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"neojxuan"},"content":"            editedQuestion \u003d createEditedMcq(questionToEdit, updatedName, updatedImportance, updatedTags);","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"neojxuan"},"content":"        } else if (questionToEdit instanceof TrueFalseQuestion) {","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"neojxuan"},"content":"            editedQuestion \u003d createEditedTf(questionToEdit, updatedName, updatedImportance, updatedTags);","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"neojxuan"},"content":"        assert editedQuestion !\u003d null : MESSAGE_UNRECOGNISED_QUESTION_TYPE;","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"neojxuan"},"content":"        if (!questionToEdit.isSameQuestion(editedQuestion) \u0026\u0026 model.hasQuestion(editedQuestion)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"neojxuan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_QUESTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"neojxuan"},"content":"        model.setQuestion(questionToEdit, editedQuestion);","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"neojxuan"},"content":"        model.updateFilteredQuestionList(PREDICATE_SHOW_ALL_QUESTIONS);","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"neojxuan"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_QUESTION_SUCCESS, editedQuestion));","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"neojxuan"},"content":"     * Creates and returns a {@code Question} with the details of {@code questionToEdit}","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"neojxuan"},"content":"     * edited with {@code editQuestionDescriptor}.","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"neojxuan"},"content":"    private MultipleChoiceQuestion createEditedMcq(Question questionToEdit,","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"neojxuan"},"content":"                                                          Name updatedName,","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"neojxuan"},"content":"                                                          Importance updatedImportance, Set\u003cTag\u003e updatedTags)","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"neojxuan"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"neojxuan"},"content":"        Set\u003cChoice\u003e wrongChoices \u003d editQuestionDescriptor.getWrongChoices().orElse(questionToEdit.getWrongChoices());","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"neojxuan"},"content":"        Choice answer \u003d editQuestionDescriptor.getAnswer().orElse(questionToEdit.getCorrectChoice());","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"neojxuan"},"content":"        // Both incorrect options and correct answer must be present for mcq","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"neojxuan"},"content":"        if (editQuestionDescriptor.getWrongChoices().isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"neojxuan"},"content":"            if (!editQuestionDescriptor.getAnswer().isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"neojxuan"},"content":"                throw new CommandException(MESSAGE_NO_ANSWER);","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"neojxuan"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"neojxuan"},"content":"        } else if (editQuestionDescriptor.getAnswer().isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"neojxuan"},"content":"            throw new CommandException(MESSAGE_NO_OPTIONS);","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"neojxuan"},"content":"        Set\u003cChoice\u003e updatedChoices \u003d new HashSet\u003c\u003e(wrongChoices);","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"neojxuan"},"content":"        updatedChoices.add(answer);","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"neojxuan"},"content":"        MultipleChoiceQuestion updatedMcq \u003d new MultipleChoiceQuestion(updatedName, updatedImportance,","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"neojxuan"},"content":"                updatedTags, updatedChoices);","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"neojxuan"},"content":"        if (!updatedMcq.isValidQuestion()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"neojxuan"},"content":"            throw new CommandException(MultipleChoiceQuestion.MESSAGE_VALID_MCQ);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"neojxuan"},"content":"        return updatedMcq;","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":133,"author":{"gitId":"neojxuan"},"content":"    private TrueFalseQuestion createEditedTf(Question questionToEdit,","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"neojxuan"},"content":"                                             Name updatedName,","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"neojxuan"},"content":"                                             Importance updatedImportance, Set\u003cTag\u003e updatedTags)","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"neojxuan"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"neojxuan"},"content":"        // Incorrect options should not be specified for T/F Questions","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"neojxuan"},"content":"        if (editQuestionDescriptor.getWrongChoices().isPresent()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"neojxuan"},"content":"            throw new CommandException(TrueFalseQuestion.MESSAGE_OPTIONS_INVALID);","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"neojxuan"},"content":"        Set\u003cChoice\u003e updatedChoices \u003d getEditedTfChoices(questionToEdit);","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"neojxuan"},"content":"        TrueFalseQuestion updatedTf \u003d new TrueFalseQuestion(updatedName, updatedImportance, updatedTags,","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"neojxuan"},"content":"                updatedChoices);","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"neojxuan"},"content":"        if (!updatedTf.isValidQuestion()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"neojxuan"},"content":"            throw new CommandException(TrueFalseQuestion.MESSAGE_ANSWER_INVALID);","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"neojxuan"},"content":"        return updatedTf;","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"neojxuan"},"content":"    private Set\u003cChoice\u003e getEditedTfChoices(Question questionToEdit) {","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"neojxuan"},"content":"        Set\u003cChoice\u003e updatedChoices;","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"neojxuan"},"content":"        if (editQuestionDescriptor.getTfChoices().isPresent()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"neojxuan"},"content":"            updatedChoices \u003d editQuestionDescriptor.getTfChoices().get();","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"neojxuan"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"neojxuan"},"content":"            updatedChoices \u003d questionToEdit.getChoices();","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"neojxuan"},"content":"        return updatedChoices;","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"neojxuan"},"content":"                \u0026\u0026 editQuestionDescriptor.equals(e.editQuestionDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"neojxuan"},"content":"     * Stores the details to edit the question with. Each non-empty field value will replace the","lastModifiedDate":"2021-09-25"},{"lineNumber":181,"author":{"gitId":"neojxuan"},"content":"     * corresponding field value of the question.","lastModifiedDate":"2021-09-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"neojxuan"},"content":"    public static class EditQuestionDescriptor {","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"neojxuan"},"content":"        private Importance importance;","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"neojxuan"},"content":"        private Set\u003cChoice\u003e wrongChoices;","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"neojxuan"},"content":"        private Choice answer;","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"neojxuan"},"content":"        private Set\u003cChoice\u003e parsedTrueFalseChoices;","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"neojxuan"},"content":"        public EditQuestionDescriptor() {}","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"neojxuan"},"content":"        public EditQuestionDescriptor(EditQuestionDescriptor toCopy) {","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":199,"author":{"gitId":"neojxuan"},"content":"            setImportance(toCopy.importance);","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"neojxuan"},"content":"            setWrongChoices(toCopy.wrongChoices);","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"neojxuan"},"content":"            setAnswer(toCopy.answer);","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"neojxuan"},"content":"            setTfChoices(toCopy.parsedTrueFalseChoices);","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"neojxuan"},"content":"            return CollectionUtil.isAnyNonNull(name, importance, tags, wrongChoices, answer);","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"neojxuan"},"content":"        public void setImportance(Importance importance) {","lastModifiedDate":"2021-10-07"},{"lineNumber":222,"author":{"gitId":"neojxuan"},"content":"            this.importance \u003d importance;","lastModifiedDate":"2021-10-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"neojxuan"},"content":"        public Optional\u003cImportance\u003e getImportance() {","lastModifiedDate":"2021-10-07"},{"lineNumber":226,"author":{"gitId":"neojxuan"},"content":"            return Optional.ofNullable(importance);","lastModifiedDate":"2021-10-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"neojxuan"},"content":"        /**","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"neojxuan"},"content":"         * Sets {@code choices} to this object\u0027s {@code choices}.","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"neojxuan"},"content":"         * A defensive copy of {@code choices} is used internally.","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"neojxuan"},"content":"         */","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"neojxuan"},"content":"        public void setWrongChoices(Set\u003cChoice\u003e choices) {","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"neojxuan"},"content":"            this.wrongChoices \u003d (choices !\u003d null) ? new HashSet\u003c\u003e(choices) : null;","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"neojxuan"},"content":"        /**","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"neojxuan"},"content":"         * Returns an unmodifiable set of wrong choices, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"neojxuan"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-10-21"},{"lineNumber":257,"author":{"gitId":"neojxuan"},"content":"         * Returns {@code Optional#empty()} if {@code choices} is null.","lastModifiedDate":"2021-10-21"},{"lineNumber":258,"author":{"gitId":"neojxuan"},"content":"         */","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"neojxuan"},"content":"        public Optional\u003cSet\u003cChoice\u003e\u003e getWrongChoices() {","lastModifiedDate":"2021-10-21"},{"lineNumber":260,"author":{"gitId":"neojxuan"},"content":"            return (wrongChoices !\u003d null) ? Optional.of(Collections.unmodifiableSet(wrongChoices)) : Optional.empty();","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":262,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":263,"author":{"gitId":"neojxuan"},"content":"        public void setAnswer(Choice answer) {","lastModifiedDate":"2021-10-21"},{"lineNumber":264,"author":{"gitId":"neojxuan"},"content":"            this.answer \u003d (answer !\u003d null) ? answer : null;","lastModifiedDate":"2021-10-21"},{"lineNumber":265,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"neojxuan"},"content":"        public Optional\u003cChoice\u003e getAnswer() {","lastModifiedDate":"2021-10-21"},{"lineNumber":268,"author":{"gitId":"neojxuan"},"content":"            return (answer !\u003d null) ? Optional.of(answer) : Optional.empty();","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":270,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":271,"author":{"gitId":"neojxuan"},"content":"        public void setTfChoices(Set\u003cChoice\u003e choices) {","lastModifiedDate":"2021-10-24"},{"lineNumber":272,"author":{"gitId":"neojxuan"},"content":"            parsedTrueFalseChoices \u003d (choices !\u003d null) ? new HashSet\u003c\u003e(choices) : null;","lastModifiedDate":"2021-10-24"},{"lineNumber":273,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":275,"author":{"gitId":"neojxuan"},"content":"        public Optional\u003cSet\u003cChoice\u003e\u003e getTfChoices() {","lastModifiedDate":"2021-10-24"},{"lineNumber":276,"author":{"gitId":"neojxuan"},"content":"            return (parsedTrueFalseChoices !\u003d null) ? Optional.of(Collections.unmodifiableSet(parsedTrueFalseChoices))","lastModifiedDate":"2021-10-24"},{"lineNumber":277,"author":{"gitId":"neojxuan"},"content":"                    : Optional.empty();","lastModifiedDate":"2021-10-24"},{"lineNumber":278,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":279,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":288,"author":{"gitId":"neojxuan"},"content":"            if (!(other instanceof EditQuestionDescriptor)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":293,"author":{"gitId":"neojxuan"},"content":"            EditQuestionDescriptor e \u003d (EditQuestionDescriptor) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":296,"author":{"gitId":"neojxuan"},"content":"                    \u0026\u0026 getImportance().equals(e.getImportance())","lastModifiedDate":"2021-10-07"},{"lineNumber":297,"author":{"gitId":"neojxuan"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-10-21"},{"lineNumber":298,"author":{"gitId":"neojxuan"},"content":"                    \u0026\u0026 getWrongChoices().equals(e.getWrongChoices())","lastModifiedDate":"2021-10-21"},{"lineNumber":299,"author":{"gitId":"neojxuan"},"content":"                    \u0026\u0026 getAnswer().equals(e.getAnswer());","lastModifiedDate":"2021-10-21"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"neojxuan":173,"-":129}},{"path":"src/main/java/seedu/smartnus/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import static seedu.smartnus.model.Model.PREDICATE_SHOW_ALL_QUESTIONS;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting SmartNUS as requested ...\";","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"        model.updateFilteredQuestionList(PREDICATE_SHOW_ALL_QUESTIONS);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"neojxuan":2,"aryagiat":4,"ryanpeh":1,"-":15}},{"path":"src/main/java/seedu/smartnus/logic/commands/FindByTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.TagsContainKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":" * Finds and lists all questions in smartNUS whose tags contains any of the argument keywords.","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"public class FindByTagCommand extends Command {","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all questions whose tags contain any of \"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"            + \"Example: \" + COMMAND_WORD + \" cs2100 cs2103t ma1521\";","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"    private final TagsContainKeywordsPredicate predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"    public FindByTagCommand(TagsContainKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"        model.updateFilteredQuestionList(predicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"                String.format(Messages.MESSAGE_QUESTIONS_LISTED_OVERVIEW, model.getFilteredQuestionList().size()));","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"                || (other instanceof FindByTagCommand // instanceof handles nulls","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"                \u0026\u0026 predicate.equals(((FindByTagCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"neojxuan":41,"aryagiat":1}},{"path":"src/main/java/seedu/smartnus/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.Messages;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":" * Finds and lists all questions in SmartNUS whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all questions whose names contain any of \"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"            + \"Example: \" + COMMAND_WORD + \" steps definition algorithm\";","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"        model.updateFilteredQuestionList(predicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"                String.format(Messages.MESSAGE_QUESTIONS_LISTED_OVERVIEW, model.getFilteredQuestionList().size()));","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"neojxuan":8,"aryagiat":1,"-":33}},{"path":"src/main/java/seedu/smartnus/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"neojxuan":2,"ryanpeh":1,"-":18}},{"path":"src/main/java/seedu/smartnus/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.model.Model.PREDICATE_SHOW_ALL_QUESTIONS;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":" * Lists all questions in SmartNus to the user.","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all questions\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"        model.updateFilteredQuestionList(PREDICATE_SHOW_ALL_QUESTIONS);","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"neojxuan":6,"-":18}},{"path":"src/main/java/seedu/smartnus/logic/commands/ThemeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.Theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"public class ThemeCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"    public static final String COMMAND_WORD \u003d \"theme\";","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"    public static final String LIGHT_KEYWORD \u003d \"light\";","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"    public static final String DARK_KEYWORD \u003d \"dark\";","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" light/dark\";","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Changed the theme to: \";","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"    public static final String MESSAGE_NO_CHANGE \u003d \"Theme is already: \";","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"    private Theme theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    public ThemeCommand(Theme theme) {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"        this.theme \u003d theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"        if (model.getTheme().equals(theme)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"            return new CommandResult(MESSAGE_NO_CHANGE + theme);","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"        model.setTheme(theme);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        return new CommandResult(MESSAGE_SUCCESS + theme);","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"                || (other instanceof ThemeCommand // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"                \u0026\u0026 theme.equals(((ThemeCommand) other).theme)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"aryagiat":37}},{"path":"src/main/java/seedu/smartnus/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands.exceptions;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"neojxuan":1,"-":16}},{"path":"src/main/java/seedu/smartnus/logic/commands/questions/AddMcqCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package seedu.smartnus.logic.commands.questions;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_IMPORTANCE;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"/**","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":" * Adds an MCQ question","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":" */","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"public class AddMcqCommand extends AddQuestionCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"    public static final String COMMAND_WORD \u003d \"mcq\";","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New question added: %s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an mcq question to SmartNUS. \"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_QUESTION + \"QUESTION \"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_OPTION + \"OPTION \"","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_OPTION + \"OPTION \"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_OPTION + \"OPTION \"","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_ANSWER + \"ANSWER \"","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_IMPORTANCE + \"IMPORTANCE \"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_QUESTION + \"What is 1+1? \"","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_OPTION + \"3 \"","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_OPTION + \"4 \"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_OPTION + \"5 \"","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_ANSWER + \"2 \"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_IMPORTANCE + \"1 \";","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"    public AddMcqCommand(Question question) {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"        super(question);","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"neojxuan":5,"cedricongjh":31}},{"path":"src/main/java/seedu/smartnus/logic/commands/questions/AddQuestionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package seedu.smartnus.logic.commands.questions;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.Command;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.CommandResult;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"public class AddQuestionCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_DUPLICATE_QUESTION \u003d \"This question already exists in SmartNUS\";","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New question added: %s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"    private final Question toAdd;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"     * @param question The question to add to SmartNus","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"    public AddQuestionCommand(Question question) {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"        requireNonNull(question);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"        this.toAdd \u003d question;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"        if (model.hasQuestion(toAdd)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_QUESTION);","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"        model.addQuestion(toAdd);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd.toString()));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"                || (other instanceof AddQuestionCommand // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"                \u0026\u0026 toAdd.equals(((AddQuestionCommand) other).toAdd)); // check if the question to add are the same","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"neojxuan":1,"cedricongjh":44}},{"path":"src/main/java/seedu/smartnus/logic/commands/questions/AddTfCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package seedu.smartnus.logic.commands.questions;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_IMPORTANCE;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"public class AddTfCommand extends AddQuestionCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"    public static final String COMMAND_WORD \u003d \"tf\";","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New question added: %s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a true/false question to SmartNUS. \"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_QUESTION + \"QUESTION \"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_ANSWER + \"ANSWER (either T or F)\"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_IMPORTANCE + \"IMPORTANCE \"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_QUESTION + \"Is 1+1 \u003d 2? \"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_ANSWER + \"T \"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"            + PREFIX_IMPORTANCE + \"1 \";","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    public AddTfCommand(Question question) {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"        super(question);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"cedricongjh":25}},{"path":"src/main/java/seedu/smartnus/logic/commands/quiz/AnswerMcqCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands.quiz;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_CONTINUE_QUIZ;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_END_OF_QUIZ;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.CommandResult;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.quiz.exceptions.QuestionAlreadyAnsweredException;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":" * Starts a quiz","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"public class AnswerMcqCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"    public static final String COMMAND_WORD \u003d \"quiz\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Starts a quiz, takes no arguments\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"    private final String input;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"ryanpeh"},"content":"    private final Question currentQuestion;","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"    private final QuizManager quizManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"     * Creates a AnswerMcqCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"    public AnswerMcqCommand(String input, QuizManager quizManager) {","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"        assert(input.matches(\"^[a-dA-D]$\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"        this.currentQuestion \u003d quizManager.currQuestion();","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"        this.quizManager \u003d quizManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"        // TODO: Some additional logic here for the UI","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"        ArrayList\u003cChoice\u003e choices \u003d currentQuestion.getOrderedChoices();","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"ryanpeh"},"content":"        Choice choice \u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"        switch (input.toLowerCase()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"ryanpeh"},"content":"        case \"a\":","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"ryanpeh"},"content":"            choice \u003d choices.get(0);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"ryanpeh"},"content":"        case \"b\":","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"ryanpeh"},"content":"            choice \u003d choices.get(1);","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"ryanpeh"},"content":"        case \"c\":","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"ryanpeh"},"content":"            choice \u003d choices.get(2);","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"ryanpeh"},"content":"        case \"d\":","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"ryanpeh"},"content":"            choice \u003d choices.get(3);","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"ryanpeh"},"content":"        default:","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"ryanpeh"},"content":"        assert choice !\u003d null : \"Choice should not be null\";","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"ryanpeh"},"content":"        String endMessage \u003d quizManager.isLastQuestion() ? MESSAGE_END_OF_QUIZ : MESSAGE_CONTINUE_QUIZ;","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"ryanpeh"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"aryagiat"},"content":"            if (quizManager.attemptAndCheckAnswer(choice)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"ryanpeh"},"content":"                return new CommandResult(\"Correct!\\n\" + endMessage);","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"ryanpeh"},"content":"            } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"ryanpeh"},"content":"                return new CommandResult(\"Incorrect. The correct answer is: \"","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"ryanpeh"},"content":"                        + currentQuestion.getCorrectChoice().getTitle() + \"\\n\" + endMessage);","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"ryanpeh"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"ryanpeh"},"content":"        } catch (QuestionAlreadyAnsweredException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"ryanpeh"},"content":"            return new CommandResult(\"You have already answered this question.\\n\" + endMessage);","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"ryanpeh"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"ryanpeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"ryanpeh"},"content":"        // TODO: In future, check if the attributes (if any) for the QuizCommand are the same","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"ryanpeh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"ryanpeh"},"content":"                || other instanceof AnswerMcqCommand; // instanceof handles nulls","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"neojxuan":7,"ryanpeh":85,"aryagiat":3}},{"path":"src/main/java/seedu/smartnus/logic/commands/quiz/AnswerTfCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package seedu.smartnus.logic.commands.quiz;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_CONTINUE_QUIZ;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_END_OF_QUIZ;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.model.choice.Choice.FALSE_CHOICE_TITLE;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.model.choice.Choice.TRUE_CHOICE_TITLE;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.Command;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.CommandResult;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.quiz.exceptions.QuestionAlreadyAnsweredException;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"public class AnswerTfCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"    private final String input;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    private final Question currentQuestion;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"    private final QuizManager quizManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"     * Creates a AnswerTfCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"    public AnswerTfCommand(String input, QuizManager quizManager) {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"        this.currentQuestion \u003d quizManager.currQuestion();","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"        this.quizManager \u003d quizManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"        // TODO: Some additional logic here for the UI","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"        ArrayList\u003cChoice\u003e choices \u003d currentQuestion.getOrderedChoices();","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"        Choice choice \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"        switch (input.toLowerCase()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"        case \"true\":","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"        case \"t\":","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"            choice \u003d currentQuestion.findChoiceByTitle(TRUE_CHOICE_TITLE);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"        case \"false\":","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"        case \"f\":","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"cedricongjh"},"content":"            choice \u003d currentQuestion.findChoiceByTitle(FALSE_CHOICE_TITLE);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"cedricongjh"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"cedricongjh"},"content":"        default:","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"cedricongjh"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"        assert choice !\u003d null : \"Choice should not be null\";","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"ryanpeh"},"content":"        String endMessage \u003d quizManager.isLastQuestion() ? MESSAGE_END_OF_QUIZ : MESSAGE_CONTINUE_QUIZ;","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"ryanpeh"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"cedricongjh"},"content":"            if (quizManager.attemptAndCheckAnswer(choice)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"ryanpeh"},"content":"                return new CommandResult(\"Correct!\\n\" + endMessage);","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"cedricongjh"},"content":"            } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"cedricongjh"},"content":"                return new CommandResult(\"Incorrect. The correct answer is: \"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"ryanpeh"},"content":"                        + currentQuestion.getCorrectChoice().getTitle() + \"\\n\" + endMessage);","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"ryanpeh"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"ryanpeh"},"content":"        } catch (QuestionAlreadyAnsweredException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"ryanpeh"},"content":"            return new CommandResult(\"You have already answered this question.\\n\" + endMessage);","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"cedricongjh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"cedricongjh"},"content":"        // TODO: In future, check if the attributes (if any) for the QuizCommand are the same","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"cedricongjh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"cedricongjh"},"content":"                || other instanceof AnswerTfCommand; // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"ryanpeh":18,"cedricongjh":61}},{"path":"src/main/java/seedu/smartnus/logic/commands/quiz/NextQuestionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands.quiz;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.CommandResult;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.exceptions.QuizOutOfBoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":" * Command to go to the next question","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"public class NextQuestionCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"    public static final String COMMAND_WORD \u003d \"next\";","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Quizzes the next question, takes no arguments\";","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Got Next Question!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"    public static final String MESSAGE_END_OF_QUIZ \u003d \"You have reached the end of the quiz, enter \u0027\"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"            + ExitCommand.COMMAND_WORD + \"\u0027 to exit the quiz.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"    private final QuizManager quizManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"    public NextQuestionCommand(QuizManager quizManager) {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"        this.quizManager \u003d quizManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"            quizManager.nextQuestion();","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"        } catch (QuizOutOfBoundException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"            return new CommandResult(MESSAGE_END_OF_QUIZ","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"                    + \"\\n Here is the quiz statistic: \" + quizManager.getStatistic());","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"        // TODO: In future, check if the attributes (if any) for the QuizCommand are the same","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"                || other instanceof NextQuestionCommand; // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"neojxuan":8,"aryagiat":25,"ryanpeh":14}},{"path":"src/main/java/seedu/smartnus/logic/commands/quiz/PrevQuestionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands.quiz;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.CommandResult;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.exceptions.QuizOutOfBoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"public class PrevQuestionCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"    public static final String COMMAND_WORD \u003d \"prev\";","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Quizzes the previous question, takes no arguments\";","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Got Previous Question!\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"    public static final String MESSAGE_START_OF_QUIZ \u003d \"You have reached the beginning of the quiz, enter \u0027\"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"            + ExitCommand.COMMAND_WORD + \"\u0027 to exit the quiz.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"    private final QuizManager quizManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"    public PrevQuestionCommand(QuizManager quizManager) {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"        this.quizManager \u003d quizManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"            quizManager.prevQuestion();","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"        } catch (QuizOutOfBoundException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"            return new CommandResult(MESSAGE_START_OF_QUIZ);","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"        // TODO: In future, check if the attributes (if any) for the QuizCommand are the same","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"                || other instanceof PrevQuestionCommand; // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"neojxuan":7,"aryagiat":20,"ryanpeh":17}},{"path":"src/main/java/seedu/smartnus/logic/commands/quiz/QuizCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands.quiz;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_NUMBER;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.CommandResult;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.ShowAllQuestionsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":" * Starts a quiz","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"public class QuizCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"    public static final String COMMAND_WORD \u003d \"quiz\";","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Starts a quiz, takes optional arguments \"","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"            + \"specifying the questions to be included in the quiz.\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"            + \"Parameters: \" + \"[\" + PREFIX_NUMBER + \"NUMBER...] \"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"            + PREFIX_TAG + \"CS2103T \" + PREFIX_TAG + \"CS2100 \\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"            + \"Example: \" + COMMAND_WORD + PREFIX_NUMBER + \"1 2 3\";","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Quiz started!\";","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_NO_QUESTIONS \u003d \"Quiz has no questions!\";","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"    private final ArrayList\u003cPredicate\u003cQuestion\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"    public QuizCommand(Predicate\u003cQuestion\u003e filterPredicate) {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"        this.predicates.add(filterPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"        // TODO: Update state (model) with Quiz object?","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"        model.updateFilteredQuizQuestionList(combinePredicates());","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"        if (model.getFilteredQuizQuestionList().isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"            throw new CommandException(MESSAGE_NO_QUESTIONS);","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"ryanpeh"},"content":"        // TODO: Find some other way of doing this? Making the constructor so long isn\u0027t that good as well","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"ryanpeh"},"content":"        //       Maybe explore overloading or something I\u0027m not sure","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"ryanpeh"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"     * Returns a single predicate that represents a logical AND of all predicates.","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"neojxuan"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"     * @return A single predicate that represents a logical AND of all predicates.","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"    private Predicate\u003cQuestion\u003e combinePredicates() {","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"        Predicate\u003cQuestion\u003e combinedPredicates \u003d new ShowAllQuestionsPredicate();","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"        for (Predicate\u003cQuestion\u003e predicate : predicates) {","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"neojxuan"},"content":"            combinedPredicates \u003d combinedPredicates.and(predicate);","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"        return combinedPredicates;","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"cedricongjh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"cedricongjh"},"content":"        // TODO: In future, check if the attributes (if any) for the QuizCommand are the same","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"cedricongjh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"                || (other instanceof QuizCommand) // instanceof handles nulls","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"                \u0026\u0026 predicates.equals(((QuizCommand) other).predicates);","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"neojxuan":44,"aryagiat":9,"ryanpeh":3,"cedricongjh":24}},{"path":"src/main/java/seedu/smartnus/logic/parser/AddMcqCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_IMPORTANCE;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.questions.AddMcqCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Importance;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.MultipleChoiceQuestion;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Name;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"public class AddMcqCommandParser implements Parser\u003cAddMcqCommand\u003e {","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"     * Parses the given {@code String} of arguments in the context of the AddMcqCommand","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"     * and returns an AddMcqCommand object for execution.","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"    public AddMcqCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_QUESTION, PREFIX_OPTION,","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"                        PREFIX_ANSWER, PREFIX_IMPORTANCE, PREFIX_TAG);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_QUESTION, PREFIX_OPTION, PREFIX_ANSWER, PREFIX_IMPORTANCE)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMcqCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"        Name questionName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_QUESTION).get());","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"        Importance importance \u003d ParserUtil.parseImportance(argMultimap.getValue(PREFIX_IMPORTANCE).get());","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cChoice\u003e choices \u003d ParserUtil.parseChoices(argMultimap.getAllValues(PREFIX_OPTION),","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"                argMultimap.getValue(PREFIX_ANSWER).get());","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"        Question toAdd \u003d new MultipleChoiceQuestion(questionName, importance, tagList, choices);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"        return new AddMcqCommand(toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"neojxuan":15,"cedricongjh":37}},{"path":"src/main/java/seedu/smartnus/logic/parser/AddTfCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_IMPORTANCE;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.questions.AddTfCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Importance;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.TrueFalseQuestion;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"public class AddTfCommandParser implements Parser\u003cAddTfCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"    public static final String ANSWER_TRUE \u003d \"T\";","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"    public static final String ANSWER_FALSE \u003d \"F\";","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTfCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"     * and returns an AddTfCommand object for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"    public AddTfCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_QUESTION,","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"                        PREFIX_ANSWER, PREFIX_IMPORTANCE, PREFIX_TAG);","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_QUESTION, PREFIX_ANSWER, PREFIX_IMPORTANCE)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTfCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"        Name questionName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_QUESTION).get());","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"        Importance importance \u003d ParserUtil.parseImportance(argMultimap.getValue(PREFIX_IMPORTANCE).get());","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cChoice\u003e choices \u003d ParserUtil.parseTrueFalseAnswer(argMultimap.getValue(PREFIX_ANSWER).get());","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"        Question toAdd \u003d new TrueFalseQuestion(questionName, importance, tagList, choices);","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"        return new AddTfCommand(toAdd);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"cedricongjh":49}},{"path":"src/main/java/seedu/smartnus/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"neojxuan":1,"-":59}},{"path":"src/main/java/seedu/smartnus/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"neojxuan":1,"-":147}},{"path":"src/main/java/seedu/smartnus/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"    public static final Prefix PREFIX_IMPORTANCE \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"    public static final Prefix PREFIX_QUESTION \u003d new Prefix(\"qn/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"    public static final Prefix PREFIX_OPTION \u003d new Prefix(\"opt/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"    public static final Prefix PREFIX_ANSWER \u003d new Prefix(\"ans/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"    public static final Prefix PREFIX_NUMBER \u003d new Prefix(\"n/\");","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"neojxuan":7,"aryagiat":1,"cedricongjh":1,"-":9}},{"path":"src/main/java/seedu/smartnus/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.index.Index;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"neojxuan":5,"-":24}},{"path":"src/main/java/seedu/smartnus/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_IMPORTANCE;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.index.Index;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.EditCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.EditCommand.EditQuestionDescriptor;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_QUESTION, PREFIX_IMPORTANCE, PREFIX_TAG, PREFIX_OPTION,","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"                        PREFIX_ANSWER);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"        Index index \u003d parseEditIndex(argMultimap);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"        EditQuestionDescriptor editQuestionDescriptor \u003d new EditCommand.EditQuestionDescriptor();","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"        setDescriptorQuestion(argMultimap, editQuestionDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"        setDescriptorImportance(argMultimap, editQuestionDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"        setDescriptorTags(argMultimap, editQuestionDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"        setDescriptorAnswers(argMultimap, editQuestionDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"        setDescriptorWrongChoices(argMultimap, editQuestionDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"        checkValidChoicesForEdit(editQuestionDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"        checkAtLeastOneFieldEdited(editQuestionDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"        return new EditCommand(index, editQuestionDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"neojxuan"},"content":"    private Index parseEditIndex(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"            return ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"    private void setDescriptorQuestion(ArgumentMultimap argMultimap, EditQuestionDescriptor editQuestionDescriptor)","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"neojxuan"},"content":"            throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"        if (argMultimap.getValue(PREFIX_QUESTION).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"            editQuestionDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_QUESTION).get()));","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"neojxuan"},"content":"    private void setDescriptorImportance(ArgumentMultimap argMultimap, EditQuestionDescriptor editQuestionDescriptor)","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"neojxuan"},"content":"            throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"neojxuan"},"content":"        if (argMultimap.getValue(PREFIX_IMPORTANCE).isPresent()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"            editQuestionDescriptor.setImportance(ParserUtil.parseImportance(","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"                    argMultimap.getValue(PREFIX_IMPORTANCE).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"    private void setDescriptorTags(ArgumentMultimap argMultimap, EditQuestionDescriptor editQuestionDescriptor)","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"neojxuan"},"content":"            throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"neojxuan"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editQuestionDescriptor::setTags);","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"neojxuan"},"content":"    private void setDescriptorAnswers(ArgumentMultimap argMultimap, EditQuestionDescriptor editQuestionDescriptor)","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"neojxuan"},"content":"            throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"neojxuan"},"content":"        if (argMultimap.getValue(PREFIX_ANSWER).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"neojxuan"},"content":"            Choice answer \u003d ParserUtil.parseAnswerForEdit(argMultimap.getValue(PREFIX_ANSWER).get());","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"neojxuan"},"content":"            editQuestionDescriptor.setAnswer(answer);","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"neojxuan"},"content":"            // TF choices require additional parsing as user input (e.g. T) is not the same as choice title (e.g. True)","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"neojxuan"},"content":"            // this is necessary to ensure decoupling of parser and logic/model components","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"neojxuan"},"content":"            Set\u003cChoice\u003e tfChoices \u003d ParserUtil.parseTrueFalseAnswerForEdit(answer.getTitle());","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"neojxuan"},"content":"            editQuestionDescriptor.setTfChoices(tfChoices);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"neojxuan"},"content":"    private void setDescriptorWrongChoices(ArgumentMultimap argMultimap, EditQuestionDescriptor editQuestionDescriptor)","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"neojxuan"},"content":"            throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"neojxuan"},"content":"        Set\u003cChoice\u003e wrongChoices \u003d ParserUtil.parseWrongChoicesForEdit(argMultimap.getAllValues(PREFIX_OPTION));","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"neojxuan"},"content":"        if (!wrongChoices.isEmpty()) { // incorrect options are specified","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"neojxuan"},"content":"            editQuestionDescriptor.setWrongChoices(wrongChoices);","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"neojxuan"},"content":"     * Throws ParseException if there are duplicate choice titles between the incorrect and correct choices.","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"neojxuan"},"content":"     * If either the incorrect choices or correct choices are not present, the method returns immediately as","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"neojxuan"},"content":"     * duplicate titles within the incorrect options are already checked for during parsing.","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"neojxuan"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"neojxuan"},"content":"     * @param editQuestionDescriptor The descriptor that stores the updated correct and wrong choices.","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"neojxuan"},"content":"     * @throws ParseException if there are duplicate choice titles between the incorrect and correct choices.","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"neojxuan"},"content":"    private void checkValidChoicesForEdit(EditQuestionDescriptor editQuestionDescriptor) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"neojxuan"},"content":"        if (!editQuestionDescriptor.getWrongChoices().isPresent() || !editQuestionDescriptor.getAnswer().isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"neojxuan"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"neojxuan"},"content":"        Set\u003cChoice\u003e updatedChoices \u003d new HashSet\u003c\u003e(editQuestionDescriptor.getWrongChoices().get());","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"neojxuan"},"content":"        updatedChoices.add(editQuestionDescriptor.getAnswer().get());","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"neojxuan"},"content":"        if (!ParserUtil.isValidChoiceTitles(updatedChoices)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"neojxuan"},"content":"            throw new ParseException(Question.MESSAGE_DUPLICATE_CHOICES);","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":125,"author":{"gitId":"neojxuan"},"content":"    private void checkAtLeastOneFieldEdited(EditQuestionDescriptor editQuestionDescriptor) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"neojxuan"},"content":"        if (!editQuestionDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"neojxuan"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"neojxuan":96,"-":50}},{"path":"src/main/java/seedu/smartnus/logic/parser/FindByTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.FindByTagCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.TagsContainKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":" * Parses input arguments and creates a new FindByTagCommand object","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"public class FindByTagCommandParser implements Parser\u003cFindByTagCommand\u003e {","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"     * Parses the given {@code String} of arguments in the context of the FindByTagCommand","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"     * and returns a FindByTagCommand object for execution.","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"    public FindByTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindByTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"        String[] tagKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"        return new FindByTagCommand(new TagsContainKeywordsPredicate(Arrays.asList(tagKeywords)));","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"neojxuan":32,"aryagiat":1}},{"path":"src/main/java/seedu/smartnus/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.FindCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"neojxuan":4,"aryagiat":1,"-":28}},{"path":"src/main/java/seedu/smartnus/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"neojxuan":3,"-":13}},{"path":"src/main/java/seedu/smartnus/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import static seedu.smartnus.logic.commands.ThemeCommand.DARK_KEYWORD;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"import static seedu.smartnus.logic.commands.ThemeCommand.LIGHT_KEYWORD;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.parser.AddTfCommandParser.ANSWER_FALSE;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.parser.AddTfCommandParser.ANSWER_TRUE;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.model.question.MultipleChoiceQuestion.NUMBER_OF_INCORRECT_CHOICES;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"import java.util.List;","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.index.Index;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.util.StringUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Importance;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.MultipleChoiceQuestion;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Name;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.TrueFalseQuestion;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"neojxuan"},"content":"     * Parses a {@code String importance} into a {@code Importance}.","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"     * @throws ParseException if the given {@code importance} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"    public static Importance parseImportance(String importance) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"        requireNonNull(importance);","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"        String trimmedImportance \u003d importance.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"        if (!Importance.isValidImportance(trimmedImportance)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"neojxuan"},"content":"            throw new ParseException(Importance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"neojxuan"},"content":"        return new Importance(trimmedImportance);","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":113,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"aryagiat"},"content":"     * Parses {@code Collection\u003cString\u003e indexes} into a {@code Set\u003cIndex\u003e}.","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"aryagiat"},"content":"    public static Set\u003cIndex\u003e parseQuizIndexes(Collection\u003cString\u003e indexCollection) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"aryagiat"},"content":"        requireNonNull(indexCollection);","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"aryagiat"},"content":"        final Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"aryagiat"},"content":"        for (String indexCol: indexCollection) {","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"aryagiat"},"content":"            String[] indexes \u003d indexCol.split(\"\\\\s+\");","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"aryagiat"},"content":"            for (String index : indexes) {","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"aryagiat"},"content":"                indexSet.add(parseIndex(index));","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"aryagiat"},"content":"        return indexSet;","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"cedricongjh"},"content":"     * Parses {@code String choice} into a {@code Choice choice}.","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"cedricongjh"},"content":"    public static Choice parseChoice(String choice, boolean isCorrect) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"cedricongjh"},"content":"        requireNonNull(choice);","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"cedricongjh"},"content":"        String trimmedChoice \u003d choice.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"cedricongjh"},"content":"        if (!Choice.isValidChoiceTitle(trimmedChoice)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"cedricongjh"},"content":"            throw new ParseException(Choice.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"cedricongjh"},"content":"        return new Choice(trimmedChoice, isCorrect);","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"cedricongjh"},"content":"     * Parses {@code List\u003cString\u003e choices, String answer} into a {@code Set\u003cChoice\u003e choice}.","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"cedricongjh"},"content":"    public static Set\u003cChoice\u003e parseChoices(List\u003cString\u003e choices, String answer) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"cedricongjh"},"content":"        requireAllNonNull(choices, answer);","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"cedricongjh"},"content":"        if (choices.size() !\u003d NUMBER_OF_INCORRECT_CHOICES) {","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"cedricongjh"},"content":"            throw new ParseException(MultipleChoiceQuestion.MESSAGE_INCORRECT_NUMBER_OF_CHOICES);","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cChoice\u003e choiceSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"cedricongjh"},"content":"        for (int i \u003d 0; i \u003c NUMBER_OF_INCORRECT_CHOICES; i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"cedricongjh"},"content":"            String choice \u003d choices.get(i);","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"cedricongjh"},"content":"            if (choice.equals(answer)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"cedricongjh"},"content":"                throw new ParseException(MultipleChoiceQuestion.MESSAGE_DUPLICATE_CHOICES);","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"cedricongjh"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"cedricongjh"},"content":"            choiceSet.add(parseChoice(choice, false));","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"cedricongjh"},"content":"        if (choiceSet.size() !\u003d NUMBER_OF_INCORRECT_CHOICES) {","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"cedricongjh"},"content":"            throw new ParseException(MultipleChoiceQuestion.MESSAGE_DUPLICATE_CHOICES);","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"cedricongjh"},"content":"        choiceSet.add(parseChoice(answer, true));","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"cedricongjh"},"content":"        return choiceSet;","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"neojxuan"},"content":"     * Parses  {@code choices} into a set of Choices.","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"neojxuan"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"neojxuan"},"content":"     * @param choices List of Strings representing titles of choices.","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"neojxuan"},"content":"     * @return Set of Choices where all Choices have isCorrect set to false.","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"neojxuan"},"content":"     * @throws ParseException If any choice has an invalid title.","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"neojxuan"},"content":"    public static Set\u003cChoice\u003e parseWrongChoicesForEdit(List\u003cString\u003e choices) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"neojxuan"},"content":"        requireAllNonNull(choices);","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"neojxuan"},"content":"        Set\u003cChoice\u003e choiceSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"neojxuan"},"content":"        for (String choice : choices) {","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"neojxuan"},"content":"            choiceSet.add(parseChoice(choice, false));","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"neojxuan"},"content":"        if (choiceSet.size() !\u003d choices.size()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"neojxuan"},"content":"            throw new ParseException(MultipleChoiceQuestion.MESSAGE_DUPLICATE_CHOICES);","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"neojxuan"},"content":"        return choiceSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"neojxuan"},"content":"     * Parses {@code answer} into a correct Choice.","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"neojxuan"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"neojxuan"},"content":"     * @param answer Title of the correct Choice.","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"neojxuan"},"content":"     * @return Choice with title set to answer and isCorrect set to true.","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"neojxuan"},"content":"     * @throws ParseException If answer is not a valid choice title.","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"neojxuan"},"content":"    public static Choice parseAnswerForEdit(String answer) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"neojxuan"},"content":"        requireNonNull(answer);","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"neojxuan"},"content":"        return parseChoice(answer, true);","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"cedricongjh"},"content":"     * Parses {@code String answer} (T or F) into a {@code Set\u003cChoice\u003e choice} of 2 (T and F) choices.","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"cedricongjh"},"content":"    public static Set\u003cChoice\u003e parseTrueFalseAnswer(String answer) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"cedricongjh"},"content":"        requireNonNull(answer);","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"cedricongjh"},"content":"        String trimmedAnswer \u003d answer.trim();","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"cedricongjh"},"content":"        boolean isAnswerTrue \u003d trimmedAnswer.equals(ANSWER_TRUE);","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"cedricongjh"},"content":"        boolean isAnswerFalse \u003d trimmedAnswer.equals(ANSWER_FALSE);","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"cedricongjh"},"content":"        if (!isAnswerTrue \u0026\u0026 !isAnswerFalse) {","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"cedricongjh"},"content":"            throw new ParseException(TrueFalseQuestion.MESSAGE_ANSWER_INVALID);","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cChoice\u003e choices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"cedricongjh"},"content":"        choices.add(new Choice(Choice.TRUE_CHOICE_TITLE, isAnswerTrue));","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"cedricongjh"},"content":"        choices.add(new Choice(Choice.FALSE_CHOICE_TITLE, isAnswerFalse));","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"cedricongjh"},"content":"        return choices;","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"neojxuan"},"content":"     * Parses {@code String answer} into a {@code Set\u003cChoice\u003e choice} of two Choices (with titles True and False).","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"neojxuan"},"content":"     * {@code answer} may not be T or F, as the question to be edited may not be a TrueFalseQuestion.","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"neojxuan"},"content":"     * This method is used to prepare the choices for EditCommand in the event the question to be edited is","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"neojxuan"},"content":"     * a TrueFalseQuestion.","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"neojxuan"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"neojxuan"},"content":"     * @param answer The answer specified by the user.","lastModifiedDate":"2021-10-25"},{"lineNumber":219,"author":{"gitId":"neojxuan"},"content":"     * @return A set of two Choices (with titles True and False).","lastModifiedDate":"2021-10-25"},{"lineNumber":220,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"neojxuan"},"content":"    public static Set\u003cChoice\u003e parseTrueFalseAnswerForEdit(String answer) {","lastModifiedDate":"2021-10-25"},{"lineNumber":222,"author":{"gitId":"neojxuan"},"content":"        requireNonNull(answer);","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"neojxuan"},"content":"        String trimmedAnswer \u003d answer.trim();","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"neojxuan"},"content":"        boolean isAnswerTrue \u003d trimmedAnswer.equalsIgnoreCase(ANSWER_TRUE);","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"neojxuan"},"content":"        boolean isAnswerFalse \u003d trimmedAnswer.equalsIgnoreCase(ANSWER_FALSE);","lastModifiedDate":"2021-10-25"},{"lineNumber":226,"author":{"gitId":"neojxuan"},"content":"        Set\u003cChoice\u003e choices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"neojxuan"},"content":"        choices.add(new Choice(Choice.TRUE_CHOICE_TITLE, isAnswerTrue));","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"neojxuan"},"content":"        choices.add(new Choice(Choice.FALSE_CHOICE_TITLE, isAnswerFalse));","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"neojxuan"},"content":"        return choices;","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":233,"author":{"gitId":"neojxuan"},"content":"     * Returns true if there are no choices with duplicate titles in {@code choices}, false otherwise.","lastModifiedDate":"2021-10-25"},{"lineNumber":234,"author":{"gitId":"neojxuan"},"content":"     * {@code choices} should not contain null.","lastModifiedDate":"2021-10-25"},{"lineNumber":235,"author":{"gitId":"neojxuan"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":236,"author":{"gitId":"neojxuan"},"content":"     * @param choices A set of choices.","lastModifiedDate":"2021-10-25"},{"lineNumber":237,"author":{"gitId":"neojxuan"},"content":"     * @return True if there are no choices with duplicate titles, false otherwise.","lastModifiedDate":"2021-10-25"},{"lineNumber":238,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":239,"author":{"gitId":"neojxuan"},"content":"    public static boolean isValidChoiceTitles(Set\u003cChoice\u003e choices) {","lastModifiedDate":"2021-10-25"},{"lineNumber":240,"author":{"gitId":"neojxuan"},"content":"        requireAllNonNull(choices);","lastModifiedDate":"2021-10-25"},{"lineNumber":241,"author":{"gitId":"neojxuan"},"content":"        ArrayList\u003cChoice\u003e arr \u003d new ArrayList\u003c\u003e(choices);","lastModifiedDate":"2021-10-25"},{"lineNumber":242,"author":{"gitId":"neojxuan"},"content":"        for (int i \u003d 0; i \u003c arr.size(); i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"neojxuan"},"content":"            Choice currentChoice \u003d arr.get(i);","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"neojxuan"},"content":"            for (int j \u003d i + 1; j \u003c arr.size(); j++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"neojxuan"},"content":"                Choice nextChoice \u003d arr.get(j);","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"neojxuan"},"content":"                if (currentChoice.hasSameTitle(nextChoice)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"neojxuan"},"content":"                    return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"neojxuan"},"content":"                }","lastModifiedDate":"2021-10-25"},{"lineNumber":249,"author":{"gitId":"neojxuan"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"neojxuan"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":253,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":255,"author":{"gitId":"aryagiat"},"content":"     * Returns True if the given theme is valid.","lastModifiedDate":"2021-10-20"},{"lineNumber":256,"author":{"gitId":"aryagiat"},"content":"     * @param theme The given theme.","lastModifiedDate":"2021-10-20"},{"lineNumber":257,"author":{"gitId":"aryagiat"},"content":"     * @return True if theme is valid, false otherwise.","lastModifiedDate":"2021-10-20"},{"lineNumber":258,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":259,"author":{"gitId":"aryagiat"},"content":"    public static boolean isValidTheme(String theme) {","lastModifiedDate":"2021-10-20"},{"lineNumber":260,"author":{"gitId":"aryagiat"},"content":"        return theme.trim().equals(LIGHT_KEYWORD) || theme.trim().equals(DARK_KEYWORD);","lastModifiedDate":"2021-10-20"},{"lineNumber":261,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"neojxuan":93,"aryagiat":25,"cedricongjh":67,"-":77}},{"path":"src/main/java/seedu/smartnus/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"neojxuan":1,"-":38}},{"path":"src/main/java/seedu/smartnus/logic/parser/QuizInputParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.quiz.NextQuestionCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.quiz.PrevQuestionCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.quiz.AnswerMcqCommandParser;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.parser.quiz.AnswerTfCommandParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.MultipleChoiceQuestion;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.TrueFalseQuestion;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":" * Parses user input during a quiz.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"ryanpeh"},"content":"public class QuizInputParser {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"ryanpeh"},"content":"     * @param userInput full user input string","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"    public Command parseCommand(String userInput, QuizManager quizManager) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"ryanpeh"},"content":"        case NextQuestionCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"ryanpeh"},"content":"            return new NextQuestionCommand(quizManager);","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"ryanpeh"},"content":"        case PrevQuestionCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"ryanpeh"},"content":"            return new PrevQuestionCommand(quizManager);","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"ryanpeh"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"ryanpeh"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"ryanpeh"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"ryanpeh"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"ryanpeh"},"content":"        default:","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"ryanpeh"},"content":"        if (quizManager.currQuestion() instanceof MultipleChoiceQuestion) {","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"ryanpeh"},"content":"            return new AnswerMcqCommandParser().parse(userInput, quizManager);","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"cedricongjh"},"content":"        } else if (quizManager.currQuestion() instanceof TrueFalseQuestion) {","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"cedricongjh"},"content":"            return new AnswerTfCommandParser().parse(userInput, quizManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"ryanpeh"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"ryanpeh"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"neojxuan":12,"ryanpeh":59,"cedricongjh":4}},{"path":"src/main/java/seedu/smartnus/logic/parser/SmartNusParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.EditCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.FindByTagCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.FindCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.ListCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.logic.commands.ThemeCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.questions.AddMcqCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.questions.AddTfCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.quiz.QuizCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.quiz.QuizCommandParser;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"public class SmartNusParser {","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"        case FindByTagCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"            return new FindByTagCommandParser().parse(arguments);","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"cedricongjh"},"content":"        case AddMcqCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"cedricongjh"},"content":"            return new AddMcqCommandParser().parse(arguments);","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"cedricongjh"},"content":"        case AddTfCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"cedricongjh"},"content":"            return new AddTfCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"cedricongjh"},"content":"        case QuizCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"cedricongjh"},"content":"            return new QuizCommandParser().parse(arguments);","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":85,"author":{"gitId":"aryagiat"},"content":"        case ThemeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"aryagiat"},"content":"            return new ThemeCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"neojxuan":19,"aryagiat":4,"cedricongjh":11,"-":59}},{"path":"src/main/java/seedu/smartnus/logic/parser/ThemeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import static seedu.smartnus.logic.commands.ThemeCommand.LIGHT_KEYWORD;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.DarkTheme;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.LightTheme;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.Theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.logic.commands.ThemeCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"public class ThemeCommandParser implements Parser\u003cThemeCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"    public ThemeCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"        if (ParserUtil.isValidTheme(args.trim())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"            return new ThemeCommand(getThemeClass(args.trim()));","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ThemeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"    private Theme getThemeClass(String validTheme) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"        if (validTheme.equals(LIGHT_KEYWORD)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"            return new LightTheme();","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"            return new DarkTheme();","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"aryagiat":30}},{"path":"src/main/java/seedu/smartnus/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser.exceptions;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"neojxuan":2,"-":15}},{"path":"src/main/java/seedu/smartnus/logic/parser/quiz/AnswerMcqCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser.quiz;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_MCQ_ANSWER_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.quiz.AnswerMcqCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"public class AnswerMcqCommandParser implements QuizParser\u003cAnswerMcqCommand\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"    private static final String MCQ_REGEX \u003d \"^[a-dA-D]$\";","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"    public AnswerMcqCommand parse(String args, QuizManager quizManager) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"        if (args.matches(MCQ_REGEX)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"            return new AnswerMcqCommand(args, quizManager);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"            throw new ParseException(MESSAGE_INVALID_MCQ_ANSWER_FORMAT);","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"neojxuan":5,"ryanpeh":25}},{"path":"src/main/java/seedu/smartnus/logic/parser/quiz/AnswerTfCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package seedu.smartnus.logic.parser.quiz;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_TF_ANSWER_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.quiz.AnswerTfCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"public class AnswerTfCommandParser implements QuizParser\u003cAnswerTfCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"    private static final String TF_REGEX \u003d \"(?i)(^true$|^false$|^[tf]$)\";","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"    public AnswerTfCommand parse(String args, QuizManager quizManager) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"        if (args.matches(TF_REGEX)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"            return new AnswerTfCommand(args, quizManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"            throw new ParseException(MESSAGE_INVALID_TF_ANSWER_FORMAT);","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"ryanpeh":2,"cedricongjh":23}},{"path":"src/main/java/seedu/smartnus/logic/parser/quiz/QuizCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser.quiz;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_TOO_MANY_ARGUMENTS;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_NUMBER;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.index.Index;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.quiz.QuizCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.Parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.ShowAllQuestionsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.ShowQuestionIndexPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.TagsContainKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"public class QuizCommandParser implements Parser\u003cQuizCommand\u003e {","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"     * Parses the given {@code String} of arguments in the context of the QuizCommand","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"     * and returns a QuizCommand object for execution.","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"    public QuizCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG, PREFIX_NUMBER);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, QuizCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"        Collection\u003cString\u003e indexes \u003d argMultimap.getAllValues(PREFIX_NUMBER);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"        Collection\u003cString\u003e tags \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"        // Check if the number of arguments is correct","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"        if (indexes.size() \u003e 0 \u0026\u0026 tags.size() \u003e 0) {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"            throw new ParseException(String.format(MESSAGE_TOO_MANY_ARGUMENTS, QuizCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"        // Returns the command","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"        if (indexes.size() \u003e 0) {","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"            Set\u003cIndex\u003e indexSet \u003d ParserUtil.parseQuizIndexes(argMultimap.getAllValues(PREFIX_NUMBER));","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"            return new QuizCommand(getIndexPredicate(indexSet));","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"        } else if (tags.size() \u003e 0) {","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"neojxuan"},"content":"            Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"            List\u003cString\u003e tagKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"neojxuan"},"content":"            tagList.stream().forEach(tag -\u003e tagKeywords.add(tag.getTagName()));","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"            return new QuizCommand(getTagPredicate(tagKeywords));","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"        return new QuizCommand(new ShowAllQuestionsPredicate());","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"    private Predicate\u003cQuestion\u003e getTagPredicate(List\u003cString\u003e tagKeywords) {","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"        return new TagsContainKeywordsPredicate(tagKeywords);","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"    private Predicate\u003cQuestion\u003e getIndexPredicate(Set\u003cIndex\u003e indexes) {","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"aryagiat"},"content":"        return new ShowQuestionIndexPredicate(indexes);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"neojxuan":25,"aryagiat":31,"cedricongjh":16}},{"path":"src/main/java/seedu/smartnus/logic/parser/quiz/QuizParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser.quiz;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"public interface QuizParser\u003cT extends Command\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"    T parse(String userInput, QuizManager quizManager) throws ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"neojxuan":4,"ryanpeh":13}},{"path":"src/main/java/seedu/smartnus/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.GuiSettings;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.Theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"    Predicate\u003cQuestion\u003e PREDICATE_SHOW_ALL_QUESTIONS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"     * Returns the user prefs\u0027 SmartNus file path.","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"    Path getSmartNusFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"     * Sets the user prefs\u0027 SmartNus file path.","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"    void setSmartNusFilePath(Path smartNusFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"     * Replaces SmartNus data with the data in {@code smartNus}.","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"    void setSmartNus(ReadOnlySmartNus smartNus);","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"    /** Returns the SmartNus */","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"    ReadOnlySmartNus getSmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"     * Returns true if a question with the same identity as {@code question} exists in SmartNus.","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"    boolean hasQuestion(Question question);","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"     * Deletes the given question.","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"     * The question must exist in SmartNus.","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"    void deleteQuestion(Question target);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"     * Adds the given question.","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"     * {@code question} must not already exist in SmartNus.","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"    void addQuestion(Question question);","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"neojxuan"},"content":"     * Replaces the given question {@code target} with {@code editedQuestion}.","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"neojxuan"},"content":"     * {@code target} must exist in SmartNus.","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"     * The question identity of {@code editedQuestion} must not be the same as another existing question","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"     * in SmartNus.","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"    void setQuestion(Question target, Question editedQuestion);","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"    /** Returns an unmodifiable view of the filtered question list */","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"neojxuan"},"content":"    ObservableList\u003cQuestion\u003e getFilteredQuestionList();","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"neojxuan"},"content":"    /** Returns an unmodifiable view of the filtered quiz question list */","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"    ObservableList\u003cQuestion\u003e getFilteredQuizQuestionList();","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"neojxuan"},"content":"     * Updates the filter of the filtered question list to filter by the given {@code predicate}.","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"neojxuan"},"content":"    void updateFilteredQuestionList(Predicate\u003cQuestion\u003e predicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"neojxuan"},"content":"     * Updates the filter of the filtered quiz question list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"neojxuan"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"neojxuan"},"content":"    void updateFilteredQuizQuestionList(Predicate\u003cQuestion\u003e predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"aryagiat"},"content":"     * Sets the Theme.","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"aryagiat"},"content":"    void setTheme(Theme theme);","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"aryagiat"},"content":"     * Returns the Theme.","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"aryagiat"},"content":"    Theme getTheme();","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"neojxuan":37,"aryagiat":12,"-":59}},{"path":"src/main/java/seedu/smartnus/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.GuiSettings;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.LogsCenter;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.Theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":" * Represents the in-memory model of SmartNus data.","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"    private final SmartNus smartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"    private final FilteredList\u003cQuestion\u003e filteredQuestions;","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"    private final FilteredList\u003cQuestion\u003e filteredQuizQuestions;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"     * Initializes a ModelManager with the given smartNus and userPrefs.","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"    public ModelManager(ReadOnlySmartNus smartNus, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"        requireAllNonNull(smartNus, userPrefs);","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"        logger.fine(\"Initializing with smartNus: \" + smartNus + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"        this.smartNus \u003d new SmartNus(smartNus);","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"        filteredQuestions \u003d new FilteredList\u003c\u003e(this.smartNus.getQuestionList());","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"        filteredQuizQuestions \u003d new FilteredList\u003c\u003e(this.smartNus.getQuestionList());","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"        this(new SmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"    public Path getSmartNusFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"neojxuan"},"content":"        return userPrefs.getSmartNusFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"    public void setSmartNusFilePath(Path smartNusFilePath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"        requireNonNull(smartNusFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"        userPrefs.setSmartNusFilePath(smartNusFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"aryagiat"},"content":"    public Theme getTheme() {","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"aryagiat"},"content":"        return userPrefs.getTheme();","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"aryagiat"},"content":"    public void setTheme(Theme theme) {","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"aryagiat"},"content":"        requireNonNull(theme);","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"aryagiat"},"content":"        userPrefs.setTheme(theme);","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"neojxuan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SmartNus \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"neojxuan"},"content":"    public void setSmartNus(ReadOnlySmartNus smartNus) {","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"neojxuan"},"content":"        this.smartNus.resetData(smartNus);","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"neojxuan"},"content":"    public ReadOnlySmartNus getSmartNus() {","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"neojxuan"},"content":"        return smartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"neojxuan"},"content":"    public boolean hasQuestion(Question question) {","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"neojxuan"},"content":"        requireNonNull(question);","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"neojxuan"},"content":"        return smartNus.hasQuestion(question);","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"neojxuan"},"content":"    public void deleteQuestion(Question target) {","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"neojxuan"},"content":"        smartNus.removeQuestion(target);","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"neojxuan"},"content":"    public void addQuestion(Question question) {","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"neojxuan"},"content":"        smartNus.addQuestion(question);","lastModifiedDate":"2021-10-15"},{"lineNumber":119,"author":{"gitId":"neojxuan"},"content":"        updateFilteredQuestionList(PREDICATE_SHOW_ALL_QUESTIONS);","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"neojxuan"},"content":"    public void setQuestion(Question target, Question editedQuestion) {","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"neojxuan"},"content":"        requireAllNonNull(target, editedQuestion);","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"neojxuan"},"content":"        smartNus.setQuestion(target, editedQuestion);","lastModifiedDate":"2021-10-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"neojxuan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Question List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"neojxuan"},"content":"     * Returns an unmodifiable view of the list of {@code Question} backed by the internal list of","lastModifiedDate":"2021-09-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":136,"author":{"gitId":"neojxuan"},"content":"    public ObservableList\u003cQuestion\u003e getFilteredQuestionList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"neojxuan"},"content":"        return filteredQuestions;","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":140,"author":{"gitId":"neojxuan"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"neojxuan"},"content":"    public ObservableList\u003cQuestion\u003e getFilteredQuizQuestionList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"neojxuan"},"content":"        return filteredQuizQuestions;","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":146,"author":{"gitId":"neojxuan"},"content":"    public void updateFilteredQuestionList(Predicate\u003cQuestion\u003e predicate) {","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":148,"author":{"gitId":"neojxuan"},"content":"        filteredQuestions.setPredicate(predicate);","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"neojxuan"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"neojxuan"},"content":"    public void updateFilteredQuizQuestionList(Predicate\u003cQuestion\u003e predicate) {","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"neojxuan"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"neojxuan"},"content":"        filteredQuizQuestions.setPredicate(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"neojxuan"},"content":"        return smartNus.equals(other.smartNus)","lastModifiedDate":"2021-10-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"neojxuan"},"content":"                \u0026\u0026 filteredQuestions.equals(other.filteredQuestions);","lastModifiedDate":"2021-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":56,"aryagiat":13,"-":107}},{"path":"src/main/java/seedu/smartnus/model/ReadOnlySmartNus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":" * Unmodifiable view of a SmartNus","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"public interface ReadOnlySmartNus {","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"     * Returns an unmodifiable view of the questions list.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"     * This list will not contain any duplicate questions.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"    ObservableList\u003cQuestion\u003e getQuestionList();","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":7,"-":10}},{"path":"src/main/java/seedu/smartnus/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.GuiSettings;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.Theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"    Theme getTheme();","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"    Path getSmartNusFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"neojxuan":3,"aryagiat":2,"-":13}},{"path":"src/main/java/seedu/smartnus/model/SmartNus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.UniqueQuestionList;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":" * Wraps all data at the SmartNus level","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":" * Duplicates are not allowed (by .isSameQuestion comparison)","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"public class SmartNus implements ReadOnlySmartNus {","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"    private final UniqueQuestionList questions;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"        questions \u003d new UniqueQuestionList();","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"    public SmartNus() {}","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"     * Creates a SmartNus using the Questions in the {@code toBeCopied}","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"    public SmartNus(ReadOnlySmartNus toBeCopied) {","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"     * Replaces the contents of the question list with {@code questions}.","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"     * {@code questions} must not contain duplicate questions.","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"    public void setQuestions(List\u003cQuestion\u003e questions) {","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"        this.questions.setQuestions(questions);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"     * Resets the existing data of this {@code SmartNus} with {@code newData}.","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"    public void resetData(ReadOnlySmartNus newData) {","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"        setQuestions(newData.getQuestionList());","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"    //// question-level operations","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"     * Returns true if a question with the same identity as {@code question} exists in the SmarNus.","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"    public boolean hasQuestion(Question question) {","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"        requireNonNull(question);","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"neojxuan"},"content":"        return questions.contains(question);","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"     * Adds a question to {@code SmartNus}.","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"     * The question must not already exist in {@code SmartNus}.","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"neojxuan"},"content":"    public void addQuestion(Question p) {","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"neojxuan"},"content":"        questions.add(p);","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"     * Replaces the given question {@code target} in the list with {@code editedQuestion}.","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"     * {@code target} must exist in the {@code SmartNus}.","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"     * The question identity of {@code editedQuestion} must not be the same as another existing question","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"neojxuan"},"content":"     * in the {@code SmartNus}.","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"neojxuan"},"content":"    public void setQuestion(Question target, Question editedQuestion) {","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"        requireNonNull(editedQuestion);","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"neojxuan"},"content":"        questions.setQuestion(target, editedQuestion);","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"neojxuan"},"content":"     * Removes {@code key} from this {@code SmartNus}.","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"neojxuan"},"content":"     * {@code key} must exist in the {@code SmartNus}.","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"neojxuan"},"content":"    public void removeQuestion(Question key) {","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"neojxuan"},"content":"        questions.remove(key);","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"neojxuan"},"content":"        return questions.asUnmodifiableObservableList().size() + \" questions\";","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"neojxuan"},"content":"    public ObservableList\u003cQuestion\u003e getQuestionList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"neojxuan"},"content":"        return questions.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"neojxuan"},"content":"                || (other instanceof SmartNus // instanceof handles nulls","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"neojxuan"},"content":"                \u0026\u0026 questions.equals(((SmartNus) other).questions));","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"neojxuan"},"content":"        return questions.hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"aryagiat"},"content":"    /// getter methods","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"aryagiat"},"content":"     * Returns all the questions as a List.","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"aryagiat"},"content":"     * @return A List of all the Questions.","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"aryagiat"},"content":"    public List\u003cQuestion\u003e getQuestionsAsList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"aryagiat"},"content":"        List\u003cQuestion\u003e allQuestions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"aryagiat"},"content":"        for (Question q : questions) {","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"aryagiat"},"content":"            allQuestions.add(q);","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"aryagiat"},"content":"        return allQuestions;","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":44,"aryagiat":15,"-":77}},{"path":"src/main/java/seedu/smartnus/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.GuiSettings;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.LightTheme;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.Theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"    private Path smartNusFilePath \u003d Paths.get(\"data\" , \"smartnus.json\");","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"    private Theme theme \u003d new LightTheme();","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"        setSmartNusFilePath(newUserPrefs.getSmartNusFilePath());","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"        setTheme(newUserPrefs.getTheme());","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"    public Theme getTheme() {","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"        return theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"    public void setTheme(Theme theme) {","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"        requireNonNull(theme);","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"        this.theme \u003d theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"    public Path getSmartNusFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"        return smartNusFilePath;","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":67,"author":{"gitId":"neojxuan"},"content":"    public void setSmartNusFilePath(Path smartNusFilePath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"        requireNonNull(smartNusFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"        this.smartNusFilePath \u003d smartNusFilePath;","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"aryagiat"},"content":"                \u0026\u0026 smartNusFilePath.equals(o.smartNusFilePath)","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"aryagiat"},"content":"                \u0026\u0026 theme.equals(o.theme);","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"neojxuan"},"content":"        return Objects.hash(guiSettings, smartNusFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"neojxuan"},"content":"        sb.append(\"\\nLocal data file location : \" + smartNusFilePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"aryagiat"},"content":"        sb.append(\"\\nTheme: \" + theme);","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":11,"aryagiat":14,"-":77}},{"path":"src/main/java/seedu/smartnus/model/choice/Choice.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"public class Choice {","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Choices can take any values, and it should not be blank\";","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"    /*","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"     * The first character of the choice must not be a whitespace,","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"    public static final String TRUE_CHOICE_TITLE \u003d \"True\";","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"    public static final String FALSE_CHOICE_TITLE \u003d \"False\";","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"    private final String title;","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"    private final boolean isCorrect;","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"     * Constructs a {@code Choice}.","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"     * @param title Title of the Choice.","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"     * @param isCorrect Whether the Choice is the correct answer to a Question.","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"    public Choice(String title, boolean isCorrect) {","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"        requireNonNull(title);","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"        checkArgument(isValidChoiceTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"        this.isCorrect \u003d isCorrect;","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"     * Returns true if a given string is a valid choice title.","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"    public static boolean isValidChoiceTitle(String test) {","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"     * Returns true if {@code otherChoice} has the same title (case-sensitive) as this choice.","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"     * @param otherChoice Another Choice that is to be checked for a duplicate title.","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"     * @return True if otherChoice has the same title (case-sensitive) as this choice.","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"    public boolean hasSameTitle(Choice otherChoice) {","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"        requireNonNull(otherChoice);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"        return otherChoice \u003d\u003d this || title.equals(otherChoice.title);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"    public boolean getIsCorrect() {","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"        return isCorrect;","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"neojxuan"},"content":"    public String getTitle() {","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"        return title;","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"neojxuan"},"content":"    public String toString() {","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"        return title + (isCorrect ? \" (answer)\" : \"\");","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"neojxuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"            return true;","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"        if (!(other instanceof Choice)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"            return false;","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"neojxuan"},"content":"        Choice otherChoice \u003d (Choice) other;","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"        return otherChoice.getTitle().equals(getTitle())","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"                \u0026\u0026 otherChoice.getIsCorrect() \u003d\u003d getIsCorrect();","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"neojxuan"},"content":"        return title.hashCode();","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"neojxuan":82,"cedricongjh":2}},{"path":"src/main/java/seedu/smartnus/model/question/Importance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.question;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":" * Represents a Question\u0027s importance in SmartNus.","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidImportance(String)}","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"public class Importance {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"            \"Importance should only be an integer from 1-3 inclusive\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[1-3]\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"     * Constructs a {@code Importance}.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"     * @param importance A valid importance number.","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"    public Importance(String importance) {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"        requireNonNull(importance);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"        checkArgument(isValidImportance(importance), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"        value \u003d importance;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"     * Returns true if a given string is a valid importance number.","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"    public static boolean isValidImportance(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"                || (other instanceof Importance // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"                \u0026\u0026 value.equals(((Importance) other).value)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"neojxuan":17,"-":36}},{"path":"src/main/java/seedu/smartnus/model/question/MultipleChoiceQuestion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.question;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"public class MultipleChoiceQuestion extends Question {","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"    public static final int NUMBER_OF_INCORRECT_CHOICES \u003d 3;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_INCORRECT_NUMBER_OF_CHOICES \u003d \"Must have only 3 incorrect options!\";","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"    public static final String MESSAGE_DUPLICATE_CHOICES \u003d \"Options should not be duplicates!\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_VALID_MCQ \u003d \"Multiple Choice Questions should have one correct answer and\"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"            + \" three wrong options.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"    public MultipleChoiceQuestion(Name name, Importance importance, Set\u003cTag\u003e tags,","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"                                  Set\u003cChoice\u003e choices) {","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"        super(name, importance, tags, choices);","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"    public MultipleChoiceQuestion(Name name, Importance importance, Set\u003cTag\u003e tags,","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"                                  Set\u003cChoice\u003e choices, Statistic statistic) {","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"        super(name, importance, tags, choices, statistic);","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"     * Returns True if {@code MultipleChoiceQuestion} is valid, false otherwise.A {@code MultipleChoiceQuestion} is","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"     * valid if it has four choices and exactly one of the choices is correct.","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"     * @return True if MultipleChoiceQuestion is valid, false otherwise.","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"    public boolean isValidQuestion() {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"        int choiceCount \u003d getChoices().size();","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"        int correctChoiceCount \u003d 0;","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"        for (Choice choice : getChoices()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"            if (choice.getIsCorrect()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"                correctChoiceCount +\u003d 1;","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"        return choiceCount \u003d\u003d (NUMBER_OF_INCORRECT_CHOICES + 1) \u0026\u0026 correctChoiceCount \u003d\u003d 1;","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"    public String getQuestionAndOptions() {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"ryanpeh"},"content":"        String title \u003d this.getName().toString();","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"        ArrayList\u003cChoice\u003e choices \u003d this.getOrderedChoices();","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"        String options \u003d \"\\na. \" + choices.get(0).getTitle()","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"                + \"  b. \" + choices.get(1).getTitle()","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"ryanpeh"},"content":"                + \"  c. \" + choices.get(2).getTitle()","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"ryanpeh"},"content":"                + \"  d. \" + choices.get(3).getTitle();","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"ryanpeh"},"content":"        return title + options;","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"cedricongjh"},"content":"    public int getQuestionType() {","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"        return MCQ_QUESTION_TYPE;","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"neojxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"        if (!(other instanceof MultipleChoiceQuestion)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"            return false;","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"        return super.equals(other);","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"neojxuan":43,"ryanpeh":12,"aryagiat":5,"cedricongjh":8}},{"path":"src/main/java/seedu/smartnus/model/question/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.question;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":" * Represents a Question\u0027s name in SmartNus.","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Names can take any values, and it should not be blank\";","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"neojxuan":6,"-":52}},{"path":"src/main/java/seedu/smartnus/model/question/Question.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.question;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":" * Represents a Question in SmartNus.","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"public abstract class Question {","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"    // Integer representation of question types","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"    public static final int MCQ_QUESTION_TYPE \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    public static final int TF_QUESTION_TYPE \u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"    // message on condition for validity of Question","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_DUPLICATE_CHOICES \u003d \"Choices (both incorrect and correct)\"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"            + \" should not have duplicate titles.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"    protected final ArrayList\u003cChoice\u003e orderedChoices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"    private final Importance importance;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"    private final Set\u003cChoice\u003e choices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"    // Question statistic","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"    private final Statistic statistic;","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"    public Question(Name name, Importance importance, Set\u003cTag\u003e tags, Set\u003cChoice\u003e choices) {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"        requireAllNonNull(name, importance, tags);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"        this.importance \u003d importance;","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"        this.choices.addAll(choices);","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"        this.orderedChoices.addAll(choices);","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"        this.statistic \u003d new Statistic();","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"        Collections.shuffle(orderedChoices);","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"     * Constructor for question with statistic counter.","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"     * @param name The question","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"     * @param importance The importance","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"     * @param tags The tag","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"     * @param choices The choice of answers","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"     * @param statistic The statistic","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"    public Question(Name name, Importance importance, Set\u003cTag\u003e tags, Set\u003cChoice\u003e choices, Statistic statistic) {","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"        requireAllNonNull(name, importance, tags, statistic);","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"        this.importance \u003d importance;","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"        this.choices.addAll(choices);","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"        this.orderedChoices.addAll(choices);","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"        this.statistic \u003d statistic;","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"ryanpeh"},"content":"        Collections.shuffle(orderedChoices);","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"neojxuan"},"content":"     * Checks if a {@code Question} is valid. Conditions for validity depend on the type of {@code Question}.","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"neojxuan"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"neojxuan"},"content":"     * @return True if Question is valid, else false.","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"    public abstract boolean isValidQuestion();","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"neojxuan"},"content":"    public Importance getImportance() {","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"neojxuan"},"content":"        return importance;","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"neojxuan"},"content":"     * Returns an immutable choice set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"neojxuan"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"neojxuan"},"content":"    public Set\u003cChoice\u003e getChoices() {","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"neojxuan"},"content":"        return Collections.unmodifiableSet(choices);","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"neojxuan"},"content":"     * Returns an immutable wrong choice set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"neojxuan"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"neojxuan"},"content":"    public Set\u003cChoice\u003e getWrongChoices() {","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"neojxuan"},"content":"        Set\u003cChoice\u003e wrongChoices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"neojxuan"},"content":"        for (Choice choice : choices) {","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"neojxuan"},"content":"            if (!choice.getIsCorrect()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"neojxuan"},"content":"                wrongChoices.add(choice);","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"neojxuan"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"neojxuan"},"content":"        return Collections.unmodifiableSet(wrongChoices);","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"ryanpeh"},"content":"     * Returns a randomised ArrayList of choices.","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"ryanpeh"},"content":"    public ArrayList\u003cChoice\u003e getOrderedChoices() {","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"ryanpeh"},"content":"        return orderedChoices;","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"ryanpeh"},"content":"     * Shuffles the order of the choices for the question.","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"ryanpeh"},"content":"    public void shuffleChoices() {","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"ryanpeh"},"content":"        Collections.shuffle(orderedChoices);","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"ryanpeh"},"content":"    public Choice getCorrectChoice() {","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"ryanpeh"},"content":"        for (Choice choice : choices) {","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"ryanpeh"},"content":"            if (choice.getIsCorrect()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"ryanpeh"},"content":"                return choice;","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"ryanpeh"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"ryanpeh"},"content":"        return null;","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"neojxuan"},"content":"     * Returns true if both questions have the same name.","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"neojxuan"},"content":"     * This defines a weaker notion of equality between two questions.","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"neojxuan"},"content":"    public boolean isSameQuestion(Question otherQuestion) {","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"neojxuan"},"content":"        if (otherQuestion \u003d\u003d this) {","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"neojxuan"},"content":"        return otherQuestion !\u003d null","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"neojxuan"},"content":"                \u0026\u0026 otherQuestion.getName().equals(getName());","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"aryagiat"},"content":"     * Updates the question statistic and returns True if the correct choice is given.","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"aryagiat"},"content":"     * @param choice The choice to be checked","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"aryagiat"},"content":"     * @return True if the choice is correct, false otherwise.","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"aryagiat"},"content":"    public boolean attemptAndCheckAnswer(Choice choice) {","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"aryagiat"},"content":"        statistic.addAttempt();","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"aryagiat"},"content":"        if (this.getCorrectChoice().equals(choice)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"aryagiat"},"content":"            statistic.addCorrect();","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"aryagiat"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"aryagiat"},"content":"        return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":165,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"aryagiat"},"content":"     * Returns this question\u0027s statistics.","lastModifiedDate":"2021-10-17"},{"lineNumber":169,"author":{"gitId":"aryagiat"},"content":"     * @return Statistic for this question.","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"aryagiat"},"content":"    public Statistic getStatistic() {","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"aryagiat"},"content":"        return statistic;","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":174,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":175,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"cedricongjh"},"content":"     * Find a {@code Choice} by its title","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"cedricongjh"},"content":"     * @param title A String representation of title of the choice","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"cedricongjh"},"content":"     * @return The {@code Choice} whose title equals {@code title} or null if that choice does not exist","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"cedricongjh"},"content":"    public Choice findChoiceByTitle(String title) {","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"cedricongjh"},"content":"        return orderedChoices.stream().filter(x -\u003e x.getTitle().equals(title)).findFirst().orElse(null);","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":185,"author":{"gitId":"neojxuan"},"content":"     * Returns true if both questions have the same identity and data fields.","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"neojxuan"},"content":"     * This defines a stronger notion of equality between two questions.","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":194,"author":{"gitId":"neojxuan"},"content":"        if (!(other instanceof Question)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":198,"author":{"gitId":"neojxuan"},"content":"        Question otherQuestion \u003d (Question) other;","lastModifiedDate":"2021-09-25"},{"lineNumber":199,"author":{"gitId":"neojxuan"},"content":"        // TODO: Add Choice comparison after Choices can be saved and loaded from storage","lastModifiedDate":"2021-09-25"},{"lineNumber":200,"author":{"gitId":"neojxuan"},"content":"        return otherQuestion.getName().equals(getName())","lastModifiedDate":"2021-09-25"},{"lineNumber":201,"author":{"gitId":"neojxuan"},"content":"                \u0026\u0026 otherQuestion.getImportance().equals(getImportance())","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"neojxuan"},"content":"                \u0026\u0026 otherQuestion.getTags().equals(getTags());","lastModifiedDate":"2021-09-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":208,"author":{"gitId":"neojxuan"},"content":"        return Objects.hash(name, importance, tags);","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":211,"author":{"gitId":"ryanpeh"},"content":"    // TODO: Remove maybe when UI is implemented","lastModifiedDate":"2021-10-13"},{"lineNumber":212,"author":{"gitId":"ryanpeh"},"content":"    public abstract String getQuestionAndOptions();","lastModifiedDate":"2021-10-13"},{"lineNumber":213,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":214,"author":{"gitId":"cedricongjh"},"content":"    public abstract int getQuestionType();","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":219,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":220,"author":{"gitId":"neojxuan"},"content":"        appendImportance(builder);","lastModifiedDate":"2021-10-08"},{"lineNumber":221,"author":{"gitId":"neojxuan"},"content":"        appendTags(builder);","lastModifiedDate":"2021-10-08"},{"lineNumber":222,"author":{"gitId":"neojxuan"},"content":"        appendChoices(builder);","lastModifiedDate":"2021-10-08"},{"lineNumber":223,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":224,"author":{"gitId":"neojxuan"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":225,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":226,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":227,"author":{"gitId":"neojxuan"},"content":"    private StringBuilder appendImportance(StringBuilder builder) {","lastModifiedDate":"2021-10-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":229,"author":{"gitId":"neojxuan"},"content":"                .append(\"; Importance: \")","lastModifiedDate":"2021-10-07"},{"lineNumber":230,"author":{"gitId":"neojxuan"},"content":"                .append(getImportance());","lastModifiedDate":"2021-10-07"},{"lineNumber":231,"author":{"gitId":"neojxuan"},"content":"        return builder;","lastModifiedDate":"2021-10-08"},{"lineNumber":232,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":234,"author":{"gitId":"neojxuan"},"content":"    private StringBuilder appendTags(StringBuilder builder) {","lastModifiedDate":"2021-10-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":240,"author":{"gitId":"neojxuan"},"content":"        return builder;","lastModifiedDate":"2021-10-08"},{"lineNumber":241,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":242,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":243,"author":{"gitId":"neojxuan"},"content":"    private StringBuilder appendChoices(StringBuilder builder) {","lastModifiedDate":"2021-10-08"},{"lineNumber":244,"author":{"gitId":"neojxuan"},"content":"        Set\u003cChoice\u003e choices \u003d getChoices();","lastModifiedDate":"2021-09-25"},{"lineNumber":245,"author":{"gitId":"neojxuan"},"content":"        if (!choices.isEmpty()) { // may be empty for open-ended questions","lastModifiedDate":"2021-09-25"},{"lineNumber":246,"author":{"gitId":"neojxuan"},"content":"            builder.append(\"; Choices: \");","lastModifiedDate":"2021-09-25"},{"lineNumber":247,"author":{"gitId":"neojxuan"},"content":"            for (Choice choice: choices) {","lastModifiedDate":"2021-10-08"},{"lineNumber":248,"author":{"gitId":"neojxuan"},"content":"                builder.append(choice).append(\", \");","lastModifiedDate":"2021-10-08"},{"lineNumber":249,"author":{"gitId":"neojxuan"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":250,"author":{"gitId":"neojxuan"},"content":"            builder.setLength(builder.length() - 2); //remove \", \" after last choice","lastModifiedDate":"2021-10-08"},{"lineNumber":251,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":252,"author":{"gitId":"neojxuan"},"content":"        return builder;","lastModifiedDate":"2021-10-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"neojxuan":89,"ryanpeh":30,"aryagiat":45,"cedricongjh":15,"-":76}},{"path":"src/main/java/seedu/smartnus/model/question/Statistic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.model.question;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":" * Class to keep track of question statistics.","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"public class Statistic {","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"    private int attemptCount;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"    private int correctCount;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"     * Default constructor.","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"    public Statistic() {","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"        this.attemptCount \u003d 0;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"        this.correctCount \u003d 0;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"     * Constructor to specify the attempt count and correct count.","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"     * @param attemptCount The attempt count.","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"     * @param correctCount The correct count.","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    public Statistic(int attemptCount, int correctCount) {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"        this.attemptCount \u003d attemptCount;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"        this.correctCount \u003d correctCount;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"     * Returns the numbers of attempts.","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"     * @return The number of attempts done.","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"    public int getAttemptCount() {","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"        return attemptCount;","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"     * Returns the number of correct answers.","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"     * @return The number of correct answers.","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"    public int getCorrectCount() {","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"        return correctCount;","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"     * Updates the number of attempt (+1)","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"    public void addAttempt() {","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"        attemptCount++;","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"     * Updates the number of correct attempt (+1)","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"    public void addCorrect() {","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"        correctCount++;","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"     * Returns the percentage of correct attempts over total attempts.","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"     * @return The percentage of correct attempts.","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"    public double getCorrectPercentage() {","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"        if (attemptCount \u003d\u003d 0) {","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"            return 0;","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"        double correct \u003d correctCount * 1.0;","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"        double attempt \u003d attemptCount * 1.0;","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"        return correct / attempt * 100;","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"aryagiat"},"content":"    public String toString() {","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"aryagiat"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"aryagiat"},"content":"        appendAttempts(builder);","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"aryagiat"},"content":"        appendCorrect(builder);","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"aryagiat"},"content":"        appendPercentage(builder);","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"aryagiat"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"aryagiat"},"content":"    private StringBuilder appendAttempts(StringBuilder builder) {","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"aryagiat"},"content":"        builder.append(\"Attempts: \")","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"aryagiat"},"content":"                .append(getAttemptCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"aryagiat"},"content":"        return builder;","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"aryagiat"},"content":"    private StringBuilder appendCorrect(StringBuilder builder) {","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"aryagiat"},"content":"        builder.append(\"; Corrects: \")","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"aryagiat"},"content":"                .append(getCorrectCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"aryagiat"},"content":"        return builder;","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"aryagiat"},"content":"    private StringBuilder appendPercentage(StringBuilder builder) {","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"aryagiat"},"content":"        builder.append(\"; Performance: \")","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"aryagiat"},"content":"                .append(getCorrectPercentage())","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"aryagiat"},"content":"                .append(\"%\");","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"aryagiat"},"content":"        return builder;","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"aryagiat":101}},{"path":"src/main/java/seedu/smartnus/model/question/TrueFalseQuestion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package seedu.smartnus.model.question;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.model.choice.Choice.FALSE_CHOICE_TITLE;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.model.choice.Choice.TRUE_CHOICE_TITLE;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"public class TrueFalseQuestion extends Question {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"    public static final String MESSAGE_ANSWER_INVALID \u003d \"Only T or F is allowed as an answer!\";","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_OPTIONS_INVALID \u003d \"Do not specify incorrect options (/opt) for T/F questions.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"    private static final int NUMBER_OF_CHOICES \u003d 2;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"    public TrueFalseQuestion(Name name, Importance importance, Set\u003cTag\u003e tags,","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"                             Set\u003cChoice\u003e choices, Statistic statistic) {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"        super(name, importance, tags, choices, statistic);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"    public TrueFalseQuestion(Name name, Importance importance, Set\u003cTag\u003e tags, Set\u003cChoice\u003e choices) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"        super(name, importance, tags, choices);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"     * Returns True if {@code TrueFalseQuestion} is valid, false otherwise.A {@code TrueFalseQuestion} is","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"     * valid if it has two choices (True and False) and only one of them is correct.","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"     * @return True if TrueFalseQuestion is valid, false otherwise.","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"    public boolean isValidQuestion() {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"        int validChoices \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"        int correctChoices \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"        for (Choice choice : getChoices()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"            if (choice.getIsCorrect()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"                correctChoices +\u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"            if (isValidTrueFalseChoice(choice)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"                validChoices +\u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"        return validChoices \u003d\u003d NUMBER_OF_CHOICES \u0026\u0026 correctChoices \u003d\u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"    public static boolean isValidTrueFalseChoice(Choice choice) {","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"cedricongjh"},"content":"        return choice.getTitle().equals(TRUE_CHOICE_TITLE) || choice.getTitle().equals(FALSE_CHOICE_TITLE);","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"cedricongjh"},"content":"    public String getQuestionAndOptions() {","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"cedricongjh"},"content":"        String title \u003d this.getName().toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"cedricongjh"},"content":"        ArrayList\u003cChoice\u003e choices \u003d this.getOrderedChoices();","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"        String options \u003d \"\\n \" + \"1. \" + choices.get(0).getTitle() + \" 2. \" + choices.get(1).getTitle();","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"        return title + options;","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"ryanpeh"},"content":"     * For True/False questions, instead of random order, we want True to be first and False to be second.","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"ryanpeh"},"content":"     **/","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"ryanpeh"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"ryanpeh"},"content":"    public void shuffleChoices() {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"ryanpeh"},"content":"        if (orderedChoices.get(0).getTitle().equals(\"False\")) {","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"ryanpeh"},"content":"            Collections.reverse(orderedChoices);","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"cedricongjh"},"content":"    public int getQuestionType() {","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"cedricongjh"},"content":"        return TF_QUESTION_TYPE;","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"cedricongjh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"cedricongjh"},"content":"        if (!(other instanceof TrueFalseQuestion)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"cedricongjh"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"cedricongjh"},"content":"        return super.equals(other);","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"neojxuan":1,"ryanpeh":11,"cedricongjh":72}},{"path":"src/main/java/seedu/smartnus/model/question/UniqueQuestionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.question;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.exceptions.DuplicateQuestionException;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.exceptions.QuestionNotFoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":" * A list of questions that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":" * A question is considered unique by comparing using {@code Question#isSameQuestion(Question)}.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":" * As such, adding and updating of questions uses Question#isSameQuestion(Question) for equality","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":" * to ensure that the question being added or updated is unique in terms of identity in","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":" * the UniqueQuestionList. However, the removal of a question uses Question#equals(Object) to","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":" * ensure that the question with exactly the same fields will be removed.","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":" * @see Question#isSameQuestion(Question)","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"public class UniqueQuestionList implements Iterable\u003cQuestion\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"    private final ObservableList\u003cQuestion\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"    private final ObservableList\u003cQuestion\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"     * Returns true if the list contains an equivalent question as the given argument.","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"    public boolean contains(Question toCheck) {","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"        return internalList.stream().anyMatch(toCheck::isSameQuestion);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"     * Adds a question to the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"     * The question must not already exist in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"    public void add(Question toAdd) {","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"            throw new DuplicateQuestionException();","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"     * Replaces the question {@code target} in the list with {@code editedQuestion}.","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"     * The question identity of {@code editedQuestion} must not be the same as another existing question in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"    public void setQuestion(Question target, Question editedQuestion) {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"neojxuan"},"content":"        requireAllNonNull(target, editedQuestion);","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"            throw new QuestionNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"        if (!target.isSameQuestion(editedQuestion) \u0026\u0026 contains(editedQuestion)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"            throw new DuplicateQuestionException();","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"        internalList.set(index, editedQuestion);","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"neojxuan"},"content":"     * Removes the equivalent question from the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"neojxuan"},"content":"     * The question must exist in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"    public void remove(Question toRemove) {","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"            throw new QuestionNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"neojxuan"},"content":"    public void setQuestions(UniqueQuestionList replacement) {","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"neojxuan"},"content":"     * Replaces the contents of this list with {@code questions}.","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"neojxuan"},"content":"     * {@code questions} must not contain duplicate questions.","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"neojxuan"},"content":"    public void setQuestions(List\u003cQuestion\u003e questions) {","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"neojxuan"},"content":"        requireAllNonNull(questions);","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"neojxuan"},"content":"        if (!questionsAreUnique(questions)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"neojxuan"},"content":"            throw new DuplicateQuestionException();","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"neojxuan"},"content":"        internalList.setAll(questions);","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"neojxuan"},"content":"    public ObservableList\u003cQuestion\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"neojxuan"},"content":"    public Iterator\u003cQuestion\u003e iterator() {","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"neojxuan"},"content":"                || (other instanceof UniqueQuestionList // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"neojxuan"},"content":"                        \u0026\u0026 internalList.equals(((UniqueQuestionList) other).internalList));","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"neojxuan"},"content":"     * Returns true if {@code questions} contains only unique questions.","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"neojxuan"},"content":"    private boolean questionsAreUnique(List\u003cQuestion\u003e questions) {","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"neojxuan"},"content":"        for (int i \u003d 0; i \u003c questions.size() - 1; i++) {","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"neojxuan"},"content":"            for (int j \u003d i + 1; j \u003c questions.size(); j++) {","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"neojxuan"},"content":"                if (questions.get(i).isSameQuestion(questions.get(j))) {","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"neojxuan":50,"-":88}},{"path":"src/main/java/seedu/smartnus/model/question/exceptions/DuplicateQuestionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.question.exceptions;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":" * Signals that the operation will result in duplicate Questions (Questions are considered duplicates if they have","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":" * the same identity).","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"public class DuplicateQuestionException extends RuntimeException {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"    public DuplicateQuestionException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"        super(\"Operation would result in duplicate questions\");","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"neojxuan":11}},{"path":"src/main/java/seedu/smartnus/model/question/exceptions/QuestionNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.question.exceptions;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":" * Signals that the operation is unable to find the specified question.","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"public class QuestionNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"neojxuan":3,"-":3}},{"path":"src/main/java/seedu/smartnus/model/question/predicate/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.model.question.predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.util.StringUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":" * Tests that a {@code Question}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cQuestion\u003e {","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"    public boolean test(Question question) {","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(question.getName().fullName, keyword));","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"neojxuan":5,"aryagiat":2,"-":25}},{"path":"src/main/java/seedu/smartnus/model/question/predicate/ShowAllQuestionsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.model.question.predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":" * Tests and returns true for any {@code Question}.","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"public class ShowAllQuestionsPredicate implements Predicate\u003cQuestion\u003e {","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"    public ShowAllQuestionsPredicate() {","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"    public boolean test(Question question) {","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"        return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"                || other instanceof ShowAllQuestionsPredicate; // instanceof handles nulls","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"neojxuan":23,"aryagiat":5}},{"path":"src/main/java/seedu/smartnus/model/question/predicate/ShowQuestionIndexPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.model.question.predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.index.Index;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":" * Predicate to get a specific question from the question list based on the index.","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"public class ShowQuestionIndexPredicate implements Predicate\u003cQuestion\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"    private int currentIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"    private final Set\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"     * Constructor for the predicate.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"     * @param targetIndexes The target index set of the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"    public ShowQuestionIndexPredicate(Set\u003cIndex\u003e targetIndexes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"        this.currentIndex \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"     * Constructor for the predicate.","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"     * @param targetIndex The target index of the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"    public ShowQuestionIndexPredicate(Index targetIndex) {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"        this.currentIndex \u003d 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"        this.targetIndexes \u003d new HashSet\u003cIndex\u003e() {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"            {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"                add(targetIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"        };","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"    public boolean test(Question question) {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"        if (targetIndexes.contains(Index.fromZeroBased(currentIndex))) {","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"            currentIndex++;","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"            return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"            currentIndex++;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"                || (other instanceof ShowQuestionIndexPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"                \u0026\u0026 targetIndexes.equals(((ShowQuestionIndexPredicate) other).targetIndexes)); // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"aryagiat":58}},{"path":"src/main/java/seedu/smartnus/model/question/predicate/TagsContainKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.model.question.predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.util.StringUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":" * Tests that any of a {@code Question}\u0027s {@code Tag}s match any of the keywords given.","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"public class TagsContainKeywordsPredicate implements Predicate\u003cQuestion\u003e {","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"    public TagsContainKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"    public boolean test(Question question) {","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"        Set\u003cTag\u003e tags \u003d question.getTags();","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"                .anyMatch(keyword -\u003e matchTagsIgnoreCase(tags, keyword));","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"    // checks if any tag matches the given keyword","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"    private boolean matchTagsIgnoreCase(Set\u003cTag\u003e tags, String keyword) {","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"        return tags.stream()","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"                .anyMatch(tag -\u003e StringUtil.containsWordIgnoreCase(tag.getTagName(), keyword));","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"                || (other instanceof TagsContainKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"                \u0026\u0026 keywords.equals(((TagsContainKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"neojxuan":39,"aryagiat":2}},{"path":"src/main/java/seedu/smartnus/model/quiz/Quiz.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.quiz;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.Statistic;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.exceptions.QuizOutOfBoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":" * The API for the Quiz component.","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"public interface Quiz {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"     * Gets the current question.","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"     * @return The current question.","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"    public Question currQuestion();","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"     * Gets the next question.","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"     * @return The question after the current question.","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"     * @throws QuizOutOfBoundException when navigation goes out of bound.","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"    public Question nextQuestion() throws QuizOutOfBoundException;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"     * Gets the previous question.","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"     * @return The question before the current question.","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"     * @throws QuizOutOfBoundException when navigation goes out of bound.","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"    public Question prevQuestion() throws QuizOutOfBoundException;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"     * Gets the statistic of the quiz.","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"     * @return the Statistic of the quiz.","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"    public Statistic getStatistic();","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"     * Attempts the current question.","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"     * @param choice The choice to the question.","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"     * @return True if the attempt is correct. False otherwise.","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"    public boolean attemptAndCheckAnswer(Choice choice);","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"neojxuan":3,"aryagiat":41}},{"path":"src/main/java/seedu/smartnus/model/quiz/QuizManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.quiz;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.Statistic;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.quiz.exceptions.QuestionAlreadyAnsweredException;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.exceptions.QuizOutOfBoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":" * The quiz manager of the app.","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"public class QuizManager implements Quiz {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"    private final List\u003cQuestion\u003e questions;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"    private int currentIndex;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"    private final int totalQuestions;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"    private final Statistic statistic;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"    private final ArrayList\u003cChoice\u003e selectedChoices;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"     * Creates a quiz manager with a given list of questions.","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"     * @param questions The list of Questions in the quiz.","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"    public QuizManager(List\u003cQuestion\u003e questions) {","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"        this.questions \u003d questions;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"        this.currentIndex \u003d 0;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"        this.totalQuestions \u003d questions.size();","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"        this.statistic \u003d new Statistic();","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"        this.shuffleQuestionChoices();","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"        this.selectedChoices \u003d new ArrayList\u003c\u003e(Collections.nCopies(totalQuestions, null));","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"    public Question currQuestion() {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"        return questions.get(currentIndex);","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"    public Question nextQuestion() throws QuizOutOfBoundException {","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"        int index \u003d currentIndex + 1;","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"        if (isValidIndex(index)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"            currentIndex++;","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"            return currQuestion();","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"        throw new QuizOutOfBoundException();","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"    public Question prevQuestion() throws QuizOutOfBoundException {","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"        int index \u003d currentIndex - 1;","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"        if (isValidIndex(index)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"            currentIndex--;","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"            return currQuestion();","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"        throw new QuizOutOfBoundException();","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"    public Statistic getStatistic() {","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"        return statistic;","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"ryanpeh"},"content":"    public boolean attemptAndCheckAnswer(Choice choice) throws QuestionAlreadyAnsweredException {","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"ryanpeh"},"content":"        if (selectedChoices.get(currentIndex) !\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"ryanpeh"},"content":"            throw new QuestionAlreadyAnsweredException();","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"ryanpeh"},"content":"        selectedChoices.set(currentIndex, choice);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"aryagiat"},"content":"        statistic.addAttempt();","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"aryagiat"},"content":"        if (currQuestion().attemptAndCheckAnswer(choice)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"aryagiat"},"content":"            statistic.addCorrect();","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"aryagiat"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"aryagiat"},"content":"        return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"ryanpeh"},"content":"     * Shuffles the order of the choices in each question.","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"ryanpeh"},"content":"    private void shuffleQuestionChoices() {","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"ryanpeh"},"content":"        for (Question question : questions) {","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"ryanpeh"},"content":"            question.shuffleChoices();","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"aryagiat"},"content":"    private boolean isValidIndex(int index) {","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"aryagiat"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c totalQuestions;","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"ryanpeh"},"content":"    public int getTotalQuestions() {","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"ryanpeh"},"content":"        return totalQuestions;","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"ryanpeh"},"content":"    public int getCurrentIndex() {","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"ryanpeh"},"content":"        return currentIndex;","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"ryanpeh"},"content":"    public boolean isLastQuestion() {","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"ryanpeh"},"content":"        return currentIndex \u003d\u003d totalQuestions - 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"ryanpeh"},"content":"    public Choice getCurrentSelectedChoice() {","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"ryanpeh"},"content":"        return selectedChoices.get(currentIndex);","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"neojxuan":3,"aryagiat":73,"ryanpeh":36}},{"path":"src/main/java/seedu/smartnus/model/quiz/exceptions/QuestionAlreadyAnsweredException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"package seedu.smartnus.model.quiz.exceptions;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":" * Signals that the navigation operation will result in an out of bound error.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"public class QuestionAlreadyAnsweredException extends RuntimeException {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"    public QuestionAlreadyAnsweredException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"        super(\"You have already answered this question!\");","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"ryanpeh":10}},{"path":"src/main/java/seedu/smartnus/model/quiz/exceptions/QuizOutOfBoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.quiz.exceptions;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":" * Signals that the navigation operation will result in an out of bound error.","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"public class QuizOutOfBoundException extends RuntimeException {","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"    public QuizOutOfBoundException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"        super(\"Cannot navigate there! This is the edge of the quiz.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"neojxuan":1,"aryagiat":8,"ryanpeh":1}},{"path":"src/main/java/seedu/smartnus/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":" * Represents a Tag in SmartNus.","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric without any space\";","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"    public String getTagName() {","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"        return tagName;","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"neojxuan":7,"aryagiat":1,"-":50}},{"path":"src/main/java/seedu/smartnus/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.util;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.SmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Importance;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.MultipleChoiceQuestion;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Name;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.question.TrueFalseQuestion;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":" * Contains utility methods for populating {@code SmartNus} with sample data.","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"    public static Question[] getSampleQuestions() {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"        return new Question[] {","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"            new MultipleChoiceQuestion(","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"                    new Name(\"The mean and variance of a random variable X are 5 and 8. What is E(X)?\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"                    new Importance(\"2\"), getTagSet(\"ST2334\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"                    getChoiceSet(new Choice(\"5\", true), new Choice(\"4\", false),","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"                            new Choice(\"7\", false), new Choice(\"8\", false))","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"            ),","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"            new MultipleChoiceQuestion(","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"                    new Name(\"What is the maximum line length according to CS2103T\u0027s coding standard?\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"                    new Importance(\"2\"), getTagSet(\"CS2103T\", \"Java\", \"style\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"                    getChoiceSet(new Choice(\"120\", true), new Choice(\"110\", false),","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"                            new Choice(\"100\", false), new Choice(\"130\", false))","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"            ),","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"            new TrueFalseQuestion(","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"                    new Name(\"Grey-box test case design is a mixture of specification-based\"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"ryanpeh"},"content":"                            + \" and implementation-based approaches.?\"),","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"                    new Importance(\"2\"), getTagSet(\"CS2103T\", \"Java\", \"Testing\"),","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"                    getChoiceSet(new Choice(\"True\", true), new Choice(\"False\", false))","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"            ),","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"            new MultipleChoiceQuestion(","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"                    new Name(\"The mean of a random variable X is 10 and E(X^2) \u003d 20. \"","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"                            + \"What is the standard deviation of X?\"),","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"                    new Importance(\"2\"), getTagSet(\"ST2334\"),","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"                    getChoiceSet(new Choice(\"8.94\", true), new Choice(\"80.0\", false),","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"                            new Choice(\"60.0\", false), new Choice(\"7.78\", false))","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"            ),","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"            new MultipleChoiceQuestion(new Name(\"Which of the following logic gates is a universal gate?\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"                    new Importance(\"1\"), getTagSet(\"CS2100\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"                    getChoiceSet(new Choice(\"NAND\", true), new Choice(\"OR\", false),","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"                            new Choice(\"XOR\", false), new Choice(\"AND\", false))","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"            ),","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"ryanpeh"},"content":"            new TrueFalseQuestion(","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"ryanpeh"},"content":"                    new Name(\"Data abstraction is removing all data-related information\"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"ryanpeh"},"content":"                            + \"from the view to create a higher level abstraction.\"),","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"ryanpeh"},"content":"                    new Importance(\"2\"), getTagSet(\"CS2103T\", \"Java\", \"Design\"),","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"ryanpeh"},"content":"                    getChoiceSet(new Choice(\"True\", false), new Choice(\"False\", true))","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"ryanpeh"},"content":"            ),","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"            new MultipleChoiceQuestion(new Name(\"Convert the following MIPS instruction into hexadecimal: \"","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"                    + \"lw $t9, 0($t7)\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"neojxuan"},"content":"                    new Importance(\"3\"), getTagSet(\"CS2100\", \"MIPS\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"                    getChoiceSet(new Choice(\"0x8df90000\", true), new Choice(\"0x8ed90000\", false),","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"                            new Choice(\"0x8df80000\", false), new Choice(\"0x8de90000\", false))","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"            ),","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"            new MultipleChoiceQuestion(","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"                    new Name(\"What are class diagrams that are used to model the problem domain called?\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"neojxuan"},"content":"                    new Importance(\"3\"), getTagSet(\"CS2103T\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"                    getChoiceSet(new Choice(\"Object oriented domain models\", true),","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"                            new Choice(\"Object diagrams\", false), new Choice(\"Sequence diagrams\", false),","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"                            new Choice(\"Problem domain diagrams\", false))","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"            )","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":75,"author":{"gitId":"neojxuan"},"content":"    public static ReadOnlySmartNus getSampleSmartNus() {","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"        SmartNus sampleSmartNus \u003d new SmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"        for (Question sampleQuestion : getSampleQuestions()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"            sampleSmartNus.addQuestion(sampleQuestion);","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"        return sampleSmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":92,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"neojxuan"},"content":"     * Returns a choice set containing the list of strings given.","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"neojxuan"},"content":"    public static Set\u003cChoice\u003e getChoiceSet(Choice... choices) {","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"neojxuan"},"content":"        return Arrays.stream(choices)","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"neojxuan"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"neojxuan":60,"ryanpeh":15,"-":25}},{"path":"src/main/java/seedu/smartnus/storage/JsonAdaptedChoice.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Agentum07"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Agentum07"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Agentum07"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Agentum07"},"content":" * Jackson-friendly version of {@link Question}.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Agentum07"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Agentum07"},"content":"class JsonAdaptedChoice {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Agentum07"},"content":"    private final String title;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Agentum07"},"content":"    private final boolean isCorrect;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Agentum07"},"content":"     * Constructs a {@code JsonAdaptedChoice} with the given choice details.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Agentum07"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Agentum07"},"content":"    public JsonAdaptedChoice(@JsonProperty(\"title\") String title, @JsonProperty(\"isCorrect\") boolean isCorrect) {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Agentum07"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Agentum07"},"content":"        this.isCorrect \u003d isCorrect;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Agentum07"},"content":"     * Converts a given {@code Choice} into this class for Jackson use.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Agentum07"},"content":"    public JsonAdaptedChoice(Choice source) {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Agentum07"},"content":"        title \u003d source.getTitle();","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Agentum07"},"content":"        isCorrect \u003d source.getIsCorrect();","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Agentum07"},"content":"     * Converts this Jackson-friendly adapted question object into the model\u0027s {@code Question} object.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Agentum07"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Agentum07"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted question.","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Agentum07"},"content":"    public Choice toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Agentum07"},"content":"        if (!Choice.isValidChoiceTitle(title)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Agentum07"},"content":"            throw new IllegalValueException(Choice.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Agentum07"},"content":"        return new Choice(title, isCorrect);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Agentum07"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"neojxuan":4,"Agentum07":43}},{"path":"src/main/java/seedu/smartnus/storage/JsonAdaptedQuestion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.model.question.Question.MCQ_QUESTION_TYPE;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.model.question.Question.TF_QUESTION_TYPE;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Importance;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.MultipleChoiceQuestion;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Statistic;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.TrueFalseQuestion;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":" * Jackson-friendly version of {@link Question}.","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"class JsonAdaptedQuestion {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Question\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"    public static final String INVALID_QUESTION_TYPE_MESSAGE \u003d \"Invalid question type!\";","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"    private final String importance;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Agentum07"},"content":"    private final List\u003cJsonAdaptedChoice\u003e choices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"    private int attemptCount \u003d 0;","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"    private int correctCount \u003d 0;","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"    private int questionType \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"     * Constructs a {@code JsonAdaptedQuestion} with the given question details.","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"    public JsonAdaptedQuestion(@JsonProperty(\"name\") String name, @JsonProperty(\"importance\") String importance,","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Agentum07"},"content":"                               @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"                               @JsonProperty(\"choices\") List\u003cJsonAdaptedChoice\u003e choices,","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"                               @JsonProperty(\"attemptStat\") int attemptCount,","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"                               @JsonProperty(\"correctStat\") int correctCount,","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"cedricongjh"},"content":"                               @JsonProperty(\"questionType\") int questionType) {","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"        this.importance \u003d importance;","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Agentum07"},"content":"        if (choices !\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Agentum07"},"content":"            this.choices.addAll(choices);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"        this.attemptCount \u003d attemptCount;","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"        this.correctCount \u003d correctCount;","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"cedricongjh"},"content":"        this.questionType \u003d questionType;","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"     * Converts a given {@code Question} into this class for Jackson use.","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"neojxuan"},"content":"    public JsonAdaptedQuestion(Question source) {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"        importance \u003d source.getImportance().value;","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"Agentum07"},"content":"        choices.addAll(source.getChoices().stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Agentum07"},"content":"                .map(JsonAdaptedChoice::new)","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"Agentum07"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"aryagiat"},"content":"        attemptCount \u003d source.getStatistic().getAttemptCount();","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"aryagiat"},"content":"        correctCount \u003d source.getStatistic().getCorrectCount();","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"cedricongjh"},"content":"        questionType \u003d source.getQuestionType();","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"neojxuan"},"content":"     * Converts this Jackson-friendly adapted question object into the model\u0027s {@code Question} object.","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"neojxuan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted question.","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"neojxuan"},"content":"    public Question toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"neojxuan"},"content":"        final List\u003cTag\u003e questionTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"Agentum07"},"content":"        final List\u003cChoice\u003e questionChoices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"neojxuan"},"content":"            questionTags.add(tag.toModelType());","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"Agentum07"},"content":"        for (JsonAdaptedChoice choice : choices) {","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"Agentum07"},"content":"            questionChoices.add(choice.toModelType());","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"neojxuan"},"content":"        if (importance \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"neojxuan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"neojxuan"},"content":"                    Importance.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"neojxuan"},"content":"        if (!Importance.isValidImportance(importance)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"neojxuan"},"content":"            throw new IllegalValueException(Importance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"neojxuan"},"content":"        final Importance modelImportance \u003d new Importance(importance);","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"neojxuan"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(questionTags);","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"neojxuan"},"content":"        final Set\u003cChoice\u003e modelChoices \u003d new HashSet\u003c\u003e(questionChoices);","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"aryagiat"},"content":"        final Statistic statistic \u003d new Statistic(attemptCount, correctCount);","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"cedricongjh"},"content":"        if (questionType \u003d\u003d MCQ_QUESTION_TYPE) {","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"aryagiat"},"content":"            return new MultipleChoiceQuestion(modelName, modelImportance, modelTags, modelChoices, statistic);","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"cedricongjh"},"content":"        } else if (questionType \u003d\u003d TF_QUESTION_TYPE) {","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"cedricongjh"},"content":"            return new TrueFalseQuestion(modelName, modelImportance, modelTags, modelChoices, statistic);","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"cedricongjh"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"cedricongjh"},"content":"            throw new IllegalValueException(INVALID_QUESTION_TYPE_MESSAGE);","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"neojxuan":30,"aryagiat":11,"cedricongjh":21,"-":55,"Agentum07":13}},{"path":"src/main/java/seedu/smartnus/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"neojxuan":3,"-":45}},{"path":"src/main/java/seedu/smartnus/storage/JsonSerializableSmartNus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.SmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":" * An Immutable SmartNus that is serializable to JSON format.","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"@JsonRootName(value \u003d \"smartnus\")","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"Agentum07"},"content":"class JsonSerializableSmartNus {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"    public static final String MESSAGE_DUPLICATE_QUESTION \u003d \"Questions list contains duplicate question(s).\";","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"    private final List\u003cJsonAdaptedQuestion\u003e questions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Agentum07"},"content":"     * Constructs a {@code JsonSerializableSmartNus} with the given questions.","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Agentum07"},"content":"    public JsonSerializableSmartNus(@JsonProperty(\"questions\") List\u003cJsonAdaptedQuestion\u003e questions) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"        this.questions.addAll(questions);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"     * Converts a given {@code ReadOnlySmartNus} into this class for Jackson use.","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Agentum07"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableSmartNus}.","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"    public JsonSerializableSmartNus(ReadOnlySmartNus source) {","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"        questions.addAll(source.getQuestionList().stream().map(JsonAdaptedQuestion::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"     * Converts this {@code JsonSerializableSmartNus} into the model\u0027s {@code SmartNus} object.","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"    public SmartNus toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"        SmartNus smartNus \u003d new SmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"        for (JsonAdaptedQuestion jsonAdaptedQuestion : questions) {","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"            Question question \u003d jsonAdaptedQuestion.toModelType();","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"            if (smartNus.hasQuestion(question)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_QUESTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"            smartNus.addQuestion(question);","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"        return smartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"neojxuan":22,"-":34,"Agentum07":4}},{"path":"src/main/java/seedu/smartnus/storage/JsonSmartNusStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.LogsCenter;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.util.FileUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.util.JsonUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":" * A class to access SmartNus data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Agentum07"},"content":"public class JsonSmartNusStorage implements SmartNusStorage {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Agentum07"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonSmartNusStorage.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Agentum07"},"content":"    public JsonSmartNusStorage(Path filePath) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"    public Path getSmartNusFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"    public Optional\u003cReadOnlySmartNus\u003e readSmartNus() throws DataConversionException {","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"        return readSmartNus(filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"     * Similar to {@link #readSmartNus()}.","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"    public Optional\u003cReadOnlySmartNus\u003e readSmartNus(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"        Optional\u003cJsonSerializableSmartNus\u003e jsonSmartNus \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"Agentum07"},"content":"                filePath, JsonSerializableSmartNus.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"        if (!jsonSmartNus.isPresent()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"            return Optional.of(jsonSmartNus.get().toModelType());","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"    public void saveSmartNus(ReadOnlySmartNus smartNus) throws IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"        saveSmartNus(smartNus, filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"     * Similar to {@link #saveSmartNus(ReadOnlySmartNus)}.","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"    public void saveSmartNus(ReadOnlySmartNus smartNus, Path filePath) throws IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"neojxuan"},"content":"        requireNonNull(smartNus);","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableSmartNus(smartNus), filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"neojxuan":22,"-":54,"Agentum07":4}},{"path":"src/main/java/seedu/smartnus/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.util.JsonUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"neojxuan":5,"-":42}},{"path":"src/main/java/seedu/smartnus/storage/SmartNusStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.SmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":" * Represents a storage for {@link SmartNus}.","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"Agentum07"},"content":"public interface SmartNusStorage {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"    Path getSmartNusFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"     * Returns SmartNus data as a {@link ReadOnlySmartNus}.","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"    Optional\u003cReadOnlySmartNus\u003e readSmartNus() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"     * @see #getSmartNusFilePath()","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"    Optional\u003cReadOnlySmartNus\u003e readSmartNus(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"     * Saves the given {@link ReadOnlySmartNus} to the storage.","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"     * @param smartNus cannot be null.","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"    void saveSmartNus(ReadOnlySmartNus smartNus) throws IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"     * @see #saveSmartNus(ReadOnlySmartNus)","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"    void saveSmartNus(ReadOnlySmartNus smartNus, Path filePath) throws IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"neojxuan":15,"-":30,"Agentum07":1}},{"path":"src/main/java/seedu/smartnus/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"Agentum07"},"content":"public interface Storage extends SmartNusStorage, UserPrefsStorage {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"    Path getSmartNusFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"    Optional\u003cReadOnlySmartNus\u003e readSmartNus() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"    void saveSmartNus(ReadOnlySmartNus smartNus) throws IOException;","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"neojxuan":8,"-":23,"Agentum07":1}},{"path":"src/main/java/seedu/smartnus/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.LogsCenter;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":" * Manages storage of SmartNus data in local storage.","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"Agentum07"},"content":"    private SmartNusStorage smartNusStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"Agentum07"},"content":"     * Creates a {@code StorageManager} with the given {@code SmartNusStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"Agentum07"},"content":"    public StorageManager(SmartNusStorage smartNusStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"Agentum07"},"content":"        this.smartNusStorage \u003d smartNusStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SmartNus methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"    public Path getSmartNusFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"        return smartNusStorage.getSmartNusFilePath();","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"neojxuan"},"content":"    public Optional\u003cReadOnlySmartNus\u003e readSmartNus() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"        return readSmartNus(smartNusStorage.getSmartNusFilePath());","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"    public Optional\u003cReadOnlySmartNus\u003e readSmartNus(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"        return smartNusStorage.readSmartNus(filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"    public void saveSmartNus(ReadOnlySmartNus smartNus) throws IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"        saveSmartNus(smartNus, smartNusStorage.getSmartNusFilePath());","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"neojxuan"},"content":"    public void saveSmartNus(ReadOnlySmartNus smartNus, Path filePath) throws IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"        smartNusStorage.saveSmartNus(smartNus, filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":18,"-":57,"Agentum07":4}},{"path":"src/main/java/seedu/smartnus/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":" * Represents a storage for {@link seedu.smartnus.model.UserPrefs}.","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"     * Saves the given {@link seedu.smartnus.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"neojxuan":6,"-":30}},{"path":"src/main/java/seedu/smartnus/ui/ChoiceGrid.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":" * An UI component that displays information of a {@code Question}.","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"public abstract class ChoiceGrid extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"    private GridPane mcqGrid;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"     * Creates a {@code QuestionCard} with the given {@code Question} and index to display.","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"    public ChoiceGrid(String fxml) {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"        super(fxml);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"    };","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"    protected abstract void showCorrectOption(ArrayList\u003cChoice\u003e choices, Choice correctChoice);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"ryanpeh"},"content":"    protected abstract void showIncorrectOption(ArrayList\u003cChoice\u003e choices, Choice selectedChoice);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"    protected abstract void disableButtons();","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"ryanpeh":41}},{"path":"src/main/java/seedu/smartnus/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.CommandResult;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"         * @see seedu.smartnus.logic.Logic#execute(String)","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"neojxuan":5,"-":80}},{"path":"src/main/java/seedu/smartnus/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.LogsCenter;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    public static final String USERGUIDE_URL \u003d \"https://https://ay2122s1-cs2103t-f12-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"neojxuan":2,"aryagiat":1,"-":99}},{"path":"src/main/java/seedu/smartnus/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.GuiSettings;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.LogsCenter;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.Logic;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.CommandResult;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"    private QuestionListPanel questionListPanel;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"    private StackPane questionListPanelPlaceholder;","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"        UiUtils.setTheme(logic.getTheme(), primaryStage);","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"neojxuan"},"content":"        questionListPanel \u003d new QuestionListPanel(logic.getFilteredQuestionList());","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"neojxuan"},"content":"        questionListPanelPlaceholder.getChildren().add(questionListPanel.getRoot());","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"neojxuan"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getSmartNusFilePath());","lastModifiedDate":"2021-10-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"aryagiat"},"content":"        UiUtils.setGuiSettings(logic, primaryStage);","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":165,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"ryanpeh"},"content":"     * Starts the quiz.","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"ryanpeh"},"content":"    private void handleQuizStart() {","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"ryanpeh"},"content":"        // TODO: Check if quiz has any questions, throw error if doesn\u0027t","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"aryagiat"},"content":"        UiUtils.setGuiSettings(logic, primaryStage);","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"ryanpeh"},"content":"        QuizWindow quizWindow \u003d new QuizWindow(primaryStage, logic);","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"ryanpeh"},"content":"        quizWindow.show();","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"ryanpeh"},"content":"        quizWindow.fillInnerParts();","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"ryanpeh"},"content":"        quizWindow.loadQuiz();","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"neojxuan"},"content":"    public QuestionListPanel getQuestionListPanel() {","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"neojxuan"},"content":"        return questionListPanel;","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"neojxuan"},"content":"     * @see seedu.smartnus.logic.Logic#execute(String)","lastModifiedDate":"2021-10-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"ryanpeh"},"content":"            if (commandResult.isQuizStart()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"ryanpeh"},"content":"                handleQuizStart();","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"ryanpeh"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"aryagiat"},"content":"            UiUtils.setTheme(logic.getTheme(), primaryStage);","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"neojxuan":15,"aryagiat":5,"ryanpeh":16,"-":178}},{"path":"src/main/java/seedu/smartnus/ui/McqChoiceGrid.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":" * An UI component that displays information of a {@code Question}.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"public class McqChoiceGrid extends ChoiceGrid {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"    private static final String FXML \u003d \"McqChoiceGrid.fxml\";","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"    private GridPane mcqGrid;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"    private Button optionA;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"    private Button optionB;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"    private Button optionC;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"ryanpeh"},"content":"    private Button optionD;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"     * A UI component that displays the choices of a {@code MultipleChoiceQuestion}","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"    public McqChoiceGrid(Question question, Choice selectedChoice) {","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"        super(FXML);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"        ArrayList\u003cChoice\u003e choices \u003d question.getOrderedChoices();","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"        optionA.setText(\"A. \" + choices.get(0).getTitle());","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"ryanpeh"},"content":"        optionB.setText(\"B. \" + choices.get(1).getTitle());","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"        optionC.setText(\"C. \" + choices.get(2).getTitle());","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"        optionD.setText(\"D. \" + choices.get(3).getTitle());","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"        boolean isQuestionAnswered \u003d selectedChoice !\u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"        if (isQuestionAnswered) {","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"            showCorrectOption(choices, question.getCorrectChoice());","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"            if (!selectedChoice.equals(question.getCorrectChoice())) {","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"ryanpeh"},"content":"                showIncorrectOption(choices, selectedChoice);","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"ryanpeh"},"content":"        // TODO: Remove function below if we\u0027re enabling click to select choice.","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"ryanpeh"},"content":"        disableButtons();","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"ryanpeh"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"ryanpeh"},"content":"    protected void showCorrectOption(ArrayList\u003cChoice\u003e choices, Choice correctChoice) {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"ryanpeh"},"content":"        int selectedIndex \u003d choices.indexOf(correctChoice);","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"ryanpeh"},"content":"        switch (selectedIndex) {","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"ryanpeh"},"content":"        case 0:","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"ryanpeh"},"content":"            optionA.getStyleClass().add(\"quiz-choice-correct\");","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"ryanpeh"},"content":"        case 1:","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"ryanpeh"},"content":"            optionB.getStyleClass().add(\"quiz-choice-correct\");","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"ryanpeh"},"content":"        case 2:","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"ryanpeh"},"content":"            optionC.getStyleClass().add(\"quiz-choice-correct\");","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"ryanpeh"},"content":"        case 3:","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"ryanpeh"},"content":"            optionD.getStyleClass().add(\"quiz-choice-correct\");","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"ryanpeh"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"ryanpeh"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"ryanpeh"},"content":"    protected void showIncorrectOption(ArrayList\u003cChoice\u003e choices, Choice selectedChoice) {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"ryanpeh"},"content":"        int selectedIndex \u003d choices.indexOf(selectedChoice);","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"ryanpeh"},"content":"        switch (selectedIndex) {","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"ryanpeh"},"content":"        case 0:","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"ryanpeh"},"content":"            optionA.getStyleClass().add(\"quiz-choice-incorrect\");","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"ryanpeh"},"content":"        case 1:","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"ryanpeh"},"content":"            optionB.getStyleClass().add(\"quiz-choice-incorrect\");","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"ryanpeh"},"content":"        case 2:","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"ryanpeh"},"content":"            optionC.getStyleClass().add(\"quiz-choice-incorrect\");","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"ryanpeh"},"content":"        case 3:","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"ryanpeh"},"content":"            optionD.getStyleClass().add(\"quiz-choice-incorrect\");","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"ryanpeh"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"ryanpeh"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"ryanpeh"},"content":"    protected void disableButtons() {","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"ryanpeh"},"content":"        optionA.setDisable(true);","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"ryanpeh"},"content":"        optionB.setDisable(true);","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"ryanpeh"},"content":"        optionC.setDisable(true);","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"ryanpeh"},"content":"        optionD.setDisable(true);","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"ryanpeh"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"ryanpeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"ryanpeh"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"ryanpeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"ryanpeh"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"ryanpeh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"ryanpeh"},"content":"        if (!(other instanceof McqChoiceGrid)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"ryanpeh"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"ryanpeh"},"content":"        // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"ryanpeh"},"content":"        McqChoiceGrid card \u003d (McqChoiceGrid) other;","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"ryanpeh"},"content":"        return optionA.getText().equals(card.optionA.getText())","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"ryanpeh"},"content":"                \u0026\u0026 optionB.getText().equals(card.optionB.getText())","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"ryanpeh"},"content":"                \u0026\u0026 optionC.getText().equals(card.optionC.getText())","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"ryanpeh"},"content":"                \u0026\u0026 optionD.getText().equals(card.optionD.getText());","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"ryanpeh":125}},{"path":"src/main/java/seedu/smartnus/ui/QuestionCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":" * An UI component that displays information of a {@code Question}.","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"public class QuestionCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"    private static final String FXML \u003d \"QuestionListCard.fxml\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"    public final Question question;","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"    private int displayedIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"    private Label importance;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"    private Label statistic;","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"    @FXML","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"    private HBox choices;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"     * Creates a {@code QuestionCard} with the given {@code Question} and index to display.","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"    public QuestionCard(Question question, int displayedIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"        this.question \u003d question;","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"        this.displayedIndex \u003d displayedIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"        name.setText(displayedIndex + \". \" + question.getName().fullName);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"        name.setWrapText(true);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"        importance.setText(\"Importance: \" + question.getImportance().value);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"        question.getTags().stream()","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"        question.getChoices().stream()","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"neojxuan"},"content":"                .forEach(choice -\u003e setChoiceLabel(choice));","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"        statistic.setText(question.getStatistic().toString());","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"    // TODO: update choice background colours when we change gui display for quiz","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"    // If not, during quiz, users can see the correct answers","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"    private void setChoiceLabel(Choice choice) {","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"        Label choiceLabel \u003d new Label(choice.getTitle());","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"        choiceLabel.setWrapText(true);","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"neojxuan"},"content":"        if (choice.getIsCorrect()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"            choiceLabel.getStyleClass().add(\"correct-choice-bg\");","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"        } else {","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"            choiceLabel.getStyleClass().add(\"wrong-choice-bg\");","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"        choices.getChildren().add(choiceLabel);","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"neojxuan"},"content":"        if (!(other instanceof QuestionCard)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"neojxuan"},"content":"        QuestionCard card \u003d (QuestionCard) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"neojxuan"},"content":"        return displayedIndex \u003d\u003d card.displayedIndex","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"neojxuan"},"content":"                \u0026\u0026 question.equals(card.question);","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"neojxuan":38,"aryagiat":3,"-":51}},{"path":"src/main/java/seedu/smartnus/ui/QuestionDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"public class QuestionDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"    private static final String FXML \u003d \"QuestionDisplay.fxml\";","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"    private TextArea questionDisplay;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"    public QuestionDisplay() {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"        super(FXML);","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"    public void displayQuestion(Question question) {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"        questionDisplay.setText(question.getName().fullName);","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"ryanpeh":26}},{"path":"src/main/java/seedu/smartnus/ui/QuestionListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.LogsCenter;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":" * Panel containing the list of questions.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"public class QuestionListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"    private static final String FXML \u003d \"QuestionListPanel.fxml\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(QuestionListPanel.class);","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"    private ListView\u003cQuestion\u003e questionListView;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"     * Creates a {@code QuestionListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"    public QuestionListPanel(ObservableList\u003cQuestion\u003e questionList) {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"        questionListView.setItems(questionList);","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"        questionListView.setCellFactory(listView -\u003e new QuestionListViewCell());","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Question} using a {@code QuestionCard}.","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"    class QuestionListViewCell extends ListCell\u003cQuestion\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"        protected void updateItem(Question question, boolean empty) {","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"            super.updateItem(question, empty);","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"            if (empty || question \u003d\u003d null) {","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"                setGraphic(new QuestionCard(question, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"neojxuan":18,"-":31}},{"path":"src/main/java/seedu/smartnus/ui/QuizWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.GuiSettings;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.LogsCenter;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.Logic;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.CommandResult;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.question.MultipleChoiceQuestion;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.question.TrueFalseQuestion;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"ryanpeh"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"ryanpeh"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"public class QuizWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"    // TODO: Create new fxml for QuizWindow","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"    private static final String FXML \u003d \"QuizWindow.fxml\";","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"ryanpeh"},"content":"    private Stage primaryStage;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"    private Logic logic;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"    private QuizManager quizManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"    // private QuestionListPanel questionListPanel;","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"    private ChoiceGrid choiceGrid;","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"    private QuestionDisplay questionDisplay;","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"ryanpeh"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"ryanpeh"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"ryanpeh"},"content":"    private StackPane questionListPanelPlaceholder;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"ryanpeh"},"content":"    private StackPane choiceGridPlaceholder;","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"ryanpeh"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"ryanpeh"},"content":"    private StackPane questionDisplayPlaceholder;","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"ryanpeh"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"ryanpeh"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"ryanpeh"},"content":"    public QuizWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"ryanpeh"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"ryanpeh"},"content":"        // Set dependencies","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"ryanpeh"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"ryanpeh"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"        quizManager \u003d new QuizManager(logic.getFilteredQuizQuestionList());","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"ryanpeh"},"content":"        // Configure the UI","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"ryanpeh"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"ryanpeh"},"content":"        setAccelerators();","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"ryanpeh"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"ryanpeh"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"ryanpeh"},"content":"        return primaryStage;","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"ryanpeh"},"content":"    private void setAccelerators() {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"ryanpeh"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"ryanpeh"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"ryanpeh"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"ryanpeh"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"ryanpeh"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"ryanpeh"},"content":"        /*","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"ryanpeh"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"ryanpeh"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"ryanpeh"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"ryanpeh"},"content":"         *","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"ryanpeh"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"ryanpeh"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"ryanpeh"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"ryanpeh"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"ryanpeh"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"ryanpeh"},"content":"         *","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"ryanpeh"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"ryanpeh"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"ryanpeh"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"ryanpeh"},"content":"         */","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"ryanpeh"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"ryanpeh"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"ryanpeh"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"ryanpeh"},"content":"                event.consume();","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"ryanpeh"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"ryanpeh"},"content":"        });","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"ryanpeh"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"ryanpeh"},"content":"    void fillInnerParts() {","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"ryanpeh"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"ryanpeh"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"ryanpeh"},"content":"        updateStatusBar();","lastModifiedDate":"2021-10-15"},{"lineNumber":136,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"ryanpeh"},"content":"        updateChoices();","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"ryanpeh"},"content":"        questionDisplay \u003d new QuestionDisplay();","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"ryanpeh"},"content":"        questionDisplayPlaceholder.getChildren().add(questionDisplay.getRoot());","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"ryanpeh"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"ryanpeh"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":148,"author":{"gitId":"ryanpeh"},"content":"     * Updates the status bar with the current question number.","lastModifiedDate":"2021-10-15"},{"lineNumber":149,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":150,"author":{"gitId":"ryanpeh"},"content":"    private void updateStatusBar() {","lastModifiedDate":"2021-10-15"},{"lineNumber":151,"author":{"gitId":"ryanpeh"},"content":"        int currentQuestionNumber \u003d quizManager.getCurrentIndex() + 1;","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"ryanpeh"},"content":"        int totalQuestions \u003d quizManager.getTotalQuestions();","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"ryanpeh"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(String.format(\"Question %d of %d\",","lastModifiedDate":"2021-10-15"},{"lineNumber":154,"author":{"gitId":"ryanpeh"},"content":"                currentQuestionNumber , totalQuestions));","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"ryanpeh"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2021-10-15"},{"lineNumber":156,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":157,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":158,"author":{"gitId":"ryanpeh"},"content":"    private void updateChoices() {","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"ryanpeh"},"content":"        choiceGridPlaceholder.getChildren().clear();","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"ryanpeh"},"content":"        choiceGrid \u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"ryanpeh"},"content":"        Question currentQuestion \u003d quizManager.currQuestion();","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"ryanpeh"},"content":"        Choice selectedChoice \u003d quizManager.getCurrentSelectedChoice();","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"ryanpeh"},"content":"        if (quizManager.currQuestion() instanceof MultipleChoiceQuestion) {","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"ryanpeh"},"content":"            choiceGrid \u003d new McqChoiceGrid(currentQuestion, selectedChoice);","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"ryanpeh"},"content":"        } else if (quizManager.currQuestion() instanceof TrueFalseQuestion) {","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"ryanpeh"},"content":"            choiceGrid \u003d new TfqChoiceGrid(currentQuestion, selectedChoice);","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"ryanpeh"},"content":"        assert choiceGrid !\u003d null : \"Question should either be instance of MultipleChoiceQuestion or TrueFalseQuestion\";","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"ryanpeh"},"content":"        choiceGridPlaceholder.getChildren().add(choiceGrid.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"ryanpeh"},"content":"     * Loads the first question from the list of questions","lastModifiedDate":"2021-10-13"},{"lineNumber":178,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"ryanpeh"},"content":"    void loadQuiz() {","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"ryanpeh"},"content":"        String display \u003d \"Quiz Started!\\n\";","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"ryanpeh"},"content":"        Question currentQuestion \u003d quizManager.currQuestion();","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"ryanpeh"},"content":"        resultDisplay.setFeedbackToUser(display);","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"ryanpeh"},"content":"        questionDisplay.displayQuestion(currentQuestion);","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":185,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":186,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":187,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"ryanpeh"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"ryanpeh"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"ryanpeh"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"ryanpeh"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"ryanpeh"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"ryanpeh"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"ryanpeh"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"ryanpeh"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"ryanpeh"},"content":"    public void handleHelp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"ryanpeh"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"ryanpeh"},"content":"            helpWindow.show();","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"ryanpeh"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"ryanpeh"},"content":"            helpWindow.focus();","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"ryanpeh"},"content":"    void show() {","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"ryanpeh"},"content":"        primaryStage.show();","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"ryanpeh"},"content":"     * Closes the application.","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"ryanpeh"},"content":"    private void handleExit() {","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"ryanpeh"},"content":"        // TODO: Currently creates a new MainWindow, can explore reusing the original MainWindow in the future","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"aryagiat"},"content":"        UiUtils.setGuiSettings(logic, primaryStage);","lastModifiedDate":"2021-10-22"},{"lineNumber":222,"author":{"gitId":"ryanpeh"},"content":"        MainWindow mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"ryanpeh"},"content":"        mainWindow.show();","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"ryanpeh"},"content":"        mainWindow.fillInnerParts();","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"ryanpeh"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"ryanpeh"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"ryanpeh"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"ryanpeh"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"ryanpeh"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"ryanpeh"},"content":"            CommandResult commandResult \u003d logic.execute(commandText, quizManager);","lastModifiedDate":"2021-10-13"},{"lineNumber":235,"author":{"gitId":"ryanpeh"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"ryanpeh"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"ryanpeh"},"content":"            questionDisplay.displayQuestion(quizManager.currQuestion());","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"ryanpeh"},"content":"            updateStatusBar();","lastModifiedDate":"2021-10-15"},{"lineNumber":239,"author":{"gitId":"ryanpeh"},"content":"            updateChoices();","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"ryanpeh"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"ryanpeh"},"content":"                handleHelp();","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"ryanpeh"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"ryanpeh"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"ryanpeh"},"content":"                handleExit();","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"ryanpeh"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"ryanpeh"},"content":"            return commandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"ryanpeh"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"ryanpeh"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"ryanpeh"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"ryanpeh"},"content":"            throw e;","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"neojxuan":10,"ryanpeh":245,"aryagiat":1}},{"path":"src/main/java/seedu/smartnus/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"neojxuan":1,"-":27}},{"path":"src/main/java/seedu/smartnus/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code String}.","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"    public StatusBarFooter(String text) {","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"        super(FXML);","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"        saveLocationStatus.setText(text);","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":1,"ryanpeh":8,"-":27}},{"path":"src/main/java/seedu/smartnus/ui/TfqChoiceGrid.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.question.TrueFalseQuestion;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":" * An UI component that displays information of a {@code Question}.","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"public class TfqChoiceGrid extends ChoiceGrid {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"    private static final String FXML \u003d \"TfqChoiceGrid.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"    private GridPane tfqGrid;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"    private Button optionTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"    private Button optionFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"ryanpeh"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"ryanpeh"},"content":"     * A UI component that displays the choices of a {@code TrueFalseQuestion}","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"    public TfqChoiceGrid(Question question, Choice selectedChoice) {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"        super(FXML);","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"        assert question instanceof TrueFalseQuestion;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"        ArrayList\u003cChoice\u003e choices \u003d question.getOrderedChoices();","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"        boolean isQuestionAnswered \u003d selectedChoice !\u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"        if (isQuestionAnswered) {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"            showCorrectOption(choices, question.getCorrectChoice());","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"            if (!selectedChoice.equals(question.getCorrectChoice())) {","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"                showIncorrectOption(choices, selectedChoice);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"        // TODO: Remove function below if we\u0027re enabling click to select choice.","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"ryanpeh"},"content":"        disableButtons();","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"    protected void showCorrectOption(ArrayList\u003cChoice\u003e choices, Choice correctChoice) {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"ryanpeh"},"content":"        int selectedIndex \u003d choices.indexOf(correctChoice);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"ryanpeh"},"content":"        switch (selectedIndex) {","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"ryanpeh"},"content":"        case 0:","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"ryanpeh"},"content":"            optionTrue.getStyleClass().add(\"quiz-choice-correct\");","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"ryanpeh"},"content":"        case 1:","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"ryanpeh"},"content":"            optionFalse.getStyleClass().add(\"quiz-choice-correct\");","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"ryanpeh"},"content":"        default:","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"ryanpeh"},"content":"    protected void showIncorrectOption(ArrayList\u003cChoice\u003e choices, Choice selectedChoice) {","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"ryanpeh"},"content":"        int selectedIndex \u003d choices.indexOf(selectedChoice);","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"ryanpeh"},"content":"        switch (selectedIndex) {","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"ryanpeh"},"content":"        case 0:","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"ryanpeh"},"content":"            optionTrue.getStyleClass().add(\"quiz-choice-incorrect\");","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"ryanpeh"},"content":"        case 1:","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"ryanpeh"},"content":"            optionFalse.getStyleClass().add(\"quiz-choice-incorrect\");","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"ryanpeh"},"content":"        default:","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"ryanpeh"},"content":"            break;","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"ryanpeh"},"content":"    protected void disableButtons() {","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"ryanpeh"},"content":"        optionTrue.setDisable(true);","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"ryanpeh"},"content":"        optionFalse.setDisable(true);","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"ryanpeh"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"ryanpeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"ryanpeh"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"ryanpeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"ryanpeh"},"content":"            return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"ryanpeh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"ryanpeh"},"content":"        if (!(other instanceof TfqChoiceGrid)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"ryanpeh"},"content":"            return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"ryanpeh"},"content":"        // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"ryanpeh"},"content":"        TfqChoiceGrid card \u003d (TfqChoiceGrid) other;","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"ryanpeh"},"content":"        return card \u003d\u003d other;","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"ryanpeh":100}},{"path":"src/main/java/seedu/smartnus/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"neojxuan":1,"-":12}},{"path":"src/main/java/seedu/smartnus/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.MainApp;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.LogsCenter;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.util.StringUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.Logic;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/LightTheme.css\");","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"neojxuan":5,"aryagiat":1,"-":83}},{"path":"src/main/java/seedu/smartnus/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.MainApp;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"neojxuan":2,"-":86}},{"path":"src/main/java/seedu/smartnus/ui/UiUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import static seedu.smartnus.ui.UiPart.FXML_FILE_FOLDER;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.GuiSettings;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.Theme;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.logic.Logic;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"public class UiUtils {","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"     * Sets the GUI setting.","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"     * @param logic The Logic model to set the current GUI settings.","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"     * @param stage The current stage.","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    public static void setGuiSettings(Logic logic, Stage stage) {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(stage.getWidth(), stage.getHeight(),","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"                (int) stage.getX(), (int) stage.getY());","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"     * Sets the theme of the UI (light or dark).","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"     * @param theme The theme of the UI.","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"     * @param stage The current stage.","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"    public static void setTheme(Theme theme, Stage stage) {","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"        Scene scene \u003d stage.getScene();","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"        String pathToTheme \u003d FXML_FILE_FOLDER;","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"        String themeCssFile \u003d pathToTheme + theme.getThemeCssFile();","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"        String extensionCssFile \u003d pathToTheme + theme.getExtensionsCssFile();","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"        scene.getStylesheets().remove(1, scene.getStylesheets().size());","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"        scene.getStylesheets().add(themeCssFile);","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"        scene.getStylesheets().add(extensionCssFile);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"aryagiat":39}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"neojxuan"},"content":"#filterField, #questionListPanel, #personWebpage {","lastModifiedDate":"2021-10-07"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"ryanpeh"},"content":"#questionDisplay .content {","lastModifiedDate":"2021-10-21"},{"lineNumber":341,"author":{"gitId":"ryanpeh"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2021-10-21"},{"lineNumber":342,"author":{"gitId":"ryanpeh"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":343,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":344,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":359,"author":{"gitId":"neojxuan"},"content":"#choices {","lastModifiedDate":"2021-10-08"},{"lineNumber":360,"author":{"gitId":"neojxuan"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-10-08"},{"lineNumber":361,"author":{"gitId":"neojxuan"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-10-08"},{"lineNumber":362,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":363,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":364,"author":{"gitId":"neojxuan"},"content":"#choices .label {","lastModifiedDate":"2021-10-08"},{"lineNumber":365,"author":{"gitId":"neojxuan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-08"},{"lineNumber":366,"author":{"gitId":"neojxuan"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-08"},{"lineNumber":367,"author":{"gitId":"neojxuan"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-08"},{"lineNumber":368,"author":{"gitId":"neojxuan"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-08"},{"lineNumber":369,"author":{"gitId":"neojxuan"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2021-10-08"},{"lineNumber":370,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":371,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":372,"author":{"gitId":"neojxuan"},"content":".correct-choice-bg {","lastModifiedDate":"2021-10-14"},{"lineNumber":373,"author":{"gitId":"neojxuan"},"content":"    -fx-background-color: #035546;","lastModifiedDate":"2021-10-14"},{"lineNumber":374,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-10-14"},{"lineNumber":375,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":376,"author":{"gitId":"neojxuan"},"content":".wrong-choice-bg {","lastModifiedDate":"2021-10-14"},{"lineNumber":377,"author":{"gitId":"neojxuan"},"content":"    -fx-background-color: #802b40;","lastModifiedDate":"2021-10-24"},{"lineNumber":378,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-10-14"},{"lineNumber":379,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":380,"author":{"gitId":"ryanpeh"},"content":".quiz-choice:disabled {","lastModifiedDate":"2021-10-23"},{"lineNumber":381,"author":{"gitId":"ryanpeh"},"content":"    -fx-max-height: Infinity;","lastModifiedDate":"2021-10-23"},{"lineNumber":382,"author":{"gitId":"ryanpeh"},"content":"    -fx-max-width: Infinity;","lastModifiedDate":"2021-10-23"},{"lineNumber":383,"author":{"gitId":"ryanpeh"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-23"},{"lineNumber":384,"author":{"gitId":"ryanpeh"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-23"},{"lineNumber":385,"author":{"gitId":"ryanpeh"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-10-23"},{"lineNumber":386,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":387,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":388,"author":{"gitId":"ryanpeh"},"content":".quiz-choice-correct:disabled {","lastModifiedDate":"2021-10-23"},{"lineNumber":389,"author":{"gitId":"ryanpeh"},"content":"    -fx-background-color: darkgreen;","lastModifiedDate":"2021-10-23"},{"lineNumber":390,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":391,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":392,"author":{"gitId":"ryanpeh"},"content":".quiz-choice-incorrect:disabled {","lastModifiedDate":"2021-10-23"},{"lineNumber":393,"author":{"gitId":"ryanpeh"},"content":"    -fx-background-color: darkred;","lastModifiedDate":"2021-10-23"},{"lineNumber":394,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"neojxuan":23,"ryanpeh":20,"-":351}},{"path":"src/main/resources/view/Fonts.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"font-face {","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans\";","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Regular.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans SemiBold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-SemiBold.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Light.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Bold Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-BoldItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Extra Bold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-ExtraBold.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Extra Bold Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-ExtraBoldItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Italic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Light Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-LightItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans SemiBold Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-SemiBoldItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"aryagiat":1,"-":43}},{"path":"src/main/resources/view/LightExtensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":".error {","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":".list-cell:empty {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"    -fx-background: #ffffff;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":".tag-selector {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"    -fx-border-color: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":".tooltip-text {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"aryagiat":20}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":".background {","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"    background-color: #ffffff; /* Used in the default.html file */","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":".label {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":".label-bright {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":".label-header {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":".text-field {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":".tab-pane {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":".table-view {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"    -fx-base: #f8f8f8;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"    -fx-control-inner-background: #f8f8f8;","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: #f8f8f8;","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"    -fx-padding: 5;","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":".table-view .column-header-background {","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"    -fx-size: 35;","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"    -fx-border-color:","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"        transparent","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"        transparent","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"        transparent;","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"aryagiat"},"content":".table-view .column-header .label {","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"aryagiat"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"aryagiat"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"aryagiat"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"aryagiat"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"aryagiat"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"aryagiat"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: derive(#f8f8f8, 20%);","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"aryagiat"},"content":"    -fx-border-color: transparent transparent transparent #f8f8f8;","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"aryagiat"},"content":".split-pane {","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"aryagiat"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"aryagiat"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: derive(#f8f8f8, 20%);","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"aryagiat"},"content":".list-view {","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"aryagiat"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"aryagiat"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: derive(#f8f8f8, 20%);","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"aryagiat"},"content":".list-cell {","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"aryagiat"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"aryagiat"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"aryagiat"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"aryagiat"},"content":".list-cell:filled:even {","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: #f8f8f8;","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"aryagiat"},"content":".list-cell:filled:odd {","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"aryagiat"},"content":".list-cell:filled:selected {","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: #e6e5e5;","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"aryagiat"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"aryagiat"},"content":"    -fx-border-color: #e6e5e5;","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"aryagiat"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"aryagiat"},"content":".list-cell .label {","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: #1b2934;","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"aryagiat"},"content":".cell_big_label {","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"aryagiat"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"aryagiat"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"aryagiat"},"content":".cell_small_label {","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"aryagiat"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"aryagiat"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"aryagiat"},"content":".stack-pane {","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"aryagiat"},"content":"     -fx-background-color: derive(#2f79b9, 20%);","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"aryagiat"},"content":".pane-with-border {","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"aryagiat"},"content":"     -fx-background-color: derive(#002970, 20%);","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"aryagiat"},"content":"     -fx-border-color: derive(#002970, 10%);","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"aryagiat"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"aryagiat"},"content":".status-bar {","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: derive(#2f79b9, 30%);","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"aryagiat"},"content":".result-display {","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: #002970;","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"aryagiat"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"aryagiat"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"aryagiat"},"content":".result-display .label {","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"ryanpeh"},"content":".question-display {","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"ryanpeh"},"content":"    -fx-background-color: #002970;","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"ryanpeh"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"ryanpeh"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"ryanpeh"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"ryanpeh"},"content":"    -fx-text-alignment: center;","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"aryagiat"},"content":".status-bar .label {","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"aryagiat"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"aryagiat"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"aryagiat"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"aryagiat"},"content":".status-bar-with-border {","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: derive(#ffa500, 30%);","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"aryagiat"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"aryagiat"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"aryagiat"},"content":".status-bar-with-border .label {","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"aryagiat"},"content":".grid-pane {","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"aryagiat"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"aryagiat"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"aryagiat"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"aryagiat"},"content":".context-menu {","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: derive(#ffa500, 50%);","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"aryagiat"},"content":".context-menu .label {","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"aryagiat"},"content":".menu-bar {","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: derive(#002970, 20%);","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"aryagiat"},"content":".menu-bar .label {","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"aryagiat"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"aryagiat"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"aryagiat"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"aryagiat"},"content":".menu .left-container {","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: black;","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"aryagiat"},"content":"/*","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"aryagiat"},"content":" * Metro style Push Button","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"aryagiat"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"aryagiat"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"aryagiat"},"content":".button {","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"aryagiat"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"aryagiat"},"content":"    -fx-border-color: #ffa500;","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"aryagiat"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"aryagiat"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: #ffa500;","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"aryagiat"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"aryagiat"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2021-10-20"},{"lineNumber":232,"author":{"gitId":"aryagiat"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":235,"author":{"gitId":"aryagiat"},"content":".button:hover {","lastModifiedDate":"2021-10-20"},{"lineNumber":236,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2021-10-20"},{"lineNumber":237,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":238,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"aryagiat"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"aryagiat"},"content":"  -fx-background-color: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":241,"author":{"gitId":"aryagiat"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2021-10-20"},{"lineNumber":242,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":244,"author":{"gitId":"aryagiat"},"content":".button:focused {","lastModifiedDate":"2021-10-20"},{"lineNumber":245,"author":{"gitId":"aryagiat"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2021-10-20"},{"lineNumber":246,"author":{"gitId":"aryagiat"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"aryagiat"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2021-10-20"},{"lineNumber":248,"author":{"gitId":"aryagiat"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"aryagiat"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":251,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":252,"author":{"gitId":"aryagiat"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"aryagiat"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2021-10-20"},{"lineNumber":254,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-10-20"},{"lineNumber":255,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":256,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":257,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":258,"author":{"gitId":"aryagiat"},"content":".button:default {","lastModifiedDate":"2021-10-20"},{"lineNumber":259,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2021-10-20"},{"lineNumber":260,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2021-10-20"},{"lineNumber":261,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":262,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":263,"author":{"gitId":"aryagiat"},"content":".button:default:hover {","lastModifiedDate":"2021-10-20"},{"lineNumber":264,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2021-10-20"},{"lineNumber":265,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":266,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":267,"author":{"gitId":"aryagiat"},"content":".dialog-pane {","lastModifiedDate":"2021-10-20"},{"lineNumber":268,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: #ffa500;","lastModifiedDate":"2021-10-20"},{"lineNumber":269,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":270,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":271,"author":{"gitId":"aryagiat"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2021-10-20"},{"lineNumber":272,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: #ffa500;","lastModifiedDate":"2021-10-20"},{"lineNumber":273,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":274,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":275,"author":{"gitId":"aryagiat"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"aryagiat"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-10-20"},{"lineNumber":277,"author":{"gitId":"aryagiat"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-10-20"},{"lineNumber":278,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":279,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":280,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":281,"author":{"gitId":"aryagiat"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2021-10-20"},{"lineNumber":282,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: derive(#ffa500, 25%);","lastModifiedDate":"2021-10-20"},{"lineNumber":283,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":284,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":285,"author":{"gitId":"aryagiat"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2021-10-20"},{"lineNumber":286,"author":{"gitId":"aryagiat"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2021-10-20"},{"lineNumber":287,"author":{"gitId":"aryagiat"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2021-10-20"},{"lineNumber":288,"author":{"gitId":"aryagiat"},"content":"    -fx-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":289,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":290,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":291,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":292,"author":{"gitId":"aryagiat"},"content":".scroll-bar {","lastModifiedDate":"2021-10-20"},{"lineNumber":293,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: derive(#f1f1f1, 0%);","lastModifiedDate":"2021-10-20"},{"lineNumber":294,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":295,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":296,"author":{"gitId":"aryagiat"},"content":".scroll-bar .thumb {","lastModifiedDate":"2021-10-20"},{"lineNumber":297,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: derive(#c1c1c1, 0%);","lastModifiedDate":"2021-10-20"},{"lineNumber":298,"author":{"gitId":"aryagiat"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2021-10-20"},{"lineNumber":299,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":300,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":301,"author":{"gitId":"aryagiat"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2021-10-20"},{"lineNumber":302,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-20"},{"lineNumber":303,"author":{"gitId":"aryagiat"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":304,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":305,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":306,"author":{"gitId":"aryagiat"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2021-10-20"},{"lineNumber":307,"author":{"gitId":"aryagiat"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2021-10-20"},{"lineNumber":308,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":309,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":310,"author":{"gitId":"aryagiat"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2021-10-20"},{"lineNumber":311,"author":{"gitId":"aryagiat"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2021-10-20"},{"lineNumber":312,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":313,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":314,"author":{"gitId":"aryagiat"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2021-10-20"},{"lineNumber":315,"author":{"gitId":"aryagiat"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":316,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":317,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":318,"author":{"gitId":"aryagiat"},"content":"#cardPane {","lastModifiedDate":"2021-10-20"},{"lineNumber":319,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-20"},{"lineNumber":320,"author":{"gitId":"aryagiat"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":321,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":322,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":323,"author":{"gitId":"aryagiat"},"content":"#commandTypeLabel {","lastModifiedDate":"2021-10-20"},{"lineNumber":324,"author":{"gitId":"aryagiat"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2021-10-20"},{"lineNumber":325,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2021-10-20"},{"lineNumber":326,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":327,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":328,"author":{"gitId":"aryagiat"},"content":"#commandTextField {","lastModifiedDate":"2021-10-20"},{"lineNumber":329,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2021-10-20"},{"lineNumber":330,"author":{"gitId":"aryagiat"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":331,"author":{"gitId":"aryagiat"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2021-10-20"},{"lineNumber":332,"author":{"gitId":"aryagiat"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":333,"author":{"gitId":"aryagiat"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":334,"author":{"gitId":"aryagiat"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-20"},{"lineNumber":335,"author":{"gitId":"aryagiat"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-10-20"},{"lineNumber":336,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":337,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":338,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":339,"author":{"gitId":"aryagiat"},"content":"#filterField, #questionListPanel, #personWebpage {","lastModifiedDate":"2021-10-20"},{"lineNumber":340,"author":{"gitId":"aryagiat"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2021-10-20"},{"lineNumber":341,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":342,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":343,"author":{"gitId":"aryagiat"},"content":"#resultDisplay .content {","lastModifiedDate":"2021-10-20"},{"lineNumber":344,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: transparent, #002970, transparent, #002970;","lastModifiedDate":"2021-10-20"},{"lineNumber":345,"author":{"gitId":"aryagiat"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":346,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":347,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":348,"author":{"gitId":"ryanpeh"},"content":"#questionDisplay .content {","lastModifiedDate":"2021-10-22"},{"lineNumber":349,"author":{"gitId":"ryanpeh"},"content":"    -fx-background-color: transparent, #002970, transparent, #002970;","lastModifiedDate":"2021-10-22"},{"lineNumber":350,"author":{"gitId":"ryanpeh"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":351,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":352,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":353,"author":{"gitId":"aryagiat"},"content":"#tags {","lastModifiedDate":"2021-10-20"},{"lineNumber":354,"author":{"gitId":"aryagiat"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-10-20"},{"lineNumber":355,"author":{"gitId":"aryagiat"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-10-20"},{"lineNumber":356,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":357,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":358,"author":{"gitId":"aryagiat"},"content":"#tags .label {","lastModifiedDate":"2021-10-20"},{"lineNumber":359,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-20"},{"lineNumber":360,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: #efe197;","lastModifiedDate":"2021-10-21"},{"lineNumber":361,"author":{"gitId":"aryagiat"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-20"},{"lineNumber":362,"author":{"gitId":"aryagiat"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-20"},{"lineNumber":363,"author":{"gitId":"aryagiat"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-20"},{"lineNumber":364,"author":{"gitId":"aryagiat"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-20"},{"lineNumber":365,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":366,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":367,"author":{"gitId":"aryagiat"},"content":"#choices {","lastModifiedDate":"2021-10-20"},{"lineNumber":368,"author":{"gitId":"aryagiat"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-10-20"},{"lineNumber":369,"author":{"gitId":"aryagiat"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-10-20"},{"lineNumber":370,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":371,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":372,"author":{"gitId":"aryagiat"},"content":"#choices .label {","lastModifiedDate":"2021-10-20"},{"lineNumber":373,"author":{"gitId":"aryagiat"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":374,"author":{"gitId":"aryagiat"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-20"},{"lineNumber":375,"author":{"gitId":"aryagiat"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-20"},{"lineNumber":376,"author":{"gitId":"aryagiat"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-20"},{"lineNumber":377,"author":{"gitId":"aryagiat"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2021-10-20"},{"lineNumber":378,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":379,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":380,"author":{"gitId":"aryagiat"},"content":".correct-choice-bg {","lastModifiedDate":"2021-10-20"},{"lineNumber":381,"author":{"gitId":"neojxuan"},"content":"    -fx-background-color: #49ab62;","lastModifiedDate":"2021-10-24"},{"lineNumber":382,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":383,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":384,"author":{"gitId":"aryagiat"},"content":".wrong-choice-bg {","lastModifiedDate":"2021-10-20"},{"lineNumber":385,"author":{"gitId":"aryagiat"},"content":"    -fx-background-color: #ffa500;","lastModifiedDate":"2021-10-20"},{"lineNumber":386,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":387,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":388,"author":{"gitId":"ryanpeh"},"content":".quiz-choice:disabled {","lastModifiedDate":"2021-10-22"},{"lineNumber":389,"author":{"gitId":"ryanpeh"},"content":"    -fx-max-height: Infinity;","lastModifiedDate":"2021-10-23"},{"lineNumber":390,"author":{"gitId":"ryanpeh"},"content":"    -fx-max-width: Infinity;","lastModifiedDate":"2021-10-23"},{"lineNumber":391,"author":{"gitId":"ryanpeh"},"content":"    -fx-background-color: whitesmoke;","lastModifiedDate":"2021-10-23"},{"lineNumber":392,"author":{"gitId":"ryanpeh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-23"},{"lineNumber":393,"author":{"gitId":"ryanpeh"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":394,"author":{"gitId":"ryanpeh"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-10-23"},{"lineNumber":395,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":396,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":397,"author":{"gitId":"ryanpeh"},"content":".quiz-choice-correct:disabled {","lastModifiedDate":"2021-10-22"},{"lineNumber":398,"author":{"gitId":"ryanpeh"},"content":"    -fx-background-color: darkgreen;","lastModifiedDate":"2021-10-22"},{"lineNumber":399,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":400,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":401,"author":{"gitId":"ryanpeh"},"content":".quiz-choice-incorrect:disabled {","lastModifiedDate":"2021-10-22"},{"lineNumber":402,"author":{"gitId":"ryanpeh"},"content":"    -fx-background-color: darkred;","lastModifiedDate":"2021-10-22"},{"lineNumber":403,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"neojxuan":1,"aryagiat":373,"ryanpeh":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"         title\u003d\"SmartNUS\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"        \u003cURL value\u003d\"@LightTheme.css\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"        \u003cURL value\u003d\"@LightExtensions.css\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"        \u003cVBox fx:id\u003d\"questionList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"          \u003cStackPane fx:id\u003d\"questionListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"neojxuan":3,"aryagiat":2,"-":56}},{"path":"src/main/resources/view/McqChoiceGrid.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"\u003cGridPane id\u003d\"mcqGrid\" fx:id\u003d\"mcqGrid\" alignment\u003d\"CENTER\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10.0\" percentWidth\u003d\"50.0\"/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10.0\" percentWidth\u003d\"50.0\"/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"        \u003cRowConstraints vgrow\u003d\"ALWAYS\" minHeight\u003d\"10.0\" percentHeight\u003d\"50.0\"/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"        \u003cRowConstraints vgrow\u003d\"ALWAYS\" minHeight\u003d\"10.0\" percentHeight\u003d\"50.0\"/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"        \u003cButton fx:id\u003d\"optionA\" mnemonicParsing\u003d\"false\" styleClass\u003d\"quiz-choice\" text\u003d\"\\$optionA\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"        \u003cButton fx:id\u003d\"optionB\" mnemonicParsing\u003d\"false\" styleClass\u003d\"quiz-choice\" text\u003d\"\\$optionB\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"        \u003cButton fx:id\u003d\"optionC\" mnemonicParsing\u003d\"false\" styleClass\u003d\"quiz-choice\" text\u003d\"\\$optionC\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"        \u003cButton fx:id\u003d\"optionD\" mnemonicParsing\u003d\"false\" styleClass\u003d\"quiz-choice\" text\u003d\"\\$optionD\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"ryanpeh":23}},{"path":"src/main/resources/view/QuestionDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"  \u003cTextArea fx:id\u003d\"questionDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"ryanpeh":8}},{"path":"src/main/resources/view/QuestionListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"      \u003cLabel fx:id\u003d\"importance\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$importance\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"      \u003cLabel fx:id\u003d\"statistic\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$statistic\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"      \u003cHBox  spacing\u003d\"5\" fx:id\u003d\"choices\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":2,"aryagiat":1,"-":27}},{"path":"src/main/resources/view/QuestionListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"  \u003cListView fx:id\u003d\"questionListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":1,"-":7}},{"path":"src/main/resources/view/QuizWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"         title\u003d\"SmartNUS\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"  \u003cicons\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"  \u003cscene\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"    \u003cScene\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"ryanpeh"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"ryanpeh"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"ryanpeh"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"                   minHeight\u003d\"80\" prefHeight\u003d\"80\" maxHeight\u003d\"80\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"ryanpeh"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"ryanpeh"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"questionDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"ryanpeh"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"ryanpeh"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"ryanpeh"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"ryanpeh"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"ryanpeh"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"ryanpeh"},"content":"        \u003cVBox fx:id\u003d\"choiceGrid\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"ryanpeh"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"ryanpeh"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"ryanpeh"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"ryanpeh"},"content":"          \u003cStackPane fx:id\u003d\"choiceGridPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"ryanpeh"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"ryanpeh"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"ryanpeh"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"ryanpeh"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"ryanpeh"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"ryanpeh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"ryanpeh":68}},{"path":"src/main/resources/view/TfqChoiceGrid.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"\u003cGridPane id\u003d\"mcqGrid\" fx:id\u003d\"mcqGrid\" alignment\u003d\"CENTER\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10.0\" percentWidth\u003d\"50.0\"/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10.0\" percentWidth\u003d\"50.0\"/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"        \u003cRowConstraints vgrow\u003d\"ALWAYS\" minHeight\u003d\"10.0\" percentHeight\u003d\"100.0\"/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"      \u003cButton fx:id\u003d\"optionTrue\" mnemonicParsing\u003d\"false\" styleClass\u003d\"quiz-choice\" text\u003d\"True\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"      \u003cButton fx:id\u003d\"optionFalse\" mnemonicParsing\u003d\"false\" styleClass\u003d\"quiz-choice\" text\u003d\"False\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"ryanpeh":20}},{"path":"src/test/data/JsonSerializableSmartNusTest/duplicateQuestionSmartNus.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"  \"questions\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"    \"importance\": \"1\",","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"    \"importance\": \"1\"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"neojxuan":3,"-":7}},{"path":"src/test/data/JsonSerializableSmartNusTest/invalidQuestionSmartNus.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"  \"questions\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"    \"importance\": \"4\"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"neojxuan":2,"-":4}},{"path":"src/test/data/JsonSerializableSmartNusTest/typicalQuestionsSmartNus.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"  \"_comment\": \"SmartNus save file which contains the same Question values as in TypicalQuestions#getTypicalSmartNus()\",","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"  \"questions\" : [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"    \"importance\" : \"1\",","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"    \"importance\" : \"2\",","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"    \"importance\" : \"3\",","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"    \"importance\" : \"1\",","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"    \"importance\" : \"2\",","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"    \"importance\" : \"3\",","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"    \"importance\" : \"1\",","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"  }, {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"    \"name\" : \"What is 1+1?\",","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"    \"importance\" : \"1\",","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"    \"choices\" : [ {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"      \"title\" : \"2\",","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"      \"isCorrect\" : true","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"    }, {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"      \"title\" : \"1\",","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"      \"isCorrect\" : false","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"    }, {","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"      \"title\" : \"4\",","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"      \"isCorrect\" : false","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"    }, {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"      \"title\" : \"2\",","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"      \"isCorrect\" : false","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"    } ],","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"    \"questionType\" : 0,","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"    \"attemptCount\" : 0,","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"    \"correctCount\" : 0","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"  }, {","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"    \"name\" : \"Is 1+1 \u003d 2?\",","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"    \"importance\" : \"2\",","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"    \"tagged\" : [],","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"    \"choices\" : [ {","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"neojxuan"},"content":"      \"title\" : \"True\",","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"      \"isCorrect\" : true","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"neojxuan"},"content":"    }, {","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"      \"title\" : \"False\",","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"      \"isCorrect\" : false","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"neojxuan"},"content":"    } ],","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"    \"questionType\" : 1,","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"    \"attemptCount\" : 0,","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"    \"correctCount\" : 0","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"  }","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"  ]","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"neojxuan":45,"-":22}},{"path":"src/test/data/JsonSmartNusStorageTest/invalidAndValidQuestionSmartNus.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"{","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"  \"questions\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"    \"name\": \"Valid Question\",","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"    \"importance\": \"3\"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"  }, {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"    \"name\": \"Question With Invalid Importance Field\",","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"    \"importance\": \"948asdf2424\"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"  } ]","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"neojxuan":9}},{"path":"src/test/data/JsonSmartNusStorageTest/invalidQuestionSmartNus.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"  \"questions\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"    \"name\": \" \",","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"    \"importance\": \"9482424a\"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"neojxuan":3,"-":3}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"  \"smartNusFilePath\": \"smartnus.json\"","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"neojxuan":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"  \"smartNusFilePath\": \"smartnus.json\"","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"neojxuan":1,"-":10}},{"path":"src/test/java/seedu/smartnus/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"neojxuan":1,"-":57}},{"path":"src/test/java/seedu/smartnus/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.core;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"neojxuan":1,"-":26}},{"path":"src/test/java/seedu/smartnus/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.core;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":2,"-":133}},{"path":"src/test/java/seedu/smartnus/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.core.index;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"        final Index fifthQuestionIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"        assertTrue(fifthQuestionIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"        assertTrue(fifthQuestionIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"        assertTrue(fifthQuestionIndex.equals(fifthQuestionIndex));","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"        assertFalse(fifthQuestionIndex.equals(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"        assertFalse(fifthQuestionIndex.equals(5.0f));","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"neojxuan"},"content":"        assertFalse(fifthQuestionIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"neojxuan":9,"-":51}},{"path":"src/test/java/seedu/smartnus/commons/core/theme/ThemeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.commons.core.theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"public class ThemeTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"    public void theme_test() {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"        Theme theme \u003d new Theme();","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"        assertNotNull(theme.getThemeCssFile());","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"        assertNotNull(theme.getExtensionsCssFile());","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"        assertNotNull(theme.toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"    public void light_theme_test() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"        Theme theme \u003d new LightTheme();","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"        assertNotNull(theme.getThemeCssFile());","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"        assertNotNull(theme.getExtensionsCssFile());","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"        assertNotNull(theme.toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"    public void dark_theme_test() {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        Theme theme \u003d new DarkTheme();","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"        assertNotNull(theme.getThemeCssFile());","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"        assertNotNull(theme.getExtensionsCssFile());","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"        assertNotNull(theme.toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"    public void equals_test() {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"        Theme theme1 \u003d new LightTheme();","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"        Theme theme2 \u003d new DarkTheme();","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"        Theme theme3 \u003d new LightTheme();","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"        assertEquals(theme1, theme3);","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"        assertNotEquals(theme1, theme2);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"        assertNotEquals(null, theme1);","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"aryagiat":44}},{"path":"src/test/java/seedu/smartnus/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.util;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"neojxuan":2,"-":34}},{"path":"src/test/java/seedu/smartnus/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.util;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"neojxuan":3,"-":105}},{"path":"src/test/java/seedu/smartnus/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.util;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.Config;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"neojxuan":4,"-":112}},{"path":"src/test/java/seedu/smartnus/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.util;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":2,"-":21}},{"path":"src/test/java/seedu/smartnus/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.util;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.SerializableTestClass;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.TestUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":3,"-":42}},{"path":"src/test/java/seedu/smartnus/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.commons.util;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"neojxuan":2,"-":141}},{"path":"src/test/java/seedu/smartnus/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_QUESTION_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.ANSWER_DESC_1;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.IMPORTANCE_DESC_AMY;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.OPTION_DESC_1;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.OPTION_DESC_3;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.OPTION_DESC_4;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.AMY;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.LightTheme;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.Theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.CommandResult;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.ListCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.questions.AddMcqCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.storage.JsonSmartNusStorage;","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.storage.StorageManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.QuestionBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"        JsonSmartNusStorage smartNusStorage \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"                new JsonSmartNusStorage(temporaryFolder.resolve(\"smartNus.json\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"        StorageManager storage \u003d new StorageManager(smartNusStorage, userPrefsStorage);","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_QUESTION_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"Agentum07"},"content":"        // Setup LogicManager with JsonSmartNusIoExceptionThrowingStub","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"        JsonSmartNusStorage smartNusStorage \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"                new JsonSmartNusIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionSmartNus.json\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"neojxuan"},"content":"        StorageManager storage \u003d new StorageManager(smartNusStorage, userPrefsStorage);","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"neojxuan"},"content":"        String addMcqCommand \u003d AddMcqCommand.COMMAND_WORD + NAME_DESC_AMY + ANSWER_DESC_1","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"neojxuan"},"content":"                + OPTION_DESC_1 + OPTION_DESC_3 + OPTION_DESC_4 + IMPORTANCE_DESC_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"neojxuan"},"content":"        Question expectedQuestion \u003d new QuestionBuilder(AMY).withTags().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"neojxuan"},"content":"        expectedModel.addQuestion(expectedQuestion);","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"neojxuan"},"content":"        assertCommandFailure(addMcqCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"neojxuan"},"content":"    public void getFilteredQuestionList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"neojxuan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredQuestionList().remove(0));","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"neojxuan"},"content":"    public void getFilteredQuizQuestionList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"neojxuan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredQuizQuestionList().remove(0));","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"aryagiat"},"content":"    public void theme_test() {","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"aryagiat"},"content":"        logic.setTheme(new Theme());","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"aryagiat"},"content":"        assertEquals(new LightTheme(), logic.getTheme());","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"neojxuan"},"content":"        Model expectedModel \u003d new ModelManager(model.getSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"Agentum07"},"content":"    private static class JsonSmartNusIoExceptionThrowingStub extends JsonSmartNusStorage {","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"Agentum07"},"content":"        private JsonSmartNusIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"neojxuan"},"content":"        public void saveSmartNus(ReadOnlySmartNus smartNus, Path filePath) throws IOException {","lastModifiedDate":"2021-10-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"neojxuan":44,"aryagiat":6,"-":124,"Agentum07":3}},{"path":"src/test/java/seedu/smartnus/logic/commands/AddMcqCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.getTypicalSmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.questions.AddMcqCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.QuestionBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":" * Contains integration tests (interaction with the Model) for {@code AddMcqCommand}.","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"public class AddMcqCommandIntegrationTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"        model \u003d new ModelManager(getTypicalSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"    public void execute_newQuestion_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"        Question validQuestion \u003d new QuestionBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"        Model expectedModel \u003d new ModelManager(model.getSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"        expectedModel.addQuestion(validQuestion);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"        assertCommandSuccess(new AddMcqCommand(validQuestion), model,","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"                String.format(AddMcqCommand.MESSAGE_SUCCESS, validQuestion), expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"    public void execute_duplicateQuestion_throwsCommandException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"        Question questionInList \u003d model.getSmartNus().getQuestionList().get(0);","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"        assertCommandFailure(new AddMcqCommand(questionInList), model, AddMcqCommand.MESSAGE_DUPLICATE_QUESTION);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"neojxuan":22,"-":24}},{"path":"src/test/java/seedu/smartnus/logic/commands/AddMcqCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.GuiSettings;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.Theme;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.questions.AddMcqCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.questions.AddQuestionCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.SmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.QuestionBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"class AddMcqCommandTest {","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"    public void constructor_nullQuestion_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddMcqCommand(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"    public void execute_questionAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"        AddMcqCommandTest.ModelStubAcceptingQuestionAdded modelStub \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"                new AddMcqCommandTest.ModelStubAcceptingQuestionAdded();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"        Question validQuestion \u003d new QuestionBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"        CommandResult commandResult \u003d new AddMcqCommand(validQuestion).execute(modelStub);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"        assertEquals(String.format(AddMcqCommand.MESSAGE_SUCCESS, validQuestion), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"        assertEquals(Arrays.asList(validQuestion), modelStub.questionsAdded);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"    public void execute_duplicateQuestion_throwsCommandException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"        Question validQuestion \u003d new QuestionBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"cedricongjh"},"content":"        AddMcqCommand addCommand \u003d new AddMcqCommand(validQuestion);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"cedricongjh"},"content":"        AddMcqCommandTest.ModelStub modelStub \u003d new AddMcqCommandTest.ModelStubWithQuestion(validQuestion);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"cedricongjh"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"                AddQuestionCommand.MESSAGE_DUPLICATE_QUESTION, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"     * A Model stub that contains a single question.","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"cedricongjh"},"content":"    private class ModelStubWithQuestion extends AddMcqCommandTest.ModelStub {","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"cedricongjh"},"content":"        private final Question question;","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"cedricongjh"},"content":"        ModelStubWithQuestion(Question question) {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"cedricongjh"},"content":"            requireNonNull(question);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"cedricongjh"},"content":"            this.question \u003d question;","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"cedricongjh"},"content":"        public boolean hasQuestion(Question question) {","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"cedricongjh"},"content":"            requireNonNull(question);","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"cedricongjh"},"content":"            return this.question.isSameQuestion(question);","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"cedricongjh"},"content":"    public void equals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"cedricongjh"},"content":"        Question alice \u003d new QuestionBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"cedricongjh"},"content":"        Question bob \u003d new QuestionBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"cedricongjh"},"content":"        AddMcqCommand addAliceCommand \u003d new AddMcqCommand(alice);","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"cedricongjh"},"content":"        AddMcqCommand addBobCommand \u003d new AddMcqCommand(bob);","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"cedricongjh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"cedricongjh"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"cedricongjh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"cedricongjh"},"content":"        AddMcqCommand addAliceCommandCopy \u003d new AddMcqCommand(alice);","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"cedricongjh"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"cedricongjh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"cedricongjh"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"cedricongjh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"cedricongjh"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"cedricongjh"},"content":"        // different question -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"cedricongjh"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"cedricongjh"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"cedricongjh"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"cedricongjh"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"cedricongjh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"cedricongjh"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"cedricongjh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"cedricongjh"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"cedricongjh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"cedricongjh"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"cedricongjh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"neojxuan"},"content":"        public Path getSmartNusFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":125,"author":{"gitId":"cedricongjh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"neojxuan"},"content":"        public void setSmartNusFilePath(Path smartNusFilePath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":130,"author":{"gitId":"cedricongjh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"cedricongjh"},"content":"        public void addQuestion(Question question) {","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"cedricongjh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"neojxuan"},"content":"        public void setSmartNus(ReadOnlySmartNus smartNus) {","lastModifiedDate":"2021-10-15"},{"lineNumber":140,"author":{"gitId":"cedricongjh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"neojxuan"},"content":"        public ReadOnlySmartNus getSmartNus() {","lastModifiedDate":"2021-10-15"},{"lineNumber":145,"author":{"gitId":"cedricongjh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"cedricongjh"},"content":"        public boolean hasQuestion(Question question) {","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"cedricongjh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"cedricongjh"},"content":"        public void deleteQuestion(Question target) {","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"cedricongjh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"cedricongjh"},"content":"        public void setQuestion(Question target, Question editedQuestion) {","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"cedricongjh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"cedricongjh"},"content":"        public ObservableList\u003cQuestion\u003e getFilteredQuestionList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"cedricongjh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"aryagiat"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"aryagiat"},"content":"        public ObservableList\u003cQuestion\u003e getFilteredQuizQuestionList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"aryagiat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"cedricongjh"},"content":"        public void updateFilteredQuestionList(Predicate\u003cQuestion\u003e predicate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"cedricongjh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"aryagiat"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"aryagiat"},"content":"        public void setTheme(Theme theme) {","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"aryagiat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"aryagiat"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"aryagiat"},"content":"        public Theme getTheme() {","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"aryagiat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"aryagiat"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"aryagiat"},"content":"        public void updateFilteredQuizQuestionList(Predicate\u003cQuestion\u003e predicate) {","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"aryagiat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"aryagiat"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":194,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":195,"author":{"gitId":"cedricongjh"},"content":"     * A Model stub that always accept the question being added.","lastModifiedDate":"2021-10-08"},{"lineNumber":196,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":197,"author":{"gitId":"cedricongjh"},"content":"    private class ModelStubAcceptingQuestionAdded extends AddMcqCommandTest.ModelStub {","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"cedricongjh"},"content":"        final ArrayList\u003cQuestion\u003e questionsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"cedricongjh"},"content":"        public boolean hasQuestion(Question question) {","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"cedricongjh"},"content":"            requireNonNull(question);","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"cedricongjh"},"content":"            return questionsAdded.stream().anyMatch(question::isSameQuestion);","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"cedricongjh"},"content":"        public void addQuestion(Question question) {","lastModifiedDate":"2021-10-08"},{"lineNumber":208,"author":{"gitId":"cedricongjh"},"content":"            requireNonNull(question);","lastModifiedDate":"2021-10-08"},{"lineNumber":209,"author":{"gitId":"cedricongjh"},"content":"            questionsAdded.add(question);","lastModifiedDate":"2021-10-08"},{"lineNumber":210,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":211,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":212,"author":{"gitId":"cedricongjh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":213,"author":{"gitId":"neojxuan"},"content":"        public ReadOnlySmartNus getSmartNus() {","lastModifiedDate":"2021-10-15"},{"lineNumber":214,"author":{"gitId":"neojxuan"},"content":"            return new SmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":215,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":216,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":217,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"neojxuan":18,"aryagiat":21,"cedricongjh":178}},{"path":"src/test/java/seedu/smartnus/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.getTypicalSmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.SmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"    public void execute_emptySmartNus_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"    public void execute_nonEmptySmartNus_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"        Model model \u003d new ModelManager(getTypicalSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"        expectedModel.setSmartNus(new SmartNus());","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"neojxuan":12,"-":20}},{"path":"src/test/java/seedu/smartnus/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"ryanpeh"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"neojxuan":1,"ryanpeh":5,"-":48}},{"path":"src/test/java/seedu/smartnus/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.parser.AddTfCommandParser.ANSWER_FALSE;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.parser.AddTfCommandParser.ANSWER_TRUE;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_IMPORTANCE;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.index.Index;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.SmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.EditQuestionDescriptorBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"    public static final String VALID_IMPORTANCE_AMY \u003d \"1\";","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"    public static final String VALID_IMPORTANCE_BOB \u003d \"2\";","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"    public static final String VALID_IMPORTANCE_1 \u003d \"1\";","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"    public static final String VALID_QUESTION_1 \u003d \"What is 1+1?\";","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"    public static final String VALID_QUESTION_2 \u003d \"What is 2+2?\";","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"    public static final String VALID_ANSWER_1 \u003d \"2\";","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"    public static final String VALID_ANSWER_2 \u003d \"4\";","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"    public static final String VALID_TRUE_FALSE_ANSWER_1 \u003d ANSWER_TRUE;","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"    public static final String VALID_TRUE_FALSE_ANSWER_2 \u003d ANSWER_FALSE;","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"    public static final String VALID_OPTION_1 \u003d \"1\";","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"    public static final String VALID_OPTION_3 \u003d \"3\";","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"    public static final String VALID_OPTION_4 \u003d \"4\";","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"    public static final String VALID_OPTION_5 \u003d \"5\";","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_QUESTION + VALID_NAME_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_QUESTION + VALID_NAME_BOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"    public static final String IMPORTANCE_DESC_AMY \u003d \" \" + PREFIX_IMPORTANCE + VALID_IMPORTANCE_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"    public static final String IMPORTANCE_DESC_BOB \u003d \" \" + PREFIX_IMPORTANCE + VALID_IMPORTANCE_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"cedricongjh"},"content":"    public static final String IMPORTANCE_DESC_1 \u003d \" \" + PREFIX_IMPORTANCE + VALID_IMPORTANCE_1;","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"cedricongjh"},"content":"    public static final String QUESTION_DESC_1 \u003d \" \" + PREFIX_QUESTION + VALID_QUESTION_1;","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"    public static final String QUESTION_DESC_2 \u003d \" \" + PREFIX_QUESTION + VALID_QUESTION_2;","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"    public static final String ANSWER_DESC_1 \u003d \" \" + PREFIX_ANSWER + VALID_ANSWER_1;","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"cedricongjh"},"content":"    public static final String ANSWER_DESC_2 \u003d \" \" + PREFIX_ANSWER + VALID_ANSWER_2;","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"cedricongjh"},"content":"    public static final String TRUE_ANSWER_DESC \u003d \" \" + PREFIX_ANSWER + VALID_TRUE_FALSE_ANSWER_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"cedricongjh"},"content":"    public static final String FALSE_ANSWER_DESC \u003d \" \" + PREFIX_ANSWER + VALID_TRUE_FALSE_ANSWER_2;","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"cedricongjh"},"content":"    public static final String OPTION_DESC_1 \u003d \" \" + PREFIX_OPTION + VALID_OPTION_1;","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"cedricongjh"},"content":"    public static final String OPTION_DESC_3 \u003d \" \" + PREFIX_OPTION + VALID_OPTION_3;","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"cedricongjh"},"content":"    public static final String OPTION_DESC_4 \u003d \" \" + PREFIX_OPTION + VALID_OPTION_4;","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"cedricongjh"},"content":"    public static final String OPTION_DESC_5 \u003d \" \" + PREFIX_OPTION + VALID_OPTION_5;","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"cedricongjh"},"content":"    public static final String OPTIONS_DESC_1 \u003d \" \" + OPTION_DESC_1 + OPTION_DESC_3 + OPTION_DESC_4;","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"cedricongjh"},"content":"    public static final String OPTIONS_DESC_2 \u003d OPTIONS_DESC_1 + OPTION_DESC_5;","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_QUESTION + \" \"; // empty string not allowed for names","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"    // \u0027a\u0027 not allowed in importance","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"    public static final String INVALID_IMPORTANCE_DESC \u003d \" \" + PREFIX_IMPORTANCE + \"1a\";","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"cedricongjh"},"content":"    public static final String INVALID_QUESTION_DESC \u003d \" \" + PREFIX_QUESTION; // empty string not allowed for question","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"cedricongjh"},"content":"    public static final String INVALID_ANSWER_DESC \u003d \" \" + PREFIX_ANSWER; // empty string not allowed for answer","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"cedricongjh"},"content":"    public static final String INVALID_OPTION_DESC \u003d \" \" + PREFIX_OPTION; // empty string not allowed for option","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"    public static final EditCommand.EditQuestionDescriptor DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"    public static final EditCommand.EditQuestionDescriptor DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"neojxuan"},"content":"        DESC_AMY \u003d new EditQuestionDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"                .withImportance(VALID_IMPORTANCE_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"neojxuan"},"content":"        DESC_BOB \u003d new EditQuestionDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"neojxuan"},"content":"                .withImportance(VALID_IMPORTANCE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"neojxuan"},"content":"     * - the {@code SmartNus}, filtered question list and selected question in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"neojxuan"},"content":"        SmartNus expectedSmartNus \u003d new SmartNus(actualModel.getSmartNus());","lastModifiedDate":"2021-10-15"},{"lineNumber":127,"author":{"gitId":"neojxuan"},"content":"        List\u003cQuestion\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredQuestionList());","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":130,"author":{"gitId":"neojxuan"},"content":"        assertEquals(expectedSmartNus, actualModel.getSmartNus());","lastModifiedDate":"2021-10-15"},{"lineNumber":131,"author":{"gitId":"neojxuan"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredQuestionList());","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"neojxuan"},"content":"     * Updates {@code model}\u0027s filtered list to show only the question at the given {@code targetIndex} in the","lastModifiedDate":"2021-09-25"},{"lineNumber":135,"author":{"gitId":"neojxuan"},"content":"     * {@code model}\u0027s list of questions.","lastModifiedDate":"2021-10-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"neojxuan"},"content":"    public static void showQuestionAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"neojxuan"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredQuestionList().size());","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"neojxuan"},"content":"        Question question \u003d model.getFilteredQuestionList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"neojxuan"},"content":"        final String[] splitName \u003d question.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"neojxuan"},"content":"        model.updateFilteredQuestionList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"neojxuan"},"content":"        assertEquals(1, model.getFilteredQuestionList().size());","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"neojxuan":41,"aryagiat":1,"cedricongjh":29,"-":76}},{"path":"src/test/java/seedu/smartnus/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.showQuestionAtIndex;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalIndexes.INDEX_FIRST_QUESTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalIndexes.INDEX_SECOND_QUESTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.getTypicalSmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.Messages;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.index.Index;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"    private Model model \u003d new ModelManager(getTypicalSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"        Question questionToDelete \u003d model.getFilteredQuestionList().get(INDEX_FIRST_QUESTION.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_QUESTION);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_QUESTION_SUCCESS, questionToDelete);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"        expectedModel.deleteQuestion(questionToDelete);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredQuestionList().size() + 1);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_QUESTION_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"        showQuestionAtIndex(model, INDEX_FIRST_QUESTION);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"        Question questionToDelete \u003d model.getFilteredQuestionList().get(INDEX_FIRST_QUESTION.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_QUESTION);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_QUESTION_SUCCESS, questionToDelete);","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"        Model expectedModel \u003d new ModelManager(model.getSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"        expectedModel.deleteQuestion(questionToDelete);","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"neojxuan"},"content":"        showNoQuestion(expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"        showQuestionAtIndex(model, INDEX_FIRST_QUESTION);","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_QUESTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"        // ensures that outOfBoundIndex is still in bounds of the SmartNus\u0027s question list","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSmartNus().getQuestionList().size());","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_QUESTION_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_QUESTION);","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"neojxuan"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_QUESTION);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"neojxuan"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_QUESTION);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"neojxuan"},"content":"        // different question -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"neojxuan"},"content":"     * Updates {@code model}\u0027s filtered list to show no question.","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"neojxuan"},"content":"    private void showNoQuestion(Model model) {","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"neojxuan"},"content":"        model.updateFilteredQuestionList(p -\u003e false);","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"neojxuan"},"content":"        assertTrue(model.getFilteredQuestionList().isEmpty());","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"neojxuan":41,"-":68}},{"path":"src/test/java/seedu/smartnus/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_IMPORTANCE_BOB;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.showQuestionAtIndex;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalIndexes.INDEX_FIRST_QUESTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalIndexes.INDEX_SECOND_QUESTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.getTypicalSmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.Messages;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.index.Index;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.EditCommand.EditQuestionDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.SmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.MultipleChoiceQuestion;","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.TrueFalseQuestion;","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.EditQuestionDescriptorBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.QuestionBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.TypicalQuestions;","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"    private Model model \u003d new ModelManager(getTypicalSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"    public void execute_allFieldsSpecifiedUnfilteredListEditMcq_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"        Question editedQuestion \u003d new QuestionBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"        EditQuestionDescriptor descriptor \u003d new EditQuestionDescriptorBuilder(editedQuestion).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_QUESTION, descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_QUESTION_SUCCESS, editedQuestion);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"        Model expectedModel \u003d new ModelManager(new SmartNus(model.getSmartNus()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"        expectedModel.setQuestion(model.getFilteredQuestionList().get(0), editedQuestion);","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"    public void execute_someFieldsSpecifiedUnfilteredListEditTf_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"neojxuan"},"content":"        Index indexLastQuestion \u003d Index.fromOneBased(model.getFilteredQuestionList().size());","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"        Question lastQuestion \u003d model.getFilteredQuestionList().get(indexLastQuestion.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"        QuestionBuilder questionInList \u003d new QuestionBuilder(lastQuestion);","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"        Question editedQuestion \u003d questionInList.withName(VALID_NAME_BOB).withImportance(VALID_IMPORTANCE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"                .withTags(VALID_TAG_HUSBAND).buildTrueFalse();","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"        EditQuestionDescriptor descriptor \u003d new EditQuestionDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"                .withImportance(VALID_IMPORTANCE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastQuestion, descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_QUESTION_SUCCESS, editedQuestion);","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"neojxuan"},"content":"        Model expectedModel \u003d new ModelManager(new SmartNus(model.getSmartNus()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"neojxuan"},"content":"        expectedModel.setQuestion(lastQuestion, editedQuestion);","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"neojxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_QUESTION, new EditQuestionDescriptor());","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"neojxuan"},"content":"        Question editedQuestion \u003d model.getFilteredQuestionList().get(INDEX_FIRST_QUESTION.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_QUESTION_SUCCESS, editedQuestion);","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"neojxuan"},"content":"        Model expectedModel \u003d new ModelManager(new SmartNus(model.getSmartNus()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"neojxuan"},"content":"        showQuestionAtIndex(model, INDEX_FIRST_QUESTION);","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"neojxuan"},"content":"        Question questionInFilteredList \u003d model.getFilteredQuestionList().get(INDEX_FIRST_QUESTION.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"neojxuan"},"content":"        Question editedQuestion \u003d new QuestionBuilder(questionInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"neojxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_QUESTION,","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"neojxuan"},"content":"                new EditQuestionDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"neojxuan"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_QUESTION_SUCCESS, editedQuestion);","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"neojxuan"},"content":"        Model expectedModel \u003d new ModelManager(new SmartNus(model.getSmartNus()), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"neojxuan"},"content":"        expectedModel.setQuestion(model.getFilteredQuestionList().get(0), editedQuestion);","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"neojxuan"},"content":"    public void execute_duplicateQuestionUnfilteredList_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"neojxuan"},"content":"        Question firstQuestion \u003d model.getFilteredQuestionList().get(INDEX_FIRST_QUESTION.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"neojxuan"},"content":"        EditCommand.EditQuestionDescriptor descriptor \u003d new EditQuestionDescriptorBuilder(firstQuestion).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"neojxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_QUESTION, descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"neojxuan"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_QUESTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"neojxuan"},"content":"    public void execute_duplicateQuestionFilteredList_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"neojxuan"},"content":"        showQuestionAtIndex(model, INDEX_FIRST_QUESTION);","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"neojxuan"},"content":"        // edit question in filtered list into a duplicate in SmartNus","lastModifiedDate":"2021-10-15"},{"lineNumber":123,"author":{"gitId":"neojxuan"},"content":"        Question questionInList \u003d model.getSmartNus().getQuestionList().get(INDEX_SECOND_QUESTION.getZeroBased());","lastModifiedDate":"2021-10-15"},{"lineNumber":124,"author":{"gitId":"neojxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_QUESTION,","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"neojxuan"},"content":"                new EditQuestionDescriptorBuilder(questionInList).build());","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"neojxuan"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_QUESTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"neojxuan"},"content":"    public void execute_invalidQuestionIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"neojxuan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredQuestionList().size() + 1);","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"neojxuan"},"content":"        EditQuestionDescriptor descriptor \u003d new EditQuestionDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"neojxuan"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_QUESTION_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"neojxuan"},"content":"     * but smaller than size of the {@code SmartNus} question list","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"neojxuan"},"content":"    public void execute_invalidQuestionIndexFilteredList_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"neojxuan"},"content":"        showQuestionAtIndex(model, INDEX_FIRST_QUESTION);","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"neojxuan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_QUESTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"neojxuan"},"content":"        // ensures that outOfBoundIndex is still in bounds of SmartNus list","lastModifiedDate":"2021-10-15"},{"lineNumber":148,"author":{"gitId":"neojxuan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSmartNus().getQuestionList().size());","lastModifiedDate":"2021-10-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"neojxuan"},"content":"                new EditQuestionDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"neojxuan"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_QUESTION_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"neojxuan"},"content":"    public void createEditedMcq_optionsButNoAnswer_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"neojxuan"},"content":"        Index mcqIndex \u003d Index.fromOneBased(TypicalQuestions.MCQ_ONE_BASED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"neojxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(mcqIndex,","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"neojxuan"},"content":"                new EditQuestionDescriptorBuilder().withWrongChoices(\"1\", \"2\", \"3\").build());","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"neojxuan"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_NO_ANSWER);","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"neojxuan"},"content":"    public void createEditedMcq_answerNoOptions_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"neojxuan"},"content":"        Index mcqIndex \u003d Index.fromOneBased(TypicalQuestions.MCQ_ONE_BASED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"neojxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(mcqIndex,","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"neojxuan"},"content":"                new EditQuestionDescriptorBuilder().withAnswer(\"1\").build());","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"neojxuan"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_NO_OPTIONS);","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"neojxuan"},"content":"    public void createEditedMcq_invalidMcqChoices_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"neojxuan"},"content":"        Index mcqIndex \u003d Index.fromOneBased(TypicalQuestions.MCQ_ONE_BASED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"neojxuan"},"content":"        // only two wrong, one correct choice. MCQs should have three wrong, one correct choice.","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"neojxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(mcqIndex,","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"neojxuan"},"content":"                new EditQuestionDescriptorBuilder().withAnswer(\"1\").withWrongChoices(\"2\", \"3\").build());","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"neojxuan"},"content":"        assertCommandFailure(editCommand, model, MultipleChoiceQuestion.MESSAGE_VALID_MCQ);","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"neojxuan"},"content":"    public void createEditedTf_wrongChoicesPresent_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"neojxuan"},"content":"        Index tfIndex \u003d Index.fromOneBased(TypicalQuestions.TF_ONE_BASED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"neojxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(tfIndex,","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"neojxuan"},"content":"                new EditQuestionDescriptorBuilder().withWrongChoices(\"F\").build());","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"neojxuan"},"content":"        assertCommandFailure(editCommand, model, TrueFalseQuestion.MESSAGE_OPTIONS_INVALID);","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"neojxuan"},"content":"    public void createEditedTf_invalidAnswer_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"neojxuan"},"content":"        // TrueFalseQuestions can only have \"True\" or \"False\" as choice titles","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"neojxuan"},"content":"        Index tfIndex \u003d Index.fromOneBased(TypicalQuestions.TF_ONE_BASED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"neojxuan"},"content":"        Set\u003cChoice\u003e choices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"neojxuan"},"content":"        choices.addAll(List.of(new Choice(\"abc\", true), new Choice(\"False\", false)));","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"neojxuan"},"content":"        EditCommand editCommand \u003d new EditCommand(tfIndex,","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"neojxuan"},"content":"                new EditQuestionDescriptorBuilder().withTfChoices(choices).build());","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"neojxuan"},"content":"        assertCommandFailure(editCommand, model, TrueFalseQuestion.MESSAGE_ANSWER_INVALID);","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":206,"author":{"gitId":"neojxuan"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_QUESTION, DESC_AMY);","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":209,"author":{"gitId":"neojxuan"},"content":"        EditCommand.EditQuestionDescriptor copyDescriptor \u003d new EditCommand.EditQuestionDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"neojxuan"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_QUESTION, copyDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":223,"author":{"gitId":"neojxuan"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_QUESTION, DESC_AMY)));","lastModifiedDate":"2021-10-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":226,"author":{"gitId":"neojxuan"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_QUESTION, DESC_BOB)));","lastModifiedDate":"2021-10-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"neojxuan":139,"-":90}},{"path":"src/test/java/seedu/smartnus/logic/commands/EditQuestionDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_IMPORTANCE_BOB;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.EditCommand.EditQuestionDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.EditQuestionDescriptorBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"public class EditQuestionDescriptorTest {","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"        EditCommand.EditQuestionDescriptor descriptorWithSameValues \u003d new EditQuestionDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"        EditCommand.EditQuestionDescriptor editedAmy \u003d new EditQuestionDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"        // different importance -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"        editedAmy \u003d new EditQuestionDescriptorBuilder(DESC_AMY).withImportance(VALID_IMPORTANCE_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"        editedAmy \u003d new EditQuestionDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"neojxuan":15,"-":34}},{"path":"src/test/java/seedu/smartnus/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"neojxuan":5,"ryanpeh":1,"-":14}},{"path":"src/test/java/seedu/smartnus/logic/commands/FindByTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_QUESTIONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.ALICE;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.BENSON;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.DANIEL;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.getTypicalSmartNus;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.TagsContainKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":" * Contains integration tests (interaction with the Model) for {@code FindByTagCommand}.","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"public class FindByTagCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"    private Model model \u003d new ModelManager(getTypicalSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"        TagsContainKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"                new TagsContainKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"        TagsContainKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"                new TagsContainKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"        FindByTagCommand findFirstCommand \u003d new FindByTagCommand(firstPredicate);","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"        FindByTagCommand findSecondCommand \u003d new FindByTagCommand(secondPredicate);","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"        FindByTagCommand findFirstCommandCopy \u003d new FindByTagCommand(firstPredicate);","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"        // different question -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"neojxuan"},"content":"    public void execute_zeroKeywords_noQuestionFound() {","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_QUESTIONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"        TagsContainKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"neojxuan"},"content":"        FindByTagCommand command \u003d new FindByTagCommand(predicate);","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"        expectedModel.updateFilteredQuestionList(predicate);","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredQuestionList());","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"    public void execute_multipleKeywords_multipleQuestionsFound() {","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_QUESTIONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"        TagsContainKeywordsPredicate predicate \u003d preparePredicate(\"owesMoney friends\");","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"        FindByTagCommand command \u003d new FindByTagCommand(predicate);","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"        expectedModel.updateFilteredQuestionList(predicate);","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"neojxuan"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"neojxuan"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredQuestionList());","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"     * Parses {@code userInput} into a {@code TagsContainKeywordsPredicate}.","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"    private TagsContainKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"        return new TagsContainKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"neojxuan":82,"aryagiat":1}},{"path":"src/test/java/seedu/smartnus/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_QUESTIONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.CARL;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.ELLE;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.FIONA;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.getTypicalSmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"    private Model model \u003d new ModelManager(getTypicalSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"        // different question -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"neojxuan"},"content":"    public void execute_zeroKeywords_noQuestionFound() {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_QUESTIONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"        expectedModel.updateFilteredQuestionList(predicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredQuestionList());","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"    public void execute_multipleKeywords_multipleQuestionsFound() {","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_QUESTIONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"        expectedModel.updateFilteredQuestionList(predicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"neojxuan"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredQuestionList());","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"neojxuan":21,"aryagiat":1,"-":61}},{"path":"src/test/java/seedu/smartnus/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"neojxuan":5,"ryanpeh":1,"-":14}},{"path":"src/test/java/seedu/smartnus/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.showQuestionAtIndex;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalIndexes.INDEX_FIRST_QUESTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.getTypicalSmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"        model \u003d new ModelManager(getTypicalSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"        expectedModel \u003d new ModelManager(model.getSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"        showQuestionAtIndex(model, INDEX_FIRST_QUESTION);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"neojxuan":11,"-":28}},{"path":"src/test/java/seedu/smartnus/logic/commands/ThemeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.getTypicalSmartNus;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.DarkTheme;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.LightTheme;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.SmartNus;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"public class ThemeCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    private Model model \u003d new ModelManager(getTypicalSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"    public void execute_once_test() {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"        ThemeCommand themeCommand \u003d new ThemeCommand(new DarkTheme());","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"        String expectedMessage \u003d ThemeCommand.MESSAGE_SUCCESS + new DarkTheme().toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"        Model expectedModel \u003d new ModelManager(new SmartNus(model.getSmartNus()), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"        expectedModel.setTheme(new DarkTheme());","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"        assertCommandSuccess(themeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        assertEquals(new DarkTheme(), model.getTheme());","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"        themeCommand \u003d new ThemeCommand(new LightTheme());","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"        expectedMessage \u003d ThemeCommand.MESSAGE_SUCCESS + new LightTheme().toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"        expectedModel \u003d new ModelManager(new SmartNus(model.getSmartNus()), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"        expectedModel.setTheme(new LightTheme());","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"        assertCommandSuccess(themeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"        assertEquals(new LightTheme(), model.getTheme());","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"    public void double_executeDarkTest() {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"        ThemeCommand themeCommand \u003d new ThemeCommand(new DarkTheme());","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"        String expectedMessage \u003d ThemeCommand.MESSAGE_SUCCESS + new DarkTheme().toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"        Model expectedModel \u003d new ModelManager(new SmartNus(model.getSmartNus()), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"        expectedModel.setTheme(new DarkTheme());","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"        assertCommandSuccess(themeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"        assertEquals(new DarkTheme(), model.getTheme());","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"        themeCommand \u003d new ThemeCommand(new DarkTheme());","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"        expectedMessage \u003d ThemeCommand.MESSAGE_NO_CHANGE + new DarkTheme().toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"        expectedModel \u003d new ModelManager(new SmartNus(model.getSmartNus()), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"        expectedModel.setTheme(new DarkTheme());","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"        assertCommandSuccess(themeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"        assertEquals(new DarkTheme(), model.getTheme());","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"    public void double_executeLightTest() {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"        // Default is already light","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"aryagiat"},"content":"        ThemeCommand themeCommand \u003d new ThemeCommand(new LightTheme());","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"aryagiat"},"content":"        String expectedMessage \u003d ThemeCommand.MESSAGE_NO_CHANGE + new LightTheme().toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"aryagiat"},"content":"        Model expectedModel \u003d new ModelManager(new SmartNus(model.getSmartNus()), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"aryagiat"},"content":"        expectedModel.setTheme(new LightTheme());","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"aryagiat"},"content":"        assertCommandSuccess(themeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"aryagiat"},"content":"        assertEquals(new LightTheme(), model.getTheme());","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"aryagiat":66}},{"path":"src/test/java/seedu/smartnus/logic/commands/quiz/AnswerMcqCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"package seedu.smartnus.logic.commands.quiz;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_CONTINUE_QUIZ;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.logic.commands.CommandResult;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"class AnswerMcqCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"    private ReadOnlySmartNus smartNus;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"    private QuizManager quizManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"    private AnswerMcqCommand answerMcqCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"    private Model model;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"ryanpeh"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"        smartNus \u003d SampleDataUtil.getSampleSmartNus();","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"        quizManager \u003d new QuizManager(smartNus.getQuestionList());","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"        model \u003d new ModelManager(smartNus, new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"        answerMcqCommand \u003d new AnswerMcqCommand(\"a\", quizManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"ryanpeh"},"content":"    public void constructor_invalidInput_throwsAssertionError() {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"        assertThrows(AssertionError.class, () -\u003e new AnswerMcqCommand(\"e\", quizManager));","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"    public void execute_nullModel_throwsAssertionError() {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e answerMcqCommand.execute(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"    public void execute_validInput_returnsCorrectCommandResult() {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"        Question question \u003d quizManager.currQuestion();","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"        Choice correctChoice \u003d question.getCorrectChoice();","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"ryanpeh"},"content":"        int idx \u003d question.getOrderedChoices().indexOf(correctChoice);","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"ryanpeh"},"content":"        answerMcqCommand \u003d new AnswerMcqCommand(Character.toString(\"abcd\".charAt(idx)), quizManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerMcqCommand.execute(model),","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"ryanpeh"},"content":"                new CommandResult(\"Correct!\\n\" + MESSAGE_CONTINUE_QUIZ));","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"ryanpeh"},"content":"    public void execute_validInput_returnsIncorrectCommandResult() {","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"ryanpeh"},"content":"        Question question \u003d quizManager.currQuestion();","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"ryanpeh"},"content":"        Choice correctChoice \u003d question.getCorrectChoice();","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"ryanpeh"},"content":"        int idx \u003d question.getOrderedChoices().indexOf(correctChoice);","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"ryanpeh"},"content":"        answerMcqCommand \u003d new AnswerMcqCommand(Character.toString(\"dcba\".charAt(idx)), quizManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerMcqCommand.execute(model),","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"ryanpeh"},"content":"                new CommandResult(\"Incorrect. The correct answer is: \"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"ryanpeh"},"content":"                        + question.getCorrectChoice().getTitle() + \"\\n\" + MESSAGE_CONTINUE_QUIZ));","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"ryanpeh"},"content":"    public void execute_multipleInputs_returnsAlreadyAnsweredCommandResult() {","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"ryanpeh"},"content":"        answerMcqCommand \u003d new AnswerMcqCommand(\"a\", quizManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"ryanpeh"},"content":"        answerMcqCommand.execute(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerMcqCommand.execute(model),","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"ryanpeh"},"content":"                new CommandResult(\"You have already answered this question.\\n\" + MESSAGE_CONTINUE_QUIZ));","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"ryanpeh":75}},{"path":"src/test/java/seedu/smartnus/logic/commands/quiz/AnswerTfCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"package seedu.smartnus.logic.commands.quiz;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_CONTINUE_QUIZ;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.logic.commands.CommandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"class AnswerTfCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"    private ReadOnlySmartNus smartNus;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"    private QuizManager quizManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"    private AnswerTfCommand answerTfCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"    private Model model;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"ryanpeh"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"        smartNus \u003d SampleDataUtil.getSampleSmartNus();","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"        quizManager \u003d new QuizManager(smartNus.getQuestionList());","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"        model \u003d new ModelManager(smartNus, new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"        answerTfCommand \u003d new AnswerTfCommand(\"a\", quizManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"ryanpeh"},"content":"    public void constructor_invalidInput_throwsAssertionError() {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"        assertThrows(AssertionError.class, () -\u003e new AnswerMcqCommand(\"e\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"    public void execute_nullModel_throwsAssertionError() {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e answerTfCommand.execute(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"    public void execute_validInput_returnsCorrectCommandResult() {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"        quizManager.nextQuestion();","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"        Question question \u003d quizManager.nextQuestion();","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"ryanpeh"},"content":"        Choice correctChoice \u003d question.getCorrectChoice();","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"ryanpeh"},"content":"        int idx \u003d question.getOrderedChoices().indexOf(correctChoice);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"ryanpeh"},"content":"        answerTfCommand \u003d new AnswerTfCommand(Character.toString(\"tf\".charAt(idx)), quizManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerTfCommand.execute(model),","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"ryanpeh"},"content":"                new CommandResult(\"Correct!\\n\" + MESSAGE_CONTINUE_QUIZ));","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"ryanpeh"},"content":"    public void execute_validInput_returnsIncorrectCommandResult() {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"ryanpeh"},"content":"        quizManager.nextQuestion();","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"ryanpeh"},"content":"        Question question \u003d quizManager.nextQuestion();","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"ryanpeh"},"content":"        Choice correctChoice \u003d question.getCorrectChoice();","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"ryanpeh"},"content":"        int idx \u003d question.getOrderedChoices().indexOf(correctChoice);","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"ryanpeh"},"content":"        answerTfCommand \u003d new AnswerTfCommand(Character.toString(\"ft\".charAt(idx)), quizManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerTfCommand.execute(model),","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"ryanpeh"},"content":"                new CommandResult(\"Incorrect. The correct answer is: \"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"ryanpeh"},"content":"                        + question.getCorrectChoice().getTitle() + \"\\n\" + MESSAGE_CONTINUE_QUIZ));","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"ryanpeh"},"content":"    public void execute_multipleInputs_returnsAlreadyAnsweredCommandResult() {","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"ryanpeh"},"content":"        quizManager.nextQuestion();","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"ryanpeh"},"content":"        quizManager.nextQuestion();","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"ryanpeh"},"content":"        answerTfCommand \u003d new AnswerTfCommand(\"t\", quizManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"ryanpeh"},"content":"        answerTfCommand.execute(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerTfCommand.execute(model),","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"ryanpeh"},"content":"                new CommandResult(\"You have already answered this question.\\n\" + MESSAGE_CONTINUE_QUIZ));","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"ryanpeh":79}},{"path":"src/test/java/seedu/smartnus/logic/commands/quiz/NextQuestionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"package seedu.smartnus.logic.commands.quiz;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"import static seedu.smartnus.logic.commands.quiz.NextQuestionCommand.MESSAGE_END_OF_QUIZ;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"import static seedu.smartnus.logic.commands.quiz.NextQuestionCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.logic.commands.CommandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"class NextQuestionCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"    private ReadOnlySmartNus smartNus;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"    private QuizManager quizManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"    private NextQuestionCommand nextQuestionCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"    private Model model;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"ryanpeh"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"        smartNus \u003d SampleDataUtil.getSampleSmartNus();","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"        quizManager \u003d new QuizManager(smartNus.getQuestionList());","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"        model \u003d new ModelManager(smartNus, new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"        nextQuestionCommand \u003d new NextQuestionCommand(quizManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"ryanpeh"},"content":"    public void execute_returnsSuccessCommandResult() {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(nextQuestionCommand.execute(model), new CommandResult(MESSAGE_SUCCESS));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"    public void execute_returnsEndOfQuizCommandResult() {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"        while (!quizManager.isLastQuestion()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"            quizManager.nextQuestion();","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(nextQuestionCommand.execute(model), new CommandResult(MESSAGE_END_OF_QUIZ","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"                + \"\\n Here is the quiz statistic: \" + quizManager.getStatistic()));","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"ryanpeh"},"content":"    public void equals_returnsTrue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(nextQuestionCommand, new NextQuestionCommand(quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"ryanpeh":55}},{"path":"src/test/java/seedu/smartnus/logic/commands/quiz/PrevQuestionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"package seedu.smartnus.logic.commands.quiz;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"import static seedu.smartnus.logic.commands.quiz.PrevQuestionCommand.MESSAGE_START_OF_QUIZ;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"import static seedu.smartnus.logic.commands.quiz.PrevQuestionCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.logic.commands.CommandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"class PrevQuestionCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"    private ReadOnlySmartNus smartNus;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"    private QuizManager quizManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"    private PrevQuestionCommand prevQuestionCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"    private Model model;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"ryanpeh"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"ryanpeh"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"        smartNus \u003d SampleDataUtil.getSampleSmartNus();","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"        quizManager \u003d new QuizManager(smartNus.getQuestionList());","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"        model \u003d new ModelManager(smartNus, new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"        prevQuestionCommand \u003d new PrevQuestionCommand(quizManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"    public void execute_returnsSuccessCommandResult() {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"ryanpeh"},"content":"        quizManager.nextQuestion();","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(prevQuestionCommand.execute(model), new CommandResult(MESSAGE_SUCCESS));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"    public void execute_returnsStartOfQuizCommandResult() {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(prevQuestionCommand.execute(model), new CommandResult(MESSAGE_START_OF_QUIZ));","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"    public void equals_returnsTrue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(prevQuestionCommand, new PrevQuestionCommand(quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"ryanpeh":51}},{"path":"src/test/java/seedu/smartnus/logic/commands/quiz/QuizCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.logic.commands.quiz;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.getTypicalSmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.ShowAllQuestionsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.ShowQuestionIndexPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"class QuizCommandTest {","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"    private Model model;","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"    @BeforeEach","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"    public void setUp() {","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"        model \u003d new ModelManager(getTypicalSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"        expectedModel \u003d new ModelManager(model.getSmartNus(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"    void execute_startQuizWithoutArguments_success() {","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"        assertCommandSuccess(new QuizCommand(new ShowAllQuestionsPredicate()), model,","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"                QuizCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"    void execute_quizNoQuestions() {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"        assertCommandFailure(new QuizCommand(new ShowQuestionIndexPredicate(Index.fromOneBased(100))), model,","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"                QuizCommand.MESSAGE_NO_QUESTIONS);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"neojxuan":9,"aryagiat":11,"cedricongjh":20}},{"path":"src/test/java/seedu/smartnus/logic/parser/AddMcqCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.ANSWER_DESC_1;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.ANSWER_DESC_2;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.IMPORTANCE_DESC_1;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.INVALID_ANSWER_DESC;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.INVALID_IMPORTANCE_DESC;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.INVALID_OPTION_DESC;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.INVALID_QUESTION_DESC;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.OPTIONS_DESC_1;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.OPTIONS_DESC_2;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.OPTION_DESC_1;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.OPTION_DESC_3;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.QUESTION_DESC_1;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.QUESTION_DESC_2;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_ANSWER_1;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_IMPORTANCE_1;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_OPTION_1;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_OPTION_3;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_OPTION_4;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_QUESTION_1;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.questions.AddMcqCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Importance;","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.MultipleChoiceQuestion;","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Name;","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"class AddMcqCommandParserTest {","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"    private final AddMcqCommandParser parser \u003d new AddMcqCommandParser();","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"    void parse_allFieldsValid_success() {","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"        // TODO: Use question builder for this instead of generating it here","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"        List\u003cString\u003e choices \u003d Arrays.asList(VALID_OPTION_1, VALID_OPTION_3, VALID_OPTION_4);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cChoice\u003e expectedChoices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"cedricongjh"},"content":"        for (String choice: choices) {","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"cedricongjh"},"content":"            expectedChoices.add(new Choice(choice, false));","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"cedricongjh"},"content":"        expectedChoices.add(new Choice(VALID_ANSWER_1, true));","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"cedricongjh"},"content":"        Importance expectedImportance \u003d new Importance(VALID_IMPORTANCE_1);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"        Name expectedName \u003d new Name(VALID_QUESTION_1);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"cedricongjh"},"content":"        Question expectedQuestion \u003d new MultipleChoiceQuestion(expectedName, expectedImportance,","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"cedricongjh"},"content":"                new HashSet\u003c\u003e(), expectedChoices);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"cedricongjh"},"content":"        AddMcqCommand expectedCommand \u003d new AddMcqCommand(expectedQuestion);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"cedricongjh"},"content":"        // normal command with preamble whitespace","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"cedricongjh"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"cedricongjh"},"content":"                PREAMBLE_WHITESPACE + QUESTION_DESC_1 + OPTIONS_DESC_1 + ANSWER_DESC_1 + IMPORTANCE_DESC_1,","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"cedricongjh"},"content":"                expectedCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"cedricongjh"},"content":"        // accept only last argument for question","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"cedricongjh"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"cedricongjh"},"content":"                QUESTION_DESC_2 + OPTIONS_DESC_1 + ANSWER_DESC_1 + IMPORTANCE_DESC_1 + QUESTION_DESC_1,","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"cedricongjh"},"content":"                expectedCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"cedricongjh"},"content":"        // accept only last argument for answer","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"cedricongjh"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"cedricongjh"},"content":"                QUESTION_DESC_1 + ANSWER_DESC_2 + OPTIONS_DESC_1 + IMPORTANCE_DESC_1 + ANSWER_DESC_1,","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"cedricongjh"},"content":"                expectedCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"cedricongjh"},"content":"    void parse_fieldsOrPrefixMissing_failure() {","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"cedricongjh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMcqCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"cedricongjh"},"content":"        // answer missing","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, QUESTION_DESC_1 + OPTIONS_DESC_1 + IMPORTANCE_DESC_1, expectedMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"cedricongjh"},"content":"        // options missing","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, QUESTION_DESC_1 + ANSWER_DESC_1 + IMPORTANCE_DESC_1, expectedMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"cedricongjh"},"content":"        // question missing","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, ANSWER_DESC_1 + OPTIONS_DESC_1 + IMPORTANCE_DESC_1, expectedMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"cedricongjh"},"content":"        // importance missing","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, ANSWER_DESC_1 + OPTIONS_DESC_1 + QUESTION_DESC_1, expectedMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"cedricongjh"},"content":"        // answer prefix missing","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, QUESTION_DESC_1 + OPTIONS_DESC_1 + VALID_ANSWER_1, expectedMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"cedricongjh"},"content":"        // options prefix missing","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"cedricongjh"},"content":"                QUESTION_DESC_1 + VALID_OPTION_1 + VALID_OPTION_3 + VALID_OPTION_4 + ANSWER_DESC_1,","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"cedricongjh"},"content":"                expectedMessage);","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"cedricongjh"},"content":"        // question prefix missing","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, VALID_QUESTION_1 + OPTIONS_DESC_1 + ANSWER_DESC_1, expectedMessage);","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"cedricongjh"},"content":"        // importance prefix missing","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, ANSWER_DESC_1 + OPTIONS_DESC_1 + QUESTION_DESC_1 + VALID_IMPORTANCE_1,","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"cedricongjh"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"cedricongjh"},"content":"    void parse_fieldsInvalid_failure() {","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"cedricongjh"},"content":"        // TODO: Add tests for duplicate options and answer","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"cedricongjh"},"content":"        // invalid answer","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, QUESTION_DESC_1 + OPTIONS_DESC_1 + INVALID_ANSWER_DESC + IMPORTANCE_DESC_1,","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"cedricongjh"},"content":"                Choice.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"cedricongjh"},"content":"        // 1 invalid option with 2 valid","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, QUESTION_DESC_1 + OPTION_DESC_1 + INVALID_OPTION_DESC + OPTION_DESC_3","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"cedricongjh"},"content":"                + ANSWER_DESC_1 + IMPORTANCE_DESC_1, Choice.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"cedricongjh"},"content":"        // not enough options","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"cedricongjh"},"content":"                QUESTION_DESC_1 + OPTION_DESC_1 + OPTION_DESC_3 + ANSWER_DESC_1 + IMPORTANCE_DESC_1,","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"cedricongjh"},"content":"                MultipleChoiceQuestion.MESSAGE_INCORRECT_NUMBER_OF_CHOICES);","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"cedricongjh"},"content":"        // too many options","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, QUESTION_DESC_1 + ANSWER_DESC_1 + IMPORTANCE_DESC_1 + OPTIONS_DESC_2,","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"cedricongjh"},"content":"                MultipleChoiceQuestion.MESSAGE_INCORRECT_NUMBER_OF_CHOICES);","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"cedricongjh"},"content":"        // invalid question","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, INVALID_QUESTION_DESC + OPTIONS_DESC_1 + ANSWER_DESC_1 + IMPORTANCE_DESC_1,","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"cedricongjh"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"cedricongjh"},"content":"        // invalid importance","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"cedricongjh"},"content":"                QUESTION_DESC_1 + OPTIONS_DESC_1 + ANSWER_DESC_1 + INVALID_IMPORTANCE_DESC,","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"cedricongjh"},"content":"                Importance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"neojxuan":30,"cedricongjh":98}},{"path":"src/test/java/seedu/smartnus/logic/parser/AddTfCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.ANSWER_DESC_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.ANSWER_DESC_2;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.IMPORTANCE_DESC_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.INVALID_IMPORTANCE_DESC;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.INVALID_QUESTION_DESC;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.OPTIONS_DESC_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.QUESTION_DESC_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.TRUE_ANSWER_DESC;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_IMPORTANCE_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_QUESTION_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_TRUE_FALSE_ANSWER_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.model.choice.Choice.FALSE_CHOICE_TITLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.model.choice.Choice.TRUE_CHOICE_TITLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.model.question.TrueFalseQuestion.MESSAGE_ANSWER_INVALID;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.questions.AddTfCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Importance;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Name;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.TrueFalseQuestion;","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"class AddTfCommandParserTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"    private final AddTfCommandParser parser \u003d new AddTfCommandParser();","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"    void parse_allFieldsValid_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"        // TODO: Use question builder for this instead of generating it here","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cChoice\u003e expectedChoices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"        expectedChoices.add(new Choice(TRUE_CHOICE_TITLE, true));","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"        expectedChoices.add(new Choice(FALSE_CHOICE_TITLE, false));","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"        Importance expectedImportance \u003d new Importance(VALID_IMPORTANCE_1);","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"        Name expectedName \u003d new Name(VALID_QUESTION_1);","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"        Question expectedQuestion \u003d new TrueFalseQuestion(expectedName, expectedImportance,","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"                new HashSet\u003c\u003e(), expectedChoices);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"cedricongjh"},"content":"        AddTfCommand expectedCommand \u003d new AddTfCommand(expectedQuestion);","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"cedricongjh"},"content":"        // normal command with preamble whitespace","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"cedricongjh"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"cedricongjh"},"content":"                PREAMBLE_WHITESPACE + QUESTION_DESC_1 + TRUE_ANSWER_DESC + IMPORTANCE_DESC_1,","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"cedricongjh"},"content":"                expectedCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"        // accept only last argument for answer","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"cedricongjh"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"cedricongjh"},"content":"                QUESTION_DESC_1 + ANSWER_DESC_2 + OPTIONS_DESC_1 + IMPORTANCE_DESC_1 + TRUE_ANSWER_DESC,","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"cedricongjh"},"content":"                expectedCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"cedricongjh"},"content":"    void parse_fieldsOrPrefixMissing_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"cedricongjh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTfCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"cedricongjh"},"content":"        // answer missing","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, QUESTION_DESC_1 + IMPORTANCE_DESC_1, expectedMessage);","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"cedricongjh"},"content":"        // question missing","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, TRUE_ANSWER_DESC + OPTIONS_DESC_1 + IMPORTANCE_DESC_1, expectedMessage);","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"cedricongjh"},"content":"        // importance missing","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, TRUE_ANSWER_DESC + OPTIONS_DESC_1 + QUESTION_DESC_1, expectedMessage);","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"cedricongjh"},"content":"        // answer prefix missing","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, QUESTION_DESC_1 + OPTIONS_DESC_1 + VALID_TRUE_FALSE_ANSWER_1,","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"cedricongjh"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"cedricongjh"},"content":"        // question prefix missing","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, VALID_QUESTION_1 + OPTIONS_DESC_1 + TRUE_ANSWER_DESC, expectedMessage);","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"cedricongjh"},"content":"        // importance prefix missing","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, TRUE_ANSWER_DESC + OPTIONS_DESC_1 + QUESTION_DESC_1 + VALID_IMPORTANCE_1,","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"cedricongjh"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"cedricongjh"},"content":"    void parse_fieldsInvalid_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"cedricongjh"},"content":"        // invalid answer","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, QUESTION_DESC_1 + OPTIONS_DESC_1 + ANSWER_DESC_1 + IMPORTANCE_DESC_1,","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"cedricongjh"},"content":"                MESSAGE_ANSWER_INVALID);","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"cedricongjh"},"content":"        // invalid question","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, INVALID_QUESTION_DESC + TRUE_ANSWER_DESC + IMPORTANCE_DESC_1,","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"cedricongjh"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"cedricongjh"},"content":"        // invalid importance","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"cedricongjh"},"content":"                QUESTION_DESC_1 + TRUE_ANSWER_DESC + INVALID_IMPORTANCE_DESC,","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"cedricongjh"},"content":"                Importance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"cedricongjh":97}},{"path":"src/test/java/seedu/smartnus/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"neojxuan":1,"-":149}},{"path":"src/test/java/seedu/smartnus/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"neojxuan":3,"-":35}},{"path":"src/test/java/seedu/smartnus/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalIndexes.INDEX_FIRST_QUESTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_QUESTION));","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"neojxuan":7,"-":25}},{"path":"src/test/java/seedu/smartnus/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.IMPORTANCE_DESC_AMY;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.IMPORTANCE_DESC_BOB;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.INVALID_IMPORTANCE_DESC;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_IMPORTANCE_AMY;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_IMPORTANCE_BOB;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalIndexes.INDEX_FIRST_QUESTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalIndexes.INDEX_SECOND_QUESTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalIndexes.INDEX_THIRD_QUESTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.index.Index;","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.EditCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.EditCommand.EditQuestionDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Importance;","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Name;","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.EditQuestionDescriptorBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"neojxuan"},"content":"        assertParseFailure(parser, \"1 b/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":73,"author":{"gitId":"neojxuan"},"content":"        assertParseFailure(parser, \"11\" + INVALID_IMPORTANCE_DESC,","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"neojxuan"},"content":"                Importance.MESSAGE_CONSTRAINTS); // invalid importance","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"        // invalid importance followed by valid email","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"        assertParseFailure(parser, \"11\" + INVALID_IMPORTANCE_DESC, Importance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"        // valid importance followed by invalid importance. The test case for invalid importance followed by","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"        // valid importance is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"neojxuan"},"content":"        assertParseFailure(parser, \"1\" + IMPORTANCE_DESC_BOB + INVALID_IMPORTANCE_DESC,","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"neojxuan"},"content":"                Importance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Question} being edited,","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"neojxuan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_IMPORTANCE_DESC,","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"neojxuan"},"content":"        Index targetIndex \u003d INDEX_SECOND_QUESTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"neojxuan"},"content":"        String userInput \u003d targetIndex.getOneBased() + IMPORTANCE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"neojxuan"},"content":"                + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"neojxuan"},"content":"        EditQuestionDescriptor descriptor \u003d new EditQuestionDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"neojxuan"},"content":"                .withImportance(VALID_IMPORTANCE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"neojxuan"},"content":"        Index targetIndex \u003d INDEX_FIRST_QUESTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"neojxuan"},"content":"        String userInput \u003d targetIndex.getOneBased() + IMPORTANCE_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"neojxuan"},"content":"        EditQuestionDescriptor descriptor \u003d new EditQuestionDescriptorBuilder().withImportance(VALID_IMPORTANCE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"neojxuan"},"content":"                .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"neojxuan"},"content":"        Index targetIndex \u003d INDEX_THIRD_QUESTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"neojxuan"},"content":"        EditCommand.EditQuestionDescriptor descriptor \u003d new EditQuestionDescriptorBuilder()","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"neojxuan"},"content":"                .withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"neojxuan"},"content":"        // importance","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"neojxuan"},"content":"        userInput \u003d targetIndex.getOneBased() + IMPORTANCE_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"neojxuan"},"content":"        descriptor \u003d new EditQuestionDescriptorBuilder().withImportance(VALID_IMPORTANCE_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"neojxuan"},"content":"        descriptor \u003d new EditQuestionDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":147,"author":{"gitId":"neojxuan"},"content":"        Index targetIndex \u003d INDEX_FIRST_QUESTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"neojxuan"},"content":"        String userInput \u003d targetIndex.getOneBased() + IMPORTANCE_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"neojxuan"},"content":"                + TAG_DESC_FRIEND + IMPORTANCE_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"neojxuan"},"content":"                + IMPORTANCE_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"neojxuan"},"content":"        EditQuestionDescriptor descriptor \u003d new EditQuestionDescriptorBuilder().withImportance(VALID_IMPORTANCE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"neojxuan"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"neojxuan"},"content":"        Index targetIndex \u003d INDEX_FIRST_QUESTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"neojxuan"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_IMPORTANCE_DESC + IMPORTANCE_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"neojxuan"},"content":"        EditCommand.EditQuestionDescriptor descriptor \u003d new EditQuestionDescriptorBuilder()","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"neojxuan"},"content":"                .withImportance(VALID_IMPORTANCE_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"neojxuan"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_IMPORTANCE_DESC + IMPORTANCE_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"neojxuan"},"content":"        descriptor \u003d new EditQuestionDescriptorBuilder().withImportance(VALID_IMPORTANCE_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":179,"author":{"gitId":"neojxuan"},"content":"        Index targetIndex \u003d INDEX_THIRD_QUESTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"neojxuan"},"content":"        EditCommand.EditQuestionDescriptor descriptor \u003d new EditQuestionDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"neojxuan":69,"-":118}},{"path":"src/test/java/seedu/smartnus/logic/parser/FindByTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.FindByTagCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.TagsContainKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"public class FindByTagCommandParserTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"    private FindByTagCommandParser parser \u003d new FindByTagCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"    public void parse_noKeywords_throwsParseException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"                FindByTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"    public void parse_validArgs_returnsFindByTagCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"        FindByTagCommand expectedFindByTagCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"                new FindByTagCommand(new TagsContainKeywordsPredicate(Arrays.asList(\"math\", \"english\")));","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"        assertParseSuccess(parser, \"math english\", expectedFindByTagCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"        assertParseSuccess(parser, \" \\n math \\n \\t english  \\t\", expectedFindByTagCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"neojxuan":34,"aryagiat":1}},{"path":"src/test/java/seedu/smartnus/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.FindCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"neojxuan":5,"aryagiat":1,"-":28}},{"path":"src/test/java/seedu/smartnus/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.parser.AddTfCommandParser.ANSWER_FALSE;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.parser.AddTfCommandParser.ANSWER_TRUE;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.model.choice.Choice.FALSE_CHOICE_TITLE;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.model.choice.Choice.TRUE_CHOICE_TITLE;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalIndexes.INDEX_FIRST_QUESTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Importance;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Name;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"    private static final String INVALID_IMPORTANCE \u003d \"+2\";","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"    private static final String INVALID_NAME \u003d \" \";","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"    private static final String INVALID_ANSWER \u003d \" \";","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"    private static final String INVALID_CHOICE \u003d \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"    private static final String INVALID_TRUE_FALSE_ANSWER \u003d \"5\";","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"    private static final String VALID_IMPORTANCE \u003d \"1\";","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"    private static final String VALID_ANSWER \u003d \"2\";","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"    private static final String VALID_CHOICE_1 \u003d \"3\";","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"    private static final String VALID_CHOICE_2 \u003d \"4\";","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"    private static final String VALID_CHOICE_3 \u003d \"1\";","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"cedricongjh"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, () -\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"cedricongjh"},"content":"                ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"        assertEquals(INDEX_FIRST_QUESTION, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"        assertEquals(INDEX_FIRST_QUESTION, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"neojxuan"},"content":"    public void parseImportance_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseImportance(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"neojxuan"},"content":"    public void parseImportance_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"neojxuan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseImportance(INVALID_IMPORTANCE));","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"neojxuan"},"content":"    public void parseImportance_validValueWithoutWhitespace_returnsImportance() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"neojxuan"},"content":"        Importance expectedImportance \u003d new Importance(VALID_IMPORTANCE);","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"neojxuan"},"content":"        assertEquals(expectedImportance, ParserUtil.parseImportance(VALID_IMPORTANCE));","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"neojxuan"},"content":"    public void parseImportance_validValueWithWhitespace_returnsTrimmedImportance() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"neojxuan"},"content":"        String importanceWithWhitespace \u003d WHITESPACE + VALID_IMPORTANCE + WHITESPACE;","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"neojxuan"},"content":"        Importance expectedImportance \u003d new Importance(VALID_IMPORTANCE);","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"neojxuan"},"content":"        assertEquals(expectedImportance, ParserUtil.parseImportance(importanceWithWhitespace));","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"neojxuan"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"cedricongjh"},"content":"    public void parseChoice_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"cedricongjh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseChoice(null, true));","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"cedricongjh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseChoice(null, false));","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":164,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"cedricongjh"},"content":"    public void parseChoice_validValueWithWhitespace_returnsOption() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"cedricongjh"},"content":"        Choice exceptedChoice \u003d new Choice(VALID_CHOICE_1, false);","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"cedricongjh"},"content":"        Choice actualChoice \u003d ParserUtil.parseChoice(WHITESPACE + VALID_CHOICE_1 + WHITESPACE, false);","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"cedricongjh"},"content":"        assertEquals(actualChoice, exceptedChoice);","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":170,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":171,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":172,"author":{"gitId":"cedricongjh"},"content":"    public void parseChoice_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"cedricongjh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseChoice(INVALID_CHOICE, false));","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"cedricongjh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseChoice(INVALID_CHOICE, true));","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":176,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":177,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":178,"author":{"gitId":"cedricongjh"},"content":"    public void parseChoices_nullChoices_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"cedricongjh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseChoices(null, VALID_CHOICE_1));","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":181,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":182,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":183,"author":{"gitId":"cedricongjh"},"content":"    public void parseChoices_nullAnswer_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"cedricongjh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseChoices(","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"cedricongjh"},"content":"                Arrays.asList(VALID_CHOICE_1, VALID_CHOICE_2, VALID_CHOICE_3),","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"cedricongjh"},"content":"                null));","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":188,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":189,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":190,"author":{"gitId":"cedricongjh"},"content":"    public void parseChoices_validValues_returnsOptions() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":191,"author":{"gitId":"cedricongjh"},"content":"        List\u003cString\u003e choices \u003d Arrays.asList(VALID_CHOICE_1, VALID_CHOICE_2, VALID_CHOICE_3);","lastModifiedDate":"2021-10-08"},{"lineNumber":192,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cChoice\u003e actualChoices \u003d ParserUtil.parseChoices(choices, VALID_ANSWER);","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cChoice\u003e expectedChoices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":194,"author":{"gitId":"cedricongjh"},"content":"        for (String choice: choices) {","lastModifiedDate":"2021-10-08"},{"lineNumber":195,"author":{"gitId":"cedricongjh"},"content":"            expectedChoices.add(new Choice(choice, false));","lastModifiedDate":"2021-10-08"},{"lineNumber":196,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":197,"author":{"gitId":"cedricongjh"},"content":"        expectedChoices.add(new Choice(VALID_ANSWER, true));","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"cedricongjh"},"content":"        assertEquals(actualChoices, expectedChoices);","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":200,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":201,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":202,"author":{"gitId":"cedricongjh"},"content":"    public void parseChoices_invalidValues_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":204,"author":{"gitId":"cedricongjh"},"content":"        // One invalid option","lastModifiedDate":"2021-09-25"},{"lineNumber":205,"author":{"gitId":"cedricongjh"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":206,"author":{"gitId":"cedricongjh"},"content":"                ParserUtil.parseChoices(Arrays.asList(VALID_CHOICE_1, INVALID_CHOICE, VALID_CHOICE_3), VALID_ANSWER));","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":208,"author":{"gitId":"cedricongjh"},"content":"        // Not enough valid options","lastModifiedDate":"2021-09-25"},{"lineNumber":209,"author":{"gitId":"cedricongjh"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":210,"author":{"gitId":"cedricongjh"},"content":"                ParserUtil.parseChoices(Arrays.asList(VALID_CHOICE_1, VALID_CHOICE_2), VALID_ANSWER));","lastModifiedDate":"2021-10-08"},{"lineNumber":211,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":212,"author":{"gitId":"cedricongjh"},"content":"        // No options","lastModifiedDate":"2021-09-25"},{"lineNumber":213,"author":{"gitId":"cedricongjh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseChoices(Collections.emptyList(), VALID_ANSWER));","lastModifiedDate":"2021-10-08"},{"lineNumber":214,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":215,"author":{"gitId":"cedricongjh"},"content":"        // Invalid Answer","lastModifiedDate":"2021-10-08"},{"lineNumber":216,"author":{"gitId":"cedricongjh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseChoices(","lastModifiedDate":"2021-10-08"},{"lineNumber":217,"author":{"gitId":"cedricongjh"},"content":"                Arrays.asList(VALID_CHOICE_1, VALID_CHOICE_2, VALID_CHOICE_3),","lastModifiedDate":"2021-10-08"},{"lineNumber":218,"author":{"gitId":"cedricongjh"},"content":"                INVALID_ANSWER));","lastModifiedDate":"2021-10-08"},{"lineNumber":219,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":220,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"cedricongjh"},"content":"    public void parseTrueFalseAnswer_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"cedricongjh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTrueFalseAnswer(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"cedricongjh"},"content":"    public void parseTrueFalseAnswer_validValues_returnsChoices() throws Exception {","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cChoice\u003e expectedChoices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"cedricongjh"},"content":"        expectedChoices.add(new Choice(TRUE_CHOICE_TITLE, false));","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"cedricongjh"},"content":"        expectedChoices.add(new Choice(FALSE_CHOICE_TITLE, true));","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cChoice\u003e actualChoices \u003d ParserUtil.parseTrueFalseAnswer(ANSWER_FALSE);","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"cedricongjh"},"content":"        assertEquals(actualChoices, expectedChoices);","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"cedricongjh"},"content":"    public void parseTrueFalseAnswer_validValuesWithWhitespace_returnsChoice() throws Exception {","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cChoice\u003e expectedChoices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"cedricongjh"},"content":"        expectedChoices.add(new Choice(TRUE_CHOICE_TITLE, true));","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"cedricongjh"},"content":"        expectedChoices.add(new Choice(FALSE_CHOICE_TITLE, false));","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cChoice\u003e actualChoices \u003d ParserUtil.parseTrueFalseAnswer(WHITESPACE + ANSWER_TRUE + WHITESPACE);","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"cedricongjh"},"content":"        assertEquals(actualChoices, expectedChoices);","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"cedricongjh"},"content":"    public void parseTrueFalseAnswer_invalidValues_throwsParseException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"cedricongjh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTrueFalseAnswer(INVALID_ANSWER));","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"cedricongjh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTrueFalseAnswer(INVALID_TRUE_FALSE_ANSWER));","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"neojxuan":27,"cedricongjh":108,"-":116}},{"path":"src/test/java/seedu/smartnus/logic/parser/QuizCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_TOO_MANY_ARGUMENTS;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.index.Index;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.quiz.QuizCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.quiz.QuizCommandParser;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.ShowAllQuestionsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.ShowQuestionIndexPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.TagsContainKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"class QuizCommandParserTest {","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    public static final String INVALID_ARGUMENT \u003d \"@TASedg\";","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"    private final QuizCommandParser parser \u003d new QuizCommandParser();","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"    void parse_withInvalidArgs_throwParseException() {","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"        assertParseFailure(parser, INVALID_ARGUMENT,","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, QuizCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"        // Users selecting more than 1 quiz types","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"        assertParseFailure(parser, \" n/1 2 t/abcdef t/defg\",","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"                String.format(MESSAGE_TOO_MANY_ARGUMENTS, QuizCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"    void parse_withValidArgs_success() {","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"        assertParseSuccess(parser, \"      \", new QuizCommand(new ShowAllQuestionsPredicate()));","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"        assertParseSuccess(parser, \"\", new QuizCommand(new ShowAllQuestionsPredicate()));","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"        assertParseSuccess(parser, \" t/CS2103T t/ST2334\",","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"                new QuizCommand(new TagsContainKeywordsPredicate(Arrays.asList(\"CS2103T\", \"ST2334\"))));","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"    void parse_withIndex() {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"        assertParseSuccess(parser, \" n/1\", new QuizCommand(new ShowQuestionIndexPredicate(Index.fromOneBased(1))));","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"neojxuan":13,"aryagiat":14,"cedricongjh":21}},{"path":"src/test/java/seedu/smartnus/logic/parser/QuizInputParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_IMPORTANCE_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_QUESTION_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.MCQ_QUESTION;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.Logic;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.LogicManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.quiz.AnswerMcqCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.quiz.AnswerTfCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.quiz.NextQuestionCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.quiz.PrevQuestionCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Importance;","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Name;","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.TrueFalseQuestion;","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.storage.JsonSmartNusStorage;","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.storage.StorageManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"public class QuizInputParserTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"    @TempDir","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"    private QuizManager quizManager;","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"    private final QuizInputParser parser \u003d new QuizInputParser();","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"ryanpeh"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"ryanpeh"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"        JsonSmartNusStorage smartNusStorage \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"                new JsonSmartNusStorage(temporaryFolder.resolve(\"typicalQuestionsSmartNus.json\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"ryanpeh"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"ryanpeh"},"content":"                .resolve(\"TypicalUserPref.json\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"        StorageManager storage \u003d new StorageManager(smartNusStorage, userPrefsStorage);","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"ryanpeh"},"content":"        Logic logic \u003d new LogicManager(new ModelManager(), storage);","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"cedricongjh"},"content":"        quizManager \u003d new QuizManager(logic.getFilteredQuizQuestionList());","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"ryanpeh"},"content":"    public void parseCommand_next() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"ryanpeh"},"content":"        NextQuestionCommand command \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"ryanpeh"},"content":"                (NextQuestionCommand) parser.parseCommand(NextQuestionCommand.COMMAND_WORD, quizManager);","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(new NextQuestionCommand(quizManager), command);","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"ryanpeh"},"content":"    public void parseCommand_prev() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"ryanpeh"},"content":"        PrevQuestionCommand command \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"ryanpeh"},"content":"                (PrevQuestionCommand) parser.parseCommand(PrevQuestionCommand.COMMAND_WORD, quizManager);","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(new PrevQuestionCommand(quizManager), command);","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"ryanpeh"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"ryanpeh"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD, quizManager) instanceof ExitCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"ryanpeh"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\", quizManager) instanceof ExitCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"ryanpeh"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"ryanpeh"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD, quizManager) instanceof HelpCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"ryanpeh"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\", quizManager) instanceof HelpCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"cedricongjh"},"content":"    public void parseCommand_answerMcqQuestion() throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"cedricongjh"},"content":"        List\u003cQuestion\u003e typicalQuestions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"cedricongjh"},"content":"        typicalQuestions.add(MCQ_QUESTION);","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"cedricongjh"},"content":"        QuizManager oneQuestionQuiz \u003d new QuizManager(typicalQuestions);","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"cedricongjh"},"content":"        assertTrue(parser.parseCommand(\"a\", oneQuestionQuiz) instanceof AnswerMcqCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"cedricongjh"},"content":"    public void parseCommand_answerTfQuestion() throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cChoice\u003e validChoices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"cedricongjh"},"content":"        validChoices.add(new Choice(Choice.TRUE_CHOICE_TITLE, false));","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"cedricongjh"},"content":"        validChoices.add(new Choice(Choice.FALSE_CHOICE_TITLE, true));","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"cedricongjh"},"content":"        List\u003cQuestion\u003e typicalQuestions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"cedricongjh"},"content":"        typicalQuestions.add(new TrueFalseQuestion(new Name(VALID_QUESTION_1), new Importance(VALID_IMPORTANCE_1),","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"cedricongjh"},"content":"                new HashSet\u003c\u003e(), validChoices));","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"cedricongjh"},"content":"        QuizManager oneQuestionQuiz \u003d new QuizManager(typicalQuestions);","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"cedricongjh"},"content":"        assertTrue(parser.parseCommand(\"T\", oneQuestionQuiz) instanceof AnswerTfCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"ryanpeh"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"ryanpeh"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"ryanpeh"},"content":"            -\u003e parser.parseCommand(\"\", quizManager));","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"neojxuan":18,"ryanpeh":61,"cedricongjh":35}},{"path":"src/test/java/seedu/smartnus/logic/parser/SmartNusParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.ANSWER_DESC_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.FALSE_ANSWER_DESC;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.IMPORTANCE_DESC_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.OPTION_DESC_3;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.OPTION_DESC_4;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.OPTION_DESC_5;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.QUESTION_DESC_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_ANSWER_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_IMPORTANCE_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_OPTION_3;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_OPTION_4;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_OPTION_5;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_QUESTION_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.model.choice.Choice.FALSE_CHOICE_TITLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.model.choice.Choice.TRUE_CHOICE_TITLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalIndexes.INDEX_FIRST_QUESTION;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.LightTheme;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.EditCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.FindByTagCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.FindCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.ListCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.logic.commands.ThemeCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.questions.AddMcqCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.questions.AddTfCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.logic.commands.quiz.QuizCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Importance;","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.MultipleChoiceQuestion;","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.Name;","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.TrueFalseQuestion;","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.TagsContainKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.EditQuestionDescriptorBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.QuestionBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.QuestionUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"public class SmartNusParserTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"    private final SmartNusParser parser \u003d new SmartNusParser();","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"neojxuan"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_QUESTION.getOneBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"neojxuan"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_QUESTION), command);","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"        Question question \u003d new QuestionBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"        EditCommand.EditQuestionDescriptor descriptor \u003d new EditQuestionDescriptorBuilder(question).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"neojxuan"},"content":"                + INDEX_FIRST_QUESTION.getOneBased() + \" \" + QuestionUtil.getEditQuestionDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"neojxuan"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_QUESTION, descriptor), command);","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"neojxuan"},"content":"    public void parseCommand_tag() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"neojxuan"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"neojxuan"},"content":"        FindByTagCommand command \u003d (FindByTagCommand) parser.parseCommand(","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"neojxuan"},"content":"                FindByTagCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"neojxuan"},"content":"        assertEquals(new FindByTagCommand(new TagsContainKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"cedricongjh"},"content":"    public void parseCommand_quiz() throws Exception {","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"cedricongjh"},"content":"        assertTrue(parser.parseCommand(QuizCommand.COMMAND_WORD) instanceof QuizCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"cedricongjh"},"content":"    public void parseCommand_mcq() throws Exception {","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"cedricongjh"},"content":"        AddMcqCommand command \u003d (AddMcqCommand) parser.parseCommand(AddMcqCommand.COMMAND_WORD","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"cedricongjh"},"content":"                + QUESTION_DESC_1 + OPTION_DESC_5 + OPTION_DESC_4 + OPTION_DESC_3 + ANSWER_DESC_1 + IMPORTANCE_DESC_1);","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"cedricongjh"},"content":"        assertNotNull(command);","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cChoice\u003e expectedChoices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"cedricongjh"},"content":"        expectedChoices.add(new Choice(VALID_OPTION_5, false));","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"cedricongjh"},"content":"        expectedChoices.add(new Choice(VALID_OPTION_4, false));","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"cedricongjh"},"content":"        expectedChoices.add(new Choice(VALID_OPTION_3, false));","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"cedricongjh"},"content":"        expectedChoices.add(new Choice(VALID_ANSWER_1, true));","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"cedricongjh"},"content":"        MultipleChoiceQuestion expectedQuestion \u003d new MultipleChoiceQuestion(new Name(VALID_QUESTION_1),","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"cedricongjh"},"content":"                new Importance(VALID_IMPORTANCE_1), new HashSet\u003c\u003e(), expectedChoices);","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"cedricongjh"},"content":"        assertEquals(new AddMcqCommand(expectedQuestion), command);","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"cedricongjh"},"content":"    public void parseCommand_tf() throws Exception {","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"cedricongjh"},"content":"        AddTfCommand command \u003d (AddTfCommand) parser.parseCommand(","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"cedricongjh"},"content":"                AddTfCommand.COMMAND_WORD + QUESTION_DESC_1 + FALSE_ANSWER_DESC + IMPORTANCE_DESC_1);","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"cedricongjh"},"content":"        assertNotNull(command);","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cChoice\u003e correctChoices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"cedricongjh"},"content":"        correctChoices.add(new Choice(TRUE_CHOICE_TITLE, false));","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"cedricongjh"},"content":"        correctChoices.add(new Choice(FALSE_CHOICE_TITLE, true));","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"cedricongjh"},"content":"        TrueFalseQuestion expectedQuestion \u003d new TrueFalseQuestion(new Name(VALID_QUESTION_1),","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"cedricongjh"},"content":"                new Importance(VALID_IMPORTANCE_1), new HashSet\u003c\u003e(), correctChoices);","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"cedricongjh"},"content":"        assertEquals(new AddTfCommand(expectedQuestion), command);","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":164,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"aryagiat"},"content":"    public void parseCommand_theme() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"aryagiat"},"content":"        ThemeCommand command \u003d (ThemeCommand) parser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"aryagiat"},"content":"                ThemeCommand.COMMAND_WORD + \" \" + ThemeCommand.LIGHT_KEYWORD);","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"aryagiat"},"content":"        assertEquals(new ThemeCommand(new LightTheme()), command);","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"aryagiat"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, ThemeCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"aryagiat"},"content":"            -\u003e parser.parseCommand(ThemeCommand.COMMAND_WORD + \" abc\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"neojxuan":34,"aryagiat":13,"cedricongjh":60,"-":66}},{"path":"src/test/java/seedu/smartnus/logic/parser/ThemeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import static seedu.smartnus.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import static seedu.smartnus.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.DarkTheme;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.theme.LightTheme;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.logic.commands.ThemeCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"public class ThemeCommandParserTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"    public static final String INVALID_ARGUMENT \u003d \"@TASedg\";","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"    private final ThemeCommandParser parser \u003d new ThemeCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"    public void parse_fail_test() {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"        assertParseFailure(parser, INVALID_ARGUMENT,","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ThemeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"    public void parse_get_theme() throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"        assertEquals(new ThemeCommand(new DarkTheme()), parser.parse(\" dark\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        assertEquals(new ThemeCommand(new LightTheme()), parser.parse(\" light\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"aryagiat":30}},{"path":"src/test/java/seedu/smartnus/logic/parser/quiz/AnswerMcqCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"package seedu.smartnus.logic.parser.quiz;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.logic.commands.quiz.AnswerMcqCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"class AnswerMcqCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"    private ReadOnlySmartNus smartNus;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"    private QuizManager quizManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"    private AnswerMcqCommandParser answerMcqCommandParser;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"        smartNus \u003d SampleDataUtil.getSampleSmartNus();","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"        quizManager \u003d new QuizManager(smartNus.getQuestionList());","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"        answerMcqCommandParser \u003d new AnswerMcqCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"    public void parse_validArgs() throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerMcqCommandParser.parse(\"a\", quizManager), new AnswerMcqCommand(\"a\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerMcqCommandParser.parse(\"b\", quizManager), new AnswerMcqCommand(\"b\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerMcqCommandParser.parse(\"c\", quizManager), new AnswerMcqCommand(\"c\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerMcqCommandParser.parse(\"d\", quizManager), new AnswerMcqCommand(\"d\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerMcqCommandParser.parse(\"A\", quizManager), new AnswerMcqCommand(\"A\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerMcqCommandParser.parse(\"B\", quizManager), new AnswerMcqCommand(\"B\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerMcqCommandParser.parse(\"C\", quizManager), new AnswerMcqCommand(\"C\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerMcqCommandParser.parse(\"D\", quizManager), new AnswerMcqCommand(\"D\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"    public void parse_invalidArgs() {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"        assertThrows(ParseException.class, () -\u003e answerMcqCommandParser.parse(\"E\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"        assertThrows(ParseException.class, () -\u003e answerMcqCommandParser.parse(\"e\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"        assertThrows(ParseException.class, () -\u003e answerMcqCommandParser.parse(\"ab\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"ryanpeh":50}},{"path":"src/test/java/seedu/smartnus/logic/parser/quiz/AnswerTfCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"package seedu.smartnus.logic.parser.quiz;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.logic.commands.quiz.AnswerTfCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"class AnswerTfCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"    private ReadOnlySmartNus smartNus;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"    private QuizManager quizManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"    private AnswerTfCommandParser answerTfCommandParser;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"        smartNus \u003d SampleDataUtil.getSampleSmartNus();","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"        quizManager \u003d new QuizManager(smartNus.getQuestionList());","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"        answerTfCommandParser \u003d new AnswerTfCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"    public void parse_validArgs() throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerTfCommandParser.parse(\"t\", quizManager), new AnswerTfCommand(\"t\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerTfCommandParser.parse(\"T\", quizManager), new AnswerTfCommand(\"T\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerTfCommandParser.parse(\"f\", quizManager), new AnswerTfCommand(\"f\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerTfCommandParser.parse(\"F\", quizManager), new AnswerTfCommand(\"F\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerTfCommandParser.parse(\"True\", quizManager),","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"                new AnswerTfCommand(\"True\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerTfCommandParser.parse(\"true\", quizManager),","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"                new AnswerTfCommand(\"true\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerTfCommandParser.parse(\"False\", quizManager),","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"                new AnswerTfCommand(\"False\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerTfCommandParser.parse(\"false\", quizManager),","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"                new AnswerTfCommand(\"false\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerTfCommandParser.parse(\"TRUE\", quizManager),","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"                new AnswerTfCommand(\"TRUE\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerTfCommandParser.parse(\"FALSE\", quizManager),","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"ryanpeh"},"content":"                new AnswerTfCommand(\"FALSE\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(answerTfCommandParser.parse(\"TrUe\", quizManager),","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"                new AnswerTfCommand(\"TrUe\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"ryanpeh"},"content":"    public void parse_invalidArgs() {","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"ryanpeh"},"content":"        assertThrows(ParseException.class, () -\u003e answerTfCommandParser.parse(\"E\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"ryanpeh"},"content":"        assertThrows(ParseException.class, () -\u003e answerTfCommandParser.parse(\"asdf\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"ryanpeh"},"content":"        assertThrows(ParseException.class, () -\u003e answerTfCommandParser.parse(\"tt\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"ryanpeh"},"content":"        assertThrows(ParseException.class, () -\u003e answerTfCommandParser.parse(\"tf\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"ryanpeh"},"content":"        assertThrows(ParseException.class, () -\u003e answerTfCommandParser.parse(\"truet\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"ryanpeh"},"content":"        assertThrows(ParseException.class, () -\u003e answerTfCommandParser.parse(\"truefalse\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"ryanpeh"},"content":"        assertThrows(ParseException.class, () -\u003e answerTfCommandParser.parse(\"truee\", quizManager));","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"ryanpeh":64}},{"path":"src/test/java/seedu/smartnus/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.model.Model.PREDICATE_SHOW_ALL_QUESTIONS;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.BENSON;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.GuiSettings;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.SmartNusBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"        assertEquals(new SmartNus(), new SmartNus(modelManager.getSmartNus()));","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"        userPrefs.setSmartNusFilePath(Paths.get(\"smart/nus/file/path\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"        userPrefs.setSmartNusFilePath(Paths.get(\"new/smart/nus/file/path\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"    public void setSmartNusFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setSmartNusFilePath(null));","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"    public void setSmartNusFilePath_validPath_setsSmartNusFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"        Path path \u003d Paths.get(\"smart/nus/file/path\");","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"        modelManager.setSmartNusFilePath(path);","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"        assertEquals(path, modelManager.getSmartNusFilePath());","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"    public void hasQuestion_nullQuestion_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasQuestion(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"    public void hasQuestion_questionNotInSmartNus_returnsFalse() {","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"neojxuan"},"content":"        assertFalse(modelManager.hasQuestion(ALICE));","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"neojxuan"},"content":"    public void hasQuestion_questionInSmartNus_returnsTrue() {","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"neojxuan"},"content":"        modelManager.addQuestion(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"neojxuan"},"content":"        assertTrue(modelManager.hasQuestion(ALICE));","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"neojxuan"},"content":"    public void getFilteredQuestionList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"neojxuan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredQuestionList().remove(0));","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"neojxuan"},"content":"        SmartNus smartNus \u003d new SmartNusBuilder().withQuestion(ALICE).withQuestion(BENSON).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"neojxuan"},"content":"        SmartNus differentSmartNus \u003d new SmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"neojxuan"},"content":"        modelManager \u003d new ModelManager(smartNus, userPrefs);","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"neojxuan"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(smartNus, userPrefs);","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"neojxuan"},"content":"        // different smartNus -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":117,"author":{"gitId":"neojxuan"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentSmartNus, userPrefs)));","lastModifiedDate":"2021-10-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"neojxuan"},"content":"        modelManager.updateFilteredQuestionList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"neojxuan"},"content":"        assertFalse(modelManager.equals(new ModelManager(smartNus, userPrefs)));","lastModifiedDate":"2021-10-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"neojxuan"},"content":"        modelManager.updateFilteredQuestionList(PREDICATE_SHOW_ALL_QUESTIONS);","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"neojxuan"},"content":"        differentUserPrefs.setSmartNusFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":130,"author":{"gitId":"neojxuan"},"content":"        assertFalse(modelManager.equals(new ModelManager(smartNus, differentUserPrefs)));","lastModifiedDate":"2021-10-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"neojxuan":36,"aryagiat":1,"-":95}},{"path":"src/test/java/seedu/smartnus/model/SmartNusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.getTypicalSmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.exceptions.DuplicateQuestionException;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.QuestionBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"public class SmartNusTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"    private final SmartNus smartNus \u003d new SmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"        assertEquals(Collections.emptyList(), smartNus.getQuestionList());","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e smartNus.resetData(null));","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"    public void resetData_withValidReadOnlySmartNus_replacesData() {","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"        SmartNus newData \u003d getTypicalSmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"        smartNus.resetData(newData);","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"        assertEquals(newData, smartNus);","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"    public void resetData_withDuplicateQuestions_throwsDuplicateQuestionException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"        // Two questions with the same identity fields","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"        Question editedAlice \u003d new QuestionBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"        List\u003cQuestion\u003e newQuestions \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"        SmartNusStub newData \u003d new SmartNusStub(newQuestions);","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"        assertThrows(DuplicateQuestionException.class, () -\u003e smartNus.resetData(newData));","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"neojxuan"},"content":"    public void hasQuestion_nullQuestion_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e smartNus.hasQuestion(null));","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"    public void hasQuestion_questionNotInSmartNus_returnsFalse() {","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"        assertFalse(smartNus.hasQuestion(ALICE));","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"    public void hasQuestion_questionInSmartNus_returnsTrue() {","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"        smartNus.addQuestion(ALICE);","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"        assertTrue(smartNus.hasQuestion(ALICE));","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"aryagiat"},"content":"        assertNotEquals(null, smartNus.getQuestionsAsList());","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"aryagiat"},"content":"        assertNotEquals(0, smartNus.hashCode());","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"    public void hasQuestion_questionWithSameIdentityFieldsInSmartNus_returnsTrue() {","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"        smartNus.addQuestion(ALICE);","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"        Question editedAlice \u003d new QuestionBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"        assertTrue(smartNus.hasQuestion(editedAlice));","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"neojxuan"},"content":"    public void getQuestionList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e smartNus.getQuestionList().remove(0));","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"neojxuan"},"content":"     * A stub ReadOnlySmartNus whose questions list can violate interface constraints.","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"neojxuan"},"content":"    private static class SmartNusStub implements ReadOnlySmartNus {","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"neojxuan"},"content":"        private final ObservableList\u003cQuestion\u003e questions \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"neojxuan"},"content":"        SmartNusStub(Collection\u003cQuestion\u003e questions) {","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"neojxuan"},"content":"            this.questions.setAll(questions);","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"neojxuan"},"content":"        public ObservableList\u003cQuestion\u003e getQuestionList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"neojxuan"},"content":"            return questions;","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"neojxuan":42,"aryagiat":3,"-":59}},{"path":"src/test/java/seedu/smartnus/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"    public void setSmartNusFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setSmartNusFilePath(null));","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    public void equalityTest() {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"        assertTrue(userPrefs.equals(userPrefs));","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"        assertFalse(userPrefs.equals(1));","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        assertFalse(userPrefs.hashCode() \u003d\u003d 0);","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"neojxuan":4,"aryagiat":10,"-":17}},{"path":"src/test/java/seedu/smartnus/model/choice/ChoiceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"public class ChoiceTest {","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"    private static final Choice DEFAULT_CHOICE \u003d new Choice(\"alpha\", true);","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Choice(null, true));","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"    public void constructor_invalidChoiceTitle_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"        String invalidChoiceName \u003d \"\";","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Choice(invalidChoiceName, true));","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"    public void isValidChoiceTitle_nullTitle_throwsNullPointerException() {","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e Choice.isValidChoiceTitle(null));","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"    public void isValidChoiceTitle_emptyStringTitle_false() {","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"        // Choice title containing only spaces","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"        assertFalse(Choice.isValidChoiceTitle(\"\"));","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"        assertFalse(Choice.isValidChoiceTitle(\"  \"));","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"    public void isValidChoiceTitle_validTitle_true() {","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"        assertTrue(Choice.isValidChoiceTitle(\"option 1\"));","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"        assertTrue(Choice.isValidChoiceTitle(\"10\"));","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"        assertTrue(Choice.isValidChoiceTitle(\"901p#__\"));","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"    public void hasSameTitle_nullChoice_throwsNullPointerException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e DEFAULT_CHOICE.hasSameTitle(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"    public void hasSameTitle_sameTitleChoice_true() {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"        // same object","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"        assertTrue(DEFAULT_CHOICE.hasSameTitle(DEFAULT_CHOICE));","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"        // same title, different isCorrect value, should still return true","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"        assertTrue(DEFAULT_CHOICE.hasSameTitle(new Choice(\"alpha\", false)));","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"        // same title, same isCorrect value","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"        assertTrue(DEFAULT_CHOICE.hasSameTitle(new Choice(\"alpha\", true)));","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"    public void hasSameTitle_differentTitleChoice_false() {","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"        assertFalse(DEFAULT_CHOICE.hasSameTitle(new Choice(\"abc\", true)));","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"neojxuan"},"content":"        // has additional whitespace","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"        assertFalse(DEFAULT_CHOICE.hasSameTitle(new Choice(\"alpha \", true)));","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"        // different case","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"        assertFalse(DEFAULT_CHOICE.hasSameTitle(new Choice(\"aLPha\", true)));","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"    public void equals() {","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"        Choice choiceACorrect \u003d new Choice(\"choice A\", true);","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"        Choice choiceAWrong \u003d new Choice(\"choice A\", false);","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"        Choice choiceBCorrect \u003d new Choice(\"choice B\", true);","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"neojxuan"},"content":"        // different isCorrect values","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"neojxuan"},"content":"        assertFalse(choiceACorrect.equals(choiceAWrong));","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"        // different titles","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"        assertFalse(choiceBCorrect.equals(choiceACorrect));","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"        assertTrue(choiceACorrect.equals(new Choice(\"choice A\", true)));","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"neojxuan"},"content":"    public void toString_test() {","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"neojxuan"},"content":"        Choice wrongChoice \u003d new Choice(\"wrong\", false);","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"        Choice correctChoice \u003d new Choice(\"correct\", true);","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"neojxuan"},"content":"        assertEquals(wrongChoice.toString(), \"wrong\");","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"neojxuan"},"content":"        assertEquals(correctChoice.toString(), \"correct (answer)\");","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"neojxuan":90}},{"path":"src/test/java/seedu/smartnus/model/question/ImportanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.question;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"public class ImportanceTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Importance(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"    public void constructor_invalidImportance_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"        String invalidImportance \u003d \"\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Importance(invalidImportance));","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"    public void isValidImportance() {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"        // null importance number","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e Importance.isValidImportance(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"        // invalid importance numbers","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"        assertFalse(Importance.isValidImportance(\"\")); // empty string","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"        assertFalse(Importance.isValidImportance(\" \")); // spaces only","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"        assertFalse(Importance.isValidImportance(\"91\")); // more than 1 digit","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"        assertFalse(Importance.isValidImportance(\"importance\")); // non-numeric","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"        assertFalse(Importance.isValidImportance(\"1p\")); // alphabets within digits","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"        assertFalse(Importance.isValidImportance(\"p1\")); // alphabets within digits","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"        assertFalse(Importance.isValidImportance(\"2 2\")); // spaces within digits","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"        assertFalse(Importance.isValidImportance(\"0\")); // not within range of 1-3","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"        assertFalse(Importance.isValidImportance(\"4\")); // not within range of 1-3","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"        // valid importance numbers","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"        assertTrue(Importance.isValidImportance(\"1\")); // exactly 1 number","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"        assertTrue(Importance.isValidImportance(\"2\")); // exactly 1 number","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"        assertTrue(Importance.isValidImportance(\"3\")); // exactly 1 number","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"        Importance importance \u003d new Importance(\"1\");","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"        assertNotEquals(importance, 1); // not instance of Importance","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"        assertNotEquals(importance, new Importance(\"2\")); // different value","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"        assertNotEquals(importance, null);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"        assertEquals(importance, importance); // same object","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"        assertTrue(importance.equals(new Importance(\"1\"))); // same value","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"neojxuan":57}},{"path":"src/test/java/seedu/smartnus/model/question/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.question;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"neojxuan":2,"-":36}},{"path":"src/test/java/seedu/smartnus/model/question/QuestionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.question;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_IMPORTANCE_BOB;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.BOB;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.QuestionBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"public class QuestionTest {","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"        Question question \u003d new QuestionBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e question.getTags().remove(0));","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"    public void isSameQuestion() {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"        assertTrue(ALICE.isSameQuestion(ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"        assertFalse(ALICE.isSameQuestion(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"        Question editedAlice \u003d new QuestionBuilder(ALICE).withImportance(VALID_IMPORTANCE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"        assertTrue(ALICE.isSameQuestion(editedAlice));","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"        editedAlice \u003d new QuestionBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"        assertFalse(ALICE.isSameQuestion(editedAlice));","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"        Question editedBob \u003d new QuestionBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"        assertFalse(BOB.isSameQuestion(editedBob));","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"        editedBob \u003d new QuestionBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"        assertFalse(BOB.isSameQuestion(editedBob));","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"        Question aliceCopy \u003d new QuestionBuilder(ALICE).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"        // added to test code coverage","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"        assertFalse(ALICE.equals(new Tag(\"abc\")));","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"neojxuan"},"content":"        // different question -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"        Question editedAlice \u003d new QuestionBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"        // different importance -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"        editedAlice \u003d new QuestionBuilder(ALICE).withImportance(VALID_IMPORTANCE_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"        editedAlice \u003d new QuestionBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"neojxuan"},"content":"    public void hashCode_test() {","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"neojxuan"},"content":"        Question aliceQuestion \u003d new QuestionBuilder(ALICE).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"neojxuan"},"content":"        Question aliceCopy \u003d new QuestionBuilder(ALICE).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"neojxuan"},"content":"        assertEquals(aliceQuestion.hashCode(), aliceCopy.hashCode());","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"neojxuan"},"content":"        Question bobQuestion \u003d new QuestionBuilder(BOB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"neojxuan"},"content":"        assertNotEquals(aliceQuestion.hashCode(), bobQuestion.hashCode());","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"neojxuan"},"content":"        // different importance -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"neojxuan"},"content":"        Question editedAlice \u003d new QuestionBuilder(ALICE).withImportance(VALID_IMPORTANCE_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"neojxuan"},"content":"        assertNotEquals(aliceQuestion.hashCode(), editedAlice.hashCode());","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"neojxuan"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"neojxuan"},"content":"        editedAlice \u003d new QuestionBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"neojxuan"},"content":"        assertNotEquals(aliceQuestion.hashCode(), editedAlice.hashCode());","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"neojxuan"},"content":"    public void isValidQuestion_lessThanThreeIncorrectOptionsMcq_false() {","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"neojxuan"},"content":"        Question invalidMcq \u003d new QuestionBuilder().withChoices(","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"neojxuan"},"content":"                new Choice(\"answer\", true), new Choice(\"option 1\", false)","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"neojxuan"},"content":"        ).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"neojxuan"},"content":"        assertFalse(invalidMcq.isValidQuestion());","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"neojxuan"},"content":"    public void isValidQuestion_noCorrectOption_false() {","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"neojxuan"},"content":"        Question invalidMcq \u003d new QuestionBuilder().withChoices(","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"neojxuan"},"content":"                new Choice(\"option 2\", false), new Choice(\"option 1\", false),","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"neojxuan"},"content":"                new Choice(\"option 3\", false), new Choice(\"option 4\", false)","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"neojxuan"},"content":"        ).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"neojxuan"},"content":"        assertFalse(invalidMcq.isValidQuestion());","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"neojxuan"},"content":"    public void isValidQuestion_validMcq_true() {","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"neojxuan"},"content":"        Question validMcq \u003d new QuestionBuilder().withChoices(","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"neojxuan"},"content":"                new Choice(\"option 2\", true), new Choice(\"option 1\", false),","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"neojxuan"},"content":"                new Choice(\"option 3\", false), new Choice(\"option 4\", false)","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"neojxuan"},"content":"        ).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"neojxuan"},"content":"        assertTrue(validMcq.isValidQuestion());","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"aryagiat"},"content":"    public void question_statistic_test() {","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"aryagiat"},"content":"        Choice correctChoice \u003d new Choice(\"option 1\", true);","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"aryagiat"},"content":"        Choice wrongChoice \u003d new Choice(\"option 2\", false);","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"aryagiat"},"content":"        Question validMcq \u003d new QuestionBuilder().withChoices(","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"aryagiat"},"content":"                correctChoice, wrongChoice,","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"aryagiat"},"content":"                new Choice(\"option 3\", false), new Choice(\"option 4\", false)","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"aryagiat"},"content":"        ).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"aryagiat"},"content":"        // test attempt count","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"aryagiat"},"content":"        assertEquals(0, validMcq.getStatistic().getAttemptCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"aryagiat"},"content":"        // test correct count","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"aryagiat"},"content":"        assertEquals(0, validMcq.getStatistic().getCorrectCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"aryagiat"},"content":"        // test give correct choice and update statistic","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"aryagiat"},"content":"        validMcq.attemptAndCheckAnswer(correctChoice);","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"aryagiat"},"content":"        assertEquals(1, validMcq.getStatistic().getAttemptCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"aryagiat"},"content":"        assertEquals(1, validMcq.getStatistic().getCorrectCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"aryagiat"},"content":"        // test give wrong choice and update statistic","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"aryagiat"},"content":"        validMcq.attemptAndCheckAnswer(wrongChoice);","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"aryagiat"},"content":"        assertEquals(2, validMcq.getStatistic().getAttemptCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"aryagiat"},"content":"        assertEquals(1, validMcq.getStatistic().getCorrectCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"cedricongjh"},"content":"    public void question_findChoiceByTitle() {","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"cedricongjh"},"content":"        Choice expectedChoice \u003d new Choice(\"option 1\", true);","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"cedricongjh"},"content":"        Question validMcq \u003d new QuestionBuilder().withChoices(","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"cedricongjh"},"content":"                expectedChoice, new Choice(\"option 2\", false),","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"cedricongjh"},"content":"                new Choice(\"option 3\", false), new Choice(\"option 4\", false)","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"cedricongjh"},"content":"        ).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"cedricongjh"},"content":"        // finds correct choice","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"cedricongjh"},"content":"        Choice actualChoice \u003d validMcq.findChoiceByTitle(\"option 1\");","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"cedricongjh"},"content":"        assertEquals(expectedChoice, actualChoice);","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"cedricongjh"},"content":"        // does not find choice and returns null","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"cedricongjh"},"content":"        Choice notFoundChoice \u003d validMcq.findChoiceByTitle(\" \");","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"cedricongjh"},"content":"        assertNull(notFoundChoice);","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"neojxuan":80,"aryagiat":28,"cedricongjh":19,"-":52}},{"path":"src/test/java/seedu/smartnus/model/question/StatisticTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.model.question;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"public class StatisticTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"    public void equals_test() {","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"        Statistic defaultStat \u003d new Statistic();","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"        Statistic tenAttempts \u003d new Statistic(10, 5);","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"        assertEquals(0, defaultStat.getAttemptCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"        assertEquals(0, defaultStat.getCorrectCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"        assertEquals(0.0, defaultStat.getCorrectPercentage());","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"        assertEquals(10, tenAttempts.getAttemptCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"        assertEquals(5, tenAttempts.getCorrectCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"        assertEquals(50.0, tenAttempts.getCorrectPercentage());","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"    public void update_test() {","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"        Statistic defaultStat \u003d new Statistic();","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"        defaultStat.addAttempt();","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        defaultStat.addCorrect();","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"        assertEquals(1, defaultStat.getAttemptCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"        assertEquals(1, defaultStat.getCorrectCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"        assertEquals(100.0, defaultStat.getCorrectPercentage());","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"        defaultStat.addAttempt();","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"        assertEquals(2, defaultStat.getAttemptCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"        assertEquals(1, defaultStat.getCorrectCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"        assertEquals(50.0, defaultStat.getCorrectPercentage());","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"    public void string_test() {","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"        Statistic defaultStat \u003d new Statistic();","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"        assertNotEquals(null, defaultStat.toString());","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"aryagiat":44}},{"path":"src/test/java/seedu/smartnus/model/question/TrueFalseQuestionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package seedu.smartnus.model.question;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_ANSWER_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_IMPORTANCE_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_QUESTION_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.model.choice.Choice.FALSE_CHOICE_TITLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.model.choice.Choice.TRUE_CHOICE_TITLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"class TrueFalseQuestionTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"    private static TrueFalseQuestion validTfQuestion \u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"    void setUp() {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"        Set\u003cChoice\u003e validTfChoices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"        validTfChoices.add(new Choice(TRUE_CHOICE_TITLE, false));","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"        validTfChoices.add(new Choice(FALSE_CHOICE_TITLE, true));","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"        validTfQuestion \u003d new TrueFalseQuestion(new Name(VALID_QUESTION_1),","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"                new Importance(VALID_IMPORTANCE_1), new HashSet\u003c\u003e(), validTfChoices);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"    void isValidQuestion_validAnswers_true() {","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"        assertTrue(validTfQuestion.isValidQuestion());","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"    void isValidTrueFalseChoice_validChoice_true() {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"        TrueFalseQuestion.isValidTrueFalseChoice(new Choice(TRUE_CHOICE_TITLE, false));","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"        TrueFalseQuestion.isValidTrueFalseChoice(new Choice(FALSE_CHOICE_TITLE, true));","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"    void isValidTrueFalseChoice_invalidChoice_false() {","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"        TrueFalseQuestion.isValidTrueFalseChoice(new Choice(VALID_ANSWER_1, false));","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"cedricongjh":47}},{"path":"src/test/java/seedu/smartnus/model/question/UniqueQuestionListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.question;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.BOB;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.exceptions.DuplicateQuestionException;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.exceptions.QuestionNotFoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.QuestionBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"public class UniqueQuestionListTest {","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"    private final UniqueQuestionList uniqueQuestionList \u003d new UniqueQuestionList();","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"    public void contains_nullQuestion_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueQuestionList.contains(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"    public void contains_questionNotInList_returnsFalse() {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"        assertFalse(uniqueQuestionList.contains(ALICE));","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"    public void contains_questionInList_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"        uniqueQuestionList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"        assertTrue(uniqueQuestionList.contains(ALICE));","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"    public void contains_questionWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"        uniqueQuestionList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"        Question editedAlice \u003d new QuestionBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"        assertTrue(uniqueQuestionList.contains(editedAlice));","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"    public void add_nullQuestion_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueQuestionList.add(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"    public void add_duplicateQuestion_throwsDuplicateQuestionException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"neojxuan"},"content":"        uniqueQuestionList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"        assertThrows(DuplicateQuestionException.class, () -\u003e uniqueQuestionList.add(ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"neojxuan"},"content":"    public void setQuestion_nullTargetQuestion_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueQuestionList.setQuestion(null, ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"    public void setQuestion_nullEditedQuestion_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueQuestionList.setQuestion(ALICE, null));","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"    public void setQuestion_targetQuestionNotInList_throwsQuestionNotFoundException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"        assertThrows(QuestionNotFoundException.class, () -\u003e uniqueQuestionList.setQuestion(ALICE, ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"    public void setQuestion_editedQuestionIsSameQuestion_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"        uniqueQuestionList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"        uniqueQuestionList.setQuestion(ALICE, ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"        UniqueQuestionList expectedUniqueQuestionList \u003d new UniqueQuestionList();","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"        expectedUniqueQuestionList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"        assertEquals(expectedUniqueQuestionList, uniqueQuestionList);","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"    public void setQuestion_editedQuestionHasSameIdentity_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"neojxuan"},"content":"        uniqueQuestionList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"neojxuan"},"content":"        Question editedAlice \u003d new QuestionBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"neojxuan"},"content":"        uniqueQuestionList.setQuestion(ALICE, editedAlice);","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"neojxuan"},"content":"        UniqueQuestionList expectedUniqueQuestionList \u003d new UniqueQuestionList();","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"neojxuan"},"content":"        expectedUniqueQuestionList.add(editedAlice);","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"neojxuan"},"content":"        assertEquals(expectedUniqueQuestionList, uniqueQuestionList);","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"neojxuan"},"content":"    public void setQuestion_editedQuestionHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"neojxuan"},"content":"        uniqueQuestionList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"neojxuan"},"content":"        uniqueQuestionList.setQuestion(ALICE, BOB);","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"neojxuan"},"content":"        UniqueQuestionList expectedUniqueQuestionList \u003d new UniqueQuestionList();","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"neojxuan"},"content":"        expectedUniqueQuestionList.add(BOB);","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"neojxuan"},"content":"        assertEquals(expectedUniqueQuestionList, uniqueQuestionList);","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"neojxuan"},"content":"    public void setQuestion_editedQuestionHasNonUniqueIdentity_throwsDuplicateQuestionException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"neojxuan"},"content":"        uniqueQuestionList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"neojxuan"},"content":"        uniqueQuestionList.add(BOB);","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"neojxuan"},"content":"        assertThrows(DuplicateQuestionException.class, () -\u003e uniqueQuestionList.setQuestion(ALICE, BOB));","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"neojxuan"},"content":"    public void remove_nullQuestion_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueQuestionList.remove(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"neojxuan"},"content":"    public void remove_questionDoesNotExist_throwsQuestionNotFoundException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"neojxuan"},"content":"        assertThrows(QuestionNotFoundException.class, () -\u003e uniqueQuestionList.remove(ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"neojxuan"},"content":"    public void remove_existingQuestion_removesQuestion() {","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"neojxuan"},"content":"        uniqueQuestionList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"neojxuan"},"content":"        uniqueQuestionList.remove(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"neojxuan"},"content":"        UniqueQuestionList expectedUniqueQuestionList \u003d new UniqueQuestionList();","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"neojxuan"},"content":"        assertEquals(expectedUniqueQuestionList, uniqueQuestionList);","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"neojxuan"},"content":"    public void setQuestions_nullUniqueQuestionList_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueQuestionList.setQuestions((UniqueQuestionList) null));","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"neojxuan"},"content":"    public void setQuestions_uniqueQuestionList_replacesOwnListWithProvidedUniqueQuestionList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"neojxuan"},"content":"        uniqueQuestionList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"neojxuan"},"content":"        UniqueQuestionList expectedUniqueQuestionList \u003d new UniqueQuestionList();","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"neojxuan"},"content":"        expectedUniqueQuestionList.add(BOB);","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"neojxuan"},"content":"        uniqueQuestionList.setQuestions(expectedUniqueQuestionList);","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"neojxuan"},"content":"        assertEquals(expectedUniqueQuestionList, uniqueQuestionList);","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"neojxuan"},"content":"    public void setQuestions_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueQuestionList.setQuestions((List\u003cQuestion\u003e) null));","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"neojxuan"},"content":"    public void setQuestions_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"neojxuan"},"content":"        uniqueQuestionList.add(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"neojxuan"},"content":"        List\u003cQuestion\u003e questionList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"neojxuan"},"content":"        uniqueQuestionList.setQuestions(questionList);","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"neojxuan"},"content":"        UniqueQuestionList expectedUniqueQuestionList \u003d new UniqueQuestionList();","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"neojxuan"},"content":"        expectedUniqueQuestionList.add(BOB);","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"neojxuan"},"content":"        assertEquals(expectedUniqueQuestionList, uniqueQuestionList);","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"neojxuan"},"content":"    public void setQuestions_listWithDuplicateQuestions_throwsDuplicateQuestionException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"neojxuan"},"content":"        List\u003cQuestion\u003e listWithDuplicateQuestions \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"neojxuan"},"content":"        assertThrows(DuplicateQuestionException.class, () -\u003e uniqueQuestionList","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"neojxuan"},"content":"                .setQuestions(listWithDuplicateQuestions));","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"neojxuan"},"content":"            -\u003e uniqueQuestionList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"neojxuan":86,"-":84}},{"path":"src/test/java/seedu/smartnus/model/question/predicate/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.model.question.predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.QuestionBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"        // different question -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"        assertTrue(predicate.test(new QuestionBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"        assertTrue(predicate.test(new QuestionBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"        assertTrue(predicate.test(new QuestionBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"        assertTrue(predicate.test(new QuestionBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"        assertFalse(predicate.test(new QuestionBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"        assertFalse(predicate.test(new QuestionBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"        // Keywords match importance but does not match name","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"1\", \"Main\", \"Street\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"        assertFalse(predicate.test(new QuestionBuilder().withName(\"Alice\").withImportance(\"1\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"neojxuan":11,"aryagiat":1,"-":62}},{"path":"src/test/java/seedu/smartnus/model/question/predicate/ShowQuestionIndexPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.model.question.predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"aryagiat"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.commons.core.index.Index;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.testutil.QuestionBuilder;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"public class ShowQuestionIndexPredicateTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"        ShowQuestionIndexPredicate firstPredicate \u003d new ShowQuestionIndexPredicate(Index.fromOneBased(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"        ShowQuestionIndexPredicate secondPredicate \u003d new ShowQuestionIndexPredicate(Index.fromOneBased(2));","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        ShowQuestionIndexPredicate firstPredicateCopy \u003d new ShowQuestionIndexPredicate(Index.fromOneBased(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"        // different question -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"    public void test_correctIndex_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"        // One keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"        ShowQuestionIndexPredicate predicate \u003d new ShowQuestionIndexPredicate(Index.fromOneBased(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"        assertTrue(predicate.test(new QuestionBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"        ShowQuestionIndexPredicate predicate \u003d new ShowQuestionIndexPredicate(Index.fromOneBased(2));","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"        assertFalse(predicate.test(new QuestionBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"aryagiat":54}},{"path":"src/test/java/seedu/smartnus/model/question/predicate/TagsContainKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aryagiat"},"content":"package seedu.smartnus.model.question.predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.QuestionBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"public class TagsContainKeywordsPredicateTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"        TagsContainKeywordsPredicate firstPredicate \u003d new TagsContainKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"        TagsContainKeywordsPredicate secondPredicate \u003d new TagsContainKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"        // same list of keywords -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"        TagsContainKeywordsPredicate secondPredicateCopy \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"                new TagsContainKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"        assertTrue(secondPredicate.equals(secondPredicateCopy));","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"        // different keywords -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"    public void test_tagsContainKeywords_returnsTrue() {","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"        // One keyword","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"        TagsContainKeywordsPredicate predicate \u003d new TagsContainKeywordsPredicate(Collections.singletonList(\"Math\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"        assertTrue(predicate.test(new QuestionBuilder().withTags(\"English\", \"Math\").build()));","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"        predicate \u003d new TagsContainKeywordsPredicate(Arrays.asList(\"Java\", \"style\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"        assertTrue(predicate.test(new QuestionBuilder().withTags(\"Java\", \"style\").build()));","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"        predicate \u003d new TagsContainKeywordsPredicate(Arrays.asList(\"MIPS\", \"Math\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"        assertTrue(predicate.test(new QuestionBuilder().withTags(\"MIPS\", \"datapath\").build()));","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"neojxuan"},"content":"        predicate \u003d new TagsContainKeywordsPredicate(Arrays.asList(\"dATaPAtH\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"        assertTrue(predicate.test(new QuestionBuilder().withTags(\"datapath\").build()));","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"    public void test_tagsDoNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"        TagsContainKeywordsPredicate predicate \u003d new TagsContainKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"        assertFalse(predicate.test(new QuestionBuilder().withTags(\"CS2103T\").build()));","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"        predicate \u003d new TagsContainKeywordsPredicate(Arrays.asList(\"MIPS\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"        assertFalse(predicate.test(new QuestionBuilder().withTags(\"CS2103T\", \"Java\", \"style\").build()));","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"        // Keywords match importance but does not match tags","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"neojxuan"},"content":"        predicate \u003d new TagsContainKeywordsPredicate(Arrays.asList(\"1\", \"Java\", \"style\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"neojxuan"},"content":"        assertFalse(predicate.test(new QuestionBuilder().withTags(\"CS2103T\").withImportance(\"1\").build()));","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"neojxuan":75,"aryagiat":1}},{"path":"src/test/java/seedu/smartnus/model/quiz/QuizManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"package seedu.smartnus.model.quiz;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.quiz.exceptions.QuestionAlreadyAnsweredException;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.quiz.exceptions.QuizOutOfBoundException;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"import seedu.smartnus.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"public class QuizManagerTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"    private ReadOnlySmartNus smartNus;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"    private QuizManager quizManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"        smartNus \u003d SampleDataUtil.getSampleSmartNus();","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"ryanpeh"},"content":"        quizManager \u003d new QuizManager(smartNus.getQuestionList());","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"    public void getCurrentQuestions_returnsCorrectQuestion() {","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(quizManager.currQuestion(), smartNus.getQuestionList().get(0));","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"    public void nextQuestion_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"ryanpeh"},"content":"        quizManager.nextQuestion();","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(quizManager.getCurrentIndex(), 1);","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"    public void prevQuestion_throwsQuizOutOfBoundException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"        assertThrows(QuizOutOfBoundException.class, () -\u003e quizManager.prevQuestion());","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"    public void getTotalQuestions_returnsCorrectNumber() {","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(quizManager.getTotalQuestions(), smartNus.getQuestionList().size());","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"ryanpeh"},"content":"    public void getCurrentIndex_returnsCorrectIndex() {","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(quizManager.getCurrentIndex(), 0);","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"ryanpeh"},"content":"    public void attemptAndCheckAnswer_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"ryanpeh"},"content":"        Choice choice \u003d quizManager.currQuestion().getCorrectChoice();","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"ryanpeh"},"content":"        assertTrue(quizManager.attemptAndCheckAnswer(choice));","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"ryanpeh"},"content":"    public void attemptAndCheckAnswer_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"ryanpeh"},"content":"        ArrayList\u003cChoice\u003e choices \u003d new ArrayList\u003c\u003e(quizManager.currQuestion().getChoices());","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"ryanpeh"},"content":"        Choice correctChoice \u003d quizManager.currQuestion().getCorrectChoice();","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"ryanpeh"},"content":"        choices.remove(correctChoice);","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"ryanpeh"},"content":"        assertFalse(quizManager.attemptAndCheckAnswer(choices.get(0)));","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"ryanpeh"},"content":"    public void attemptAndCheckAnswer_throwsQuestionAlreadyAnsweredException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"ryanpeh"},"content":"        Choice choice \u003d quizManager.currQuestion().getCorrectChoice();","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"ryanpeh"},"content":"        quizManager.attemptAndCheckAnswer(choice);","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"ryanpeh"},"content":"        assertThrows(QuestionAlreadyAnsweredException.class, () -\u003e quizManager.attemptAndCheckAnswer(choice));","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"ryanpeh"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"ryanpeh"},"content":"    public void getCurrentSelectedChoice_returnsCorrectChoice() {","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"ryanpeh"},"content":"        Choice choice \u003d quizManager.currQuestion().getOrderedChoices().get(0);","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"ryanpeh"},"content":"        quizManager.attemptAndCheckAnswer(choice);","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"ryanpeh"},"content":"        assertEquals(choice, quizManager.getCurrentSelectedChoice());","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"ryanpeh":83}},{"path":"src/test/java/seedu/smartnus/model/quiz/QuizTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.quiz;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.BENSON;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.CARL;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuiz.FIVE_QUESTIONS_QUIZ;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuiz.SEVEN_QUESTIONS_QUIZ;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.exceptions.QuizOutOfBoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"public class QuizTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"    public void isSameQuizQuestion() {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"        // Same object -\u003e Returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"        assertTrue(FIVE_QUESTIONS_QUIZ.currQuestion().isSameQuestion(ALICE));","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"        assertTrue(FIVE_QUESTIONS_QUIZ.nextQuestion().isSameQuestion(BENSON));","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"    public void isNavigable() {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        Quiz testQuizObject \u003d SEVEN_QUESTIONS_QUIZ;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"        // First question is ALICE -\u003e returns True","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"        assertTrue(testQuizObject.currQuestion().isSameQuestion(ALICE));","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"        // Second question is BOB -\u003e returns True","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"        assertTrue(testQuizObject.nextQuestion().isSameQuestion(BENSON));","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"        // Third question is CARL -\u003e returns True","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"        assertTrue(testQuizObject.nextQuestion().isSameQuestion(CARL));","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"        // Third question is CARL -\u003e returns True","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"        assertTrue(testQuizObject.currQuestion().isSameQuestion(CARL));","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"        // Second question is BOB -\u003e returns True","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"        assertTrue(testQuizObject.prevQuestion().isSameQuestion(BENSON));","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"        // First question is ALICE -\u003e returns False","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"        assertFalse(testQuizObject.prevQuestion().isSameQuestion(BENSON));","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"aryagiat"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"aryagiat"},"content":"    public void testException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"aryagiat"},"content":"        Quiz testQuizObject \u003d FIVE_QUESTIONS_QUIZ;","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"aryagiat"},"content":"        // Try to go to the previous question when we are at the first question -\u003e out of bound","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"aryagiat"},"content":"        assertThrows(QuizOutOfBoundException.class, () -\u003e testQuizObject.prevQuestion());","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"neojxuan":7,"aryagiat":49}},{"path":"src/test/java/seedu/smartnus/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"neojxuan":2,"-":24}},{"path":"src/test/java/seedu/smartnus/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.model.util;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.model.util.SampleDataUtil.getSampleSmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"    public void getSampleSmartNusTest() {","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"        ReadOnlySmartNus sampleSmartNus \u003d getSampleSmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"        for (Question question : sampleSmartNus.getQuestionList()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"            assertTrue(question.isValidQuestion());","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"neojxuan":20}},{"path":"src/test/java/seedu/smartnus/storage/JsonAdaptedQuestionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.model.question.Question.MCQ_QUESTION_TYPE;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.model.question.Question.TF_QUESTION_TYPE;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.storage.JsonAdaptedQuestion.INVALID_QUESTION_TYPE_MESSAGE;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.storage.JsonAdaptedQuestion.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.BENSON;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.TF_QUESTION;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Importance;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.MultipleChoiceQuestion;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Name;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"import seedu.smartnus.model.question.TrueFalseQuestion;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"public class JsonAdaptedQuestionTest {","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"    private static final String INVALID_IMPORTANCE \u003d \"+651234\";","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"    private static final String INVALID_NAME \u003d \" \";","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Agentum07"},"content":"    private static final String INVALID_CHOICE \u003d \" \";","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"    private static final String VALID_IMPORTANCE \u003d BENSON.getImportance().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Agentum07"},"content":"    private static final List\u003cJsonAdaptedChoice\u003e VALID_CHOICES \u003d BENSON.getChoices().stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Agentum07"},"content":"            .map(JsonAdaptedChoice::new)","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Agentum07"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"    private static final List\u003cJsonAdaptedChoice\u003e VALID_TF_CHOICES \u003d TF_QUESTION.getChoices().stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"            .map(JsonAdaptedChoice::new)","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"    private static final int DEFAULT_ATTEMPT_COUNT \u003d 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"    private static final int DEFAULT_CORRECT_COUNT \u003d 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"    private static final int VALID_QUESTION_TYPE \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"    private static final int INVALID_QUESTION_TYPE \u003d -1;","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"    public void toModelType_validQuestionDetails_returnsQuestion() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"        JsonAdaptedQuestion question \u003d new JsonAdaptedQuestion(BENSON);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"        assertEquals(BENSON, question.toModelType());","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"neojxuan"},"content":"        JsonAdaptedQuestion question \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"aryagiat"},"content":"                new JsonAdaptedQuestion(INVALID_NAME, VALID_IMPORTANCE, VALID_TAGS,","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"                        VALID_CHOICES, DEFAULT_ATTEMPT_COUNT, DEFAULT_CORRECT_COUNT, VALID_QUESTION_TYPE);","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, question::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"aryagiat"},"content":"        JsonAdaptedQuestion question \u003d new JsonAdaptedQuestion(null, VALID_IMPORTANCE, VALID_TAGS,","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"cedricongjh"},"content":"                VALID_CHOICES, 0, DEFAULT_CORRECT_COUNT, VALID_QUESTION_TYPE);","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, question::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"    public void toModelType_invalidImportance_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"neojxuan"},"content":"        JsonAdaptedQuestion question \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"aryagiat"},"content":"                new JsonAdaptedQuestion(VALID_NAME, INVALID_IMPORTANCE, VALID_TAGS,","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"cedricongjh"},"content":"                        VALID_CHOICES, DEFAULT_ATTEMPT_COUNT, DEFAULT_CORRECT_COUNT, VALID_QUESTION_TYPE);","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"        String expectedMessage \u003d Importance.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, question::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"    public void toModelType_nullImportance_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"aryagiat"},"content":"        JsonAdaptedQuestion question \u003d new JsonAdaptedQuestion(VALID_NAME, null, VALID_TAGS,","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"cedricongjh"},"content":"                VALID_CHOICES, DEFAULT_ATTEMPT_COUNT, DEFAULT_CORRECT_COUNT, VALID_QUESTION_TYPE);","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"neojxuan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Importance.class.getSimpleName());","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, question::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"neojxuan"},"content":"        JsonAdaptedQuestion question \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"aryagiat"},"content":"                new JsonAdaptedQuestion(VALID_NAME, VALID_IMPORTANCE, invalidTags,","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"cedricongjh"},"content":"                        VALID_CHOICES, DEFAULT_ATTEMPT_COUNT, DEFAULT_CORRECT_COUNT, VALID_QUESTION_TYPE);","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"neojxuan"},"content":"        assertThrows(IllegalValueException.class, question::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Agentum07"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Agentum07"},"content":"    public void toModelType_invalidChoices_throwsIllegalValueException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Agentum07"},"content":"        List\u003cJsonAdaptedChoice\u003e invalidChoices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"Agentum07"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e invalidChoices","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Agentum07"},"content":"            .add(new JsonAdaptedChoice(new Choice(INVALID_CHOICE, true))));","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"cedricongjh"},"content":"    public void toModelType_validQuestionType_returnsCorrectQuestionType() throws IllegalValueException {","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"cedricongjh"},"content":"        JsonAdaptedQuestion tfQuestion \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"cedricongjh"},"content":"                new JsonAdaptedQuestion(VALID_NAME, VALID_IMPORTANCE, VALID_TAGS,","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"cedricongjh"},"content":"                        VALID_TF_CHOICES, DEFAULT_ATTEMPT_COUNT, DEFAULT_CORRECT_COUNT, TF_QUESTION_TYPE);","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"cedricongjh"},"content":"        assertTrue(tfQuestion.toModelType() instanceof TrueFalseQuestion);","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"cedricongjh"},"content":"        JsonAdaptedQuestion mcqQuestion \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"cedricongjh"},"content":"                new JsonAdaptedQuestion(VALID_NAME, VALID_IMPORTANCE, VALID_TAGS,","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"cedricongjh"},"content":"                        VALID_CHOICES, DEFAULT_ATTEMPT_COUNT, DEFAULT_CORRECT_COUNT, MCQ_QUESTION_TYPE);","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"cedricongjh"},"content":"        assertTrue(mcqQuestion.toModelType() instanceof MultipleChoiceQuestion);","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"cedricongjh"},"content":"    public void toModelType_invalidQuestionType_throwsIllegalValueException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"cedricongjh"},"content":"        JsonAdaptedQuestion question \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"cedricongjh"},"content":"                new JsonAdaptedQuestion(VALID_NAME, VALID_IMPORTANCE, VALID_TAGS,","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"cedricongjh"},"content":"                        VALID_CHOICES, DEFAULT_ATTEMPT_COUNT, DEFAULT_CORRECT_COUNT, INVALID_QUESTION_TYPE);","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"cedricongjh"},"content":"        assertThrows(IllegalValueException.class, INVALID_QUESTION_TYPE_MESSAGE, question::toModelType);","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"neojxuan":27,"aryagiat":7,"cedricongjh":38,"-":42,"Agentum07":11}},{"path":"src/test/java/seedu/smartnus/storage/JsonSerializableSmartNusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.util.JsonUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.SmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.testutil.TypicalQuestions;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Agentum07"},"content":"public class JsonSerializableSmartNusTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Agentum07"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableSmartNusTest\");","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"    private static final Path TYPICAL_QUESTIONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalQuestionsSmartNus.json\");","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"    private static final Path INVALID_QUESTION_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidQuestionSmartNus.json\");","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"    private static final Path DUPLICATE_QUESTION_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateQuestionSmartNus.json\");","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"    public void toModelType_typicalQuestionsFile_success() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Agentum07"},"content":"        JsonSerializableSmartNus dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_QUESTIONS_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Agentum07"},"content":"                JsonSerializableSmartNus.class).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"        SmartNus smartNusFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"        SmartNus typicalQuestionsSmartNus \u003d TypicalQuestions.getTypicalSmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"        assertEquals(smartNusFromFile, typicalQuestionsSmartNus);","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"    public void toModelType_invalidQuestionFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Agentum07"},"content":"        JsonSerializableSmartNus dataFromFile \u003d JsonUtil.readJsonFile(INVALID_QUESTION_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Agentum07"},"content":"                JsonSerializableSmartNus.class).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"    public void toModelType_duplicateQuestions_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Agentum07"},"content":"        JsonSerializableSmartNus dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_QUESTION_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Agentum07"},"content":"                JsonSerializableSmartNus.class).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Agentum07"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSmartNus.MESSAGE_DUPLICATE_QUESTION,","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"neojxuan":15,"-":23,"Agentum07":9}},{"path":"src/test/java/seedu/smartnus/storage/JsonSmartNusStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.HOON;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.IDA;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.getTypicalSmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.SmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Agentum07"},"content":"public class JsonSmartNusStorageTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Agentum07"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSmartNusStorageTest\");","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"    public void readSmartNus_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e readSmartNus(null));","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"    private java.util.Optional\u003cReadOnlySmartNus\u003e readSmartNus(String filePath) throws Exception {","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"        return new JsonSmartNusStorage(Paths.get(filePath)).readSmartNus(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"        assertFalse(readSmartNus(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSmartNus(\"notJsonFormatSmartNus.json\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"    public void readSmartNus_invalidQuestionSmartNus_throwDataConversionException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSmartNus(\"invalidQuestionSmartNus.json\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"    public void readSmartNus_invalidAndValidQuestionSmartNus_throwDataConversionException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSmartNus(","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"neojxuan"},"content":"                \"invalidAndValidQuestionSmartNus.json\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"    public void readAndSaveSmartNus_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"        Path filePath \u003d testFolder.resolve(\"TempSmartNus.json\");","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"neojxuan"},"content":"        SmartNus original \u003d getTypicalSmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"        JsonSmartNusStorage jsonSmartNusStorage \u003d new JsonSmartNusStorage(filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"        jsonSmartNusStorage.saveSmartNus(original, filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"        ReadOnlySmartNus readBack \u003d jsonSmartNusStorage.readSmartNus(filePath).get();","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"neojxuan"},"content":"        assertEquals(original, new SmartNus(readBack));","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"        original.addQuestion(HOON);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"        original.removeQuestion(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"        jsonSmartNusStorage.saveSmartNus(original, filePath);","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"        readBack \u003d jsonSmartNusStorage.readSmartNus(filePath).get();","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"        assertEquals(original, new SmartNus(readBack));","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"neojxuan"},"content":"        original.addQuestion(IDA);","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"neojxuan"},"content":"        jsonSmartNusStorage.saveSmartNus(original); // file path not specified","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"        readBack \u003d jsonSmartNusStorage.readSmartNus().get(); // file path not specified","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"neojxuan"},"content":"        assertEquals(original, new SmartNus(readBack));","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"neojxuan"},"content":"    public void saveSmartNus_nullSmartNus_throwsNullPointerException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSmartNus(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"neojxuan"},"content":"     * Saves {@code smartNus} at the specified {@code filePath}.","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"neojxuan"},"content":"    private void saveSmartNus(ReadOnlySmartNus smartNus, String filePath) {","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"Agentum07"},"content":"            new JsonSmartNusStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"neojxuan"},"content":"                    .saveSmartNus(smartNus, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"neojxuan"},"content":"    public void saveSmartNus_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"neojxuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSmartNus(new SmartNus(), null));","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"neojxuan":43,"-":65,"Agentum07":3}},{"path":"src/test/java/seedu/smartnus/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.GuiSettings;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"        userPrefs.setSmartNusFilePath(Paths.get(\"smartnus.json\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"neojxuan":6,"-":117}},{"path":"src/test/java/seedu/smartnus/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.TypicalQuestions.getTypicalSmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.GuiSettings;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.ReadOnlySmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.SmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"        JsonSmartNusStorage smartNusStorage \u003d new JsonSmartNusStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"        storageManager \u003d new StorageManager(smartNusStorage, userPrefsStorage);","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"    public void smartNusReadSave() throws Exception {","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"Agentum07"},"content":"         * {@link JsonSmartNusStorage} class.","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Agentum07"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonSmartNusStorageTest} class.","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"        SmartNus original \u003d getTypicalSmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"neojxuan"},"content":"        storageManager.saveSmartNus(original);","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"        ReadOnlySmartNus retrieved \u003d storageManager.readSmartNus().get();","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"        assertEquals(original, new SmartNus(retrieved));","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"    public void getSmartNusFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"        assertNotNull(storageManager.getSmartNusFilePath());","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":15,"-":51,"Agentum07":2}},{"path":"src/test/java/seedu/smartnus/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.testutil;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"neojxuan":1,"-":33}},{"path":"src/test/java/seedu/smartnus/testutil/ChoiceBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.testutil;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"public class ChoiceBuilder {","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"neojxuan":4}},{"path":"src/test/java/seedu/smartnus/testutil/EditQuestionDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.testutil;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.EditCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.EditCommand.EditQuestionDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Importance;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Name;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":" * A utility class to help with building EditQuestionDescriptor objects.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"public class EditQuestionDescriptorBuilder {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"    private EditQuestionDescriptor descriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"    public EditQuestionDescriptorBuilder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"        descriptor \u003d new EditQuestionDescriptor();","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"    public EditQuestionDescriptorBuilder(EditCommand.EditQuestionDescriptor descriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"        this.descriptor \u003d new EditQuestionDescriptor(descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"     * Returns an {@code EditQuestionDescriptor} with fields containing {@code question}\u0027s details","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"    public EditQuestionDescriptorBuilder(Question question) {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"        descriptor \u003d new EditCommand.EditQuestionDescriptor();","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"        descriptor.setName(question.getName());","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"        descriptor.setImportance(question.getImportance());","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"        descriptor.setTags(question.getTags());","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"        descriptor.setWrongChoices(question.getWrongChoices());","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"        descriptor.setAnswer(question.getCorrectChoice());","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"        descriptor.setTfChoices(question.getChoices());","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"     * Sets the {@code Name} of the {@code EditQuestionDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"    public EditQuestionDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"     * Sets the {@code Importance} of the {@code EditQuestionDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"    public EditQuestionDescriptorBuilder withImportance(String importance) {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"        descriptor.setImportance(new Importance(importance));","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditQuestionDescriptor}","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"    public EditQuestionDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"     * Parses the {@code wrongChoices} into a {@code Set\u003cChoice\u003e} and set it to the {@code EditQuestionDescriptor}","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"neojxuan"},"content":"     * that we are building.","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"neojxuan"},"content":"    public EditQuestionDescriptorBuilder withWrongChoices(String... wrongChoices) {","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"neojxuan"},"content":"        Set\u003cChoice\u003e choiceSet \u003d Stream.of(wrongChoices).map(choice -\u003e new Choice(choice, false))","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"neojxuan"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"        descriptor.setWrongChoices(choiceSet);","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"        return this;","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"neojxuan"},"content":"     * Sets the {@code answer} of the {@code EditQuestionDescriptor} that we are building.","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"neojxuan"},"content":"    public EditQuestionDescriptorBuilder withAnswer(String answer) {","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"neojxuan"},"content":"        descriptor.setAnswer(new Choice(answer, true));","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"        return this;","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"neojxuan"},"content":"     * Sets the {@code choices} of the {@code EditQuestionDescriptor} that we are building.","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"neojxuan"},"content":"    public EditQuestionDescriptorBuilder withTfChoices(Set\u003cChoice\u003e choices) {","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"neojxuan"},"content":"        descriptor.setTfChoices(choices);","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"neojxuan"},"content":"        return this;","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"neojxuan"},"content":"    public EditCommand.EditQuestionDescriptor build() {","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"neojxuan":59,"-":40}},{"path":"src/test/java/seedu/smartnus/testutil/QuestionBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.testutil;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Importance;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.MultipleChoiceQuestion;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Name;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"import seedu.smartnus.model.question.Statistic;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.TrueFalseQuestion;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":" * A utility class to help with building Question objects.","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"public class QuestionBuilder {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"    public static final String DEFAULT_IMPORTANCE \u003d \"1\";","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"    public static final Choice DEFAULT_WRONG_CHOICE_1 \u003d new Choice(\"wrong option 1\", false);","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"    public static final Choice DEFAULT_WRONG_CHOICE_2 \u003d new Choice(\"wrong option 2\", false);","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"    public static final Choice DEFAULT_WRONG_CHOICE_3 \u003d new Choice(\"wrong option 3\", false);","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"    public static final Choice DEFAULT_ANSWER \u003d new Choice(\"answer\", true);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"    private Importance importance;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"    private Set\u003cChoice\u003e choices;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"    private Statistic statistic;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"     * Creates a {@code QuestionBuilder} with the default details.","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"neojxuan"},"content":"    public QuestionBuilder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"        importance \u003d new Importance(DEFAULT_IMPORTANCE);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"        choices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"        choices.addAll(List.of(DEFAULT_WRONG_CHOICE_1, DEFAULT_WRONG_CHOICE_2, DEFAULT_WRONG_CHOICE_3,","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"                DEFAULT_ANSWER));","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"        statistic \u003d new Statistic();","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"     * Initializes the QuestionBuilder with the data of {@code questionToCopy}.","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"    public QuestionBuilder(Question questionToCopy) {","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"        name \u003d questionToCopy.getName();","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"        importance \u003d questionToCopy.getImportance();","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"neojxuan"},"content":"        tags \u003d new HashSet\u003c\u003e(questionToCopy.getTags());","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"neojxuan"},"content":"        choices \u003d new HashSet\u003c\u003e(questionToCopy.getChoices());","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"aryagiat"},"content":"        statistic \u003d questionToCopy.getStatistic();","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"neojxuan"},"content":"     * Sets the {@code Name} of the {@code Question} that we are building.","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"    public QuestionBuilder withName(String name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"neojxuan"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Question} that we are building.","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"neojxuan"},"content":"    public QuestionBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"neojxuan"},"content":"     * Sets the {@code Importance} of the {@code Question} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"    public QuestionBuilder withImportance(String importance) {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"        this.importance \u003d new Importance(importance);","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"neojxuan"},"content":"     * Sets the {@code Choices} of the {@code Question} that we are building to","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"     * a set containing choices.","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"neojxuan"},"content":"    public QuestionBuilder withChoices(Choice ... choices) {","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"neojxuan"},"content":"        this.choices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"neojxuan"},"content":"        for (Choice choice : choices) {","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"neojxuan"},"content":"            this.choices.add(choice);","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"neojxuan"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"neojxuan"},"content":"     * Builds the the {@code Question} that we are building.","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"neojxuan"},"content":"    public Question build() {","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"neojxuan"},"content":"        // TODO: edit when more Question types are supported","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"neojxuan"},"content":"        return new MultipleChoiceQuestion(name, importance, tags, choices, statistic);","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"neojxuan"},"content":"    public Question buildTrueFalse() {","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"neojxuan"},"content":"        return new TrueFalseQuestion(name, importance, tags, choices, statistic);","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"neojxuan":59,"aryagiat":4,"-":43}},{"path":"src/test/java/seedu/smartnus/testutil/QuestionUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.testutil;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_ANSWER;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_IMPORTANCE;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_OPTION;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_QUESTION;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.logic.commands.EditCommand.EditQuestionDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":" * A utility class for Question.","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"public class QuestionUtil {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"     * Returns the part of command string for the given {@code question}\u0027s details.","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"    public static String getQuestionDetails(Question question) {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"        sb.append(PREFIX_QUESTION + question.getName().fullName + \" \");","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"        sb.append(PREFIX_IMPORTANCE + question.getImportance().value + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"        question.getTags().stream().forEach(","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"neojxuan"},"content":"     * Returns the part of command string for the given {@code EditQuestionDescriptor}\u0027s details.","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"neojxuan"},"content":"    public static String getEditQuestionDescriptorDetails(EditQuestionDescriptor descriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_QUESTION).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"neojxuan"},"content":"        descriptor.getImportance().ifPresent(importance -\u003e sb.append(PREFIX_IMPORTANCE).append(importance.value)","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"neojxuan"},"content":"                .append(\" \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"neojxuan"},"content":"        if (descriptor.getWrongChoices().isPresent()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"            Set\u003cChoice\u003e wrongChoices \u003d descriptor.getWrongChoices().get();","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"            wrongChoices.forEach(wc -\u003e sb.append(PREFIX_OPTION).append(wc.getTitle()).append(\" \"));","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"        if (descriptor.getAnswer().isPresent()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"            Choice answer \u003d descriptor.getAnswer().get();","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"            sb.append(PREFIX_ANSWER).append(answer.getTitle()).append(\" \");","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"neojxuan":30,"-":30}},{"path":"src/test/java/seedu/smartnus/testutil/QuizBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.testutil;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.Quiz;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.QuizManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":" * A utility class to help with building Quiz Objects","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"public class QuizBuilder {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"    public static final Question DEFAULT_QUESTION_1 \u003d new QuestionBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"    public static final Question DEFAULT_QUESTION_2 \u003d new QuestionBuilder().withName(\"1+1\u003d?\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"    public static final Question DEFAULT_QUESTION_3 \u003d new QuestionBuilder().withName(\"2+2\u003d?\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"    private final List\u003cQuestion\u003e questions;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"     * Creates a {@code QuestionBuilder} with the default details.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"    public QuizBuilder() {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"        questions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"        questions.add(DEFAULT_QUESTION_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"        questions.add(DEFAULT_QUESTION_2);","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"aryagiat"},"content":"        questions.add(DEFAULT_QUESTION_3);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"aryagiat"},"content":"     * Initializes the QuestionBuilder with the data of {@code questions}","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"aryagiat"},"content":"     * @param questions The list of questions.","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"aryagiat"},"content":"    public QuizBuilder(List\u003cQuestion\u003e questions) {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"aryagiat"},"content":"        this.questions \u003d questions;","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"aryagiat"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"aryagiat"},"content":"     * Builds the {@code Quiz} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"aryagiat"},"content":"     * @return A Quiz object.","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"aryagiat"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"aryagiat"},"content":"    public Quiz build() {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"aryagiat"},"content":"        // TODO: edit when more Quiz types are supported","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"aryagiat"},"content":"        return new QuizManager(questions);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"aryagiat"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"neojxuan":4,"aryagiat":43}},{"path":"src/test/java/seedu/smartnus/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.testutil;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":1,"-":71}},{"path":"src/test/java/seedu/smartnus/testutil/SmartNusBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.testutil;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.SmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":" * A utility class to help with building SmartNus objects.","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":" *     {@code SmartNus smartNus \u003d new SmartNusBuilder().build();}","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"public class SmartNusBuilder {","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"neojxuan"},"content":"    private SmartNus smartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"    public SmartNusBuilder() {","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"        smartNus \u003d new SmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":"    public SmartNusBuilder(SmartNus smartNus) {","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"neojxuan"},"content":"        this.smartNus \u003d smartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"neojxuan"},"content":"     * Adds a new {@code Question} to the {@code SmartNus} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"    public SmartNusBuilder withQuestion(Question question) {","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"neojxuan"},"content":"        smartNus.addQuestion(question);","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"neojxuan"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"    public SmartNus build() {","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"        return smartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"neojxuan":34}},{"path":"src/test/java/seedu/smartnus/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.testutil;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.index.Index;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"neojxuan"},"content":"     * Returns the middle index of the question in the {@code model}\u0027s question list.","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"neojxuan"},"content":"        return Index.fromOneBased(model.getFilteredQuestionList().size() / 2);","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"     * Returns the last index of the question in the {@code model}\u0027s question list.","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"        return Index.fromOneBased(model.getFilteredQuestionList().size());","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"     * Returns the question in the {@code model}\u0027s question list at {@code index}.","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"    public static Question getQuestion(Model model, Index index) {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"        return model.getFilteredQuestionList().get(index.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"neojxuan":11,"-":44}},{"path":"src/test/java/seedu/smartnus/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.testutil;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.commons.core.index.Index;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"neojxuan"},"content":"    public static final Index INDEX_FIRST_QUESTION \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"neojxuan"},"content":"    public static final Index INDEX_SECOND_QUESTION \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"neojxuan"},"content":"    public static final Index INDEX_THIRD_QUESTION \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"neojxuan":5,"-":7}},{"path":"src/test/java/seedu/smartnus/testutil/TypicalQuestions.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.testutil;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_IMPORTANCE_AMY;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_IMPORTANCE_BOB;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.SmartNus;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.choice.Choice;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"neojxuan"},"content":" * A utility class containing a list of {@code Question} objects to be used in tests.","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"neojxuan"},"content":"public class TypicalQuestions {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"neojxuan"},"content":"    public static final int MCQ_ONE_BASED_INDEX \u003d 8;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"neojxuan"},"content":"    public static final int TF_ONE_BASED_INDEX \u003d 9;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"neojxuan"},"content":"    public static final Question ALICE \u003d new QuestionBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"neojxuan"},"content":"            .withImportance(\"1\")","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"neojxuan"},"content":"    public static final Question BENSON \u003d new QuestionBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"neojxuan"},"content":"            .withImportance(\"2\")","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Agentum07"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"neojxuan"},"content":"            .withChoices(new Choice(\"good guy\", true),","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"neojxuan"},"content":"                    new Choice(\"wrong good guy\", false),","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"neojxuan"},"content":"                    new Choice(\"wrong 2\", false),","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"neojxuan"},"content":"                    new Choice(\"wrong 3\", false)).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"    public static final Question MCQ_QUESTION \u003d new QuestionBuilder().withName(\"What is 1+1?\")","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"            .withImportance(\"1\")","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"            .withChoices(new Choice(\"2\", true),","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"                    new Choice(\"1\", false), new Choice(\"4\", false),","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"                    new Choice(\"3\", false)).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"    public static final Question TF_QUESTION \u003d new QuestionBuilder().withName(\"Is 1+1 \u003d 2?\")","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"            .withImportance(\"2\")","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"            .withChoices(new Choice(Choice.TRUE_CHOICE_TITLE, true),","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"neojxuan"},"content":"                    new Choice(Choice.FALSE_CHOICE_TITLE, false)).buildTrueFalse();","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"neojxuan"},"content":"    public static final Question CARL \u003d new QuestionBuilder().withName(\"Carl Kurz\").withImportance(\"3\")","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"neojxuan"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"neojxuan"},"content":"    public static final Question DANIEL \u003d new QuestionBuilder().withName(\"Daniel Meier\").withImportance(\"1\")","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"neojxuan"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"neojxuan"},"content":"    public static final Question ELLE \u003d new QuestionBuilder().withName(\"Elle Meyer\").withImportance(\"2\")","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"neojxuan"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"neojxuan"},"content":"    public static final Question FIONA \u003d new QuestionBuilder().withName(\"Fiona Kunz\").withImportance(\"3\")","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"neojxuan"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"neojxuan"},"content":"    public static final Question GEORGE \u003d new QuestionBuilder().withName(\"George Best\").withImportance(\"1\")","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"neojxuan"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"neojxuan"},"content":"    public static final Question HOON \u003d new QuestionBuilder().withName(\"Hoon Meier\").withImportance(\"2\")","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"neojxuan"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"neojxuan"},"content":"    public static final Question IDA \u003d new QuestionBuilder().withName(\"Ida Mueller\").withImportance(\"3\")","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"neojxuan"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"neojxuan"},"content":"    // Manually added - Question\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"neojxuan"},"content":"    public static final Question AMY \u003d new QuestionBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"neojxuan"},"content":"            .withImportance(VALID_IMPORTANCE_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"neojxuan"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"neojxuan"},"content":"    public static final Question BOB \u003d new QuestionBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"neojxuan"},"content":"            .withImportance(VALID_IMPORTANCE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"neojxuan"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"neojxuan"},"content":"    private TypicalQuestions() {} // prevents instantiation","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"neojxuan"},"content":"     * Returns an {@code SmartNus} with all the typical questions.","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"neojxuan"},"content":"    public static SmartNus getTypicalSmartNus() {","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"neojxuan"},"content":"        SmartNus ab \u003d new SmartNus();","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"neojxuan"},"content":"        for (Question question : getTypicalQuestions()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"neojxuan"},"content":"            ab.addQuestion(question);","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":85,"author":{"gitId":"neojxuan"},"content":"    public static List\u003cQuestion\u003e getTypicalQuestions() {","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"neojxuan"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE, MCQ_QUESTION,","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"neojxuan"},"content":"                TF_QUESTION));","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"neojxuan":53,"cedricongjh":8,"-":27,"Agentum07":1}},{"path":"src/test/java/seedu/smartnus/testutil/TypicalQuiz.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.testutil;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"aryagiat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.question.Question;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.model.quiz.Quiz;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"aryagiat"},"content":"public class TypicalQuiz {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"aryagiat"},"content":"    public static final Quiz DEFAULT_QUIZ \u003d new QuizBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"aryagiat"},"content":"    public static final Quiz SEVEN_QUESTIONS_QUIZ \u003d new QuizBuilder(TypicalQuestions.getTypicalQuestions())","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"aryagiat"},"content":"            .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"aryagiat"},"content":"    public static final Quiz FIVE_QUESTIONS_QUIZ \u003d new QuizBuilder(","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"aryagiat"},"content":"            new ArrayList\u003cQuestion\u003e() {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"aryagiat"},"content":"                {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"aryagiat"},"content":"                    add(TypicalQuestions.ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"aryagiat"},"content":"                    add(TypicalQuestions.BENSON);","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"aryagiat"},"content":"                    add(TypicalQuestions.CARL);","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"aryagiat"},"content":"                    add(TypicalQuestions.DANIEL);","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"aryagiat"},"content":"                    add(TypicalQuestions.ELLE);","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"aryagiat"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"aryagiat"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"aryagiat"},"content":"    ).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"aryagiat"},"content":"    private TypicalQuiz() {} // Prevents instantiation","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"aryagiat"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"aryagiat"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"neojxuan":3,"aryagiat":24}},{"path":"src/test/java/seedu/smartnus/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"neojxuan":1,"-":34}},{"path":"src/test/java/seedu/smartnus/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"neojxuan"},"content":"package seedu.smartnus.ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"neojxuan"},"content":"import static seedu.smartnus.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"neojxuan"},"content":"import seedu.smartnus.MainApp;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"neojxuan":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"\u003c?import seedu.smartnus.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"neojxuan":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"neojxuan"},"content":"\u003cfx:root type\u003d\"seedu.smartnus.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"neojxuan":1,"-":5}}]
