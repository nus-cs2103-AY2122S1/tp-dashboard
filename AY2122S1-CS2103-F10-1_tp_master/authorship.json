[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103-F10-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103-F10-1/tp/actions)","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"* This is **a brown-field team project done by NUS students**.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"  * as an application management tool for HRs","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  * as a case study","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"* The project simulates an ongoing software project for a desktop application (called _MrTechRecruiter_) used for managing job application.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"* It is named `MrTechRecruiter` (`MTR` for short) because it is created for recruiters in tech companies to better manage job applications.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"* For the detailed documentation of this project, see the **[MrTechRecruiter Product Website](https://ay2122s1-cs2103-f10-1.github.io/tp/)**.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"* This project is **based on [AddressBook Level 3](https://github.com/se-edu/addressbook-level3)** project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Harry-Gao-H":10,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"LMAOboxhack"},"content":"    archiveName \u003d \u0027mrtechrecruiter.jar\u0027","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"LMAOboxhack"},"content":"run {","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"LMAOboxhack"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"LMAOboxhack":5,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"You can reach us at the email `e0518538@u.nus.edu`","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"### Lin Fangyuan","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"\u003cimg src\u003d\"images/lmaoboxhack.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"[[github](https://github.com/lmaoboxhack)]","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"[[portfolio](team/lmaoboxhack.md)]","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"* Responsibilities: Integration","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"### Tan Chin Han, Benjamin","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"\u003cimg src\u003d\"images/benjamintan99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"[[github](http://github.com/BenjaminTan99)] [[portfolio](team/benjamintan99.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"* Responsibilities: Documentation, Deliverables \u0026 Deadlines","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"### Heng Chen Kai, Darren","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"\u003cimg src\u003d\"images/darren2pro.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"[[github](http://github.com/darren2pro)] [[portfolio](team/darren2pro.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"### Gao Haochun","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"\u003cimg src\u003d\"images/harry-gao-h.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"[[github](http://github.com/harry-gao-h)]","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"* Responsibilities: Code quality, Scheduling \u0026 Tracking","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"Harry-Gao-H":4,"LMAOboxhack":4,"darren2pro":4,"-":31,"BenjaminTan99":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"Harry-Gao-H"},"content":"### UI component [need changes]","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"Harry-Gao-H"},"content":"### Logic component [need changes]","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"BenjaminTan99"},"content":"### \\[Incomplete\\] Rejection Rate feature","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"BenjaminTan99"},"content":"#### Proposed Implementation","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"BenjaminTan99"},"content":"The proposed rejection rate mechanism is facilitated by `Model` and `Calculator`.","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"BenjaminTan99"},"content":"The `Model` component checks if the position exists and accesses it, while `Calculator` calculates the rejection rate.","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"BenjaminTan99"},"content":"Implements the following functions:","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"BenjaminTan99"},"content":"* `ModelManager#hasPositionWithTitle()`  — Checks if a position with such a given title exists.","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"BenjaminTan99"},"content":"* `Calculator#calculateRejectionRate()`  — Calculates the rejection rate of a position based on the number of applicants and number of rejected applicants.","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"BenjaminTan99"},"content":"These operations are exposed in the `Model` interface as `Model#hasPositionWithTitle()` and `Model#calculateRejectionRate` respectively.","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"BenjaminTan99"},"content":"Given below is an example usage scenario and how the rejection rate mechanism works at every step.","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"BenjaminTan99"},"content":"Step 1. The user launches the application and is assumed to have some positions and applicants applying for a position in the PositionBook and ApplicantBook respectively.","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"BenjaminTan99"},"content":"![InitialState](images/rejection-rates/Initial-state.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"BenjaminTan99"},"content":"Step 2. The user executes `rate pos/software engineer` command to calculate the rejection rate of Software Engineer in the PositionBook.","lastModifiedDate":"2021-10-23"},{"lineNumber":176,"author":{"gitId":"BenjaminTan99"},"content":"The `rate` command calls `Model#hasPositionWithTitle`, causing the model to check whether `Software Engineer` exists in the database as a Position.","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":178,"author":{"gitId":"BenjaminTan99"},"content":"![Step2](images/rejection-rates/Step2.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":179,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"BenjaminTan99"},"content":"Step 3. If the position exists, it will access the ApplicantBook via `Model#calculateRejectionRate()`, beginning a count of the number of applicants for the job and the number of rejected applicants of the same job.","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"BenjaminTan99"},"content":"![Step3](images/rejection-rates/Step3.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"BenjaminTan99"},"content":"Step 4. After these numbers have been obtained, the `Calculator` class is called to calculate via `Calculator#calculateRejectionRate`. This resulting floating point number is then the rejection rate of the position.","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"BenjaminTan99"},"content":"![SeqDiagram](images/rejection-rates/SeqDiagram.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"BenjaminTan99"},"content":"Step 5. Any command the user executes next simply refreshes the current state to its original state as shown in step 1.","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"BenjaminTan99"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"BenjaminTan99"},"content":"#### Aspect: How rejection rate executes:","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"BenjaminTan99"},"content":"* **Alternative 1** (current choice): Only calculate the rejection rate when needed and not store it anywhere.","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"BenjaminTan99"},"content":"    * Pros: Saves a significant amount of space and reduces immutability. Implementation is simple.","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"BenjaminTan99"},"content":"    * Cons: A user could want to calculate many rejection rates frequently and hence not storing these values might have performance issues in the long run.","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"BenjaminTan99"},"content":"* **Alternative 2**: Store all rejection rates with their respective positions in a dictionary.","lastModifiedDate":"2021-10-23"},{"lineNumber":198,"author":{"gitId":"BenjaminTan99"},"content":"    * Pros: Accessing the rejection rates of a certain position will only require access to the dictionary and nothing else - limited accessibility.","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"BenjaminTan99"},"content":"      Also, accessing a rejection rate will be much quicker.","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"BenjaminTan99"},"content":"    * Cons: Potentially a large amount of space required, slowing performance. Also, the dictionary needs to be updated everytime an applicant\u0027s status changes or when a position/applicant is added/deleted,","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"BenjaminTan99"},"content":"      which could result in many inter-linked implementations for the dictionary, rendering it slow.","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"LMAOboxhack"},"content":"### Filter applicants feature","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"LMAOboxhack"},"content":"#### Implementation","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"LMAOboxhack"},"content":"The filter feature is achieved using the functionality of the `FilteredList` class built into JavaFX,","lastModifiedDate":"2021-10-22"},{"lineNumber":208,"author":{"gitId":"LMAOboxhack"},"content":"which filters its contents based on a specified `Predicate`.  ","lastModifiedDate":"2021-10-22"},{"lineNumber":209,"author":{"gitId":"LMAOboxhack"},"content":"This `Predicate` is constructed from the filters specified whenever the `filter-applicant` command is called.","lastModifiedDate":"2021-10-22"},{"lineNumber":210,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"LMAOboxhack"},"content":"Given below is an example usage scenario of the applicant filter feature.","lastModifiedDate":"2021-10-22"},{"lineNumber":212,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"LMAOboxhack"},"content":"*{More to be added}*","lastModifiedDate":"2021-10-22"},{"lineNumber":214,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"LMAOboxhack"},"content":"#### Rationale for implementation","lastModifiedDate":"2021-10-22"},{"lineNumber":216,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"LMAOboxhack"},"content":"The `Descriptor` pattern (used similarly in features such as the editing of applicants) comes in handy whenever its corresponding command accepts a variable number of arguments \u0026 unspecified arguments are assumed to be ignored.","lastModifiedDate":"2021-10-22"},{"lineNumber":218,"author":{"gitId":"LMAOboxhack"},"content":"For instance, the edit applicant feature accepts a variable number of fields to be edited, and leaves all unspecified fields untouched.","lastModifiedDate":"2021-10-22"},{"lineNumber":219,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"LMAOboxhack"},"content":"The filter feature fits in this category, as the user should be able to specify a variable number of filtering criteria,","lastModifiedDate":"2021-10-22"},{"lineNumber":221,"author":{"gitId":"LMAOboxhack"},"content":"and unspecified criteria should be left out of the filter.","lastModifiedDate":"2021-10-22"},{"lineNumber":222,"author":{"gitId":"LMAOboxhack"},"content":"Hence, the pattern is implemented here in `FilterApplicantDescriptor`, which is used to construct the `Predicate`.","lastModifiedDate":"2021-10-22"},{"lineNumber":223,"author":{"gitId":"LMAOboxhack"},"content":"It is also used to in the validation of the filtering criteria.","lastModifiedDate":"2021-10-22"},{"lineNumber":224,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"LMAOboxhack"},"content":"*{More to be added}*","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"LMAOboxhack"},"content":"#### Alternatives considered","lastModifiedDate":"2021-10-22"},{"lineNumber":228,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"LMAOboxhack"},"content":"- Use of the Java Streams API to filter the applicants using chained calls to `Stream#filter`","lastModifiedDate":"2021-10-22"},{"lineNumber":230,"author":{"gitId":"LMAOboxhack"},"content":"    - Does not make good use of the in-built functionality of `FilteredList`","lastModifiedDate":"2021-10-22"},{"lineNumber":231,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"LMAOboxhack"},"content":"*{More to be added}*","lastModifiedDate":"2021-10-22"},{"lineNumber":233,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"darren2pro"},"content":"### Add applicant feature","lastModifiedDate":"2021-10-22"},{"lineNumber":320,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":321,"author":{"gitId":"darren2pro"},"content":"The implementation of the add applicant feature is achieved by the `AddApplicantCommand` class. Just like all other","lastModifiedDate":"2021-10-22"},{"lineNumber":322,"author":{"gitId":"darren2pro"},"content":"commands in MTR, it extends the Command class. The most important attribute that it has, is the `ApplicantParticulars`","lastModifiedDate":"2021-10-22"},{"lineNumber":323,"author":{"gitId":"darren2pro"},"content":"attribute, which contains all the details of the applicant (Name, Phone, Email, Address, ","lastModifiedDate":"2021-10-22"},{"lineNumber":324,"author":{"gitId":"darren2pro"},"content":"Title of Position Applying to), parsed straight from the user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":325,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":326,"author":{"gitId":"darren2pro"},"content":"The `AddApplicantCommand#execute(Model model)` method will use guard clauses to check whether there is a duplicate","lastModifiedDate":"2021-10-22"},{"lineNumber":327,"author":{"gitId":"darren2pro"},"content":"applicant, and whether the position (that this applicant is applying to) input by the user actually exists in","lastModifiedDate":"2021-10-22"},{"lineNumber":328,"author":{"gitId":"darren2pro"},"content":"`positionBook`. If all parameters are valid, the `ApplicantParticulars` will then be passed to Model to add to","lastModifiedDate":"2021-10-22"},{"lineNumber":329,"author":{"gitId":"darren2pro"},"content":"`applicantBook`, using the `Model#addApplicantWithParticulars` method.","lastModifiedDate":"2021-10-24"},{"lineNumber":330,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":331,"author":{"gitId":"darren2pro"},"content":"Given below is an example usage scenario and how the add applicant feature behaves at each step.","lastModifiedDate":"2021-10-22"},{"lineNumber":332,"author":{"gitId":"darren2pro"},"content":"Preconditions: The app is already launched and the appropriate position that the new applicant is applying to already","lastModifiedDate":"2021-10-22"},{"lineNumber":333,"author":{"gitId":"darren2pro"},"content":"exist.","lastModifiedDate":"2021-10-22"},{"lineNumber":334,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":335,"author":{"gitId":"darren2pro"},"content":"Step 1. The user inputs the command `add-applicant n/John Doe p/98765432 e/johnd@example.com a/John street, ","lastModifiedDate":"2021-10-24"},{"lineNumber":336,"author":{"gitId":"darren2pro"},"content":"block 123, #01-01 pos/software engineer`. The app parser will store all the user-input parameters into an","lastModifiedDate":"2021-10-24"},{"lineNumber":337,"author":{"gitId":"darren2pro"},"content":"`applicantParticulars` object, and return the `AddApplicantCommand` instance.","lastModifiedDate":"2021-10-24"},{"lineNumber":338,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":339,"author":{"gitId":"darren2pro"},"content":"The following sequence diagram shows the method invocation in this step.","lastModifiedDate":"2021-10-24"},{"lineNumber":340,"author":{"gitId":"darren2pro"},"content":"![AddApplicantSequenceDiagram1](images/AddApplicantSequenceDiagram1.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":341,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":342,"author":{"gitId":"darren2pro"},"content":"Step 2. LogicManager will execute this `AddApplicantCommand` instance. This will invoke the ","lastModifiedDate":"2021-10-24"},{"lineNumber":343,"author":{"gitId":"darren2pro"},"content":"`Model#addApplicantWithParticulars` method.","lastModifiedDate":"2021-10-24"},{"lineNumber":344,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":345,"author":{"gitId":"darren2pro"},"content":"Step 3. Here, we will retrieve the `position` object from `positionBook`, using the `positionTitle` that the user","lastModifiedDate":"2021-10-24"},{"lineNumber":346,"author":{"gitId":"darren2pro"},"content":"input as argument, and create a new applicant instance using the `applicantParticulars` and `position` object. Then ","lastModifiedDate":"2021-10-24"},{"lineNumber":347,"author":{"gitId":"darren2pro"},"content":"we will add it to the `applicantBook`. ","lastModifiedDate":"2021-10-24"},{"lineNumber":348,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":349,"author":{"gitId":"darren2pro"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If any of the guard clauses fail, i.e. the","lastModifiedDate":"2021-10-24"},{"lineNumber":350,"author":{"gitId":"darren2pro"},"content":"applicant already exist, or the position does not exist, an appropriate exception will be thrown and the applicant","lastModifiedDate":"2021-10-24"},{"lineNumber":351,"author":{"gitId":"darren2pro"},"content":"will not be created.","lastModifiedDate":"2021-10-24"},{"lineNumber":352,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":353,"author":{"gitId":"darren2pro"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":354,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":355,"author":{"gitId":"darren2pro"},"content":"The following activity diagram summarizes the actions taken when LogicManager executes the AddApplicantCommand:","lastModifiedDate":"2021-10-24"},{"lineNumber":356,"author":{"gitId":"darren2pro"},"content":"![AddApplicantActivityDiagram1](images/AddApplicantActivityDiagram1.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":357,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":358,"author":{"gitId":"darren2pro"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-24"},{"lineNumber":359,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":360,"author":{"gitId":"darren2pro"},"content":"**Aspect: How and when the new applicant instance is created:**","lastModifiedDate":"2021-10-24"},{"lineNumber":361,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":362,"author":{"gitId":"darren2pro"},"content":"* **Alternative 1 (current choice):** Saves all the user input as an applicantParticulars object.","lastModifiedDate":"2021-10-24"},{"lineNumber":363,"author":{"gitId":"darren2pro"},"content":"    * Pros: Avoids the unnecessary clutter of passing multiple parameters to multiple method calls.","lastModifiedDate":"2021-10-24"},{"lineNumber":364,"author":{"gitId":"darren2pro"},"content":"    * Cons: May have lead to greater coupling among classes.","lastModifiedDate":"2021-10-24"},{"lineNumber":365,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":366,"author":{"gitId":"darren2pro"},"content":"* **Alternative 2:** Each user input parameter (e.g. Name, Address, PositionTitle etc.) are passed to multiple method","lastModifiedDate":"2021-10-24"},{"lineNumber":367,"author":{"gitId":"darren2pro"},"content":"    calls.","lastModifiedDate":"2021-10-24"},{"lineNumber":368,"author":{"gitId":"darren2pro"},"content":"    * Pros: Will reduce the usage of a new class, thereby reducing coupling.","lastModifiedDate":"2021-10-24"},{"lineNumber":369,"author":{"gitId":"darren2pro"},"content":"    * Cons: This could lead to longer method signatures, longer code, and possibly a less OOP approach.","lastModifiedDate":"2021-10-24"},{"lineNumber":370,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":377,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":378,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":379,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":380,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"LMAOboxhack"},"content":"This product is for HR departments of tech companies that have a large number of applicants and complicated recruitment processes.","lastModifiedDate":"2021-09-30"},{"lineNumber":391,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":392,"author":{"gitId":"LMAOboxhack"},"content":"Additionally, the user:","lastModifiedDate":"2021-09-30"},{"lineNumber":393,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":394,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":398,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"LMAOboxhack"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-30"},{"lineNumber":401,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":402,"author":{"gitId":"LMAOboxhack"},"content":"An efficient applicant management system for HR departments of technology companies to track application statuses and store applicant information.","lastModifiedDate":"2021-09-30"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"Harry-Gao-H"},"content":"| `* * *`  | general user                               | add new job positions | Add applicants to these positions.","lastModifiedDate":"2021-09-29"},{"lineNumber":412,"author":{"gitId":"Harry-Gao-H"},"content":"| `* * *`  | general user                               | delete existing job positions | Remove irrelevant, out-of-date jobs.","lastModifiedDate":"2021-09-29"},{"lineNumber":413,"author":{"gitId":"Harry-Gao-H"},"content":"| `* * *`  | general user                               | add a new applicant under a position      | Store his information within the system                                |","lastModifiedDate":"2021-09-29"},{"lineNumber":414,"author":{"gitId":"darren2pro"},"content":"| `* * *`  | general user                               | delete an applicant from under a position | Remove applicants that are no longer related to this position          |","lastModifiedDate":"2021-09-28"},{"lineNumber":415,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"LMAOboxhack"},"content":"| `* * *`  | user                                       | easily search all relevant applicants through keywords         | compare applicants\u0027 relevant information |","lastModifiedDate":"2021-10-01"},{"lineNumber":417,"author":{"gitId":"LMAOboxhack"},"content":"| `* *`    | user                                       | hide private applicant details   | ensure confidentiality of applicants\u0027 information. |","lastModifiedDate":"2021-10-01"},{"lineNumber":418,"author":{"gitId":"LMAOboxhack"},"content":"| `*`      | user with many applicants in the address book | sort applicants by name           | locate an applicant easily                                                 |","lastModifiedDate":"2021-10-01"},{"lineNumber":419,"author":{"gitId":"BenjaminTan99"},"content":"| `* * *`  | general user                               | view the average rejection rates of all job positions | gauge how competitive a job might be          |","lastModifiedDate":"2021-09-30"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":422,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":425,"author":{"gitId":"LMAOboxhack"},"content":"(For all use cases below, the **System** is `MrTechRecruiter` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-30"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":428,"author":{"gitId":"Harry-Gao-H"},"content":"**Use case: Add a new position**","lastModifiedDate":"2021-09-29"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":430,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":432,"author":{"gitId":"Harry-Gao-H"},"content":"1. User requests to add a new position, with necessary details","lastModifiedDate":"2021-09-29"},{"lineNumber":433,"author":{"gitId":"Harry-Gao-H"},"content":"2. MrTechRecruiter adds the new position and shows a success message","lastModifiedDate":"2021-09-29"},{"lineNumber":434,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":435,"author":{"gitId":"Harry-Gao-H"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":436,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":437,"author":{"gitId":"Harry-Gao-H"},"content":"* 1a. The format is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":438,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":439,"author":{"gitId":"Harry-Gao-H"},"content":"    * 1a1. MrTechRecruiter shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":440,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":441,"author":{"gitId":"Harry-Gao-H"},"content":"  Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":442,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":443,"author":{"gitId":"Harry-Gao-H"},"content":"**Use case: Edit a new position** [coming soon]","lastModifiedDate":"2021-10-22"},{"lineNumber":444,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":445,"author":{"gitId":"Harry-Gao-H"},"content":"**Use case: Delete a new position**","lastModifiedDate":"2021-09-29"},{"lineNumber":446,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":447,"author":{"gitId":"Harry-Gao-H"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":448,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":449,"author":{"gitId":"Harry-Gao-H"},"content":"1. User requests to list positions","lastModifiedDate":"2021-09-29"},{"lineNumber":450,"author":{"gitId":"Harry-Gao-H"},"content":"2. MrTechRecruiter shows a list of positions","lastModifiedDate":"2021-09-29"},{"lineNumber":451,"author":{"gitId":"Harry-Gao-H"},"content":"3. User requests to delete a specific position in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":452,"author":{"gitId":"Harry-Gao-H"},"content":"4. MrTechRecruiter deletes the position","lastModifiedDate":"2021-09-29"},{"lineNumber":453,"author":{"gitId":"Harry-Gao-H"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":454,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":455,"author":{"gitId":"Harry-Gao-H"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":456,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":457,"author":{"gitId":"Harry-Gao-H"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":458,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":459,"author":{"gitId":"Harry-Gao-H"},"content":"    * 2a1. MrTechRecruiter displays a message that no position is in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":460,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":461,"author":{"gitId":"Harry-Gao-H"},"content":"  Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":462,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":463,"author":{"gitId":"Harry-Gao-H"},"content":"* 3a The given name of the position is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":464,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":465,"author":{"gitId":"Harry-Gao-H"},"content":"    * 3a1. MrTechRecruiter shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":466,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":467,"author":{"gitId":"Harry-Gao-H"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2021-09-30"},{"lineNumber":468,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"darren2pro"},"content":"**Use case: Add a new applicant**","lastModifiedDate":"2021-09-28"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"BenjaminTan99"},"content":"1.  User requests to add a new applicant, with all the necessary parameters/details.","lastModifiedDate":"2021-09-30"},{"lineNumber":475,"author":{"gitId":"BenjaminTan99"},"content":"2.  MrTechRecruiter adds the new applicant and shows a success message.","lastModifiedDate":"2021-09-30"},{"lineNumber":476,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":477,"author":{"gitId":"darren2pro"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":478,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":479,"author":{"gitId":"darren2pro"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":480,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":481,"author":{"gitId":"darren2pro"},"content":"* 1a. The format is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":482,"author":{"gitId":"BenjaminTan99"},"content":"    * 1a1. MrTechRecruiter shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":483,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":484,"author":{"gitId":"darren2pro"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-28"},{"lineNumber":485,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":486,"author":{"gitId":"Harry-Gao-H"},"content":"**Use case: Edit a new applicant** [coming soon]","lastModifiedDate":"2021-10-22"},{"lineNumber":487,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":488,"author":{"gitId":"darren2pro"},"content":"**Use case: Delete an applicant**","lastModifiedDate":"2021-09-28"},{"lineNumber":489,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":490,"author":{"gitId":"darren2pro"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":491,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":492,"author":{"gitId":"BenjaminTan99"},"content":"1.  User requests to list applicants.","lastModifiedDate":"2021-09-30"},{"lineNumber":493,"author":{"gitId":"BenjaminTan99"},"content":"2.  MrTechRecruiter shows a list of applicants.","lastModifiedDate":"2021-09-30"},{"lineNumber":494,"author":{"gitId":"BenjaminTan99"},"content":"3.  User requests to delete a specific applicant in the list using the exact name.","lastModifiedDate":"2021-10-01"},{"lineNumber":495,"author":{"gitId":"BenjaminTan99"},"content":"4.  MrTechRecruiter deletes the applicant.","lastModifiedDate":"2021-10-01"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"darren2pro"},"content":"* 3a. The given name is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"darren2pro"},"content":"    * 3a1. MrTechRecruiter shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"BenjaminTan99"},"content":"**Use case: Viewing average rejection rates for all job positions.**","lastModifiedDate":"2021-09-30"},{"lineNumber":512,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":513,"author":{"gitId":"BenjaminTan99"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":514,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":515,"author":{"gitId":"BenjaminTan99"},"content":"1. User requests to see a list of all job positions","lastModifiedDate":"2021-10-01"},{"lineNumber":516,"author":{"gitId":"BenjaminTan99"},"content":"2. MrTechRecruiter displays the list of job positions, and their respective rejection rates.","lastModifiedDate":"2021-09-30"},{"lineNumber":517,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":518,"author":{"gitId":"BenjaminTan99"},"content":"   Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":519,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":520,"author":{"gitId":"BenjaminTan99"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":521,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":522,"author":{"gitId":"BenjaminTan99"},"content":"* 1a. No current job positions.","lastModifiedDate":"2021-09-30"},{"lineNumber":523,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":524,"author":{"gitId":"BenjaminTan99"},"content":"    * 1a1. MrTechRecruiter shows an \u0027No job positions\u0027 message.","lastModifiedDate":"2021-09-30"},{"lineNumber":525,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":526,"author":{"gitId":"BenjaminTan99"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":527,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":528,"author":{"gitId":"BenjaminTan99"},"content":"* 2b. Job positions with relatively high rejection rates.","lastModifiedDate":"2021-09-30"},{"lineNumber":529,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":530,"author":{"gitId":"BenjaminTan99"},"content":"    * 2b1. MrTechRecruiter highlights the job positions with high rejection rates.","lastModifiedDate":"2021-09-30"},{"lineNumber":531,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":532,"author":{"gitId":"BenjaminTan99"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":533,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":534,"author":{"gitId":"BenjaminTan99"},"content":"**Use case: Viewing average rejection rates for a particular job position.**","lastModifiedDate":"2021-09-30"},{"lineNumber":535,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":536,"author":{"gitId":"BenjaminTan99"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":537,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":538,"author":{"gitId":"BenjaminTan99"},"content":"1. User searches for a particular job position using the \u0027find\u0027 function.","lastModifiedDate":"2021-10-01"},{"lineNumber":539,"author":{"gitId":"BenjaminTan99"},"content":"2. MrTechRecruiter displays the job position and its corresponding rejection rate.","lastModifiedDate":"2021-10-01"},{"lineNumber":540,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":541,"author":{"gitId":"BenjaminTan99"},"content":"   Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":542,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":543,"author":{"gitId":"BenjaminTan99"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":544,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":545,"author":{"gitId":"BenjaminTan99"},"content":"* 1a. Job position does not exist.","lastModifiedDate":"2021-09-30"},{"lineNumber":546,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":547,"author":{"gitId":"BenjaminTan99"},"content":"    * 1a1. MrTechRecruiter shows an \u0027No such job position found\u0027 message.","lastModifiedDate":"2021-09-30"},{"lineNumber":548,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":549,"author":{"gitId":"BenjaminTan99"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":550,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":551,"author":{"gitId":"BenjaminTan99"},"content":"* 2b. Job position has relatively high rejection rate.","lastModifiedDate":"2021-09-30"},{"lineNumber":552,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":553,"author":{"gitId":"BenjaminTan99"},"content":"    * 2b1. MrTechRecruiter highlights its high rejection rate.","lastModifiedDate":"2021-09-30"},{"lineNumber":554,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":555,"author":{"gitId":"BenjaminTan99"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":556,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":557,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":558,"author":{"gitId":"LMAOboxhack"},"content":"**Use case: Search for applicants through keywords**","lastModifiedDate":"2021-09-30"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"LMAOboxhack"},"content":"1. User enters the keywords for MrTechRecruiter to search for.","lastModifiedDate":"2021-10-01"},{"lineNumber":563,"author":{"gitId":"LMAOboxhack"},"content":"2. MrTechRecruiter performs the search according to the keywords.","lastModifiedDate":"2021-10-01"},{"lineNumber":564,"author":{"gitId":"LMAOboxhack"},"content":"3. MrTechRecruiter displays the search results.","lastModifiedDate":"2021-10-01"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"LMAOboxhack"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-10-01"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"LMAOboxhack"},"content":"* 2a. An invalid flag is specified.","lastModifiedDate":"2021-10-01"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"LMAOboxhack"},"content":"    * 2a1. MrTechRecruiter shows an error message.","lastModifiedDate":"2021-10-01"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"LMAOboxhack"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"Harry-Gao-H"},"content":"**Use case: Calculate the rejection rate for a position** [coming soon]","lastModifiedDate":"2021-10-22"},{"lineNumber":584,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":585,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"BenjaminTan99"},"content":"4. A new user should be able to easily navigate through MrTechRecruiter and perform basic tasks (e.g. adding/deleting).","lastModifiedDate":"2021-09-30"},{"lineNumber":591,"author":{"gitId":"LMAOboxhack"},"content":"5. Should be portable (i.e. work without requiring an installer).","lastModifiedDate":"2021-10-01"},{"lineNumber":592,"author":{"gitId":"LMAOboxhack"},"content":"6. Should not depend on a remote server.","lastModifiedDate":"2021-10-01"},{"lineNumber":593,"author":{"gitId":"LMAOboxhack"},"content":"7. Should work for standard (i.e. industry-standard Full HD 1080p resolution) screen resolutions and higher.","lastModifiedDate":"2021-10-01"},{"lineNumber":594,"author":{"gitId":"LMAOboxhack"},"content":"8. Should be packaged into a single, compact (~100MB) file.","lastModifiedDate":"2021-10-01"},{"lineNumber":595,"author":{"gitId":"LMAOboxhack"},"content":"9. Developer \u0026 User guides should be PDF friendly.","lastModifiedDate":"2021-10-01"},{"lineNumber":596,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"darren2pro"},"content":"* **Job position**: A job opening within the user\u0027s company that is looking for potential hires","lastModifiedDate":"2021-09-28"},{"lineNumber":606,"author":{"gitId":"darren2pro"},"content":"* **Applicant**: A potential hire that is applying for a particular job position","lastModifiedDate":"2021-09-28"},{"lineNumber":607,"author":{"gitId":"LMAOboxhack"},"content":"* **CLI**: Command-line interface. CLI programs take in input in the form of text-based commands, usually input by the user, to execute the program\u0027s various functions.","lastModifiedDate":"2021-09-30"},{"lineNumber":608,"author":{"gitId":"LMAOboxhack"},"content":"* **CAP**: Cumulative average point. Similar to grade point average (GPA), it is a numerical measure of a student\u0027s average academic performance across their duration of study.","lastModifiedDate":"2021-09-30"},{"lineNumber":609,"author":{"gitId":"BenjaminTan99"},"content":"* **Rejection rate**: The percentage of jobs for a particular job position that was not accepted by the employee or employer.","lastModifiedDate":"2021-09-30"},{"lineNumber":610,"author":{"gitId":"darren2pro"},"content":"* **Calculation** \u003d `No. of rejected jobs` / `Total no. of jobs applied`.","lastModifiedDate":"2021-10-11"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":612,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"1.  _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"darren2pro"},"content":"### Deleting an applicant","lastModifiedDate":"2021-09-28"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"darren2pro"},"content":"1. Deleting an applicant from MrTechRecruiter","lastModifiedDate":"2021-09-28"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"darren2pro"},"content":"    1. Prerequisites: Multiple applicants in MrTechRecruiter. John Doe exists within MrTechRecruiter but Mary Jane does not.","lastModifiedDate":"2021-09-28"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"darren2pro"},"content":"    1. Test case: `delete applicant n/John Doe`\u003cbr\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":647,"author":{"gitId":"darren2pro"},"content":"       Expected: John Doe is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-09-28"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"darren2pro"},"content":"    1. Test case: `delete applicant n/Mary Jane`\u003cbr\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":650,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2021-09-28"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":654,"author":{"gitId":"darren2pro"},"content":"### Adding a new applicant","lastModifiedDate":"2021-09-28"},{"lineNumber":655,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":656,"author":{"gitId":"darren2pro"},"content":"1. Adding an applicant to MrTechRecruiter","lastModifiedDate":"2021-09-28"},{"lineNumber":657,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":658,"author":{"gitId":"darren2pro"},"content":"    1. Prerequisites: -","lastModifiedDate":"2021-09-28"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":660,"author":{"gitId":"darren2pro"},"content":"    1. Test case: `add applicant n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 pos/software engineer`\u003cbr\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":661,"author":{"gitId":"darren2pro"},"content":"       Expected: John Doe, with all the relevant details that were passed as parameters is added to MrTechRecruiter.","lastModifiedDate":"2021-09-28"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":666,"author":{"gitId":"BenjaminTan99"},"content":"### View average rate of a job","lastModifiedDate":"2021-09-30"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":668,"author":{"gitId":"BenjaminTan99"},"content":"1. View average rate of a job in MrTechRecruiter","lastModifiedDate":"2021-09-30"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":670,"author":{"gitId":"BenjaminTan99"},"content":"    1. Prerequisites: \u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":671,"author":{"gitId":"BenjaminTan99"},"content":"       a. Job must exist in address book. \u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":672,"author":{"gitId":"BenjaminTan99"},"content":"       b. Average rate already tabulated for the job.","lastModifiedDate":"2021-09-30"},{"lineNumber":673,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":674,"author":{"gitId":"BenjaminTan99"},"content":"    1. Test case: `find software engineer`\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":675,"author":{"gitId":"BenjaminTan99"},"content":"       Expected: Software Engineer: [redacted], rejection rate: 10%","lastModifiedDate":"2021-09-30"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":677,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2021-09-30"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":679,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":680,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"BenjaminTan99"},"content":"1. _{ more test cases …​ }","lastModifiedDate":"2021-09-30"},{"lineNumber":687,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":688,"author":{"gitId":"BenjaminTan99"},"content":"### _","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"Harry-Gao-H":48,"LMAOboxhack":47,"darren2pro":85,"-":382,"BenjaminTan99":126}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"MrTechRecruiter (MTR) is a **desktop app for managing job applications, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, MTR can get your application management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"## Quick start (coming soon)","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"2. Download the latest `mrtechrecruiter.jar` from [here](https://github.com/AY2122S1-CS2103-F10-1/tp/releases).","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for MrTechRecruiter.","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"   * **`list-applicant`** : Lists all applicants.","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"   * **`add-applicant`**`n/Mary Ann p/98765432 e/johnd@example.com a/Mary street, block 123, #01-01 pos/software engineer github/https://github.com/matoledo` : Adds an applicant named `Mary Ann` to the `software engineer` position.","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"   * **`delete-applicant`**`1` : Deletes the 1st applicant shown in the current list.","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"* If a parameter should only appear once in the command but is specified multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"### Adding a position: `add-position`","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"Adds a position to MrTechRecruiter.","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"Format: `add-position tit/TITLE des/DESCRIPTION`","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"BenjaminTan99"},"content":"Examples:","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"* `add-position tit/software engineer des/work in a team that builds a facial recognition application`","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"Harry-Gao-H"},"content":"### Editing a position: `edit-position`","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"Harry-Gao-H"},"content":"Edits the specified position in MrTechRecruiter.","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"Harry-Gao-H"},"content":"Format: `edit-position INDEX tit/NEWTITLE des/NEWDESCRIPTION`","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"Harry-Gao-H"},"content":"* Edit the position with the specified `INDEX`","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"Harry-Gao-H"},"content":"Examples: ","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"Harry-Gao-H"},"content":"* `edit-position INDEX tit/Algorithm Engineer des/embed algorithms into the facial recognition application `","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"### Deleting a position: `delete-position`","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"Deletes the specified position from MrTechRecruiter.","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"Format: `delete-position INDEX`","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"* Deletes the position with the specified `INDEX`.","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"BenjaminTan99"},"content":"Examples:","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"darren2pro"},"content":"* `delete-position 1` deletes the position with index 1.","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"darren2pro"},"content":"### Adding an applicant: `add-applicant`","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"BenjaminTan99"},"content":"Adds an applicant to MrTechRecruiter.","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"Format: `add-applicant n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS pos/POSITION github/GITHUB_PROFILE_LINK`","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"An applicant should only have 1 position. This position must exist, otherwise an error message will show.\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"If the job position exists, its rejection rate will update accordingly.","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"darren2pro"},"content":"* `add-applicant n/Mary Ann p/98765432 e/johnd@example.com a/Mary street, block 123, #01-01 pos/software engineer github/https://github.com/matoledo`","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"Harry-Gao-H"},"content":"### Editing an applicant: `edit-applicant`","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"Harry-Gao-H"},"content":"Edits the specified applicant in MrTechRecruiter","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"darren2pro"},"content":"Format: `edit-applicant INDEX [n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS pos/POSITION github/GITHUB_PROFILE_LINK]` ","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"Harry-Gao-H"},"content":"* Edit the applicant with the specified `INDEX`","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"darren2pro"},"content":"* At least one argument should be present","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"Harry-Gao-H"},"content":"* The `position` must have been added to MrTechRecruiter","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"Harry-Gao-H"},"content":"Examples:","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"Harry-Gao-H"},"content":"* `edit-applicant n/Jasmine Doe p/98761432 e/johnd@example.com`","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"Harry-Gao-H"},"content":"* `edit-applicant n/Betsy p/1234567 pos/database administrator`","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"LMAOboxhack"},"content":"### Updating an applicant\u0027s status: `mark`","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"LMAOboxhack"},"content":"Updates an applicant\u0027s status as specified.  ","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"LMAOboxhack"},"content":"Format: `mark NAME status/STATUS`","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"LMAOboxhack"},"content":"* `NAME` is case-insensitive. e.g. `john doe` and `John Doe` will update the same applicant\u0027s status.","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"LMAOboxhack"},"content":"* `STATUS` is case-insensitive. e.g. `accepted` and `ACCEPTED` will both update the applicant\u0027s status to `\"Accepted\"`.","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"LMAOboxhack"},"content":"* `mark john doe status/rejected` marks the applicant `John Doe` with status `\"Accepted\"`.","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"darren2pro"},"content":"### Deleting an applicant: `delete-applicant`","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"BenjaminTan99"},"content":"Deletes the specified applicant from MrTechRecruiter.","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"darren2pro"},"content":"Format: `delete-applicant INDEX`","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"darren2pro"},"content":"* Deletes the applicant with the specified `INDEX`.","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":150,"author":{"gitId":"darren2pro"},"content":"* `delete-applicant 1` deletes the applicant with index 1.","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":152,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"Harry-Gao-H"},"content":"### Listing all positions : `list-position` ","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"BenjaminTan99"},"content":"Shows a list of all positions in MrTechRecruiter.","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"Harry-Gao-H"},"content":"Format: `list-position`","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"darren2pro"},"content":"### Listing all applicants : `list-applicant` ","lastModifiedDate":"2021-10-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"BenjaminTan99"},"content":"Shows a list of all applicants in MrTechRecruiter.","lastModifiedDate":"2021-10-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"darren2pro"},"content":"Format: `list-applicant`","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":167,"author":{"gitId":"BenjaminTan99"},"content":"### Get rejection rate of a specified position : `rate`","lastModifiedDate":"2021-10-28"},{"lineNumber":168,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"BenjaminTan99"},"content":"Shows the rejection rate of an existing position in MrTechRecruiter.","lastModifiedDate":"2021-10-28"},{"lineNumber":170,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"BenjaminTan99"},"content":"Format: `rate pos/POSITION`","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":173,"author":{"gitId":"BenjaminTan99"},"content":"* If specified `POSITION` does not exist, will display a different message.","lastModifiedDate":"2021-10-28"},{"lineNumber":174,"author":{"gitId":"BenjaminTan99"},"content":"* If the `POSITION` has no applicants, will display a `No current applicants` message.","lastModifiedDate":"2021-10-28"},{"lineNumber":175,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":176,"author":{"gitId":"BenjaminTan99"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":177,"author":{"gitId":"BenjaminTan99"},"content":"* `rate pos/software engineer`","lastModifiedDate":"2021-10-28"},{"lineNumber":178,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":179,"author":{"gitId":"Harry-Gao-H"},"content":"### Undoing the last modification : `undo`","lastModifiedDate":"2021-10-28"},{"lineNumber":180,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"Harry-Gao-H"},"content":"Recovers the state before last modification is made.","lastModifiedDate":"2021-10-28"},{"lineNumber":182,"author":{"gitId":"Harry-Gao-H"},"content":"The modification command includes: `add-position` `add-applicant` `edit-position` `edit-applicant` `delete-position` `delete-applicant`","lastModifiedDate":"2021-10-28"},{"lineNumber":183,"author":{"gitId":"Harry-Gao-H"},"content":"`` [command that modifies the state should also be added later]","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"Harry-Gao-H"},"content":"Format: `undo`","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"LMAOboxhack"},"content":"### Filtering applicants: `filter-applicant`","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"LMAOboxhack"},"content":"Filter the list of applicants by specific criteria.","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"LMAOboxhack"},"content":"Format: `filter-applicant [pos/POSITION] [status/STATUS]​`","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"LMAOboxhack"},"content":"* The position filter is case-sensitive. e.g `software engineer` will not match `Software Engineer`","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"LMAOboxhack"},"content":"* The status filter is case-insensitive. e.g. `accepted` or `ACCEPTED` will both match the `\"Accepted\"` application status.","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"LMAOboxhack"},"content":"* A variable number of filters can be specified.","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"LMAOboxhack"},"content":"* The filtering uses a logical `AND`. e.g. `filter-applicant pos/software engineer status/accepted` will match all applicants applying to the `software engineer` position AND with application status `\"Accepted\"`.","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"LMAOboxhack"},"content":"* Consecutive calls are independent of one another (i.e. the filters do not stack).","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"LMAOboxhack"},"content":"* `filter-applicant status/rejected` displays a list of all rejected applicants.","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"LMAOboxhack"},"content":"* `filter-applicant pos/database administrator status/accepted` displays a list of all applicants to the `database administrator` position, that have been accepted.","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"LMAOboxhack"},"content":"### Visualizing a position with a pie chart: `visualize`","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":205,"author":{"gitId":"LMAOboxhack"},"content":"Displays a pie chart breakdown of a position and the statuses of its applicants.","lastModifiedDate":"2021-10-28"},{"lineNumber":206,"author":{"gitId":"LMAOboxhack"},"content":"Hovering over a pie chart slice will display its percentage value. ","lastModifiedDate":"2021-10-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":208,"author":{"gitId":"LMAOboxhack"},"content":"Format: `visualize POSITION_TITLE​`","lastModifiedDate":"2021-10-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":210,"author":{"gitId":"LMAOboxhack"},"content":"* `POSITION_TITLE` is case-insensitive. e.g. `visualize software engineer` will display the pie chart for the position `SOFTWARE ENGINEER`.","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":212,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":213,"author":{"gitId":"darren2pro"},"content":"### Searching for applicants using keywords: `find-applicant`","lastModifiedDate":"2021-10-28"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"darren2pro"},"content":"Finds all applicants whose name match the specified search terms.","lastModifiedDate":"2021-10-28"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"darren2pro"},"content":"Format: `find-applicant KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-28"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"darren2pro"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2021-10-28"},{"lineNumber":221,"author":{"gitId":"darren2pro"},"content":"* Only the name is searched.","lastModifiedDate":"2021-10-28"},{"lineNumber":222,"author":{"gitId":"darren2pro"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2021-10-28"},{"lineNumber":223,"author":{"gitId":"darren2pro"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search). e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-10-28"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"darren2pro"},"content":"* `find-applicant John` returns `john` and `John Doe`","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"BenjaminTan99"},"content":"All data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-01"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":240,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":242,"author":{"gitId":"darren2pro"},"content":"Data is saved as a JSON file `[JAR file location]/data/applicantbook.json` and `[JAR file location]/data/positionbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-28"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":245,"author":{"gitId":"BenjaminTan99"},"content":"If your changes to the data file makes its format invalid, MrTechRecruiter will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-10-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"BenjaminTan99"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous MrTechRecruiter home folder.","lastModifiedDate":"2021-10-01"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"darren2pro"},"content":"**Add Applicant** | `add-applicant n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS pos/POSITION github/GITHUB_PROFILE_LINK` \u003cbr\u003e e.g., `add-applicant n/Mary Ann p/98765432 e/johnd@example.com a/Mary street, block 123, #01-01 pos/software engineer github/https://github.com/matoledo`","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"darren2pro"},"content":"**Delete Applicant** | `delete-applicant INDEX`\u003cbr\u003e e.g., `delete-applicant 3`","lastModifiedDate":"2021-10-28"},{"lineNumber":263,"author":{"gitId":"LMAOboxhack"},"content":"**Update Applicant status** | `mark NAME` \u003cbr\u003e e.g.,  `mark john doe status/accepted`","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"darren2pro"},"content":"**Find Applicant** | `find-applicant KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2021-10-28"},{"lineNumber":265,"author":{"gitId":"darren2pro"},"content":"**List Applicants** | `list-applicant`","lastModifiedDate":"2021-10-28"},{"lineNumber":266,"author":{"gitId":"LMAOboxhack"},"content":"**Filter Applicants** | `filter-applicant [pos/POSITION] [status/STATUS]​`\u003cbr\u003e e.g., `filter-applicant pos/software engineer status/accepted`","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"LMAOboxhack"},"content":"**Visualize Positions** | `visualize POSITION_TITLE​`\u003cbr\u003e e.g., `visualize database administrator`","lastModifiedDate":"2021-10-28"},{"lineNumber":268,"author":{"gitId":"BenjaminTan99"},"content":"**Rate | `rate pos/POSITION` \u003cbr\u003e e.g. `rate software engineer`","lastModifiedDate":"2021-10-28"},{"lineNumber":269,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"Harry-Gao-H":28,"LMAOboxhack":29,"darren2pro":39,"-":129,"BenjaminTan99":44}},{"path":"docs/diagrams/add_applicant/AddApplicantActivityDiagram1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"@startuml","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"start","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"if () then ([else])","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"    if () then ([else])","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"        :Create applicant instance with the","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"                input applicant particulars;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"        :Add applicant to applicantBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"    else ([no such position])","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"        :CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"    endif","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"else ([has applicant duplicate])","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    :CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"endif","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"stop","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"@enduml","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"darren2pro":15}},{"path":"docs/diagrams/add_applicant/AddApplicantSequenceDiagram1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"@startuml","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"!include style.puml","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"participant \":MrTechRecruiterParser\" as MrTechRecruiterParser LOGIC_COLOR","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"participant \":AddApplicantCommandParser\" as AddApplicantCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"participant \"a:AddApplicantCommand\" as AddApplicantCommand LOGIC_COLOR","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"end box","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"[-\u003e LogicManager : execute(add-applicant ...)","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"activate LogicManager","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"note right","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    The full command string","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    is shortened for brevity.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    You can assume that the","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    arguments are valid.","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"end note","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"LogicManager -\u003e MrTechRecruiterParser : parseCommand(add-applicant ...)","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"activate MrTechRecruiterParser","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"create AddApplicantCommandParser","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"MrTechRecruiterParser -\u003e AddApplicantCommandParser","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"activate AddApplicantCommandParser","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"AddApplicantCommandParser --\u003e MrTechRecruiterParser","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"deactivate AddApplicantCommandParser","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"MrTechRecruiterParser -\u003e AddApplicantCommandParser : parse(arguments)","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"activate AddApplicantCommandParser","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"create AddApplicantCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"AddApplicantCommandParser -\u003e AddApplicantCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"activate AddApplicantCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"AddApplicantCommand --\u003e AddApplicantCommandParser","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"deactivate AddApplicantCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"AddApplicantCommandParser --\u003e MrTechRecruiterParser : a:AddApplicantCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"deactivate AddApplicantCommandParser","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"AddApplicantCommandParser -[hidden]-\u003e MrTechRecruiterParser : a:AddApplicantCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"destroy AddApplicantCommandParser","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"MrTechRecruiterParser -\u003e AddApplicantCommand : execute(Model model)","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"activate AddApplicantCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"AddApplicantCommand --\u003e MrTechRecruiterParser","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"deactivate AddApplicantCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"@enduml","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"darren2pro":49}},{"path":"docs/diagrams/add_applicant/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"/\u0027","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":" \u0027/","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"skinparam Class {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"    BorderThickness 1","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    FontName Arial","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"skinparam Actor {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    Color USER_COLOR","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"    FontName Arial","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"skinparam Sequence {","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"    MessageAlign center","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"    BoxFontSize 15","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"    BoxPadding 0","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"    FontName Arial","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"skinparam Participant {","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"    Padding 20","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"hide footbox","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"hide members","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"hide circle","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"darren2pro":75}},{"path":"docs/diagrams/rejection-rates/InitialState.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"\u0027https://plantuml.com/object-diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"title: Initial State","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"object ApplicantBook","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"object PositionBook","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"map Start {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"map PositionBook {","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":" Software Engineer: Writes code everyday","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"map ApplicantBook {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":" John: Software Engineer, PENDING","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":" Jake: Software Engineer, REJECTED","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":" Alice: Software Engineer, REJECTED","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"Start -down-\u003e ApplicantBook","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"Start -down-\u003e PositionBook","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"BenjaminTan99":23}},{"path":"docs/diagrams/rejection-rates/SeqDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"autonumber","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"Model -\u003e Calculator: calculateRejectionRate()","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"activate Calculator","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"Calculator -\u003e Calculator: calculateRejectionRate()","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"activate Calculator","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"Calculator -\u003e ApplicantBook: (calculation occurs)","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"activate ApplicantBook","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"ApplicantBook -\u003e Calculator: rejectionRate (as float)","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"deactivate ApplicantBook","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"deactivate Calculator","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"Calculator --\u003e Model: Request complete","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"deactivate Calculator","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"BenjaminTan99":20}},{"path":"docs/diagrams/rejection-rates/Step2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"\u0027https://plantuml.com/object-diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"title: After verifying \"Software Engineer\"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"object ApplicantBook","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"object PositionBook","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"object Model","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"map Start {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"map PositionBook {","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":" Software Engineer: Writes code everyday","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"map ApplicantBook {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":" John: Software Engineer, PENDING","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":" Jake: Software Engineer, REJECTED","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":" Alice: Software Engineer, REJECTED","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"map Model {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":" hasPositionWithTitle()","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"Start -down-\u003e ApplicantBook","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"Start -down-\u003e PositionBook","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"Model -left-\u003e PositionBook","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"BenjaminTan99":30}},{"path":"docs/diagrams/rejection-rates/Step3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"\u0027https://plantuml.com/object-diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"title: After command \"rate Software Engineer\"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"object Calculator","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"object ApplicantBook","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"object PositionBook","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"object Model","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"map Start {","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"map PositionBook {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":" Software Engineer: Writes code everyday","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"map ApplicantBook {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":" John: Software Engineer, PENDING","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":" Jake: Software Engineer, REJECTED","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":" Alice: Software Engineer, REJECTED","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"map Model {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":" calculateRejectionRate()","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"map Calculator {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":" calculateRejectionRate()","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"Start -down-\u003e ApplicantBook","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"Start -down-\u003e PositionBook","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"Model -right-\u003e Calculator","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"Calculator -right-\u003eApplicantBook","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"BenjaminTan99":36}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"title: MrTechRecruiter","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103-F10-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103-F10-1/tp/actions)","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103-F10-1/tp/branch/master/graph/badge.svg?token\u003dKWK2M8GPGF)](https://codecov.io/gh/AY2122S1-CS2103-F10-1/tp)","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"**MrTechRecruiter is a desktop application for HR recruiters in tech companies to manage their applicants.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"* If you are interested in using MrTechRecruiter, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"* If you are interested in developing MrTechRecruiter, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LMAOboxhack":5,"-":14}},{"path":"docs/team/benjamintan99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"title: Benjamin\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"### Project: MrTechRecruiter","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"MrTechRecruiter (MTR) is a desktop applicant management application designed for tech companies to keep track of job applicants. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about __ kLoC.","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"Given below are my contributions to the project [to be updated].","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"* **Code contributed**:","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"* **Project management**:","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"* **Community**:","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"* **Tools**:","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"BenjaminTan99":23}},{"path":"docs/team/darren2pro.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"title: Darren Heng\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"### Project: MrTechRecruiter","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"MrTechRecruiter (MTR) is a desktop applicant management application designed for tech companies to keep track of job applicants. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"darren2pro":3,"-":43}},{"path":"docs/team/lmaoboxhack.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"title: Lin Fangyuan\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"### Project: MrTechRecruiter","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"MrTechRecruiter (MTR) is a desktop applicant management application designed for tech companies to keep track of job applicants. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about __ kLoC.","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LMAOboxhack":3,"-":43}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ApplicantBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.PositionBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyApplicantBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyPositionBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"import seedu.address.storage.applicant.ApplicantBookStorage;","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"import seedu.address.storage.applicant.JsonApplicantBookStorage;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"import seedu.address.storage.position.JsonPositionBookStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"import seedu.address.storage.position.PositionBookStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"    public static final Version VERSION \u003d new Version(0, 3, 0, true);","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"    public static void openLinkInBrowser(String urlString) {","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"        PositionBookStorage positionBookStorage \u003d new JsonPositionBookStorage(userPrefs.getPositionBookFilePath());","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"        ApplicantBookStorage applicantBookStorage \u003d new JsonApplicantBookStorage(userPrefs.getApplicantBookFilePath());","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, applicantBookStorage, positionBookStorage);","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"        Optional\u003cReadOnlyPositionBook\u003e positionBookOptional;","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"        Optional\u003cReadOnlyApplicantBook\u003e applicantBookOptional;","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"        ReadOnlyAddressBook initialAddressBookData;","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"        ReadOnlyPositionBook initialPositionBookData;","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"        ReadOnlyApplicantBook initialApplicantBookData;","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"darren2pro"},"content":"                logger.info(\"Addressbook data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"            initialAddressBookData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"darren2pro"},"content":"            positionBookOptional \u003d storage.readPositionBook();","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"            if (!positionBookOptional.isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"                logger.info(\"Positionbook data file not found. Will be starting with a sample PositionBook\");","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"            initialPositionBookData \u003d positionBookOptional.orElseGet(SampleDataUtil::getSamplePositionBook);","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"            applicantBookOptional \u003d storage.readApplicantBook(initialPositionBookData);","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"darren2pro"},"content":"            if (!applicantBookOptional.isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"darren2pro"},"content":"                logger.info(\"Applicantbook data file not found. Will be starting with a sample ApplicantBook\");","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"darren2pro"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"darren2pro"},"content":"            initialApplicantBookData \u003d applicantBookOptional.orElseGet(SampleDataUtil::getSampleApplicantBook);","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"darren2pro"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty \"","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"darren2pro"},"content":"                    + \"AddressBook/PositionBook/ApplicantBook\");","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"darren2pro"},"content":"            initialAddressBookData \u003d new AddressBook();","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"darren2pro"},"content":"            initialPositionBookData \u003d new PositionBook();","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"darren2pro"},"content":"            initialApplicantBookData \u003d new ApplicantBook();","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":123,"author":{"gitId":"darren2pro"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty \"","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"darren2pro"},"content":"                    + \"AddressBook/PositionBook/ApplicantBook\");","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"darren2pro"},"content":"            initialAddressBookData \u003d new AddressBook();","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"darren2pro"},"content":"            initialPositionBookData \u003d new PositionBook();","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"darren2pro"},"content":"            initialApplicantBookData \u003d new ApplicantBook();","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"darren2pro"},"content":"        return new ModelManager(initialAddressBookData, initialApplicantBookData, initialPositionBookData, userPrefs);","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"darren2pro"},"content":"        logger.info(\"Starting MTR \" + MainApp.VERSION);","lastModifiedDate":"2021-10-28"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":220,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"darren2pro":48,"-":173}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_APPLICANTS_LISTED_OVERVIEW \u003d \"%1$d applicant listed!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX \u003d \"The applicant index provided is invalid\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_INVALID_POSITION_DISPLAYED_INDEX \u003d \"The position index provided is invalid\";","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Harry-Gao-H":1,"darren2pro":2,"-":13}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"LMAOboxhack"},"content":"     * Converts an input string to proper case (ie first letter capitalized only.)","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"LMAOboxhack"},"content":"    public static String toProperCase(String s) {","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"LMAOboxhack"},"content":"        if (s.isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"LMAOboxhack"},"content":"            return s;","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"LMAOboxhack"},"content":"        if (s.length() \u003d\u003d 1) {","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"LMAOboxhack"},"content":"            return s.toUpperCase();","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"LMAOboxhack"},"content":"        return s.substring(0, 1).toUpperCase() + s.substring(1).toLowerCase();","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LMAOboxhack":19,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"    /** Returns an unmodifiable view of the filtered list of positions */","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"    ObservableList\u003cPosition\u003e getFilteredPositionList();","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"    /** Returns an unmodifiable view of the filtered list of applicants */","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    ObservableList\u003cApplicant\u003e getFilteredApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"     * Returns the user prefs\u0027 applicant book file path.","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"    Path getApplicantBookFilePath();","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns the user prefs\u0027 position book file path.","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"    Path getPositionBookFilePath(); // this file paths might need to be combined.","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Harry-Gao-H":11,"darren2pro":9,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.parser.MrTechRecruiterParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"    private final MrTechRecruiterParser mrTechRecruiterParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"        this.mrTechRecruiterParser \u003d new MrTechRecruiterParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"        Command command \u003d mrTechRecruiterParser.parseCommand(commandText);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"            storage.savePositionBook(model.getPositionBook());","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"            storage.saveApplicantBook(model.getApplicantBook());","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"    public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"        return model.getFilteredApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Harry-Gao-H"},"content":"    public ObservableList\u003cPosition\u003e getFilteredPositionList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Harry-Gao-H"},"content":"        return model.getFilteredPositionList();","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"    public Path getApplicantBookFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"        return model.getApplicantBookFilePath();","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"Harry-Gao-H"},"content":"    public Path getPositionBookFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Harry-Gao-H"},"content":"        return model.getPositionBookFilePath();","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Harry-Gao-H":10,"LMAOboxhack":4,"darren2pro":13,"-":77}},{"path":"src/main/java/seedu/address/logic/commands/AddApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.ApplicantParticulars;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":" * Adds an applicant to the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"public class AddApplicantCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    public static final String COMMAND_WORD \u003d \"add-applicant\";","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an applicant to MrTechRecruiter. \"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_POSITION + \"POSITION \"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_POSITION + \"software engineer\";","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New applicant added: %1$s\";","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"This applicant already exists in MrTechRecruiter\";","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_NO_SUCH_POSITION \u003d \"There is no such position in MrTechRecruiter\";","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"    private final ApplicantParticulars applicantParticulars;","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"     * Creates an AddApplicantCommand to add the specified {@code Applicant}","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"    public AddApplicantCommand(ApplicantParticulars applicantParticulars) {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"        requireNonNull(applicantParticulars);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"        this.applicantParticulars \u003d applicantParticulars;","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"        if (model.hasApplicantWithName(applicantParticulars.getName())) {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"        if (!model.hasPositionWithTitle(applicantParticulars.getPositionTitle())) {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"            throw new CommandException(MESSAGE_NO_SUCH_POSITION);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"        memento.record(model.getCopiedModel());","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"        Applicant applicant \u003d model.addApplicantWithParticulars(applicantParticulars);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"        String successMessage \u003d String.format(MESSAGE_SUCCESS, applicant);","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"        memento.recordMessage(successMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"        model.addToHistory(this);","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Harry-Gao-H"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof AddApplicantCommand // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"BenjaminTan99"},"content":"                \u0026\u0026 applicantParticulars.equals(((AddApplicantCommand) other).applicantParticulars));","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Harry-Gao-H":10,"LMAOboxhack":1,"darren2pro":61,"BenjaminTan99":7}},{"path":"src/main/java/seedu/address/logic/commands/AddPositionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"// Adds a position to MrTechRecruiter.","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"public class AddPositionCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String COMMAND_WORD \u003d \"add-position\";","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"            + \": Adds a position to the MTR system. \"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"            + PREFIX_TITLE + \"TITLE \"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \" + \"\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"            + PREFIX_TITLE + \"software engineer \"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"            + PREFIX_DESCRIPTION + \"writes code everyday :/ \";","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New position added: %1$s\";","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_DUPLICATE_POSITION \u003d \"This position already exists in the MTR system\";","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"    private final Position toAdd;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"     * Creates an AddPositionCommand to add the specified {@code Position}","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"    public AddPositionCommand(Position position) {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(position);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"        toAdd \u003d position;","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"        if (model.hasPosition(toAdd)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_POSITION);","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"        memento.record(model.getCopiedModel());","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"        model.addPosition(toAdd);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"        String successMessage \u003d String.format(MESSAGE_SUCCESS, toAdd);","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"        memento.recordMessage(successMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"        model.addToHistory(this);","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"                || (other instanceof AddPositionCommand // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 toAdd.equals(((AddPositionCommand) other).toAdd));","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Harry-Gao-H":67}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.memento.Memento;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"    protected Memento memento \u003d new Memento();","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"    public Memento getMemento() {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"        return memento;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Harry-Gao-H":7,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/DeleteApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":" * Deletes an applicant identified using the displayed index in MrTechRecruiter.","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"public class DeleteApplicantCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    public static final String COMMAND_WORD \u003d \"delete-applicant\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"            + \": Deletes the applicant identified by the index number used in the displayed applicant list.\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_DELETE_APPLICANT_SUCCESS \u003d \"Deleted applicant: %1$s\";","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    public DeleteApplicantCommand(Index targetIndex) {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"        memento.record(model.getCopiedModel());","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"        Applicant applicantToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"        model.deleteApplicant(applicantToDelete);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"        String successMessage \u003d String.format(MESSAGE_DELETE_APPLICANT_SUCCESS, applicantToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"        memento.recordMessage(successMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"        model.addToHistory(this);","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof DeleteApplicantCommand // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteApplicantCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Harry-Gao-H":9,"darren2pro":53}},{"path":"src/main/java/seedu/address/logic/commands/DeletePositionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":" * Deletes a position identified using it\u0027s displayed index from the position book.","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"public class DeletePositionCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String COMMAND_WORD \u003d \"delete-position\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"            + \": Deletes the position identified by the index number used in the displayed position list.\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_DELETE_POSITION_SUCCESS \u003d \"Deleted Position: %1$s\";","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"    public DeletePositionCommand(Index targetIndex) {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"        List\u003cPosition\u003e lastShownList \u003d model.getFilteredPositionList();","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_POSITION_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"        memento.record(model.getCopiedModel());","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"        Position positionToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"        model.deletePosition(positionToDelete);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"        String successMessage \u003d String.format(MESSAGE_DELETE_POSITION_SUCCESS, positionToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"        memento.recordMessage(successMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"        model.addToHistory(this);","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"                || (other instanceof DeletePositionCommand // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePositionCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Harry-Gao-H":61}},{"path":"src/main/java/seedu/address/logic/commands/EditApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPLICANTS;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.descriptors.EditApplicantDescriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"public class EditApplicantCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String COMMAND_WORD \u003d \"edit-applicant\";","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the applicant identified \"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"by the index number used in the displayed applicant list. \"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"Existing values will be overwritten by the input values.\"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 \"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \";","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_EDIT_APPLICANT_SUCCESS \u003d \"Edited Applicant: %1$s\";","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"This applicant already exists in the applicant book.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_NO_SUCH_POSITION \u003d \"There is no position \u0027%1$s\u0027 in MrTechRecruiter.\";","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"    private final Index index;","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"    private final EditApplicantDescriptor editApplicantDescriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"     * @param index of the applicant in the filtered applicant list to edit","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"     * @param editApplicantDescriptor details to edit the applicant with","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"    public EditApplicantCommand(Index index, EditApplicantDescriptor editApplicantDescriptor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(editApplicantDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"        this.editApplicantDescriptor \u003d new EditApplicantDescriptor(editApplicantDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"Harry-Gao-H"},"content":"        if (editApplicantDescriptor.getTitle().isPresent()","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 !model.hasPositionWithTitle(editApplicantDescriptor.getTitle().get())) {","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new CommandException(String.format(MESSAGE_NO_SUCH_POSITION,","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"Harry-Gao-H"},"content":"                    editApplicantDescriptor.getTitle().get()));","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"Harry-Gao-H"},"content":"        Applicant applicantToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"Harry-Gao-H"},"content":"        Applicant editedApplicant \u003d editApplicantDescriptor.createEditedApplicant(applicantToEdit, model);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!applicantToEdit.isSameApplicant(editedApplicant) \u0026\u0026 model.hasApplicant(editedApplicant)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"Harry-Gao-H"},"content":"        memento.record(model.getCopiedModel());","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Harry-Gao-H"},"content":"        model.setApplicant(applicantToEdit, editedApplicant);","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"Harry-Gao-H"},"content":"        model.updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"Harry-Gao-H"},"content":"        String successMessage \u003d String.format(MESSAGE_EDIT_APPLICANT_SUCCESS, editedApplicant);","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"Harry-Gao-H"},"content":"        memento.recordMessage(successMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"Harry-Gao-H"},"content":"        model.addToHistory(this);","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"Harry-Gao-H"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"Harry-Gao-H"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"Harry-Gao-H"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"Harry-Gao-H"},"content":"            return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"Harry-Gao-H"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!(other instanceof EditApplicantCommand)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"Harry-Gao-H"},"content":"            return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"Harry-Gao-H"},"content":"        // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"Harry-Gao-H"},"content":"        EditApplicantCommand e \u003d (EditApplicantCommand) other;","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"Harry-Gao-H"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 editApplicantDescriptor.equals(e.editApplicantDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"Harry-Gao-H":115}},{"path":"src/main/java/seedu/address/logic/commands/EditPositionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_POSITIONS;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.descriptors.EditPositionDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"public class EditPositionCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String COMMAND_WORD \u003d \"edit-position\";","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the position identified \"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"by the index number used in the displayed position list. \"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"Existing values will be overwritten by the input values.\"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"[\" + PREFIX_TITLE + \"TITLE] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"            + PREFIX_DESCRIPTION + \"Create data pipeline\";","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_EDIT_POSITION_SUCCESS \u003d \"Edited Position: %1$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_DUPLICATE_POSITION \u003d \"This position already exists in the position book.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"    private final Index index;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"    private final EditPositionDescriptor editPositionDescriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"     * @param index of the position in the filtered position list to edit","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"     * @param editPositionDescriptor details to edit the position with","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"    public EditPositionCommand(Index index, EditPositionDescriptor editPositionDescriptor) {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(editPositionDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"        this.editPositionDescriptor \u003d new EditPositionDescriptor(editPositionDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"        List\u003cPosition\u003e lastShownList \u003d model.getFilteredPositionList();","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_POSITION_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"        Position positionToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"        Position editedPosition \u003d editPositionDescriptor.createEditedPosition(positionToEdit);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!positionToEdit.isSamePosition(editedPosition) \u0026\u0026 model.hasPosition(editedPosition)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_POSITION);","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"Harry-Gao-H"},"content":"        memento.record(model.getCopiedModel());","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Harry-Gao-H"},"content":"        model.setPosition(positionToEdit, editedPosition);","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"Harry-Gao-H"},"content":"        // when a position is edited, the position information in applicants should also be modified","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"Harry-Gao-H"},"content":"        model.updateApplicantsWithPosition(positionToEdit, editedPosition);","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"Harry-Gao-H"},"content":"        model.updateFilteredPositionList(PREDICATE_SHOW_ALL_POSITIONS);","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"Harry-Gao-H"},"content":"        String successMessage \u003d String.format(MESSAGE_EDIT_POSITION_SUCCESS, editedPosition);","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"Harry-Gao-H"},"content":"        memento.recordMessage(successMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"Harry-Gao-H"},"content":"        model.addToHistory(this);","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Harry-Gao-H"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"Harry-Gao-H"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"Harry-Gao-H"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"Harry-Gao-H"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"Harry-Gao-H"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!(other instanceof EditPositionCommand)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"Harry-Gao-H"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"Harry-Gao-H"},"content":"        // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionCommand e \u003d (EditPositionCommand) other;","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"Harry-Gao-H"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 editPositionDescriptor.equals(e.editPositionDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Harry-Gao-H":104}},{"path":"src/main/java/seedu/address/logic/commands/FilterApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.descriptors.FilterApplicantDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"/*","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":" * Filters the current list of applicants by the specified criteria.","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"public class FilterApplicantCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"    public static final String COMMAND_WORD \u003d \"filter-applicant\";","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"            + \": Filters the current list of applicants by the specified criteria. \"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION] \"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"            + PREFIX_POSITION + \"software engineer \"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"            + PREFIX_STATUS + \"pending\";","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Applicants filtered by: %1$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"    public static final String MESSAGE_INVALID_FILTER \u003d \"The following filters are invalid: %1$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"    public static final String MESSAGE_NOT_FILTERED \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"            \"At least one valid filter criteria must be provided. Usage:\\n\" + MESSAGE_USAGE;","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"    private final FilterApplicantDescriptor filterApplicantDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"     * Creates a FilterApplicantCommand according to the specified {@code filterApplicantDescriptor}.","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"    public FilterApplicantCommand(FilterApplicantDescriptor filterApplicantDescriptor) {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(filterApplicantDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"        this.filterApplicantDescriptor \u003d new FilterApplicantDescriptor(filterApplicantDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"LMAOboxhack"},"content":"        FilterApplicantDescriptor invalidFilterApplicantDescriptor \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"LMAOboxhack"},"content":"                createInvalidFilterApplicantDescriptor(model, filterApplicantDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"LMAOboxhack"},"content":"        if (invalidFilterApplicantDescriptor.hasAnyFilter()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"LMAOboxhack"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_FILTER, invalidFilterApplicantDescriptor));","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"LMAOboxhack"},"content":"        model.updateFilteredApplicantList(applicant -\u003e applicantMatchesFilter(applicant, filterApplicantDescriptor));","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"LMAOboxhack"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, filterApplicantDescriptor));","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"LMAOboxhack"},"content":"     * Verifies the given filters \u0026 returns a descriptor of all invalid filters.","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"LMAOboxhack"},"content":"     * The returned descriptor will be empty (verifiable with {@code FilterApplicantDescriptor::isAnyFieldEdited})","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"LMAOboxhack"},"content":"     * if the given filters are all valid.","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"LMAOboxhack"},"content":"    private FilterApplicantDescriptor createInvalidFilterApplicantDescriptor(","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"LMAOboxhack"},"content":"            Model model, FilterApplicantDescriptor descriptor) {","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"LMAOboxhack"},"content":"        FilterApplicantDescriptor invalidFilterApplicantDescriptor \u003d new FilterApplicantDescriptor();","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"LMAOboxhack"},"content":"        if (!passesFilter(descriptor::getPositionTitle, model::hasPositionWithTitle)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"LMAOboxhack"},"content":"            invalidFilterApplicantDescriptor.setPositionTitle(descriptor.getPositionTitle().get());","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"LMAOboxhack"},"content":"        return invalidFilterApplicantDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns true if the given Applicant passes the specified filters.","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"LMAOboxhack"},"content":"    private static boolean applicantMatchesFilter(Applicant applicant, FilterApplicantDescriptor descriptor) {","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"LMAOboxhack"},"content":"        return passesFilter(descriptor::getPositionTitle, applicant::isApplyingToPositionWithTitle)","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 passesFilter(descriptor::getApplicationStatus, applicant::hasApplicationStatus);","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"LMAOboxhack"},"content":"     * Convenience method to test if an optional object passes a specified filter.","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"LMAOboxhack"},"content":"     * If the object is not present (i.e. Optional.empty), the filter is passed by default.","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"LMAOboxhack"},"content":"    private static \u003cT\u003e boolean passesFilter(Supplier\u003cOptional\u003cT\u003e\u003e toTest, Function\u003cT, Boolean\u003e filter) {","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"LMAOboxhack"},"content":"        return toTest.get().map(filter).orElse(true);","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"LMAOboxhack"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"LMAOboxhack"},"content":"                || (other instanceof FilterApplicantCommand // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 filterApplicantDescriptor.equals(((FilterApplicantCommand) other).filterApplicantDescriptor));","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"LMAOboxhack":102}},{"path":"src/main/java/seedu/address/logic/commands/FindApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":" * Finds and lists all applicants in MTR whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"public class FindApplicantCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    public static final String COMMAND_WORD \u003d \"find-applicant\";","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all applicants whose names contain any of \"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    public FindApplicantCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        model.updateFilteredApplicantList(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"                String.format(Messages.MESSAGE_APPLICANTS_LISTED_OVERVIEW, model.getFilteredApplicantList().size()));","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof FindApplicantCommand // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 predicate.equals(((FindApplicantCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"darren2pro":43}},{"path":"src/main/java/seedu/address/logic/commands/ListApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPLICANTS;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"// This class lists all applicants currently found in MrTechRecruiter.","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"public class ListApplicantCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"    public static final String COMMAND_WORD \u003d \"list-applicant\";","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all applicants\";","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"        model.updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"darren2pro":21,"BenjaminTan99":1}},{"path":"src/main/java/seedu/address/logic/commands/ListPositionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_POSITIONS;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":" * Lists all positions in the position book to the user.","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"public class ListPositionCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String COMMAND_WORD \u003d \"list-position\";","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all positions\";","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"        model.updateFilteredPositionList(PREDICATE_SHOW_ALL_POSITIONS);","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Harry-Gao-H":23}},{"path":"src/main/java/seedu/address/logic/commands/MarkApplicantStatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.model.applicant.Application.ApplicationStatus;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.exceptions.ApplicantNotFoundException;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":" * Updates an applicant\u0027s application status.","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":" * The specifying of the status is case-insensitive, but must otherwise match exactly.","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"public class MarkApplicantStatusCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"            COMMAND_WORD + \": Updates an applicant\u0027s application status as specified. \"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"            + \"Parameters: NAME \" + PREFIX_STATUS + \"STATUS\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"            + \"Example: \" + COMMAND_WORD + \" John Doe \" + PREFIX_STATUS + \"accepted\";","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"    public static final String MESSAGE_MARK_APPLICANT_STATUS_SUCCESS \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"            \"Updated applicant \u0027%1$s\u0027\u0027s status to: %2$s.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"    public static final String MESSAGE_NO_SUCH_APPLICANT_WITH_NAME \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"            \"There is no applicant with name: \u0027%1$s\u0027 in MrTechRecruiter.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"    private final Name name;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"    private final ApplicationStatus applicationStatus;","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"     * Creates a MarkApplicantStatusCommand to update the status of the specified applicant.","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"    public MarkApplicantStatusCommand(Name name, ApplicationStatus applicationStatus) {","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"        requireAllNonNull(name, applicationStatus);","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"        this.applicationStatus \u003d applicationStatus;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"        Applicant applicantToUpdate;","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"LMAOboxhack"},"content":"            applicantToUpdate \u003d model.getApplicantByNameIgnoreCase(name);","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"LMAOboxhack"},"content":"        } catch (ApplicantNotFoundException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"LMAOboxhack"},"content":"            throw new CommandException(String.format(MESSAGE_NO_SUCH_APPLICANT_WITH_NAME, name));","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"LMAOboxhack"},"content":"        memento.record(model.getCopiedModel());","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"LMAOboxhack"},"content":"        model.setApplicant(applicantToUpdate, applicantToUpdate.markAs(applicationStatus));","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"LMAOboxhack"},"content":"        String successMessage \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"LMAOboxhack"},"content":"                String.format(MESSAGE_MARK_APPLICANT_STATUS_SUCCESS, applicantToUpdate.getName(), applicationStatus);","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"LMAOboxhack"},"content":"        memento.recordMessage(successMessage);","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"LMAOboxhack"},"content":"        model.addToHistory(this);","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"LMAOboxhack"},"content":"        return new CommandResult(successMessage);","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"LMAOboxhack"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"LMAOboxhack"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"LMAOboxhack"},"content":"            return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"LMAOboxhack"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"LMAOboxhack"},"content":"        if (!(other instanceof MarkApplicantStatusCommand)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"LMAOboxhack"},"content":"            return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"LMAOboxhack"},"content":"        // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"LMAOboxhack"},"content":"        MarkApplicantStatusCommand o \u003d (MarkApplicantStatusCommand) other;","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"LMAOboxhack"},"content":"        return name.equals(o.name) \u0026\u0026 applicationStatus.equals(o.applicationStatus);","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"LMAOboxhack":85}},{"path":"src/main/java/seedu/address/logic/commands/RejectionRateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.Calculator;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":" * Returns the rejection rate of a given position to the user.","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"public class RejectionRateCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"    public static final String COMMAND_WORD \u003d \"rate\";","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"            + \": Returns the rejection rate of position specified.\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"            + PREFIX_POSITION + \"POSITION \\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"            + PREFIX_POSITION + \"software engineer\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Rejection rate for %1$s \u003d %2$f%%\";","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"    public static final String MESSAGE_NO_SUCH_POSITION \u003d \"There is no such position in MrTechRecruiter\";","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"    public static final String MESSAGE_NO_CURRENT_APPLICANTS \u003d \"There are currently no applicants for this position.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"    private final Title positionTitle;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"     * Creates an RejectionRateCommand to get the specified rejection rate.","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"    public RejectionRateCommand(Title positionTitle) {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"        requireNonNull(positionTitle);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"        this.positionTitle \u003d positionTitle;","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"        if (!model.hasPositionWithTitle(positionTitle)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"            throw new CommandException(MESSAGE_NO_SUCH_POSITION);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"        double rejectionRate \u003d model.calculateRejectionRate(positionTitle);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"        if (rejectionRate \u003d\u003d Calculator.INVALID_REJECTION_RATE) {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"            return new CommandResult(MESSAGE_NO_CURRENT_APPLICANTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, positionTitle, rejectionRate));","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"                || (other instanceof RejectionRateCommand // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"                \u0026\u0026 positionTitle.equals(((RejectionRateCommand) other).positionTitle));","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"BenjaminTan99":64}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.exceptions.CommandUndoException;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":" * Undoes the previous modification to MTR.","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undid the previous modification : \\n\";","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"    public CommandResult execute(Model model) throws CommandUndoException {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!model.hasHistory()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new CommandUndoException(\"Cannot undo because there is no record.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"        String previousMessages \u003d model.recoverHistory();","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"        return new CommandResult(MESSAGE_SUCCESS + previousMessages);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"        return other \u003d\u003d this;","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Harry-Gao-H":32}},{"path":"src/main/java/seedu/address/logic/commands/VisualizePositionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.commands.AddApplicantCommand.MESSAGE_NO_SUCH_POSITION;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.exceptions.PositionNotFoundException;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.ui.PieChartDisplayer;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.ui.PositionPieChart;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"/*","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":" * Displays a pie chart for a position in MrTechRecruiter.","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"public class VisualizePositionCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"    public static final String COMMAND_WORD \u003d \"visualize\";","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"            + \": Displays a visual representation of a position. \"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"            + \"Parameters: \" + \"TITLE \" + \"\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + \"software engineer\";","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Position chart displayed: %1$s\";","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"    private final Title toShowTitle;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"     * Creates a VisualizePositionCommand to visualize the specified {@code Position}","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"    public VisualizePositionCommand(Title position) {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(position);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"        toShowTitle \u003d position;","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"        Position position;","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"            position \u003d model.getPositionByTitle(toShowTitle);","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"        } catch (PositionNotFoundException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"            throw new CommandException(MESSAGE_NO_SUCH_POSITION);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"LMAOboxhack"},"content":"        assert position !\u003d null; // Above try-catch block handles the \u0027Position not found\u0027 case","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"LMAOboxhack"},"content":"        PieChart positionChart \u003d new PositionPieChart(model.getFilteredApplicantList(), position);","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"LMAOboxhack"},"content":"        PieChartDisplayer positionChartDisplayer \u003d new PieChartDisplayer(positionChart);","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"LMAOboxhack"},"content":"        positionChartDisplayer.displayPieChart();","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"LMAOboxhack"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toShowTitle));","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"LMAOboxhack"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"LMAOboxhack"},"content":"                || (other instanceof VisualizePositionCommand // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 toShowTitle.equals(((VisualizePositionCommand) other).toShowTitle));","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"LMAOboxhack":66}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandUndoException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":" * Represents an error which occurs during unexecution of a {@link CommandException}.","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"public class CommandUndoException extends CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"    public CommandUndoException(String message) {","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"        super(message);","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"     * Constructs a new {@code CommandUndoException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    public CommandUndoException(String message, Throwable cause) {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"        super(message, cause);","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Harry-Gao-H":18}},{"path":"src/main/java/seedu/address/logic/commands/memento/History.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.commands.memento;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.Stack;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":" * Records the command history.","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":" * Refers to https://stackoverflow.com/questions/11530276/how-do-i-implement-a-simple-undo-redo-for-actions-in-java","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"public class History {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"    private Stack\u003cCommand\u003e commandStack \u003d new Stack\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    public void add(Command command) {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"        commandStack.push(command);","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean hasHistory() {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"        return commandStack.size() \u003e 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns the previous memento.","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"    public Memento recoverHistory() {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"        assert hasHistory() : \"There is no history to recover.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"        Command previousCommand \u003d commandStack.pop();","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"        return previousCommand.getMemento();","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Harry-Gao-H":34}},{"path":"src/main/java/seedu/address/logic/commands/memento/Memento.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.commands.memento;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":" * Keeps a {@code model} when a modification command executes.","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":" * The use of Memento pattern is adapted from","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":" * https://stackoverflow.com/questions/11530276/how-do-i-implement-a-simple-undo-redo-for-actions-in-java.","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"public class Memento {","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"    private Model model;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"    private String message;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    public Memento() {}","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    public void record(Model model) {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"    public void recordMessage(String message) {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"    public Model getModel() {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"        return model;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"        return message;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Harry-Gao-H":31}},{"path":"src/main/java/seedu/address/logic/descriptors/EditApplicantDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.descriptors;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Application;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.ProfileUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":" * Stores the details to edit the applicant with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":" * corresponding field value of the position.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"public class EditApplicantDescriptor {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"    private Name name;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"    private Phone phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"    private Email email;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"    private Address address;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"    private Application application;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"    private Title title;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    private ProfileUrl gitHubUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"    public EditApplicantDescriptor() {}","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"     * Copy constructor.","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"    public EditApplicantDescriptor(EditApplicantDescriptor toCopy) {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"        setName(toCopy.name);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"        setPhone(toCopy.phone);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"        setEmail(toCopy.email);","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"        setAddress(toCopy.address);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"        setApplication(toCopy.application);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"        setTitle(toCopy.title);","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"        setGitHubProfile(toCopy.gitHubUrl);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"        return CollectionUtil.isAnyNonNull(name, phone, email, address, application, title, gitHubUrl);","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setName(Name name) {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"    public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"        return Optional.ofNullable(name);","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setPhone(Phone phone) {","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"Harry-Gao-H"},"content":"    public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"Harry-Gao-H"},"content":"        return Optional.ofNullable(phone);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setEmail(Email email) {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"Harry-Gao-H"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"Harry-Gao-H"},"content":"    public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"Harry-Gao-H"},"content":"        return Optional.ofNullable(email);","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setAddress(Address address) {","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"Harry-Gao-H"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"Harry-Gao-H"},"content":"    public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"Harry-Gao-H"},"content":"        return Optional.ofNullable(address);","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setApplication(Application application) {","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"Harry-Gao-H"},"content":"        this.application \u003d application;","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"Harry-Gao-H"},"content":"    public Optional\u003cApplication\u003e getApplication() {","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"Harry-Gao-H"},"content":"        return Optional.ofNullable(application);","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setTitle(Title title) {","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"Harry-Gao-H"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"Harry-Gao-H"},"content":"    public Optional\u003cTitle\u003e getTitle() {","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"Harry-Gao-H"},"content":"        return Optional.ofNullable(title);","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"darren2pro"},"content":"    public void setGitHubProfile(ProfileUrl gitHubUrl) {","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"        this.gitHubUrl \u003d gitHubUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"     * Returns the github url as an optional object. Since ProfileUrl already has its own null-handling, this will","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"     * never be an empty optional.","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"darren2pro"},"content":"     * @return optional object containing a profile url.","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"darren2pro"},"content":"    public Optional\u003cProfileUrl\u003e getGitHubUrl() {","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"darren2pro"},"content":"        return Optional.ofNullable(gitHubUrl);","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"darren2pro"},"content":"    public void setLinkedInProfile(ProfileUrl linkedInUrl) {","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"Harry-Gao-H"},"content":"     * Creates and returns a {@code Applicant} with the details of {@code applicantToEdit}","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"Harry-Gao-H"},"content":"     * edited with {@code editApplicantDescriptor}.","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"Harry-Gao-H"},"content":"     * This version has application information.","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"Harry-Gao-H"},"content":"    public Applicant createEditedApplicant(Applicant applicantToEdit) {","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(applicantToEdit);","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"Harry-Gao-H"},"content":"        Name updatedName \u003d getName().orElse(applicantToEdit.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"Harry-Gao-H"},"content":"        Phone updatedPhone \u003d getPhone().orElse(applicantToEdit.getPhone());","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"Harry-Gao-H"},"content":"        Email updatedEmail \u003d getEmail().orElse(applicantToEdit.getEmail());","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"Harry-Gao-H"},"content":"        Address updatedAddress \u003d getAddress().orElse(applicantToEdit.getAddress());","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"Harry-Gao-H"},"content":"        Application updatedApplication \u003d getApplication().orElse(applicantToEdit.getApplication());","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"darren2pro"},"content":"        ProfileUrl updatedGitHubUrl \u003d getGitHubUrl().orElse(applicantToEdit.getGitHubUrl());","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"darren2pro"},"content":"        return new Applicant(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedApplication,","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"darren2pro"},"content":"                updatedGitHubUrl);","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"Harry-Gao-H"},"content":"     * Creates and returns a {@code Applicant} with the details of {@code applicantToEdit}","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"Harry-Gao-H"},"content":"     * edited with {@code editApplicantDescriptor}.","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"Harry-Gao-H"},"content":"     * This version has only title information.","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"Harry-Gao-H"},"content":"    public Applicant createEditedApplicant(Applicant applicantToEdit, Model model) {","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"Harry-Gao-H"},"content":"        assert getApplication().isEmpty() : \"This method is used when there is no application information\";","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(applicantToEdit);","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"Harry-Gao-H"},"content":"        Name updatedName \u003d getName().orElse(applicantToEdit.getName());","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"Harry-Gao-H"},"content":"        Phone updatedPhone \u003d getPhone().orElse(applicantToEdit.getPhone());","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"Harry-Gao-H"},"content":"        Email updatedEmail \u003d getEmail().orElse(applicantToEdit.getEmail());","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"Harry-Gao-H"},"content":"        Address updatedAddress \u003d getAddress().orElse(applicantToEdit.getAddress());","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"Harry-Gao-H"},"content":"        Title title \u003d getTitle().orElse(applicantToEdit.getTitle());","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"Harry-Gao-H"},"content":"        Position updatedPosition \u003d model.getPositionByTitle(title);","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"darren2pro"},"content":"        ProfileUrl updatedGitHubUrl \u003d getGitHubUrl().orElse(applicantToEdit.getGitHubUrl());","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"darren2pro"},"content":"        return new Applicant(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedPosition,","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"darren2pro"},"content":"                updatedGitHubUrl);","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"Harry-Gao-H"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"Harry-Gao-H"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"Harry-Gao-H"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"Harry-Gao-H"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!(other instanceof EditApplicantDescriptor)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"Harry-Gao-H"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"Harry-Gao-H"},"content":"        // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"Harry-Gao-H"},"content":"        EditApplicantDescriptor e \u003d (EditApplicantDescriptor) other;","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"Harry-Gao-H"},"content":"        return getName().equals(e.getName())","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 getApplication().equals(e.getApplication());","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Harry-Gao-H":154,"LMAOboxhack":1,"darren2pro":27}},{"path":"src/main/java/seedu/address/logic/descriptors/EditApplicationDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.descriptors;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Application;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Application.ApplicationStatus;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"public class EditApplicationDescriptor {","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"    private Position position;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"    private ApplicationStatus status;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"    public EditApplicationDescriptor() {}","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"        return CollectionUtil.isAnyNonNull(position, status);","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setPosition(Position position) {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"        this.position \u003d position;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"    public Optional\u003cPosition\u003e getPosition() {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"        return Optional.ofNullable(position);","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setStatus(ApplicationStatus status) {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"    public Optional\u003cApplicationStatus\u003e getStatus() {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"        return Optional.ofNullable(status);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"     * Creates and returns a {@code Application} with the details of {@code applicationToEdit}","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"     * edited with {@code editApplicationDescriptor}.","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"    public Application createEditedApplication(Application applicationToEdit) {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"        assert applicationToEdit !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"        Position updatedPosition \u003d getPosition().orElse(applicationToEdit.getPosition());","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"        ApplicationStatus updatedStatus \u003d getStatus().orElse(applicationToEdit.getStatus());","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"        return new Application(updatedPosition, updatedStatus);","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!(other instanceof EditApplicationDescriptor)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Harry-Gao-H"},"content":"        // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"        EditApplicationDescriptor e \u003d (EditApplicationDescriptor) other;","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"Harry-Gao-H"},"content":"        return getPosition().equals(e.getPosition())","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 getStatus().equals(e.getStatus());","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Harry-Gao-H":71,"LMAOboxhack":2}},{"path":"src/main/java/seedu/address/logic/descriptors/EditPositionDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.descriptors;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Description;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":" * Stores the details to edit the position with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":" * corresponding field value of the position.","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"public class EditPositionDescriptor {","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"    private Title title;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    private Description description;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"    public EditPositionDescriptor() {}","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"     * Copy constructor.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"    public EditPositionDescriptor(EditPositionDescriptor toCopy) {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"        setTitle(toCopy.title);","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"        setDescription(toCopy.description);","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"        return CollectionUtil.isAnyNonNull(title, description);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setTitle(Title title) {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"    public Optional\u003cTitle\u003e getTitle() {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"        return Optional.ofNullable(title);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setDescription(Description description) {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"    public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"        return Optional.ofNullable(description);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"     * Creates and returns a {@code Position} with the details of {@code positionToEdit}","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"     * edited with {@code editPositionDescriptor}.","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"    public Position createEditedPosition(Position positionToEdit) {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"        assert positionToEdit !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"        Title updatedTitle \u003d getTitle().orElse(positionToEdit.getTitle());","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"        Description updatedDescription \u003d getDescription().orElse(positionToEdit.getDescription());","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"        return new Position(updatedTitle, updatedDescription);","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Harry-Gao-H"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"Harry-Gao-H"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"Harry-Gao-H"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!(other instanceof EditPositionDescriptor)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"Harry-Gao-H"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"Harry-Gao-H"},"content":"        // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionDescriptor e \u003d (EditPositionDescriptor) other;","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"Harry-Gao-H"},"content":"        return getTitle().equals(e.getTitle())","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 getDescription().equals(e.getDescription());","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Harry-Gao-H":83}},{"path":"src/main/java/seedu/address/logic/descriptors/FilterApplicantDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.logic.descriptors;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Application.ApplicationStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":" * Stores the details to filter the applicant list with. Each non-empty field value will","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":" * apply an additional filtering criterion to the applicant list.","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"public class FilterApplicantDescriptor {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"    private Title positionTitle;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"    private ApplicationStatus applicationStatus;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"    public FilterApplicantDescriptor() {}","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"     * Copy constructor.","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"    public FilterApplicantDescriptor(FilterApplicantDescriptor toCopy) {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"        setPositionTitle(toCopy.positionTitle);","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"        setApplicationStatus(toCopy.applicationStatus);","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns true if at least one filter is present in the descriptor.","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean hasAnyFilter() {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"        return CollectionUtil.isAnyNonNull(positionTitle, applicationStatus);","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"    public void setPositionTitle(Title positionTitle) {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"        this.positionTitle \u003d positionTitle;","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"    public Optional\u003cTitle\u003e getPositionTitle() {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"        return Optional.ofNullable(positionTitle);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"    public void setApplicationStatus(ApplicationStatus applicationStatus) {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"        this.applicationStatus \u003d applicationStatus;","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"    public Optional\u003cApplicationStatus\u003e getApplicationStatus() {","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"LMAOboxhack"},"content":"        return Optional.ofNullable(applicationStatus);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"LMAOboxhack"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"LMAOboxhack"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"LMAOboxhack"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"LMAOboxhack"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"LMAOboxhack"},"content":"        if (!(other instanceof FilterApplicantDescriptor)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"LMAOboxhack"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"LMAOboxhack"},"content":"        // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"LMAOboxhack"},"content":"        FilterApplicantDescriptor e \u003d (FilterApplicantDescriptor) other;","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"LMAOboxhack"},"content":"        return positionTitle.equals(e.positionTitle)","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 applicationStatus.equals(e.applicationStatus);","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"LMAOboxhack"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"LMAOboxhack"},"content":"        return Objects.hash(positionTitle, applicationStatus);","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"LMAOboxhack"},"content":"    public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"LMAOboxhack"},"content":"        Stream\u003cString\u003e filterDescriptions \u003d Stream.of(getPositionTitle(), getApplicationStatus())","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"LMAOboxhack"},"content":"                .flatMap(Optional::stream)","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"LMAOboxhack"},"content":"                .map(filter -\u003e filter.getClass().getSimpleName() + \": \" + filter);","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"LMAOboxhack"},"content":"        return filterDescriptions.collect(Collectors.joining(\"; \", \"\", \".\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"LMAOboxhack":84}},{"path":"src/main/java/seedu/address/logic/parser/AddApplicantCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.arePrefixesPresent;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB_PROFILE;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.commands.AddApplicantCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.ApplicantParticulars;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.ProfileUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":" * Parses input arguments and creates a new AddApplicantCommand object","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"public class AddApplicantCommandParser implements Parser\u003cAddApplicantCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"     * Parses the given {@code String} of arguments in the context of the AddApplicantCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"     * and returns an AddApplicantCommand object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    public AddApplicantCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"                        PREFIX_POSITION, PREFIX_GITHUB_PROFILE);","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_POSITION,","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"                PREFIX_GITHUB_PROFILE)","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddApplicantCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"        Name name \u003d ApplicantParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"        Phone phone \u003d ApplicantParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"        Email email \u003d ApplicantParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"        Address address \u003d ApplicantParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"        Title positionTitle \u003d ApplicantParserUtil.parseTitle(argMultimap.getValue(PREFIX_POSITION).get());","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        ProfileUrl gitHubUrl \u003d argMultimap.getValue(PREFIX_GITHUB_PROFILE).isPresent()","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"                ? ApplicantParserUtil.parseUrl(argMultimap.getValue(PREFIX_GITHUB_PROFILE).get())","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"                : ProfileUrl.emptyProfileUrl();","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"LMAOboxhack"},"content":"        ApplicantParticulars applicantParticulars \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"                new ApplicantParticulars(name, phone, email, address, positionTitle, gitHubUrl);","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"LMAOboxhack"},"content":"        return new AddApplicantCommand(applicantParticulars);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Harry-Gao-H":2,"LMAOboxhack":15,"darren2pro":43}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.arePrefixesPresent;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"LMAOboxhack":1,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/AddPositionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.arePrefixesPresent;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.AddPositionCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Description;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":" * Parses input arguments and creates a new AddPositionCommand object","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"public class AddPositionCommandParser implements Parser\u003cAddPositionCommand\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPositionCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"     * and returns an AddPositionCommand object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"    public AddPositionCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_DESCRIPTION);","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TITLE, PREFIX_DESCRIPTION)","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPositionCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"        Position position \u003d new Position(title, description);","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"        return new AddPositionCommand(position);","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Harry-Gao-H":41,"LMAOboxhack":1}},{"path":"src/main/java/seedu/address/logic/parser/ApplicantParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Application.ApplicationStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.ProfileUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Description;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"public class ApplicantParserUtil {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"     * trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"LMAOboxhack"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"LMAOboxhack"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"LMAOboxhack"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(phone);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"LMAOboxhack"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"LMAOboxhack"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"LMAOboxhack"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"LMAOboxhack"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"LMAOboxhack"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(address);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"LMAOboxhack"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"LMAOboxhack"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"LMAOboxhack"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"LMAOboxhack"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"LMAOboxhack"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(email);","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"LMAOboxhack"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"LMAOboxhack"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"LMAOboxhack"},"content":"    // All position related methods","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"LMAOboxhack"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"LMAOboxhack"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"LMAOboxhack"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(title);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"LMAOboxhack"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"LMAOboxhack"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"LMAOboxhack"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"LMAOboxhack"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"LMAOboxhack"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"LMAOboxhack"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"LMAOboxhack"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses a {@code String applicationStatus} into a {@code ApplicationStatus}.","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"LMAOboxhack"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"LMAOboxhack"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the given {@code applicationStatus} is invalid.","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"LMAOboxhack"},"content":"    public static ApplicationStatus parseApplicationStatus(String applicationStatus) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(applicationStatus);","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedApplicationStatus \u003d applicationStatus.trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"LMAOboxhack"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"LMAOboxhack"},"content":"            return ApplicationStatus.fromString(trimmedApplicationStatus);","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"LMAOboxhack"},"content":"        } catch (IllegalArgumentException iae) {","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(ApplicationStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"darren2pro"},"content":"     * Parses a {@code String url} into a {@code ProfileUrl}. It returns emptyProfileUrl if it receives","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"darren2pro"},"content":"     * empty string.","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"darren2pro"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"darren2pro"},"content":"     * @param url user input string of the github link.","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"darren2pro"},"content":"     * @return the profileUrl containing this url.","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"darren2pro"},"content":"     * @throws ParseException if the given {@code gitHubUrl} is invalid.","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"darren2pro"},"content":"    public static ProfileUrl parseUrl(String url) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(url);","lastModifiedDate":"2021-10-28"},{"lineNumber":156,"author":{"gitId":"darren2pro"},"content":"        String trimmedUrl \u003d url.trim();","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"darren2pro"},"content":"        if (trimmedUrl.equals(\"\")) {","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"darren2pro"},"content":"            return ProfileUrl.emptyProfileUrl();","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"darren2pro"},"content":"        if (!ProfileUrl.isValidUrl(url)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":161,"author":{"gitId":"darren2pro"},"content":"            throw new ParseException(ProfileUrl.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"darren2pro"},"content":"        return new ProfileUrl(url);","lastModifiedDate":"2021-10-28"},{"lineNumber":164,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LMAOboxhack":144,"darren2pro":22}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"LMAOboxhack"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"LMAOboxhack"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"LMAOboxhack"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"LMAOboxhack":9,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    public static final Prefix PREFIX_POSITION \u003d new Prefix(\"pos/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final Prefix PREFIX_TITLE \u003d new Prefix(\"tit/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"des/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"status/\");","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    public static final Prefix PREFIX_GITHUB_PROFILE \u003d new Prefix(\"github/\");","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Harry-Gao-H":2,"LMAOboxhack":1,"darren2pro":2,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteApplicantCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.commands.DeleteApplicantCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":" * Parses input arguments and creates a new DeleteApplicantCommand object","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"public class DeleteApplicantCommandParser implements Parser\u003cDeleteApplicantCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteApplicantCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"     * and returns a DeleteApplicantCommand object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    public DeleteApplicantCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"            return new DeleteApplicantCommand(index);","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteApplicantCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"LMAOboxhack":1,"darren2pro":28}},{"path":"src/main/java/seedu/address/logic/parser/DeletePositionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.DeletePositionCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":" * Parses input arguments and creates a new DeletePositionCommand object","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"public class DeletePositionCommandParser implements Parser\u003cDeletePositionCommand\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePositionCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"     * and returns a DeletePositionCommand object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"    public DeletePositionCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"            return new DeletePositionCommand(index);","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePositionCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Harry-Gao-H":28}},{"path":"src/main/java/seedu/address/logic/parser/EditApplicantCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.EditApplicantCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.descriptors.EditApplicantDescriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"public class EditApplicantCommandParser implements Parser\u003cEditApplicantCommand\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"     * Parses the given {@code String} of arguments in the context of the EditApplicantCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"     * and returns an EditApplicantCommand object for execution.","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"    public EditApplicantCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"                        PREFIX_POSITION);","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"        Index index;","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"        Title positionTitle;","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"                    EditApplicantCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"        EditApplicantDescriptor editApplicantDescriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"            editApplicantDescriptor.setName(ApplicantParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"            editApplicantDescriptor.setPhone(ApplicantParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"            editApplicantDescriptor.setEmail(ApplicantParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"            editApplicantDescriptor.setAddress(ApplicantParserUtil","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"                    .parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"        if (argMultimap.getValue(PREFIX_POSITION).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"            positionTitle \u003d ApplicantParserUtil.parseTitle(argMultimap.getValue(PREFIX_POSITION).get());","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"            editApplicantDescriptor.setTitle(positionTitle);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!editApplicantDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new ParseException(EditApplicantCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"Harry-Gao-H"},"content":"        return new EditApplicantCommand(index, editApplicantDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"Harry-Gao-H":70}},{"path":"src/main/java/seedu/address/logic/parser/EditPositionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.EditPositionCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.descriptors.EditPositionDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"public class EditPositionCommandParser implements Parser\u003cEditPositionCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPositionCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"     * and returns an EditPositionCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"    public EditPositionCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_DESCRIPTION);","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"        Index index;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"                    EditPositionCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionDescriptor editPositionDescriptor \u003d new EditPositionDescriptor();","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"        if (argMultimap.getValue(PREFIX_TITLE).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"            editPositionDescriptor.setTitle(ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get()));","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"            editPositionDescriptor.setDescription(ParserUtil.parseDescription(","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"                    argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!editPositionDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new ParseException(EditPositionCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"        return new EditPositionCommand(index, editPositionDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Harry-Gao-H":53}},{"path":"src/main/java/seedu/address/logic/parser/FilterApplicantCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.commands.FilterApplicantCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.descriptors.FilterApplicantDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":" * Parses input arguments and creates a new FilterApplicantCommand object","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"public class FilterApplicantCommandParser implements Parser\u003cFilterApplicantCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterApplicantCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"     * and returns an FilterApplicantCommand object for execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"    public FilterApplicantCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_POSITION, PREFIX_STATUS);","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"        FilterApplicantDescriptor filterApplicantDescriptor \u003d new FilterApplicantDescriptor();","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"        if (argMultimap.getValue(PREFIX_POSITION).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"            filterApplicantDescriptor.setPositionTitle(","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"                    ApplicantParserUtil.parseTitle(argMultimap.getValue(PREFIX_POSITION).get()));","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"            filterApplicantDescriptor.setApplicationStatus(","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"                    ApplicantParserUtil.parseApplicationStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"        if (!filterApplicantDescriptor.hasAnyFilter()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(FilterApplicantCommand.MESSAGE_NOT_FILTERED);","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"        return new FilterApplicantCommand(filterApplicantDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"LMAOboxhack":42}},{"path":"src/main/java/seedu/address/logic/parser/FindApplicantCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.commands.FindApplicantCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":" * Parses input arguments and creates a new FindApplicantCommand object","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"public class FindApplicantCommandParser implements Parser\u003cFindApplicantCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"     * Parses the given {@code String} of arguments in the context of the FindApplicantCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"     * and returns a FindApplicantCommand object for execution.","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    public FindApplicantCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindApplicantCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        return new FindApplicantCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"darren2pro":33}},{"path":"src/main/java/seedu/address/logic/parser/MarkApplicantStatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.arePrefixesPresent;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.commands.MarkApplicantStatusCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Application.ApplicationStatus;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":" * Parses input arguments and creates a new MarkApplicantStatusCommand object","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"public class MarkApplicantStatusCommandParser implements Parser\u003cMarkApplicantStatusCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkApplicantStatusCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"     * and returns a MarkApplicantStatusCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"    public MarkApplicantStatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_STATUS);","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STATUS) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"                    MarkApplicantStatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"        Name name \u003d ApplicantParserUtil.parseName(argMultimap.getPreamble());","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"        ApplicationStatus applicationStatus \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"                ApplicantParserUtil.parseApplicationStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"        return new MarkApplicantStatusCommand(name, applicationStatus);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"LMAOboxhack":39}},{"path":"src/main/java/seedu/address/logic/parser/MrTechRecruiterParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.commands.AddApplicantCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.AddPositionCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.commands.DeleteApplicantCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.DeletePositionCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.EditApplicantCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.EditPositionCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.commands.FilterApplicantCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.commands.FindApplicantCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.commands.ListApplicantCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.ListPositionCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.commands.MarkApplicantStatusCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.logic.commands.RejectionRateCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.commands.VisualizePositionCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"public class MrTechRecruiterParser {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"        case AddApplicantCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"LMAOboxhack"},"content":"            return new AddApplicantCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"        case DeleteApplicantCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"LMAOboxhack"},"content":"            return new DeleteApplicantCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"        case ListApplicantCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"            return new ListApplicantCommand();","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"LMAOboxhack"},"content":"        case FilterApplicantCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"LMAOboxhack"},"content":"            return new FilterApplicantCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"Harry-Gao-H"},"content":"        case AddPositionCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"Harry-Gao-H"},"content":"            return new AddPositionCommandParser().parse(arguments);","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"Harry-Gao-H"},"content":"        case ListPositionCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"Harry-Gao-H"},"content":"            return new ListPositionCommand();","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"Harry-Gao-H"},"content":"        case DeletePositionCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"Harry-Gao-H"},"content":"            return new DeletePositionCommandParser().parse(arguments);","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"BenjaminTan99"},"content":"        case RejectionRateCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"BenjaminTan99"},"content":"            return new RejectionRateCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"Harry-Gao-H"},"content":"        case EditPositionCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"Harry-Gao-H"},"content":"            return new EditPositionCommandParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"Harry-Gao-H"},"content":"        case EditApplicantCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"Harry-Gao-H"},"content":"            return new EditApplicantCommandParser().parse(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"Harry-Gao-H"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"Harry-Gao-H"},"content":"            return new UndoCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"darren2pro"},"content":"        case FindApplicantCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"darren2pro"},"content":"            return new FindApplicantCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"LMAOboxhack"},"content":"        case VisualizePositionCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"LMAOboxhack"},"content":"            return new VisualizePositionCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"LMAOboxhack"},"content":"        case MarkApplicantStatusCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"LMAOboxhack"},"content":"            return new MarkApplicantStatusCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Harry-Gao-H":23,"LMAOboxhack":15,"darren2pro":14,"-":75,"BenjaminTan99":5}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Description;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"Harry-Gao-H"},"content":"    // All position related methods","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"Harry-Gao-H"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"Harry-Gao-H"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"Harry-Gao-H"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"Harry-Gao-H"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"Harry-Gao-H"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(title);","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"Harry-Gao-H"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"Harry-Gao-H"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"Harry-Gao-H"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"Harry-Gao-H"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"Harry-Gao-H"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"Harry-Gao-H"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"Harry-Gao-H"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"Harry-Gao-H"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"Harry-Gao-H"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Harry-Gao-H":31,"LMAOboxhack":1,"darren2pro":3,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/RejectionRateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.arePrefixesPresent;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.logic.commands.RejectionRateCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":" * Parses input arguments and creates a new RejectionRateCommand object","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"public class RejectionRateCommandParser implements Parser\u003cRejectionRateCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"     * Parses the given {@code String} of arguments in the context of the RejectionRateCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"     * and returns a RejectionRateCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"    public RejectionRateCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_POSITION);","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"        if (!arePrefixesPresent(argumentMultimap, PREFIX_POSITION)","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"                || !argumentMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RejectionRateCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"        Title positionTitle \u003d ApplicantParserUtil.parseTitle(argumentMultimap.getValue(PREFIX_POSITION).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"        return new RejectionRateCommand(positionTitle);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"LMAOboxhack":1,"BenjaminTan99":33}},{"path":"src/main/java/seedu/address/logic/parser/VisualizePositionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.commands.VisualizePositionCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":" * Parses input arguments and creates a new VisualizePositionCommand object","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"public class VisualizePositionCommandParser implements Parser\u003cVisualizePositionCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses the given {@code String} of arguments in the context of the VisualizePositionCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"     * and returns a VisualizePositionCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"    public VisualizePositionCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, VisualizePositionCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"        return new VisualizePositionCommand(new Title(trimmedArgs));","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"LMAOboxhack":32}},{"path":"src/main/java/seedu/address/model/ApplicantBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.UniqueApplicantList;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":" * Wraps all applicant data at ApplicantBook level","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":" * Duplicates are not allowed (by .isSameApplicant comparison)","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"public class ApplicantBook implements ReadOnlyApplicantBook {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    private final UniqueApplicantList applicants;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    /*","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"     *   among constructors.","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        applicants \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"    public ApplicantBook() {}","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"     * Creates an ApplicantBook using the Applicants in the {@code toBeCopied}","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    public ApplicantBook(ReadOnlyApplicantBook toBeCopied) {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        this();","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"     * Replaces the contents of the applicant list with {@code applicants}.","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"     * {@code applicants} must not contain duplicate applicants.","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"    public void setApplicants(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"        this.applicants.setApplicants(applicants);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"     * Resets the existing data of this {@code ApplicantBook} with {@code newData}.","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"    public void resetData(ReadOnlyApplicantBook newData) {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        setApplicants(newData.getApplicantList());","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"    //// position-level operations","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if the {@code applicant} exists in the applicant book.","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"        return applicants.contains(applicant);","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns true if an applicant with the name {@code applicantName} exists in the applicant book.","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean hasApplicantWithName(Name applicantName) {","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(applicantName);","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"LMAOboxhack"},"content":"        return applicants.containsApplicantWithName(applicantName);","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns the applicant with the specified name, if any.","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"LMAOboxhack"},"content":"    public Applicant getApplicantByNameIgnoreCase(Name applicantName) {","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(applicantName);","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"LMAOboxhack"},"content":"        return applicants.getApplicantByNameIgnoreCase(applicantName);","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"     * Adds an applicant to the applicant book.","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"     * The applicant must not already exist in the applicant book.","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"    public void addApplicant(Applicant a) {","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"        applicants.add(a);","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"     * Replaces the given applicant {@code target} in the list with {@code editedApplicant}.","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"     * {@code target} must exist in the applicant book.","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"darren2pro"},"content":"     * another existing applicant in the applicant book.","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(editedApplicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"        applicants.setApplicant(target, editedApplicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"     * Removes {@code key} from this {@code ApplicantBook}.","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"     * {@code key} must exist in the applicant book.","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"    public void removeApplicant(Applicant key) {","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"        applicants.remove(key);","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"LMAOboxhack"},"content":"    public void removeApplicantsUnderPosition(Position position) {","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"LMAOboxhack"},"content":"        applicants.removeIf(applicant -\u003e applicant.isApplyingTo(position));","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"Harry-Gao-H"},"content":"    public void updateApplicantsWithPosition(Position positionToEdit,","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"Harry-Gao-H"},"content":"                                             Position editedPosition) {","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"Harry-Gao-H"},"content":"        applicants.updateApplicantsWithPosition(positionToEdit, editedPosition);","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"darren2pro"},"content":"    public String toString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"darren2pro"},"content":"        return applicants.asUnmodifiableObservableList().size() + \" applicants\";","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"darren2pro"},"content":"        // TODO: refine later","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"LMAOboxhack"},"content":"    public ObservableList\u003cApplicant\u003e getApplicantList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"darren2pro"},"content":"        return applicants.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof ApplicantBook // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 applicants.equals(((ApplicantBook) other).applicants));","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"Harry-Gao-H"},"content":"    public ApplicantBook getCopiedApplicantBook() {","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"Harry-Gao-H"},"content":"        ApplicantBook copiedApplicantBook \u003d new ApplicantBook();","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"Harry-Gao-H"},"content":"        copiedApplicantBook.applicants.setApplicants(this.applicants.getCopiedApplicants());","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"Harry-Gao-H"},"content":"        return copiedApplicantBook;","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":20,"LMAOboxhack":36,"darren2pro":91}},{"path":"src/main/java/seedu/address/model/Calculator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":" * This singleton class deals with calculating the rejection rate of a specified position only.","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"public class Calculator {","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"    public static final int INVALID_REJECTION_RATE \u003d -1;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"    public static final int TO_PERCENTAGE \u003d 100;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"    private Calculator() {}","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"     * Calculates the rejection rate.","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"     * @param totalApplied Total number of applicants for a position.","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"     * @param totalRejected Total number of rejected applicants for a position.","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"     * @return A floating point number representing the rejection rate.","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"    public static float calculateRejectionRate(int totalApplied, int totalRejected) {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"        if (totalApplied \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"            return INVALID_REJECTION_RATE;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"        return (float) totalRejected / totalApplied * TO_PERCENTAGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"BenjaminTan99":25}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.ApplicantParticulars;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"    Predicate\u003cPosition\u003e PREDICATE_SHOW_ALL_POSITIONS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"    Predicate\u003cApplicant\u003e PREDICATE_SHOW_ALL_APPLICANTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns the AddressBook","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"BenjaminTan99"},"content":"     * Adds a new applicant to MrTechRecruiter with the given particulars.","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"BenjaminTan99"},"content":"     * The intended applicant must not already exist in the applicant book.","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"BenjaminTan99"},"content":"     * @return the newly added applicant.","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"BenjaminTan99"},"content":"    Applicant addApplicantWithParticulars(ApplicantParticulars applicantParticulars);","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns true if an applicant named {@code applicantName} exists in MrTechRecruiter.","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"BenjaminTan99"},"content":"    boolean hasApplicantWithName(Name applicantName);","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns the applicant with the specified name, if any.","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"LMAOboxhack"},"content":"    Applicant getApplicantByNameIgnoreCase(Name applicantName);","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"darren2pro"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Position related methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"Harry-Gao-H"},"content":"     * Replaces the given position {@code target} with {@code editedPosition}.","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"Harry-Gao-H"},"content":"     * {@code target} must exist in MrTechRecruiter.","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"Harry-Gao-H"},"content":"     * The position identity of {@code editedPosition} must not be the same as another existing position in","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"Harry-Gao-H"},"content":"     * MrTechRecruiter.","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"Harry-Gao-H"},"content":"    void setPosition(Position position, Position editedPosition);","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if a position with the same identity as {@code position} exists in the position book","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"Harry-Gao-H"},"content":"    boolean hasPosition(Position position);","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if a position with {@code title} exists in the position book","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"Harry-Gao-H"},"content":"    boolean hasPositionWithTitle(Title title);","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":139,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns the position with {@code title}","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"Harry-Gao-H"},"content":"    Position getPositionByTitle(Title title);","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"darren2pro"},"content":"    /** Returns an unmodifiable view of the filtered applicant list */","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"darren2pro"},"content":"    ObservableList\u003cApplicant\u003e getFilteredApplicantList();","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns an unmodifiable view of the filtered position list","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"Harry-Gao-H"},"content":"    ObservableList\u003cPosition\u003e getFilteredPositionList();","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":154,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":156,"author":{"gitId":"darren2pro"},"content":"     * Adds the given position.","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"darren2pro"},"content":"     * {@code position} must not already exist in the position book.","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":159,"author":{"gitId":"darren2pro"},"content":"    void addPosition(Position position);","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":162,"author":{"gitId":"darren2pro"},"content":"     * Deletes the given position.","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"darren2pro"},"content":"     * The position must exist in the position book.","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"darren2pro"},"content":"    void deletePosition(Position position);","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"darren2pro"},"content":"     * Returns the user prefs\u0027 position book file path.","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":170,"author":{"gitId":"darren2pro"},"content":"    Path getPositionBookFilePath();","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":173,"author":{"gitId":"darren2pro"},"content":"     * Replaces position book data with the data in {@code positionBook}.","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"darren2pro"},"content":"    void setPositionBook(ReadOnlyPositionBook positionBook);","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":177,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns the PositionBook","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"Harry-Gao-H"},"content":"    ReadOnlyPositionBook getPositionBook();","lastModifiedDate":"2021-10-14"},{"lineNumber":181,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":182,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"Harry-Gao-H"},"content":"     * Updates the filter of the filtered position list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-14"},{"lineNumber":184,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"Harry-Gao-H"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-14"},{"lineNumber":186,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":187,"author":{"gitId":"Harry-Gao-H"},"content":"    void updateFilteredPositionList(Predicate\u003cPosition\u003e predicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":188,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":189,"author":{"gitId":"darren2pro"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Applicant related methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":192,"author":{"gitId":"darren2pro"},"content":"     * Replaces the given applicant {@code target} with {@code editedApplicant}.","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"darren2pro"},"content":"     * {@code target} must exist in MrTechRecruiter.","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"darren2pro"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as another existing person in","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"darren2pro"},"content":"     * MrTechRecruiter.","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":197,"author":{"gitId":"darren2pro"},"content":"    void setApplicant(Applicant target, Applicant editedApplicant);","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":199,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"Harry-Gao-H"},"content":"     * Adds the given applicant.","lastModifiedDate":"2021-10-22"},{"lineNumber":201,"author":{"gitId":"Harry-Gao-H"},"content":"     * {@code applicant} must not already exist in the applicant book.","lastModifiedDate":"2021-10-22"},{"lineNumber":202,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"Harry-Gao-H"},"content":"    void addApplicant(Applicant applicant);","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if {@code applicant} exists in MrTechRecruiter.","lastModifiedDate":"2021-10-22"},{"lineNumber":207,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":208,"author":{"gitId":"Harry-Gao-H"},"content":"    boolean hasApplicant(Applicant applicant);","lastModifiedDate":"2021-10-22"},{"lineNumber":209,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"darren2pro"},"content":"     * Deletes the given applicant.","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"darren2pro"},"content":"     * The applicant must exist in the address book.","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"darren2pro"},"content":"    void deleteApplicant(Applicant target);","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":217,"author":{"gitId":"BenjaminTan99"},"content":"    Path getApplicantBookFilePath();","lastModifiedDate":"2021-10-14"},{"lineNumber":218,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"BenjaminTan99"},"content":"     * Calculates the rejection rate of a given position.","lastModifiedDate":"2021-10-23"},{"lineNumber":221,"author":{"gitId":"BenjaminTan99"},"content":"     * @param title The title of the position to be calculated.","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"BenjaminTan99"},"content":"     * @return The rejection rate of the specified position.","lastModifiedDate":"2021-10-23"},{"lineNumber":223,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":224,"author":{"gitId":"BenjaminTan99"},"content":"    float calculateRejectionRate(Title title);","lastModifiedDate":"2021-10-23"},{"lineNumber":225,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"darren2pro"},"content":"     * Replaces position book data with the data in {@code positionBook}.","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"darren2pro"},"content":"    void setApplicantBook(ReadOnlyApplicantBook applicantBook);","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":231,"author":{"gitId":"darren2pro"},"content":"    /** Returns the ApplicantBook */","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"darren2pro"},"content":"    ReadOnlyApplicantBook getApplicantBook();","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"darren2pro"},"content":"     * Updates the filter of the filtered position list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"darren2pro"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"darren2pro"},"content":"    void updateFilteredApplicantList(Predicate\u003cApplicant\u003e predicateShowAllApplicants);","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":240,"author":{"gitId":"BenjaminTan99"},"content":"    void updateApplicantsWithPosition(Position positionToEdit, Position editedPosition);","lastModifiedDate":"2021-10-22"},{"lineNumber":241,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":242,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":243,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":244,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns a deep-copied model.","lastModifiedDate":"2021-10-26"},{"lineNumber":245,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":246,"author":{"gitId":"Harry-Gao-H"},"content":"    Model getCopiedModel();","lastModifiedDate":"2021-10-26"},{"lineNumber":247,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":248,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"Harry-Gao-H"},"content":"     * Records the modification history.","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"Harry-Gao-H"},"content":"    void addToHistory(Command command);","lastModifiedDate":"2021-10-28"},{"lineNumber":252,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":253,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":254,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if there exists history to recover.","lastModifiedDate":"2021-10-26"},{"lineNumber":255,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":256,"author":{"gitId":"Harry-Gao-H"},"content":"    boolean hasHistory();","lastModifiedDate":"2021-10-26"},{"lineNumber":257,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":258,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":259,"author":{"gitId":"Harry-Gao-H"},"content":"     * Undoes the previous modification.","lastModifiedDate":"2021-10-26"},{"lineNumber":260,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":261,"author":{"gitId":"Harry-Gao-H"},"content":"    String recoverHistory();","lastModifiedDate":"2021-10-26"},{"lineNumber":262,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Harry-Gao-H":77,"LMAOboxhack":13,"darren2pro":47,"-":90,"BenjaminTan99":36}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.memento.History;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.memento.Memento;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.ApplicantParticulars;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Application.ApplicationStatus;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"    private final PositionBook positionBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"    private final ApplicantBook applicantBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    private final FilteredList\u003cApplicant\u003e filteredApplicants;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"    private final FilteredList\u003cPosition\u003e filteredPositions;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"    private final History history;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"     * Initializes a ModelManager with the given positionBook, applicantBook, applicationBook and userPrefs.","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyApplicantBook applicantBook,","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"                        ReadOnlyPositionBook positionBook,","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"        requireAllNonNull(addressBook, applicantBook, positionBook, userPrefs);","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"LMAOboxhack"},"content":"                + \", applicant book: \" + applicantBook","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"                + \", position book: \" + positionBook","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"LMAOboxhack"},"content":"                + \", userPrefs: \" + userPrefs);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"LMAOboxhack"},"content":"        this.positionBook \u003d new PositionBook(positionBook);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"LMAOboxhack"},"content":"        this.applicantBook \u003d new ApplicantBook(applicantBook);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"        filteredApplicants \u003d new FilteredList\u003c\u003e(this.applicantBook.getApplicantList());","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"        filteredPositions \u003d new FilteredList\u003c\u003e(this.positionBook.getPositionList());","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"        history \u003d new History();","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"     * Initializes a ModelManager with the given positionBook, applicantBook, applicationBook and userPrefs.","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyApplicantBook applicantBook,","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"Harry-Gao-H"},"content":"                        ReadOnlyPositionBook positionBook,","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Harry-Gao-H"},"content":"                        ReadOnlyUserPrefs userPrefs, History changeHistory) {","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Harry-Gao-H"},"content":"        super();","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Harry-Gao-H"},"content":"        requireAllNonNull(addressBook, applicantBook, positionBook, userPrefs);","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Harry-Gao-H"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Harry-Gao-H"},"content":"                + \", applicant book: \" + applicantBook","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"Harry-Gao-H"},"content":"                + \", position book: \" + positionBook","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"Harry-Gao-H"},"content":"                + \", userPrefs: \" + userPrefs);","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"Harry-Gao-H"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"Harry-Gao-H"},"content":"        this.positionBook \u003d new PositionBook(positionBook);","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"Harry-Gao-H"},"content":"        this.applicantBook \u003d new ApplicantBook(applicantBook);","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"Harry-Gao-H"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Harry-Gao-H"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Harry-Gao-H"},"content":"        filteredApplicants \u003d new FilteredList\u003c\u003e(this.applicantBook.getApplicantList());","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Harry-Gao-H"},"content":"        filteredPositions \u003d new FilteredList\u003c\u003e(this.positionBook.getPositionList());","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Harry-Gao-H"},"content":"        this.history \u003d changeHistory;","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"LMAOboxhack"},"content":"     * Old constructor - left temporarily to pass unit tests","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"darren2pro"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"LMAOboxhack"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"LMAOboxhack"},"content":"        this.positionBook \u003d new PositionBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"LMAOboxhack"},"content":"        this.applicantBook \u003d new ApplicantBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"LMAOboxhack"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"LMAOboxhack"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"        filteredApplicants \u003d new FilteredList\u003c\u003e(this.applicantBook.getApplicantList());","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"Harry-Gao-H"},"content":"        filteredPositions \u003d new FilteredList\u003c\u003e(this.positionBook.getPositionList());","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"Harry-Gao-H"},"content":"        history \u003d new History();","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"Harry-Gao-H"},"content":"     * Left temporarily to pass unit tests","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"Harry-Gao-H"},"content":"     * Initializes a ModelManager with the given positionBook and userPrefs.","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"Harry-Gao-H"},"content":"    public ModelManager(ReadOnlyPositionBook positionBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"Harry-Gao-H"},"content":"        super();","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"Harry-Gao-H"},"content":"        requireAllNonNull(positionBook, userPrefs);","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"Harry-Gao-H"},"content":"        logger.fine(\"Initializing with position book: \" + positionBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"Harry-Gao-H"},"content":"        this.addressBook \u003d new AddressBook();","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"Harry-Gao-H"},"content":"        this.positionBook \u003d new PositionBook(positionBook);","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"Harry-Gao-H"},"content":"        this.applicantBook \u003d new ApplicantBook();","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"Harry-Gao-H"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"Harry-Gao-H"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"Harry-Gao-H"},"content":"        filteredApplicants \u003d new FilteredList\u003c\u003e(this.applicantBook.getApplicantList());","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"Harry-Gao-H"},"content":"        filteredPositions \u003d new FilteredList\u003c\u003e(this.positionBook.getPositionList());","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"Harry-Gao-H"},"content":"        history \u003d new History();","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"darren2pro"},"content":"     * Old constructor - left temporarily to pass unit tests.","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"darren2pro"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyPositionBook positionBook,","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"darren2pro"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"darren2pro"},"content":"        super();","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"darren2pro"},"content":"        requireAllNonNull(positionBook, userPrefs);","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"darren2pro"},"content":"        logger.fine(\"Initializing with position book: \" + positionBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"darren2pro"},"content":"        this.positionBook \u003d new PositionBook(positionBook);","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"darren2pro"},"content":"        this.applicantBook \u003d new ApplicantBook();","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"darren2pro"},"content":"        filteredApplicants \u003d new FilteredList\u003c\u003e(this.applicantBook.getApplicantList());","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"darren2pro"},"content":"        filteredPositions \u003d new FilteredList\u003c\u003e(this.positionBook.getPositionList());","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"Harry-Gao-H"},"content":"        history \u003d new History();","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"darren2pro"},"content":"     * Old constructor - left temporarily to pass unit tests.","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"darren2pro"},"content":"    public ModelManager(ReadOnlyPositionBook positionBook, ReadOnlyApplicantBook applicantBook,","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"darren2pro"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"Harry-Gao-H"},"content":"        super();","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"Harry-Gao-H"},"content":"        requireAllNonNull(positionBook, userPrefs);","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"Harry-Gao-H"},"content":"        logger.fine(\"Initializing with position book: \" + positionBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"Harry-Gao-H"},"content":"        this.addressBook \u003d new AddressBook();","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"Harry-Gao-H"},"content":"        this.positionBook \u003d new PositionBook(positionBook);","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"darren2pro"},"content":"        this.applicantBook \u003d new ApplicantBook(applicantBook);","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"Harry-Gao-H"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"Harry-Gao-H"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"Harry-Gao-H"},"content":"        filteredApplicants \u003d new FilteredList\u003c\u003e(this.applicantBook.getApplicantList());","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"Harry-Gao-H"},"content":"        filteredPositions \u003d new FilteredList\u003c\u003e(this.positionBook.getPositionList());","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"Harry-Gao-H"},"content":"        history \u003d new History();","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":172,"author":{"gitId":"BenjaminTan99"},"content":"        this(new AddressBook(), new ApplicantBook(), new PositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":199,"author":{"gitId":"darren2pro"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":262,"author":{"gitId":"LMAOboxhack"},"content":"    // TODO: Update equals()","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":282,"author":{"gitId":"darren2pro"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Position and PositionBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":284,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":285,"author":{"gitId":"darren2pro"},"content":"    public void setPosition(Position target, Position editedPosition) {","lastModifiedDate":"2021-10-21"},{"lineNumber":286,"author":{"gitId":"darren2pro"},"content":"        requireAllNonNull(target, editedPosition);","lastModifiedDate":"2021-10-21"},{"lineNumber":287,"author":{"gitId":"darren2pro"},"content":"        positionBook.setPosition(target, editedPosition);","lastModifiedDate":"2021-10-21"},{"lineNumber":288,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":289,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":290,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":291,"author":{"gitId":"darren2pro"},"content":"    public Path getPositionBookFilePath() {","lastModifiedDate":"2021-10-19"},{"lineNumber":292,"author":{"gitId":"darren2pro"},"content":"        return userPrefs.getPositionBookFilePath();","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":294,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":295,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":296,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean hasPosition(Position position) {","lastModifiedDate":"2021-10-09"},{"lineNumber":297,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(position);","lastModifiedDate":"2021-10-09"},{"lineNumber":298,"author":{"gitId":"Harry-Gao-H"},"content":"        return positionBook.hasPosition(position);","lastModifiedDate":"2021-10-09"},{"lineNumber":299,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":300,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":301,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"BenjaminTan99"},"content":"    public boolean hasPositionWithTitle(Title title) {","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"BenjaminTan99"},"content":"        requireNonNull(title);","lastModifiedDate":"2021-10-21"},{"lineNumber":304,"author":{"gitId":"BenjaminTan99"},"content":"        return positionBook.hasPositionWithTitle(title);","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":306,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":307,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":308,"author":{"gitId":"Harry-Gao-H"},"content":"    public Position getPositionByTitle(Title title) {","lastModifiedDate":"2021-10-23"},{"lineNumber":309,"author":{"gitId":"Harry-Gao-H"},"content":"        return positionBook.getPositionByTitle(title);","lastModifiedDate":"2021-10-23"},{"lineNumber":310,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":311,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":312,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":313,"author":{"gitId":"Harry-Gao-H"},"content":"    public void addPosition(Position position) {","lastModifiedDate":"2021-10-09"},{"lineNumber":314,"author":{"gitId":"Harry-Gao-H"},"content":"        positionBook.addPosition(position);","lastModifiedDate":"2021-10-09"},{"lineNumber":315,"author":{"gitId":"Harry-Gao-H"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-09"},{"lineNumber":316,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":317,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":318,"author":{"gitId":"Harry-Gao-H"},"content":"    public void deletePosition(Position positionToDelete) {","lastModifiedDate":"2021-10-09"},{"lineNumber":319,"author":{"gitId":"Harry-Gao-H"},"content":"        positionBook.removePosition(positionToDelete);","lastModifiedDate":"2021-10-09"},{"lineNumber":320,"author":{"gitId":"LMAOboxhack"},"content":"        applicantBook.removeApplicantsUnderPosition(positionToDelete);","lastModifiedDate":"2021-10-14"},{"lineNumber":321,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":322,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":323,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":324,"author":{"gitId":"darren2pro"},"content":"    public void setPositionBook(ReadOnlyPositionBook positionBook) {","lastModifiedDate":"2021-10-21"},{"lineNumber":325,"author":{"gitId":"darren2pro"},"content":"        this.positionBook.resetData(positionBook);","lastModifiedDate":"2021-10-21"},{"lineNumber":326,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":327,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":328,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":329,"author":{"gitId":"darren2pro"},"content":"    public ReadOnlyPositionBook getPositionBook() {","lastModifiedDate":"2021-10-19"},{"lineNumber":330,"author":{"gitId":"darren2pro"},"content":"        return positionBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":331,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":332,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":333,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":334,"author":{"gitId":"Harry-Gao-H"},"content":"    public ObservableList\u003cPosition\u003e getFilteredPositionList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":335,"author":{"gitId":"Harry-Gao-H"},"content":"        return filteredPositions;","lastModifiedDate":"2021-10-09"},{"lineNumber":336,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":337,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":338,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":339,"author":{"gitId":"Harry-Gao-H"},"content":"    public void updateFilteredPositionList(Predicate\u003cPosition\u003e predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":340,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":341,"author":{"gitId":"Harry-Gao-H"},"content":"        filteredPositions.setPredicate(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":342,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":343,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":344,"author":{"gitId":"darren2pro"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Applicant and ApplicantBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":345,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":346,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":347,"author":{"gitId":"LMAOboxhack"},"content":"    public Path getApplicantBookFilePath() {","lastModifiedDate":"2021-10-27"},{"lineNumber":348,"author":{"gitId":"LMAOboxhack"},"content":"        return userPrefs.getApplicantBookFilePath();","lastModifiedDate":"2021-10-27"},{"lineNumber":349,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":350,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":351,"author":{"gitId":"darren2pro"},"content":"    public void setApplicantBook(ReadOnlyApplicantBook applicantBook) {","lastModifiedDate":"2021-10-21"},{"lineNumber":352,"author":{"gitId":"darren2pro"},"content":"        this.applicantBook.resetData(applicantBook);","lastModifiedDate":"2021-10-21"},{"lineNumber":353,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":354,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":355,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":356,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2021-10-19"},{"lineNumber":357,"author":{"gitId":"darren2pro"},"content":"        requireAllNonNull(target, editedApplicant);","lastModifiedDate":"2021-10-19"},{"lineNumber":358,"author":{"gitId":"darren2pro"},"content":"        applicantBook.setApplicant(target, editedApplicant);","lastModifiedDate":"2021-10-19"},{"lineNumber":359,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":360,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":361,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":362,"author":{"gitId":"Harry-Gao-H"},"content":"    public ReadOnlyApplicantBook getApplicantBook() {","lastModifiedDate":"2021-10-22"},{"lineNumber":363,"author":{"gitId":"Harry-Gao-H"},"content":"        return applicantBook;","lastModifiedDate":"2021-10-22"},{"lineNumber":364,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":365,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":366,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":367,"author":{"gitId":"Harry-Gao-H"},"content":"    public void addApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-22"},{"lineNumber":368,"author":{"gitId":"Harry-Gao-H"},"content":"        applicantBook.addApplicant(applicant);","lastModifiedDate":"2021-10-22"},{"lineNumber":369,"author":{"gitId":"Harry-Gao-H"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-22"},{"lineNumber":370,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":371,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":372,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":373,"author":{"gitId":"darren2pro"},"content":"    public void deleteApplicant(Applicant target) {","lastModifiedDate":"2021-10-19"},{"lineNumber":374,"author":{"gitId":"darren2pro"},"content":"        applicantBook.removeApplicant(target);","lastModifiedDate":"2021-10-19"},{"lineNumber":375,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":376,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":377,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":378,"author":{"gitId":"LMAOboxhack"},"content":"    public Applicant addApplicantWithParticulars(ApplicantParticulars applicantParticulars) {","lastModifiedDate":"2021-10-27"},{"lineNumber":379,"author":{"gitId":"LMAOboxhack"},"content":"        Title positionTitle \u003d applicantParticulars.getPositionTitle();","lastModifiedDate":"2021-10-27"},{"lineNumber":380,"author":{"gitId":"LMAOboxhack"},"content":"        Position position \u003d positionBook.getPositionByTitle(positionTitle);","lastModifiedDate":"2021-10-27"},{"lineNumber":381,"author":{"gitId":"LMAOboxhack"},"content":"        Applicant applicant \u003d new Applicant(applicantParticulars, position);","lastModifiedDate":"2021-10-27"},{"lineNumber":382,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":383,"author":{"gitId":"LMAOboxhack"},"content":"        applicantBook.addApplicant(applicant);","lastModifiedDate":"2021-10-27"},{"lineNumber":384,"author":{"gitId":"LMAOboxhack"},"content":"        updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":385,"author":{"gitId":"LMAOboxhack"},"content":"        return applicant;","lastModifiedDate":"2021-10-27"},{"lineNumber":386,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":387,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":388,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":389,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-27"},{"lineNumber":390,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2021-10-27"},{"lineNumber":391,"author":{"gitId":"LMAOboxhack"},"content":"        return applicantBook.hasApplicant(applicant);","lastModifiedDate":"2021-10-27"},{"lineNumber":392,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":393,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":394,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":395,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean hasApplicantWithName(Name applicantName) {","lastModifiedDate":"2021-10-27"},{"lineNumber":396,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(applicantName);","lastModifiedDate":"2021-10-27"},{"lineNumber":397,"author":{"gitId":"LMAOboxhack"},"content":"        return applicantBook.hasApplicantWithName(applicantName);","lastModifiedDate":"2021-10-27"},{"lineNumber":398,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":399,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":400,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":401,"author":{"gitId":"LMAOboxhack"},"content":"    public Applicant getApplicantByNameIgnoreCase(Name applicantName) {","lastModifiedDate":"2021-10-27"},{"lineNumber":402,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(applicantName);","lastModifiedDate":"2021-10-27"},{"lineNumber":403,"author":{"gitId":"LMAOboxhack"},"content":"        return applicantBook.getApplicantByNameIgnoreCase(applicantName);","lastModifiedDate":"2021-10-27"},{"lineNumber":404,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":405,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":406,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":407,"author":{"gitId":"Harry-Gao-H"},"content":"    public void updateApplicantsWithPosition(Position positionToEdit, Position editedPosition) {","lastModifiedDate":"2021-10-19"},{"lineNumber":408,"author":{"gitId":"Harry-Gao-H"},"content":"        requireAllNonNull(positionToEdit, editedPosition);","lastModifiedDate":"2021-10-19"},{"lineNumber":409,"author":{"gitId":"Harry-Gao-H"},"content":"        applicantBook.updateApplicantsWithPosition(positionToEdit, editedPosition);","lastModifiedDate":"2021-10-19"},{"lineNumber":410,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":411,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":412,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":413,"author":{"gitId":"darren2pro"},"content":"    public void updateFilteredApplicantList(Predicate\u003cApplicant\u003e predicate) {","lastModifiedDate":"2021-10-22"},{"lineNumber":414,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-22"},{"lineNumber":415,"author":{"gitId":"darren2pro"},"content":"        filteredApplicants.setPredicate(predicate);","lastModifiedDate":"2021-10-22"},{"lineNumber":416,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":417,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":418,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":419,"author":{"gitId":"darren2pro"},"content":"    public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":420,"author":{"gitId":"darren2pro"},"content":"        return filteredApplicants;","lastModifiedDate":"2021-10-19"},{"lineNumber":421,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":422,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":423,"author":{"gitId":"BenjaminTan99"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Rejection rates \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":424,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":425,"author":{"gitId":"BenjaminTan99"},"content":"     * Initialise rejection rate of a new position.","lastModifiedDate":"2021-10-19"},{"lineNumber":426,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":427,"author":{"gitId":"BenjaminTan99"},"content":"     * @param title The title of the position to be calculated.","lastModifiedDate":"2021-10-23"},{"lineNumber":428,"author":{"gitId":"BenjaminTan99"},"content":"     * @return The rejection rate of a given position in MTR.","lastModifiedDate":"2021-10-21"},{"lineNumber":429,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":430,"author":{"gitId":"BenjaminTan99"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":431,"author":{"gitId":"BenjaminTan99"},"content":"    public float calculateRejectionRate(Title title) {","lastModifiedDate":"2021-10-23"},{"lineNumber":432,"author":{"gitId":"BenjaminTan99"},"content":"        Position currPosition \u003d positionBook.getPositionByTitle(title);","lastModifiedDate":"2021-10-23"},{"lineNumber":433,"author":{"gitId":"BenjaminTan99"},"content":"        int total \u003d (int) applicantBook.getApplicantList()","lastModifiedDate":"2021-10-23"},{"lineNumber":434,"author":{"gitId":"BenjaminTan99"},"content":"                .stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":435,"author":{"gitId":"BenjaminTan99"},"content":"                .filter(applicant -\u003e applicant.isApplyingTo(currPosition))","lastModifiedDate":"2021-10-23"},{"lineNumber":436,"author":{"gitId":"BenjaminTan99"},"content":"                .count();","lastModifiedDate":"2021-10-23"},{"lineNumber":437,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":438,"author":{"gitId":"BenjaminTan99"},"content":"        int count \u003d (int) applicantBook.getApplicantList()","lastModifiedDate":"2021-10-23"},{"lineNumber":439,"author":{"gitId":"BenjaminTan99"},"content":"                .stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":440,"author":{"gitId":"BenjaminTan99"},"content":"                .filter(applicant -\u003e applicant.isApplyingTo(currPosition)","lastModifiedDate":"2021-10-23"},{"lineNumber":441,"author":{"gitId":"BenjaminTan99"},"content":"                        \u0026\u0026 (applicant.getApplication().getStatus() \u003d\u003d ApplicationStatus.REJECTED))","lastModifiedDate":"2021-10-23"},{"lineNumber":442,"author":{"gitId":"BenjaminTan99"},"content":"                .count();","lastModifiedDate":"2021-10-23"},{"lineNumber":443,"author":{"gitId":"BenjaminTan99"},"content":"        return Calculator.calculateRejectionRate(total, count);","lastModifiedDate":"2021-10-21"},{"lineNumber":444,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":445,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":446,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":447,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":448,"author":{"gitId":"Harry-Gao-H"},"content":"    public Model getCopiedModel() {","lastModifiedDate":"2021-10-26"},{"lineNumber":449,"author":{"gitId":"Harry-Gao-H"},"content":"        return new ModelManager(this.addressBook, applicantBook.getCopiedApplicantBook(),","lastModifiedDate":"2021-10-26"},{"lineNumber":450,"author":{"gitId":"Harry-Gao-H"},"content":"                positionBook.getCopiedPositionBook(), this.userPrefs, this.history);","lastModifiedDate":"2021-10-26"},{"lineNumber":451,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":452,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":453,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":454,"author":{"gitId":"Harry-Gao-H"},"content":"    public void addToHistory(Command command) {","lastModifiedDate":"2021-10-28"},{"lineNumber":455,"author":{"gitId":"Harry-Gao-H"},"content":"        history.add(command);","lastModifiedDate":"2021-10-26"},{"lineNumber":456,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":457,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":458,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":459,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":460,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean hasHistory() {","lastModifiedDate":"2021-10-26"},{"lineNumber":461,"author":{"gitId":"Harry-Gao-H"},"content":"        return history.hasHistory();","lastModifiedDate":"2021-10-26"},{"lineNumber":462,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":463,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":464,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":465,"author":{"gitId":"Harry-Gao-H"},"content":"    public String recoverHistory() {","lastModifiedDate":"2021-10-26"},{"lineNumber":466,"author":{"gitId":"Harry-Gao-H"},"content":"        Memento memento \u003d history.recoverHistory();","lastModifiedDate":"2021-10-26"},{"lineNumber":467,"author":{"gitId":"Harry-Gao-H"},"content":"        Model previousModel \u003d memento.getModel();","lastModifiedDate":"2021-10-26"},{"lineNumber":468,"author":{"gitId":"Harry-Gao-H"},"content":"        this.setPositionBook(previousModel.getPositionBook());","lastModifiedDate":"2021-10-26"},{"lineNumber":469,"author":{"gitId":"Harry-Gao-H"},"content":"        this.setApplicantBook(previousModel.getApplicantBook());","lastModifiedDate":"2021-10-26"},{"lineNumber":470,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":471,"author":{"gitId":"Harry-Gao-H"},"content":"        return memento.getMessage();","lastModifiedDate":"2021-10-26"},{"lineNumber":472,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":473,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Harry-Gao-H":155,"LMAOboxhack":56,"darren2pro":74,"-":155,"BenjaminTan99":33}},{"path":"src/main/java/seedu/address/model/PositionBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.UniquePositionList;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":" * Wraps all position data at the position-book level","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":" * Duplicates are not allowed (by .isSamePosition comparison)","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"public class PositionBook implements ReadOnlyPositionBook {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"    private final UniquePositionList positions;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"    /*","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"     *   among constructors.","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"    {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"        positions \u003d new UniquePositionList();","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"    public PositionBook() {}","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"     * Creates an PositionBook using the Positions in the {@code toBeCopied}","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"    public PositionBook(ReadOnlyPositionBook toBeCopied) {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"        this();","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"     * Replaces the contents of the position list with {@code positions}.","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"     * {@code positions} must not contain duplicate positions.","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setPositions(List\u003cPosition\u003e positions) {","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"        this.positions.setPositions(positions);","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"     * Resets the existing data of this {@code PositionBook} with {@code newData}.","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"    public void resetData(ReadOnlyPositionBook newData) {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"        setPositions(newData.getPositionList());","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"    //// position-level operations","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if a position with the same identity as {@code position} exists in the position book.","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean hasPosition(Position position) {","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(position);","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"Harry-Gao-H"},"content":"        return positions.contains(position);","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"BenjaminTan99"},"content":"     * Returns true if a position titled {@code title} exists in the position book.","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"BenjaminTan99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"BenjaminTan99"},"content":"    public boolean hasPositionWithTitle(Title title) {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"BenjaminTan99"},"content":"        requireNonNull(title);","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"BenjaminTan99"},"content":"        return positions.containsPositionWithTitle(title);","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"Harry-Gao-H"},"content":"     * Adds a position to the position book.","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"Harry-Gao-H"},"content":"     * The position must not already exist in the position book.","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"Harry-Gao-H"},"content":"    public void addPosition(Position p) {","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"Harry-Gao-H"},"content":"        positions.add(p);","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"BenjaminTan99"},"content":"    public Position getPositionByTitle(Title title) {","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"BenjaminTan99"},"content":"        requireNonNull(title);","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"BenjaminTan99"},"content":"        return positions.getPositionByTitle(title);","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"Harry-Gao-H"},"content":"     * Replaces the given position {@code target} in the list with {@code editedPosition}.","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"Harry-Gao-H"},"content":"     * {@code target} must exist in the position book.","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"Harry-Gao-H"},"content":"     * The position identity of {@code editedPosition} must not be the same as","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"Harry-Gao-H"},"content":"     * another existing position in the position book.","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setPosition(Position target, Position editedPosition) {","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(editedPosition);","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"Harry-Gao-H"},"content":"        positions.setPosition(target, editedPosition);","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"Harry-Gao-H"},"content":"     * Removes {@code key} from this {@code PositionBook}.","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"Harry-Gao-H"},"content":"     * {@code key} must exist in the position book.","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"Harry-Gao-H"},"content":"    public void removePosition(Position key) {","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"Harry-Gao-H"},"content":"        positions.remove(key);","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"Harry-Gao-H"},"content":"    //// util methods","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"Harry-Gao-H"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"Harry-Gao-H"},"content":"        return positions.asUnmodifiableObservableList().size() + \" positions\";","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"Harry-Gao-H"},"content":"        // TODO: refine later","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"Harry-Gao-H"},"content":"    public ObservableList\u003cPosition\u003e getPositionList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"Harry-Gao-H"},"content":"        return positions.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"Harry-Gao-H"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"Harry-Gao-H"},"content":"                || (other instanceof PositionBook // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 positions.equals(((PositionBook) other).positions));","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"Harry-Gao-H"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"Harry-Gao-H"},"content":"        return positions.hashCode();","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"Harry-Gao-H"},"content":"    public PositionBook getCopiedPositionBook() {","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"Harry-Gao-H"},"content":"        PositionBook copiedPositionBook \u003d new PositionBook();","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"Harry-Gao-H"},"content":"        copiedPositionBook.positions.setPositions(this.positions.getCopiedPositions());","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"Harry-Gao-H"},"content":"        return copiedPositionBook;","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":109,"LMAOboxhack":13,"darren2pro":1,"BenjaminTan99":20}},{"path":"src/main/java/seedu/address/model/ReadOnlyApplicantBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":" * Unmodifiable view of an applicant book","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"public interface ReadOnlyApplicantBook {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns an unmodifiable view of the applicant list.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"     * This list will not contain any duplicate applicants.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"    ObservableList\u003cApplicant\u003e getApplicantList();","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LMAOboxhack":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyPositionBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":" * Unmodifiable view of a position book","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"public interface ReadOnlyPositionBook {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns an unmodifiable view of the position list.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"     * This list will not contain any duplicate positions.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    ObservableList\u003cPosition\u003e getPositionList();","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"     * Searches for a position by its {@code title}.","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    public Position getPositionByTitle(Title title);","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":2,"LMAOboxhack":15,"darren2pro":6}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    Path getPositionBookFilePath();","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    Path getApplicantBookFilePath();","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"darren2pro":4,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    private Path applicantBookFilePath \u003d Paths.get(\"data\" , \"applicantbook.json\");","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"    private Path positionBookFilePath \u003d Paths.get(\"data\", \"positionbook.json\");","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"        setPositionBookFilePath(newUserPrefs.getPositionBookFilePath());","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        setApplicantBookFilePath(newUserPrefs.getApplicantBookFilePath());","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"    public Path getPositionBookFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"        return positionBookFilePath;","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"    public Path getApplicantBookFilePath() {","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"        return applicantBookFilePath;","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"    public void setPositionBookFilePath(Path positionBookFilePath) {","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(positionBookFilePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"        this.positionBookFilePath \u003d positionBookFilePath;","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"    public void setApplicantBookFilePath(Path applicantBookFilePath) {","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(applicantBookFilePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"        this.applicantBookFilePath \u003d applicantBookFilePath;","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Harry-Gao-H":5,"darren2pro":22,"-":87}},{"path":"src/main/java/seedu/address/model/applicant/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":" * Represents an Applicant\u0027s address in the MTR system.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"public class Address {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    /*","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    public final String value;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"     * @param address A valid address.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    public Address(String address) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(address);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        value \u003d address;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"        return value;","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"    public Address getCopiedAddress() {","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"        return new Address(this.value);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Harry-Gao-H":4,"darren2pro":54,"BenjaminTan99":1}},{"path":"src/main/java/seedu/address/model/applicant/Applicant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Application.ApplicationStatus;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":" * Represents an Applicant in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"public class Applicant {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    // Identity fields","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    private final Name name;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    private final Phone phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    private final Email email;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    // Data fields","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    private final Address address;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"    private final Application application;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    private ProfileUrl gitHubUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    public Applicant(Name name, Phone phone, Email email, Address address, Position position) {","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        this(name, phone, email, address, new Application(position));","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"    public Applicant(Name name, Phone phone, Email email, Address address, Application application) {","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"        requireAllNonNull(name, phone, email, address);","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"        this.application \u003d application;","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    public Applicant(Name name, Phone phone, Email email, Address address, Position position,","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"                     ProfileUrl gitHubUrl) {","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"        this(name, phone, email, address, new Application(position), gitHubUrl);","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"LMAOboxhack"},"content":"     * Constructor for an applicant given the applicant\u0027s particulars.","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"LMAOboxhack"},"content":"    public Applicant(ApplicantParticulars applicantParticulars, Position position) {","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"LMAOboxhack"},"content":"        this(","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"LMAOboxhack"},"content":"                applicantParticulars.getName(),","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"LMAOboxhack"},"content":"                applicantParticulars.getPhone(),","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"LMAOboxhack"},"content":"                applicantParticulars.getEmail(),","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"LMAOboxhack"},"content":"                applicantParticulars.getAddress(),","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"                new Application(position),","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"                applicantParticulars.getGitHubUrl()","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"LMAOboxhack"},"content":"        );","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"LMAOboxhack"},"content":"     * Internal constructor for a new Applicant object.","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"    public Applicant(Name name, Phone phone, Email email, Address address, Application application,","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"                     ProfileUrl gitHubUrl) {","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"LMAOboxhack"},"content":"        requireAllNonNull(name, phone, email, address);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"LMAOboxhack"},"content":"        this.application \u003d application;","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"        this.gitHubUrl \u003d gitHubUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"LMAOboxhack"},"content":"     * Marks the application with the specified application status.","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"LMAOboxhack"},"content":"    public Applicant markAs(ApplicationStatus applicationStatus) {","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"        return new Applicant(name, phone, email, address, application.markAs(applicationStatus), gitHubUrl);","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"        return name;","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"    public Phone getPhone() {","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"        return phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"darren2pro"},"content":"    public Email getEmail() {","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"darren2pro"},"content":"        return email;","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"    public Address getAddress() {","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"darren2pro"},"content":"        return address;","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"    public Application getApplication() {","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"        return application;","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"Harry-Gao-H"},"content":"    public Title getTitle() {","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"Harry-Gao-H"},"content":"        return application.getTitle();","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"darren2pro"},"content":"    public ProfileUrl getGitHubUrl() {","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"darren2pro"},"content":"        return gitHubUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"darren2pro"},"content":"    public boolean hasGitHubProfile() {","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"darren2pro"},"content":"        return gitHubUrl.hasProfile();","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns true if this applicant is applying to the given position.","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean isApplyingTo(Position position) {","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(position);","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"LMAOboxhack"},"content":"        return application.getPosition().equals(position);","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns true if this applicant is applying to a position with the given title.","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean isApplyingToPositionWithTitle(Title positionTitle) {","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(positionTitle);","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"LMAOboxhack"},"content":"        return application.getPosition().getTitle().equals(positionTitle);","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns true if this applicant has the specified name.","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean hasName(Name name) {","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"LMAOboxhack"},"content":"        return this.name.equals(name);","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns true if this applicant has the specified name.","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"LMAOboxhack"},"content":"     * Case-insensitive comparison.","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean hasNameIgnoreCase(Name name) {","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"LMAOboxhack"},"content":"        return this.name.equalsIgnoreCase(name);","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns true if this applicant has the given application status.","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean hasApplicationStatus(ApplicationStatus applicationStatus) {","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(applicationStatus);","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"LMAOboxhack"},"content":"        return application.getStatus().equals(applicationStatus);","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"darren2pro"},"content":"     * Returns true if both applicants have the same name.","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"darren2pro"},"content":"     * This defines a weaker notion of equality between two applicants.","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"darren2pro"},"content":"    public boolean isSameApplicant(Applicant otherApplicant) {","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"darren2pro"},"content":"        if (otherApplicant \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"darren2pro"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"darren2pro"},"content":"        return otherApplicant !\u003d null","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 name.equals(otherApplicant.name);","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"darren2pro"},"content":"     * Returns true if both applicants have the same identity and data fields.","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"darren2pro"},"content":"     * This defines a stronger notion of equality between two applicants.","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"darren2pro"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"darren2pro"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"darren2pro"},"content":"        if (!(other instanceof Applicant)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":188,"author":{"gitId":"darren2pro"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":190,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":191,"author":{"gitId":"darren2pro"},"content":"        Applicant otherApplicant \u003d (Applicant) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":192,"author":{"gitId":"LMAOboxhack"},"content":"        return name.equals(otherApplicant.name)","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 phone.equals(otherApplicant.phone)","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 email.equals(otherApplicant.email)","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 address.equals(otherApplicant.address)","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 application.equals(otherApplicant.application);","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"darren2pro"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"darren2pro"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"LMAOboxhack"},"content":"        return Objects.hash(name, phone, email, address, application);","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"darren2pro"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"LMAOboxhack"},"content":"        return name","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"LMAOboxhack"},"content":"                + \"; Phone: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"LMAOboxhack"},"content":"                + phone","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"LMAOboxhack"},"content":"                + \"; Email: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"LMAOboxhack"},"content":"                + email","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"LMAOboxhack"},"content":"                + \"; Address: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"darren2pro"},"content":"                + address","lastModifiedDate":"2021-10-13"},{"lineNumber":214,"author":{"gitId":"darren2pro"},"content":"                + \"; Application: \"","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"darren2pro"},"content":"                + application;","lastModifiedDate":"2021-10-13"},{"lineNumber":216,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":217,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":218,"author":{"gitId":"darren2pro"},"content":"    public String getApplicationSummary() {","lastModifiedDate":"2021-10-13"},{"lineNumber":219,"author":{"gitId":"LMAOboxhack"},"content":"        return \"Applied for: \" + application.getDescription();","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":221,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"Harry-Gao-H"},"content":"    public Applicant getCopiedApplicant() {","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"Harry-Gao-H"},"content":"        return new Applicant(name.getCopiedName(), phone.getCopiedPhone(), email.getCopiedEmail(),","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"darren2pro"},"content":"                address.getCopiedAddress(), application.getCopiedApplication(), gitHubUrl.getCopiedProfileUrl());","lastModifiedDate":"2021-10-28"},{"lineNumber":225,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Harry-Gao-H":9,"LMAOboxhack":85,"darren2pro":132}},{"path":"src/main/java/seedu/address/model/applicant/ApplicantParticulars.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":" * A read-only utility class used to hold an applicant\u0027s particulars.","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"public class ApplicantParticulars {","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"    private final Name name;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"    private final Phone phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"    private final Email email;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"    private final Address address;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"    private final Title positionTitle;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    private ProfileUrl gitHubUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"     * Constructor for an ApplicantParticulars object.","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    public ApplicantParticulars(Name name, Phone phone, Email email, Address address, Title positionTitle,","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"                                ProfileUrl gitHubUrl) {","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"        this.positionTitle \u003d positionTitle;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"        this.gitHubUrl \u003d gitHubUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"        return name;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"    public Phone getPhone() {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"        return phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"    public Email getEmail() {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"        return email;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"    public Address getAddress() {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"        return address;","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"    public Title getPositionTitle() {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"        return positionTitle;","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"    public ProfileUrl getGitHubUrl() {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        return gitHubUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"LMAOboxhack":44,"darren2pro":9}},{"path":"src/main/java/seedu/address/model/applicant/Application.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":" * Represents an application to a specific job position.","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"public class Application {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"    private final Position position;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"    private final ApplicationStatus status;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"     * Constructor for a job application.","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"     * Invoked whenever the add-applicant command is called.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"      */","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"    public Application(Position position) {","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"        this(position, ApplicationStatus.PENDING);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"     * Internal constructor for a job application which specifies an application status.","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"    public Application(Position position, ApplicationStatus applicationStatus) {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"        requireAllNonNull(position, applicationStatus);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"        this.position \u003d position;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"        this.status \u003d applicationStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns a new Application with the status updated as specified.","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"    public Application markAs(ApplicationStatus applicationStatus) {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"        return new Application(position, applicationStatus);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns a description of the application and its status.","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"LMAOboxhack"},"content":"        return position.getTitle() + \"; Status: \" + status;","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"    public Position getPosition() {","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"        return position;","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"    public Title getTitle() {","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"        return position.getTitle();","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"LMAOboxhack"},"content":"    public ApplicationStatus getStatus() {","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"LMAOboxhack"},"content":"        return status;","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"LMAOboxhack"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"LMAOboxhack"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"LMAOboxhack"},"content":"        if (!(other instanceof Application)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"LMAOboxhack"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"LMAOboxhack"},"content":"        Application otherApplication \u003d (Application) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"LMAOboxhack"},"content":"        return position.equals(otherApplication.position)","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 status.equals(otherApplication.status);","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"LMAOboxhack"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"LMAOboxhack"},"content":"        return Objects.hash(position, status);","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"LMAOboxhack"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"LMAOboxhack"},"content":"        return \"{ \"","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"LMAOboxhack"},"content":"                + \"Position: \" + position.getTitle()","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"LMAOboxhack"},"content":"                + \", Status: \" + status","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"LMAOboxhack"},"content":"                + \" }\";","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"Harry-Gao-H"},"content":"    public Application getCopiedApplication() {","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"Harry-Gao-H"},"content":"        return new Application(position.getCopiedPosition(), status);","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"LMAOboxhack"},"content":"     * The status of a job application.","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"LMAOboxhack"},"content":"    public enum ApplicationStatus {","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"LMAOboxhack"},"content":"        PENDING, ACCEPTED, REJECTED;","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"LMAOboxhack"},"content":"        public static final String MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"LMAOboxhack"},"content":"        static {","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"LMAOboxhack"},"content":"            Stream\u003cString\u003e messageConstraints \u003d Stream.of(values())","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"LMAOboxhack"},"content":"                    .map(applicationStatus -\u003e applicationStatus.toString().toLowerCase());","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"LMAOboxhack"},"content":"            MESSAGE_CONSTRAINTS \u003d messageConstraints.collect(","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"LMAOboxhack"},"content":"                    Collectors.joining(\", \", \"Application status must be one of: \", \".\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"LMAOboxhack"},"content":"        /**","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"LMAOboxhack"},"content":"         * Parses the given string into an ApplicationStatus.","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"LMAOboxhack"},"content":"         * Case-insensitive. Input must match exactly with the enum name.","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"LMAOboxhack"},"content":"         */","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"LMAOboxhack"},"content":"        public static ApplicationStatus fromString(String inputString) {","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"LMAOboxhack"},"content":"            requireNonNull(inputString);","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"LMAOboxhack"},"content":"            return valueOf(inputString.toUpperCase());","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"LMAOboxhack"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"LMAOboxhack"},"content":"        public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"LMAOboxhack"},"content":"            return StringUtil.toProperCase(super.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":10,"LMAOboxhack":114,"darren2pro":4}},{"path":"src/main/java/seedu/address/model/applicant/ApplyingToPositionPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":" * Tests that an {@code Applicant} is applying to the specified {@code Position}.","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"public class ApplyingToPositionPredicate implements Predicate\u003cApplicant\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"    private final Position position;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"    public ApplyingToPositionPredicate(Position position) {","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"        this.position \u003d position;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean test(Applicant applicant) {","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"        return applicant.isApplyingTo(position);","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"                || (other instanceof ApplyingToPositionPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 position.equals(((ApplyingToPositionPredicate) other).position)); // state check","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"LMAOboxhack":30}},{"path":"src/main/java/seedu/address/model/applicant/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":" * Represents an Applicant\u0027s email in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"public class Email {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    public final String value;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"     * @param email A valid email address.","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"    public Email(String email) {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(email);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"        value \u003d email;","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"        return value;","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Harry-Gao-H"},"content":"    public Email getCopiedEmail() {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Harry-Gao-H"},"content":"        return new Email(value);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Harry-Gao-H":4,"darren2pro":70}},{"path":"src/main/java/seedu/address/model/applicant/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":" * Represents an Applicant\u0027s name in MrTechRecruiter.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"public class Name {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    /*","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    public final String fullName;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    public Name(String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        fullName \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns true if the two names are equal.","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"     * Case-insensitive comparison.","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean equalsIgnoreCase(Name name) {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"        return fullName.equalsIgnoreCase(name.fullName);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"        return fullName;","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"        return fullName.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"    public Name getCopiedName() {","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"Harry-Gao-H"},"content":"        return new Name(this.fullName);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Harry-Gao-H":4,"LMAOboxhack":9,"darren2pro":57}},{"path":"src/main/java/seedu/address/model/applicant/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":" * Tests that a {@code Applicant}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cApplicant\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    public boolean test(Applicant applicant) {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(applicant.getName().fullName, keyword));","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"darren2pro":32}},{"path":"src/main/java/seedu/address/model/applicant/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":" * Represents an Applicant\u0027s phone number in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"public class Phone {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    public final String value;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    public Phone(String phone) {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(phone);","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"        value \u003d phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        return value;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"    public Phone getCopiedPhone() {","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"        return new Phone(value);","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Harry-Gao-H":4,"darren2pro":51}},{"path":"src/main/java/seedu/address/model/applicant/ProfileUrl.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import java.net.MalformedURLException;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import java.net.URL;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":" * Represents an Applicant\u0027s name in MrTechRecruiter.","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidUrl(String)}","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"public class ProfileUrl {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    public static final String PLACEHOLDER_URL \u003d \"https://www.google.com\";","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"            \"Profile urls must be valid github and linkedin urls.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    private static final ProfileUrl EMPTY_PROFILE_URL \u003d new ProfileUrl(PLACEHOLDER_URL);","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    public final String url;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"     * Constructs a {@code ProfileUrl}.","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"     * @param url A valid github or linkedin url.","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"    public ProfileUrl(String url) {","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(url);","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        checkArgument(isValidUrl(url), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        this.url \u003d url;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"     * Returns a {@code ProfileUrl} containing the url given. If empty string is given,","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"     * emptyProfileUrl object instance is returned.","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"     * @param url  string url to be stored in this ProfileUrl.","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"     * @return ProfileUrl instance containing this url, if valid.","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    public static ProfileUrl ofNullable(String url) {","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"        if (url.equals(\"\") || url.equals(PLACEHOLDER_URL)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"            return emptyProfileUrl();","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"        return new ProfileUrl(url);","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"     * Returns the one single instance of empty profile url.","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"     * @return the one single instance of empty profile url.","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"    public static ProfileUrl emptyProfileUrl() {","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"        return EMPTY_PROFILE_URL;","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"     * Returns true if a given string is a valid url.","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"     * @param gitHubUrl given url to test.","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"     * @return boolean whether this url is a valid url.","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"    public static boolean isValidUrl(String gitHubUrl) {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"            new URL(gitHubUrl);","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"            return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"        } catch (MalformedURLException malformedUrlException) {","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"            return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"     * Checks whether this ProfileUrl is empty or not, i.e. testing whether there is an existing profile.","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"     * @return true is there is a profile stored, false if there is no profile.","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"    public boolean hasProfile() {","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"        return this !\u003d EMPTY_PROFILE_URL;","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"    public String getUrlString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"        return this.url;","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"     * Returns a copied Profile Url.","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"     * @return a copy of this Profile Url.","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"    public ProfileUrl getCopiedProfileUrl() {","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"        return new ProfileUrl(url);","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"darren2pro":91}},{"path":"src/main/java/seedu/address/model/applicant/UniqueApplicantList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.descriptors.EditApplicantDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.descriptors.EditApplicationDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.exceptions.ApplicantNotFoundException;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.exceptions.DuplicateApplicantException;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":" * A list of applicants that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":" * An applicant is considered unique by comparing using {@code Applicant#isSameApplicant(Applicant)}. As such, adding","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":" * and updating of applicants uses Applicant#isSameApplicant(Applicant) for equality so as to ensure that the applicant","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":" * being added or updated is unique in terms of identity in the UniqueApplicantList. However, the removal of an","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":" * applicant uses Applicant#equals(Object) so as to ensure that the applicant with exactly the same fields will","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":" * be removed.","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":" *","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":" *","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":" * @see Applicant#isSameApplicant(Applicant)","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"public class UniqueApplicantList implements Iterable\u003cApplicant\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    private final ObservableList\u003cApplicant\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    private final ObservableList\u003cApplicant\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"     * Returns true if the list contains an equivalent applicant as the given argument.","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"    public boolean contains(Applicant toCheck) {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        return internalList.stream().anyMatch(toCheck::isSameApplicant);","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns true if the list contains an applicant with the given name.","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean containsApplicantWithName(Name toCheck) {","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"LMAOboxhack"},"content":"        return internalList.stream().anyMatch(applicant -\u003e applicant.hasName(toCheck));","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns the applicant in the list with the specified name, if any.","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ApplicantNotFoundException if not found.","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"LMAOboxhack"},"content":"    public Applicant getApplicantByNameIgnoreCase(Name name) {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"LMAOboxhack"},"content":"        return internalList.stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"LMAOboxhack"},"content":"                .filter(applicant -\u003e applicant.hasNameIgnoreCase(name))","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"LMAOboxhack"},"content":"                .findFirst()","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"LMAOboxhack"},"content":"                .orElseThrow(ApplicantNotFoundException::new);","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"     * Adds an applicant to the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"     * The applicant must not already exist in the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"    public void add(Applicant toAdd) {","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"            throw new DuplicateApplicantException();","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"     * Replaces the applicant {@code target} in the list with {@code editedApplicant}.","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as another existing applicant in the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"        requireAllNonNull(target, editedApplicant);","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"            throw new ApplicantNotFoundException();","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"        if (!target.isSameApplicant(editedApplicant) \u0026\u0026 contains(editedApplicant)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"            throw new DuplicateApplicantException();","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"        internalList.set(index, editedApplicant);","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"darren2pro"},"content":"     * Removes the equivalent applicant from the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"darren2pro"},"content":"     * The applicant must exist in the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"darren2pro"},"content":"    public void remove(Applicant toRemove) {","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"darren2pro"},"content":"            throw new ApplicantNotFoundException();","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"LMAOboxhack"},"content":"     * Removes all applicants from the list matching the given condition.","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"LMAOboxhack"},"content":"    public void removeIf(Predicate\u003c? super Applicant\u003e condition) {","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(condition);","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"LMAOboxhack"},"content":"        internalList.removeIf(condition);","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"Harry-Gao-H"},"content":"     * Updates all applicants applying to {@code positionToEdit} with {@code editedPosition}","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"Harry-Gao-H"},"content":"    public void updateApplicantsWithPosition(Position positionToEdit,","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"Harry-Gao-H"},"content":"                                             Position editedPosition) {","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"Harry-Gao-H"},"content":"        List\u003cApplicant\u003e copiedList \u003d new ArrayList\u003c\u003e(internalList);","lastModifiedDate":"2021-11-01"},{"lineNumber":122,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"Harry-Gao-H"},"content":"        for (Applicant applicant : copiedList) {","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"Harry-Gao-H"},"content":"            if (!applicant.isApplyingTo(positionToEdit)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"Harry-Gao-H"},"content":"                continue;","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"Harry-Gao-H"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"Harry-Gao-H"},"content":"            EditApplicationDescriptor editApplicationDescriptor \u003d new EditApplicationDescriptor();","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"Harry-Gao-H"},"content":"            editApplicationDescriptor.setPosition(editedPosition);","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"Harry-Gao-H"},"content":"            Application updatedApplication \u003d editApplicationDescriptor","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"Harry-Gao-H"},"content":"                    .createEditedApplication(applicant.getApplication());","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"Harry-Gao-H"},"content":"            EditApplicantDescriptor editApplicantDescriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"Harry-Gao-H"},"content":"            editApplicantDescriptor.setApplication(updatedApplication);","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"Harry-Gao-H"},"content":"            Applicant updatedApplicant \u003d editApplicantDescriptor.createEditedApplicant(applicant);","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"Harry-Gao-H"},"content":"            remove(applicant);","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"Harry-Gao-H"},"content":"            add(updatedApplicant);","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"darren2pro"},"content":"    public void setApplicants(UniqueApplicantList replacement) {","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"darren2pro"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"darren2pro"},"content":"     * Replaces the contents of this list with {@code applicants}.","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"darren2pro"},"content":"     * {@code applicants} must not contain duplicate applicants.","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"darren2pro"},"content":"    public void setApplicants(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"darren2pro"},"content":"        requireAllNonNull(applicants);","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"darren2pro"},"content":"        if (!applicantsAreUnique(applicants)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"darren2pro"},"content":"            throw new DuplicateApplicantException();","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"darren2pro"},"content":"        internalList.setAll(applicants);","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"darren2pro"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"darren2pro"},"content":"    public ObservableList\u003cApplicant\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"darren2pro"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"darren2pro"},"content":"    public Iterator\u003cApplicant\u003e iterator() {","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"darren2pro"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":172,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":173,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":174,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":175,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof UniqueApplicantList // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 internalList.equals(((UniqueApplicantList) other).internalList));","lastModifiedDate":"2021-10-09"},{"lineNumber":177,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":178,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":179,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":180,"author":{"gitId":"darren2pro"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":181,"author":{"gitId":"darren2pro"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-09"},{"lineNumber":182,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"darren2pro"},"content":"     * Returns true if {@code applicants} contains only unique applicants.","lastModifiedDate":"2021-10-09"},{"lineNumber":186,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":187,"author":{"gitId":"darren2pro"},"content":"    private boolean applicantsAreUnique(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"darren2pro"},"content":"        for (int i \u003d 0; i \u003c applicants.size() - 1; i++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"darren2pro"},"content":"            for (int j \u003d i + 1; j \u003c applicants.size(); j++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"darren2pro"},"content":"                if (applicants.get(i).isSameApplicant(applicants.get(j))) {","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"darren2pro"},"content":"                    return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":192,"author":{"gitId":"darren2pro"},"content":"                }","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"darren2pro"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"darren2pro"},"content":"        return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"Harry-Gao-H"},"content":"    public UniqueApplicantList getCopiedApplicants() {","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"Harry-Gao-H"},"content":"        UniqueApplicantList copiedApplicants \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"Harry-Gao-H"},"content":"        for (Applicant applicant : this.internalList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"Harry-Gao-H"},"content":"            copiedApplicants.internalList.add(applicant.getCopiedApplicant());","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"Harry-Gao-H"},"content":"        return copiedApplicants;","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":208,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Harry-Gao-H":39,"LMAOboxhack":30,"darren2pro":139}},{"path":"src/main/java/seedu/address/model/applicant/exceptions/ApplicantNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant.exceptions;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":" * Signals that the operation is unable to find the specified applicant.","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"public class ApplicantNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"darren2pro":6}},{"path":"src/main/java/seedu/address/model/applicant/exceptions/DuplicateApplicantException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant.exceptions;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":" * Signals that the operation will result in duplicate Applicants (Applicants are considered duplicates if they have","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":" * the same name).","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"public class DuplicateApplicantException extends RuntimeException {","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"    public DuplicateApplicantException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"        super(\"Operation would result in duplicate applicants\");","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"darren2pro":13}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":" * Signals that the operation will result in duplicate Persons","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":" * (Persons are considered duplicates if they have the same identity).","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Harry-Gao-H":2,"-":9}},{"path":"src/main/java/seedu/address/model/position/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.model.position;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":" * Represents a Position\u0027s description in the position book.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"public class Description {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"            \"Descriptions should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String VALIDATION_REGEX \u003d \"(.|\\\\s)*\\\\S(.|\\\\s)*\";","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"    public final String description;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"     * Constructs a {@code description}.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"     * @param description A valid description.","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"    public Description(String description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"        return description;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 description.equals(((Description) other).description)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"    public Description getCopiedDescription() {","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"        return new Description(description);","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":56}},{"path":"src/main/java/seedu/address/model/position/Position.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model.position;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":" * Represents a Position in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"public class Position {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"    // Identity fields","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    private final Title title;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    private final Description description;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"    public Position(Title title, Description description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"        requireAllNonNull(title);","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"    public Title getTitle() {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"        return title;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"        return description;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if both positions have the same title.","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"     * This defines a weaker notion of equality between two positions.","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean isSamePosition(Position otherPosition) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"        if (otherPosition \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"        return otherPosition !\u003d null","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 otherPosition.getTitle().equals(getTitle());","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if both positions have the same identity and data fields.","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"     * This defines a stronger notion of equality between two positions.","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!(other instanceof Position)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"        Position otherPosition \u003d (Position) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"        return otherPosition.getTitle().equals(getTitle())","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 otherPosition.getDescription().equals(getDescription());","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Harry-Gao-H"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Harry-Gao-H"},"content":"        // use this method for custom fields hashing","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"Harry-Gao-H"},"content":"        return Objects.hash(title, description);","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"Harry-Gao-H"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Harry-Gao-H"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"Harry-Gao-H"},"content":"        builder.append(getTitle())","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"Harry-Gao-H"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"Harry-Gao-H"},"content":"                .append(getDescription());","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"Harry-Gao-H"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Harry-Gao-H"},"content":"    public Position getCopiedPosition() {","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Harry-Gao-H"},"content":"        return new Position(title.getCopiedTitle(), description.getCopiedDescription());","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":80,"LMAOboxhack":2,"BenjaminTan99":4}},{"path":"src/main/java/seedu/address/model/position/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.model.position;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":" * Represents a Position\u0027s title in the position book.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"public class Title {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"            \"Titles should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"     * The first character of the Title must not be a whitespace,","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"    public final String fullTitle;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"     * Constructs a {@code title}.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"     * @param title A valid title.","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"    public Title(String title) {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(title);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"        checkArgument(isValidTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"        fullTitle \u003d title;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"        return fullTitle;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"                || (other instanceof Title // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 fullTitle.equals(((Title) other).fullTitle)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"        return fullTitle.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"    public Title getCopiedTitle() {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"        return new Title(fullTitle);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":61}},{"path":"src/main/java/seedu/address/model/position/TitleContainsAllKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.model.position;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":" * Tests that a {@code Position}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"public class TitleContainsAllKeywordsPredicate implements Predicate\u003cPosition\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    public TitleContainsAllKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean test(Position position) {","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"                .allMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(position.getTitle().fullTitle, keyword));","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"Harry-Gao-H":24}},{"path":"src/main/java/seedu/address/model/position/UniquePositionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.model.position;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.exceptions.DuplicatePositionException;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.exceptions.PositionNotFoundException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":" * A list of positions that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":" * A position is considered unique by comparing using {@code Position#isSamePosition(Position)}.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":" * As such, adding and updating of positions uses Position#isSamePosition(Position) for equality","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":" * so as to ensure that the position being added or updated is","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":" * unique in terms of identity in the UniquePositionList.","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":" * However, the removal of a position uses Position#equals(Object) so","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":" * as to ensure that the position with exactly the same fields will be removed.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":" *","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":" *","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":" * @see Position#isSamePosition(Position)","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"public class UniquePositionList implements Iterable\u003cPosition\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"    private final ObservableList\u003cPosition\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"    private final ObservableList\u003cPosition\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if the list contains an equivalent position as the given argument.","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean contains(Position toCheck) {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePosition);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns true if the list contains a position titled {@code toCheck}.","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean containsPositionWithTitle(Title toCheck) {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"        return internalList.stream().anyMatch(position -\u003e position.getTitle().equals(toCheck));","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"     * Adds a position to the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"     * The position must not already exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"    public void add(Position toAdd) {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new DuplicatePositionException();","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"LMAOboxhack"},"content":"     * Searches for a position with the given {@code title}.","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"LMAOboxhack"},"content":"    public Position getPositionByTitle(Title title) {","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(title);","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"LMAOboxhack"},"content":"        return internalList.stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"LMAOboxhack"},"content":"                .filter(position -\u003e position.getTitle().equals(title))","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"LMAOboxhack"},"content":"                .findFirst()","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"LMAOboxhack"},"content":"                .orElseThrow(PositionNotFoundException::new);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Harry-Gao-H"},"content":"     * Replaces the position {@code target} in the list with {@code editedPosition}.","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"Harry-Gao-H"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Harry-Gao-H"},"content":"     * The position identity of {@code editedPosition} must not be the same as another existing position in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setPosition(Position target, Position editedPosition) {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"Harry-Gao-H"},"content":"        requireAllNonNull(target, editedPosition);","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"Harry-Gao-H"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"Harry-Gao-H"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new PositionNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!target.isSamePosition(editedPosition) \u0026\u0026 contains(editedPosition)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new DuplicatePositionException();","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"Harry-Gao-H"},"content":"        internalList.set(index, editedPosition);","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"Harry-Gao-H"},"content":"     * Removes the equivalent position from the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"Harry-Gao-H"},"content":"     * The position must exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"Harry-Gao-H"},"content":"    public void remove(Position toRemove) {","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new PositionNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setPositions(UniquePositionList replacement) {","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"Harry-Gao-H"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"Harry-Gao-H"},"content":"     * Replaces the contents of this list with {@code positions}.","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"Harry-Gao-H"},"content":"     * {@code positions} must not contain duplicate positions.","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setPositions(List\u003cPosition\u003e positions) {","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"Harry-Gao-H"},"content":"        requireAllNonNull(positions);","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!positionsAreUnique(positions)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new DuplicatePositionException();","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"Harry-Gao-H"},"content":"        internalList.setAll(positions);","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"Harry-Gao-H"},"content":"    public ObservableList\u003cPosition\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"Harry-Gao-H"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"Harry-Gao-H"},"content":"    public Iterator\u003cPosition\u003e iterator() {","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"Harry-Gao-H"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"Harry-Gao-H"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"Harry-Gao-H"},"content":"                || (other instanceof UniquePositionList // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 internalList.equals(((UniquePositionList) other).internalList));","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"Harry-Gao-H"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"Harry-Gao-H"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if {@code positions} contains only unique positions.","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"Harry-Gao-H"},"content":"    private boolean positionsAreUnique(List\u003cPosition\u003e positions) {","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"Harry-Gao-H"},"content":"        for (int i \u003d 0; i \u003c positions.size() - 1; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"Harry-Gao-H"},"content":"            for (int j \u003d i + 1; j \u003c positions.size(); j++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"Harry-Gao-H"},"content":"                if (positions.get(i).isSamePosition(positions.get(j))) {","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"Harry-Gao-H"},"content":"                    return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"Harry-Gao-H"},"content":"                }","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"Harry-Gao-H"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"Harry-Gao-H"},"content":"        return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"Harry-Gao-H"},"content":"    public UniquePositionList getCopiedPositions() {","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"Harry-Gao-H"},"content":"        UniquePositionList copiedPositions \u003d new UniquePositionList();","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"Harry-Gao-H"},"content":"        for (Position position : internalList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"Harry-Gao-H"},"content":"            copiedPositions.internalList.add(position.getCopiedPosition());","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"Harry-Gao-H"},"content":"        return copiedPositions;","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":153,"LMAOboxhack":19}},{"path":"src/main/java/seedu/address/model/position/exceptions/DuplicatePositionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.model.position.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":" * Signals that the operation will result in duplicate Positions","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":" * (Positions are considered duplicates if they have the same identity).","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"public class DuplicatePositionException extends RuntimeException {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"    public DuplicatePositionException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"        super(\"Operation would result in duplicate positions\");","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":11}},{"path":"src/main/java/seedu/address/model/position/exceptions/PositionNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.model.position.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":" * Signals that the operation is unable to find the specified position.","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"public class PositionNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ApplicantBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.PositionBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyApplicantBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyPositionBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.ProfileUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Description;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"            new Person(new seedu.address.model.person.Name(\"Alex Yeoh\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Phone(\"87438807\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                        getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"            new Person(new seedu.address.model.person.Name(\"Bernice Yu\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Phone(\"99272758\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"            new Person(new seedu.address.model.person.Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Phone(\"93210283\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"            new Person(new seedu.address.model.person.Name(\"David Li\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Phone(\"91031282\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"            new Person(new seedu.address.model.person.Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Phone(\"92492021\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Email(\"irfan@example.com\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                        getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"            new Person(new seedu.address.model.person.Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Phone(\"92624417\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Email(\"royb@example.com\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"                    new seedu.address.model.person.Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                        getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"    public static Position[] getSamplePositions() {","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"        return new Position[] {","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"            new Position(new Title(\"software engineer\"), new Description(\"work in a team that builds a \"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"                        + \"facial recognition application\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"            new Position(new Title(\"database administrator\"), new Description(\"handles database administration \"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"                        + \"matters\"))","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"        };","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"    public static Applicant[] getSampleApplicants() {","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"        return new Applicant[] {","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"            new Applicant(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Position(new Title(\"software engineer\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"                    new Description(\"work in a team that builds a facial recognition application\")),","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"                    ProfileUrl.emptyProfileUrl()),","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"            new Applicant(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"                    new Position(new Title(\"database administrator\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"                    new Description(\"handles database administration matters\")),","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"                    new ProfileUrl(\"https://github.com/yumorishita\"))","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"        };","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"    public static ReadOnlyApplicantBook getSampleApplicantBook() {","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"        ApplicantBook sampleApplicantBook \u003d new ApplicantBook();","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"        for (Applicant sampleApplicant : getSampleApplicants()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"            sampleApplicantBook.addApplicant(sampleApplicant);","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"        return sampleApplicantBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":113,"author":{"gitId":"darren2pro"},"content":"    public static ReadOnlyPositionBook getSamplePositionBook() {","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"darren2pro"},"content":"        PositionBook samplePb \u003d new PositionBook();","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"darren2pro"},"content":"        for (Position samplePosition : getSamplePositions()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"darren2pro"},"content":"            samplePb.addPosition(samplePosition);","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"darren2pro"},"content":"        return samplePb;","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"darren2pro":74,"-":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"BenjaminTan99"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":107,"BenjaminTan99":2}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyApplicantBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyPositionBook;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"import seedu.address.storage.applicant.ApplicantBookStorage;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"import seedu.address.storage.position.PositionBookStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, PositionBookStorage, ApplicantBookStorage {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    void saveApplicantBook(ReadOnlyApplicantBook applicantBook) throws IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"    void savePositionBook(ReadOnlyPositionBook positionBook) throws IOException;","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"darren2pro":10,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyApplicantBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyPositionBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"import seedu.address.storage.applicant.ApplicantBookStorage;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"import seedu.address.storage.position.PositionBookStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    private ApplicantBookStorage applicantBookStorage;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"    private PositionBookStorage positionBookStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"                          ApplicantBookStorage applicantBookStorage, PositionBookStorage positionBookStorage) {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        this.applicantBookStorage \u003d applicantBookStorage;","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        this.positionBookStorage \u003d positionBookStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"        logger.fine(\"Attempting to read address book data from file: \" + filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"        logger.fine(\"Attempting to write to address book data file: \" + filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PositionBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"    public Path getPositionBookFilePath() {","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"        return positionBookStorage.getPositionBookFilePath();","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"    public Optional\u003cReadOnlyPositionBook\u003e readPositionBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"        return readPositionBook(positionBookStorage.getPositionBookFilePath());","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"darren2pro"},"content":"    public Optional\u003cReadOnlyPositionBook\u003e readPositionBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"        logger.fine(\"Attempting to read position data from file: \" + filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"        return positionBookStorage.readPositionBook(filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"    public void savePositionBook(ReadOnlyPositionBook positionBook) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"        savePositionBook(positionBook, positionBookStorage.getPositionBookFilePath());","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"darren2pro"},"content":"    public void savePositionBook(ReadOnlyPositionBook positionBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"darren2pro"},"content":"        logger.fine(\"Attempting to write to position book data file: \" + filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"darren2pro"},"content":"        positionBookStorage.savePositionBook(positionBook, filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"darren2pro"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ApplicantBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"darren2pro"},"content":"    public Path getApplicantBookFilePath() {","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"darren2pro"},"content":"        return applicantBookStorage.getApplicantBookFilePath();","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"darren2pro"},"content":"    public Optional\u003cReadOnlyApplicantBook\u003e readApplicantBook(ReadOnlyPositionBook positionBook) throws","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"darren2pro"},"content":"            DataConversionException, IOException {","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"darren2pro"},"content":"        return readApplicantBook(applicantBookStorage.getApplicantBookFilePath(), positionBook);","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"darren2pro"},"content":"    public Optional\u003cReadOnlyApplicantBook\u003e readApplicantBook(Path filePath, ReadOnlyPositionBook positionBook) throws","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"darren2pro"},"content":"            DataConversionException, IOException {","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"darren2pro"},"content":"        logger.fine(\"Attempting to read applicant data from file: \" + filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"darren2pro"},"content":"        return applicantBookStorage.readApplicantBook(filePath, positionBook);","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"darren2pro"},"content":"    public void saveApplicantBook(ReadOnlyApplicantBook applicantBook) throws IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"darren2pro"},"content":"        saveApplicantBook(applicantBook, applicantBookStorage.getApplicantBookFilePath());","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"darren2pro"},"content":"    public void saveApplicantBook(ReadOnlyApplicantBook applicantBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"darren2pro"},"content":"        logger.fine(\"Attempting to write to applicant book data file: \" + filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"darren2pro"},"content":"        applicantBookStorage.saveApplicantBook(applicantBook, filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"darren2pro":71,"-":76}},{"path":"src/main/java/seedu/address/storage/applicant/ApplicantBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.storage.applicant;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyApplicantBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyPositionBook;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":" * Represents a storage for {@link seedu.address.model.ApplicantBook}.","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"public interface ApplicantBookStorage {","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"     * Returns the file path of the applicant data file.","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    Path getApplicantBookFilePath();","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"     * Returns ApplicantBook data as a {@link ReadOnlyApplicantBook}.","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"    Optional\u003cReadOnlyApplicantBook\u003e readApplicantBook(ReadOnlyPositionBook positionBook) throws","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"            DataConversionException, IOException;","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"     * @see #getApplicantBookFilePath()","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    Optional\u003cReadOnlyApplicantBook\u003e readApplicantBook(Path filePath, ReadOnlyPositionBook positionBook) throws","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"            DataConversionException, IOException;","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"     * Saves the given {@link ReadOnlyApplicantBook} to the storage.","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"     * @param applicantBook cannot be null.","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"    void saveApplicantBook(ReadOnlyApplicantBook applicantBook) throws IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"     * @see #saveApplicantBook(ReadOnlyApplicantBook)","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"    void saveApplicantBook(ReadOnlyApplicantBook applicantBook, Path filePath) throws IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"darren2pro":48}},{"path":"src/main/java/seedu/address/storage/applicant/JsonAdaptedApplicant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.storage.applicant;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyPositionBook;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Application.ApplicationStatus;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.ProfileUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":" * Jackson-friendly version of {@link Applicant}.","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"public class JsonAdaptedApplicant {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Applicant\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    public static final String PLACEHOLDER_DESCRIPTION \u003d \"This is a placeholder description\";","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    private final String name;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"    private final String phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    private final String email;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    private final String address;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    private final String positionApplyingTo;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    private final String applicationStatus;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    private final String gitHubUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"     * Constructs a {@code JsonAdaptedApplicant} with the given applicant details.","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"    public JsonAdaptedApplicant(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"                                @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"                                @JsonProperty(\"positionApplyingTo\") String positionApplyingTo,","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"                                @JsonProperty(\"applicationStatus\") String applicationStatus,","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"                                @JsonProperty(\"gitHubUrl\") String gitHubUrl) {","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"        this.positionApplyingTo \u003d positionApplyingTo;","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"        this.applicationStatus \u003d applicationStatus;","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"        this.gitHubUrl \u003d gitHubUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"     * Converts a given {@code Applicant} into this class for Jackson use.","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"    public JsonAdaptedApplicant(Applicant source) {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"        positionApplyingTo \u003d source.getApplication().getPosition().getTitle().fullTitle;","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"        applicationStatus \u003d source.getApplication().getStatus().name();","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"        this.gitHubUrl \u003d source.getGitHubUrl().url;","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"     * Converts this Jackson-friendly adapted applicant object into the model\u0027s {@code Applicant} object.","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted applicant.","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"    public Applicant toModelType(ReadOnlyPositionBook positionBook) throws IllegalValueException {","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"darren2pro"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"darren2pro"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"darren2pro"},"content":"        if (positionApplyingTo \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"                    Position.class.getSimpleName()));","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"        final Position modelPosition \u003d positionBook.getPositionByTitle(new Title(positionApplyingTo));","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"        if (applicationStatus \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"darren2pro"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"darren2pro"},"content":"                    ApplicationStatus.class.getSimpleName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"darren2pro"},"content":"        final ApplicationStatus modelApplicationStatus \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"darren2pro"},"content":"                ApplicationStatus.fromString(applicationStatus);","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"darren2pro"},"content":"        if (gitHubUrl \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"darren2pro"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"darren2pro"},"content":"                    ProfileUrl.class.getSimpleName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"darren2pro"},"content":"        final ProfileUrl modelGitHubUrl \u003d ProfileUrl.ofNullable(gitHubUrl);","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"darren2pro"},"content":"        Applicant modelApplicant \u003d new Applicant(modelName, modelPhone, modelEmail, modelAddress, modelPosition,","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"darren2pro"},"content":"                modelGitHubUrl);","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"darren2pro"},"content":"        return modelApplicant.markAs(modelApplicationStatus);","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"darren2pro":128}},{"path":"src/main/java/seedu/address/storage/applicant/JsonApplicantBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.storage.applicant;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyApplicantBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyPositionBook;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":" * A class to access ApplicantBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"public class JsonApplicantBookStorage implements ApplicantBookStorage {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonApplicantBookStorage.class);","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"    private Path filePath;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"    public JsonApplicantBookStorage(Path filePath) {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    public Path getApplicantBookFilePath() {","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        return filePath;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    public Optional\u003cReadOnlyApplicantBook\u003e readApplicantBook(ReadOnlyPositionBook positionBook) throws","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"            DataConversionException {","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        return readApplicantBook(filePath, positionBook);","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"     * Similar to {@link #readApplicantBook(ReadOnlyPositionBook positionBook)}.","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"     * @param filePath location of the applicant data. Cannot be null.","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"    public Optional\u003cReadOnlyApplicantBook\u003e readApplicantBook(Path filePath, ReadOnlyPositionBook positionBook) throws","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"            DataConversionException {","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(positionBook);","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"        Optional\u003cJsonSerializableApplicantBook\u003e jsonApplicantBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"                filePath, JsonSerializableApplicantBook.class);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"        if (!jsonApplicantBook.isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"            return Optional.of(jsonApplicantBook.get().toModelType(positionBook));","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"    public void saveApplicantBook(ReadOnlyApplicantBook applicantBook) throws IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"        saveApplicantBook(applicantBook, filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"     * Similar to {@link #saveApplicantBook(ReadOnlyApplicantBook)}.","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"     * @param filePath location of the applicant data. Cannot be null.","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"    public void saveApplicantBook(ReadOnlyApplicantBook applicantBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(applicantBook);","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableApplicantBook(applicantBook), filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"darren2pro":83}},{"path":"src/main/java/seedu/address/storage/applicant/JsonSerializableApplicantBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.storage.applicant;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ApplicantBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyApplicantBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyPositionBook;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":" * An Immutable ApplicantBook that is serializable to JSON format.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"@JsonRootName(value \u003d \"applicantbook\")","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"public class JsonSerializableApplicantBook {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_DUPLICATE_POSITION \u003d \"Applicants list contains duplicate applicant(s).\";","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    private final List\u003cJsonAdaptedApplicant\u003e applicants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"     * Constructs a {@code JsonSerializableApplicantBook} with the given applicants.","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    public JsonSerializableApplicantBook(@JsonProperty(\"applicants\") List\u003cJsonAdaptedApplicant\u003e applicants) {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        this.applicants.addAll(applicants);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"     * Converts a given {@code ReadOnlyApplicantBook} into this class for Jackson use.","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableApplicantBook}.","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    public JsonSerializableApplicantBook(ReadOnlyApplicantBook source) {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"        applicants.addAll(source.getApplicantList().stream().map(JsonAdaptedApplicant::new)","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"     * Converts this applicant book into the model\u0027s {@code ApplicantBook} object.","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"    public ApplicantBook toModelType(ReadOnlyPositionBook positionBook) throws IllegalValueException {","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        ApplicantBook applicantBook \u003d new ApplicantBook();","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"        for (JsonAdaptedApplicant jsonAdaptedApplicant : applicants) {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"            Applicant applicant \u003d jsonAdaptedApplicant.toModelType(positionBook);","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"            if (applicantBook.hasApplicantWithName(applicant.getName())) {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_POSITION);","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"            applicantBook.addApplicant(applicant);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"        return applicantBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"darren2pro":61}},{"path":"src/main/java/seedu/address/storage/position/JsonAdaptedPosition.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.storage.position;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Description;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":" * Jackson-friendly version of {@link Position}.","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"class JsonAdaptedPosition {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Position\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    private final String title;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    private final String description;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"     * Constructs a {@code JsonAdaptedPosition} with the given position details.","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"    public JsonAdaptedPosition(@JsonProperty(\"title\") String title,","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"                           @JsonProperty(\"description\") String description) {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"     * Converts a given {@code Position} into this class for Jackson use.","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    public JsonAdaptedPosition(Position source) {","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"        title \u003d source.getTitle().fullTitle;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        description \u003d source.getDescription().description;","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"     * Converts this Jackson-friendly adapted position object into the model\u0027s {@code Position} object.","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted position.","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"    public Position toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName()));","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"            throw new IllegalValueException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"        return new Position(modelTitle, modelDescription);","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"darren2pro":65}},{"path":"src/main/java/seedu/address/storage/position/JsonPositionBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.storage.position;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyPositionBook;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":" * A class to access PositionBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"public class JsonPositionBookStorage implements PositionBookStorage {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPositionBookStorage.class);","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    private Path filePath;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    public JsonPositionBookStorage(Path filePath) {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    public Path getPositionBookFilePath() {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        return filePath;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    public Optional\u003cReadOnlyPositionBook\u003e readPositionBook() throws DataConversionException {","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        return readPositionBook(filePath);","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"     * Similar to {@link #readPositionBook()}.","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"     * @param filePath location of the position data. Cannot be null.","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    public Optional\u003cReadOnlyPositionBook\u003e readPositionBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"        Optional\u003cJsonSerializablePositionBook\u003e jsonPositionBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"                filePath, JsonSerializablePositionBook.class);","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        if (!jsonPositionBook.isPresent()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"            return Optional.of(jsonPositionBook.get().toModelType());","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"    public void savePositionBook(ReadOnlyPositionBook positionBook) throws IOException {","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"        savePositionBook(positionBook, filePath);","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"     * Similar to {@link #savePositionBook(ReadOnlyPositionBook)}.","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"     * @param filePath location of the position data. Cannot be null.","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"    public void savePositionBook(ReadOnlyPositionBook positionBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(positionBook);","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePositionBook(positionBook), filePath);","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"darren2pro":80}},{"path":"src/main/java/seedu/address/storage/position/JsonSerializablePositionBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.storage.position;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.PositionBook;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyPositionBook;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":" * An Immutable PositionBook that is serializable to JSON format.","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"@JsonRootName(value \u003d \"positionbook\")","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"class JsonSerializablePositionBook {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_DUPLICATE_POSITION \u003d \"Positions list contains duplicate position(s).\";","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    private final List\u003cJsonAdaptedPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"     * Constructs a {@code JsonSerializablePositionBook} with the given positions.","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    public JsonSerializablePositionBook(@JsonProperty(\"positions\") List\u003cJsonAdaptedPosition\u003e positions) {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        this.positions.addAll(positions);","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"     * Converts a given {@code ReadOnlyPositionBook} into this class for Jackson use.","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePositionBook}.","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    public JsonSerializablePositionBook(ReadOnlyPositionBook source) {","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"        positions.addAll(source.getPositionList().stream().map(JsonAdaptedPosition::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"     * Converts this position book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"    public PositionBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"        PositionBook positionBook \u003d new PositionBook();","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        for (JsonAdaptedPosition jsonAdaptedPosition : positions) {","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"            Position position \u003d jsonAdaptedPosition.toModelType();","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"            if (positionBook.hasPosition(position)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_POSITION);","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"            positionBook.addPosition(position);","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        return positionBook;","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"darren2pro":60}},{"path":"src/main/java/seedu/address/storage/position/PositionBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.storage.position;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyPositionBook;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":" * Represents a storage for {@link seedu.address.model.PositionBook}.","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"public interface PositionBookStorage {","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"     * Returns the file path of the position data file.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    Path getPositionBookFilePath();","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"     * Returns PositionBook data as a {@link ReadOnlyPositionBook}.","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    Optional\u003cReadOnlyPositionBook\u003e readPositionBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"     * @see #getPositionBookFilePath()","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    Optional\u003cReadOnlyPositionBook\u003e readPositionBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"     * Saves the given {@link ReadOnlyPositionBook} to the storage.","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"     * @param positionBook cannot be null.","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"    void savePositionBook(ReadOnlyPositionBook positionBook) throws IOException;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"     * @see #savePositionBook(ReadOnlyPositionBook)","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    void savePositionBook(ReadOnlyPositionBook positionBook, Path filePath) throws IOException;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"darren2pro":45}},{"path":"src/main/java/seedu/address/ui/ApplicantCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import java.awt.Desktop;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import java.net.URI;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.control.Hyperlink;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.ProfileUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":" * A UI component that displays information of a {@code Applicant}.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"public class ApplicantCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    private static final String FXML \u003d \"ApplicantListCard.fxml\";","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    public final Applicant applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    private ProfileUrl gitHubUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    private ProfileUrl linkedInUrl;","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    private ImageView gitHubLogo;","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    private ImageView linkedInLogo;","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    private Label name;","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    private Label id;","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"    private Label phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"    private Label address;","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"    private Label email;","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"    private Label application;","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"    private AnchorPane hyperlinkAnchorPane;","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"    private Hyperlink hyperlinkGitHub;","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"     * Creates a {@code ApplicantCard} with the given {@code Applicant} and index to display.","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"    public ApplicantCard(Applicant applicant, int displayedIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"        super(FXML);","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"        name.setText(applicant.getName().fullName);","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"        phone.setText(applicant.getPhone().value);","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"        address.setText(applicant.getAddress().value);","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"        email.setText(applicant.getEmail().value);","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"        application.setText(applicant.getApplicationSummary());","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"        initializeHyperlinksForApplicant(applicant);","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"    private void initializeHyperlinksForApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"        // Insert the code for initializing the applicant github link and linkedin link here","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"        this.gitHubUrl \u003d applicant.getGitHubUrl();","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"        if (!applicant.hasGitHubProfile()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"            removeGitHubHyperLinkFromApplicantCard();","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"    private void removeGitHubHyperLinkFromApplicantCard() {","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"        hyperlinkAnchorPane.getChildren().removeAll(hyperlinkGitHub, gitHubLogo);","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"    private void handleGitHubHyperlink() {","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"            Desktop.getDesktop().browse(new URI(gitHubUrl.getUrlString()));","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"        } catch (IOException e1) {","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"            e1.printStackTrace();","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"        } catch (URISyntaxException e1) {","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"            e1.printStackTrace();","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"darren2pro"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"darren2pro"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"darren2pro"},"content":"            return true;","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"darren2pro"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"        if (!(other instanceof ApplicantCard)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"            return false;","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"        // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"        ApplicantCard card \u003d (ApplicantCard) other;","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"darren2pro"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 applicant.equals(card.applicant);","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":115}},{"path":"src/main/java/seedu/address/ui/ApplicantListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":" * Panel containing the list of applicants.","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"public class ApplicantListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    private static final String FXML \u003d \"ApplicantListPanel.fxml\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ApplicantListPanel.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    private ListView\u003cApplicant\u003e applicantListView;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"     * Creates a {@code ApplicantListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    public ApplicantListPanel(ObservableList\u003cApplicant\u003e applicantList) {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        super(FXML);","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        applicantListView.setItems(applicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        applicantListView.setCellFactory(listView -\u003e new ApplicantListViewCell());","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Applicant} using a {@code ApplicantCard}.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    class ApplicantListViewCell extends ListCell\u003cApplicant\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        protected void updateItem(Applicant applicant, boolean empty) {","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"            super.updateItem(applicant, empty);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"            if (empty || applicant \u003d\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"                setText(null);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"            } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"                setGraphic(new ApplicantCard(applicant, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":50}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103-f10-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"darren2pro":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    private ApplicantListPanel applicantListPanel;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"    private PositionListPanel positionListPanel;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"    private StackPane applicantListPanelPlaceholder;","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"    private StackPane positionListPanelPlaceholder;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"LMAOboxhack"},"content":"        positionListPanel \u003d new PositionListPanel(logic.getFilteredPositionList());","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"LMAOboxhack"},"content":"        positionListPanelPlaceholder.getChildren().add(positionListPanel.getRoot());","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":121,"author":{"gitId":"darren2pro"},"content":"        applicantListPanel \u003d new ApplicantListPanel(logic.getFilteredApplicantList());","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"darren2pro"},"content":"        applicantListPanelPlaceholder.getChildren().add(applicantListPanel.getRoot());","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"LMAOboxhack"},"content":"        // TODO: Display something meaningful in the StatusBarFooter","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"darren2pro"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getApplicantBookFilePath());","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Harry-Gao-H":3,"LMAOboxhack":3,"darren2pro":6,"-":193}},{"path":"src/main/java/seedu/address/ui/PieChartDisplayer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"/*","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":" * Displays its given pie chart in a new window.","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"public class PieChartDisplayer {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"    private final PieChart pieChart;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"     * Constructor for an object which displays a given pie chart.","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"    public PieChartDisplayer(PieChart pieChart) {","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(pieChart);","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"        this.pieChart \u003d pieChart;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"     * Displays the pie chart in a new window.","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"     * When the window loses focus, it is closed.","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"    public void displayPieChart() {","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"        StackPane root \u003d new StackPane();","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"        root.getChildren().add(pieChart);","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"        Stage stage \u003d new Stage();","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"        stage.setScene(new Scene(root, 450, 450));","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"        setCloseOnLoseFocus(stage);","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"        stage.show();","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"    private void setCloseOnLoseFocus(Stage stage) {","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"        stage.focusedProperty().addListener((i, j, k) -\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"            if (!stage.isFocused()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"                Platform.runLater(stage::close);","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"        });","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"LMAOboxhack":49}},{"path":"src/main/java/seedu/address/ui/PositionCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":" * An UI component that displays information of a {@code Position}.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"public class PositionCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    private static final String FXML \u003d \"PositionListCard.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"    public final Position position;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"    private Label title;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"    private Label id;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"    private Label description;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"    public PositionCard(Position position, int displayedIndex) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"        super(FXML);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"        this.position \u003d position;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"        title.setText(position.getTitle().fullTitle);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"        description.setText(position.getDescription().description);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!(other instanceof PositionCard)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"        // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"        PositionCard card \u003d (PositionCard) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 position.equals(card.position);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Harry-Gao-H":64}},{"path":"src/main/java/seedu/address/ui/PositionListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":" * Panel containing the list of positions.","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"public class PositionListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"    private static final String FXML \u003d \"PositionListPanel.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PositionListPanel.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"    private ListView\u003cPosition\u003e positionListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"     * Creates a {@code PositionListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"    public PositionListPanel(ObservableList\u003cPosition\u003e positionList) {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"        super(FXML);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"        positionListView.setItems(positionList);","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"        positionListView.setCellFactory(listView -\u003e new PositionListViewCell());","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Position} using a {@code PositionCard}.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"    class PositionListViewCell extends ListCell\u003cPosition\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"        protected void updateItem(Position position, boolean empty) {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"            super.updateItem(position, empty);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"            if (empty || position \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"                setText(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"                setGraphic(new PositionCard(position, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Harry-Gao-H":49}},{"path":"src/main/java/seedu/address/ui/PositionPieChart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.scene.control.Tooltip;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Application.ApplicationStatus;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.ApplyingToPositionPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":" * A pie chart representing a job position and the breakdown of its applicants.","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"public class PositionPieChart extends PieChart {","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"    private final Position position;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"     * Constructor for a {@code PositionPieChart}, which takes an {@code ObservableList} of applicants","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"     * under a specified position.","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"    public PositionPieChart(ObservableList\u003cApplicant\u003e applicants, Position position) {","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"        super(createPieChart(requireNonNull(applicants)","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"                .filtered(new ApplyingToPositionPredicate(requireNonNull(position)))));","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"        this.position \u003d position;","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"        setStyling();","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"        installTooltips();","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"     * Internal method to create a pie chart, given a list of applicants under a single position.","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"    private static ObservableList\u003cPieChart.Data\u003e createPieChart(ObservableList\u003cApplicant\u003e applicantsUnderPosition) {","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(applicantsUnderPosition);","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"        int applicantCount \u003d applicantsUnderPosition.size();","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"        return Arrays.stream(ApplicationStatus.values())","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"                .map(status -\u003e createPieChartData(applicantsUnderPosition, applicantCount, status))","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"                .collect(Collectors.toCollection(FXCollections::observableArrayList));","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"LMAOboxhack"},"content":"     * Internal method to create a {@code PieChart.Data} object from a given application status.","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"LMAOboxhack"},"content":"    private static PieChart.Data createPieChartData(","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"LMAOboxhack"},"content":"            ObservableList\u003cApplicant\u003e applicants, int applicantCount, ApplicationStatus status) {","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"LMAOboxhack"},"content":"        requireAllNonNull(applicants, status);","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"LMAOboxhack"},"content":"        int applicantsWithStatusCount \u003d applicants.filtered(applicant -\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"LMAOboxhack"},"content":"                applicant.hasApplicationStatus(status)).size();","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"LMAOboxhack"},"content":"        double percentage \u003d (double) applicantsWithStatusCount * 100 / applicantCount;","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"LMAOboxhack"},"content":"        return new PieChart.Data(status.toString(), percentage);","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"LMAOboxhack"},"content":"    private void setStyling() {","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"LMAOboxhack"},"content":"        String properCaseTitle \u003d StringUtil.toProperCase(position.getTitle().fullTitle);","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"LMAOboxhack"},"content":"        setTitle(properCaseTitle);","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"LMAOboxhack"},"content":"        setLabelsVisible(true);","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"LMAOboxhack"},"content":"    private void installTooltips() {","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"LMAOboxhack"},"content":"        getData().forEach(data -\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"LMAOboxhack"},"content":"            Tooltip tooltip \u003d new Tooltip();","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"LMAOboxhack"},"content":"            tooltip.setText(data.getPieValue() + \"%\");","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"LMAOboxhack"},"content":"            Tooltip.install(data.getNode(), tooltip);","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"LMAOboxhack"},"content":"        });","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"LMAOboxhack":79}},{"path":"src/main/resources/view/ApplicantListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.control.Hyperlink?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105.0\" prefHeight\u003d\"146.0\" prefWidth\u003d\"185.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"            \u003cLabel fx:id\u003d\"application\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$application\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"         \u003cAnchorPane fx:id\u003d\"hyperlinkAnchorPane\" prefHeight\u003d\"0.0\" prefWidth\u003d\"93.0\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"               \u003cHyperlink fx:id\u003d\"hyperlinkGitHub\" layoutX\u003d\"24.0\" layoutY\u003d\"2.0\" onAction\u003d\"#handleGitHubHyperlink\" text\u003d\"GitHub Profile\" textFill\u003d\"WHITE\" underline\u003d\"true\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"                     \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"                  \u003c/font\u003e\u003c/Hyperlink\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"               \u003cImageView fx:id\u003d\"gitHubLogo\" fitHeight\u003d\"18.0\" fitWidth\u003d\"16.0\" layoutX\u003d\"6.0\" layoutY\u003d\"5.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"                     \u003cImage url\u003d\"@../images/GitHub-logo.png\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"         \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":57}},{"path":"src/main/resources/view/ApplicantListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"    \u003cListView fx:id\u003d\"applicantListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"         title\u003d\"MrTechRecruiter\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        \u003cVBox fx:id\u003d\"applicantList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"          \u003cStackPane fx:id\u003d\"applicantListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"        \u003cVBox fx:id\u003d\"positionList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"          \u003cStackPane fx:id\u003d\"positionListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Harry-Gao-H":8,"LMAOboxhack":1,"darren2pro":7,"-":60}},{"path":"src/main/resources/view/PositionListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"        \u003cLabel fx:id\u003d\"title\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"      \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Harry-Gao-H":32}},{"path":"src/main/resources/view/PositionListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"  \u003cListView fx:id\u003d\"positionListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Harry-Gao-H":8}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"import seedu.address.storage.applicant.JsonApplicantBookStorage;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"import seedu.address.storage.position.JsonPositionBookStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"        JsonPositionBookStorage positionBookStorage \u003d new JsonPositionBookStorage(","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"                temporaryFolder.resolve(\"positionBook.json\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"        JsonApplicantBookStorage applicantBookStorage \u003d new JsonApplicantBookStorage(","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"                temporaryFolder.resolve(\"applicantBook.json\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage,","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"                applicantBookStorage, positionBookStorage);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"        JsonPositionBookStorage positionBookStorage \u003d new JsonPositionBookStorage(","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"                temporaryFolder.resolve(\"positionBook.json\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"        JsonApplicantBookStorage applicantBookStorage \u003d new JsonApplicantBookStorage(","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"                temporaryFolder.resolve(\"applicantBook.json\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage,","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"                applicantBookStorage, positionBookStorage);","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"darren2pro"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"darren2pro":15,"-":159}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.TypicalApplicants.getTypicalApplicantBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.TypicalPositions.getTypicalPositionBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalApplicantBook(),","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"                getTypicalPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"darren2pro":5,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyApplicantBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.ReadOnlyPositionBook;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.ApplicantParticulars;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"Harry-Gao-H"},"content":"        public Path getPositionBookFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"darren2pro"},"content":"        public Path getApplicantBookFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"darren2pro"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"LMAOboxhack"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"BenjaminTan99"},"content":"        public Applicant addApplicantWithParticulars(ApplicantParticulars applicantParticulars) {","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"LMAOboxhack"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"BenjaminTan99"},"content":"        public boolean hasApplicantWithName(Name applicantName) {","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"darren2pro"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"LMAOboxhack"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"LMAOboxhack"},"content":"        public Applicant getApplicantByNameIgnoreCase(Name applicantName) {","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"LMAOboxhack"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"darren2pro"},"content":"        public void deleteApplicant(Applicant target) {","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"darren2pro"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":179,"author":{"gitId":"Harry-Gao-H"},"content":"        public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"Harry-Gao-H"},"content":"        public void addApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"darren2pro"},"content":"        public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"darren2pro"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":194,"author":{"gitId":"Harry-Gao-H"},"content":"        public void setPosition(Position target, Position editedPosition) {","lastModifiedDate":"2021-10-14"},{"lineNumber":195,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":196,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":197,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":204,"author":{"gitId":"darren2pro"},"content":"        public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":205,"author":{"gitId":"darren2pro"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":206,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"darren2pro"},"content":"        public void updateFilteredApplicantList(Predicate\u003cApplicant\u003e predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"darren2pro"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":216,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":217,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":218,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":219,"author":{"gitId":"BenjaminTan99"},"content":"        public boolean hasPosition(Position position) {","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":221,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":222,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":223,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":224,"author":{"gitId":"BenjaminTan99"},"content":"        public boolean hasPositionWithTitle(Title toCheck) {","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"BenjaminTan99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"Harry-Gao-H"},"content":"        public Position getPositionByTitle(Title title) {","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"BenjaminTan99"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"BenjaminTan99"},"content":"        public void setPositionBook(ReadOnlyPositionBook positionBook) {","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":236,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":237,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":238,"author":{"gitId":"BenjaminTan99"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"BenjaminTan99"},"content":"        public ReadOnlyPositionBook getPositionBook() {","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"BenjaminTan99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":242,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":243,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":244,"author":{"gitId":"Harry-Gao-H"},"content":"        public void addPosition(Position toAdd) {","lastModifiedDate":"2021-10-09"},{"lineNumber":245,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":246,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":247,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":248,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":249,"author":{"gitId":"Harry-Gao-H"},"content":"        public void deletePosition(Position positionToDelete) {","lastModifiedDate":"2021-10-09"},{"lineNumber":250,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":251,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":252,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":253,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":254,"author":{"gitId":"Harry-Gao-H"},"content":"        public ObservableList\u003cPosition\u003e getFilteredPositionList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":255,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":256,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":257,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":258,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":259,"author":{"gitId":"Harry-Gao-H"},"content":"        public void updateFilteredPositionList(Predicate\u003cPosition\u003e predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":260,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":261,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":262,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"BenjaminTan99"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":264,"author":{"gitId":"BenjaminTan99"},"content":"        public float calculateRejectionRate(Title p) {","lastModifiedDate":"2021-10-23"},{"lineNumber":265,"author":{"gitId":"BenjaminTan99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"BenjaminTan99"},"content":"        };","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":268,"author":{"gitId":"Harry-Gao-H"},"content":"        public void updateApplicantsWithPosition(Position positionToEdit, Position newPosition) {","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":270,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":271,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":272,"author":{"gitId":"darren2pro"},"content":"        public ReadOnlyApplicantBook getApplicantBook() {","lastModifiedDate":"2021-10-21"},{"lineNumber":273,"author":{"gitId":"darren2pro"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":274,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":275,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":276,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":277,"author":{"gitId":"darren2pro"},"content":"        public void setApplicantBook(ReadOnlyApplicantBook applicantBook) {","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"darren2pro"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":280,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":281,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":282,"author":{"gitId":"Harry-Gao-H"},"content":"        public Model getCopiedModel() {","lastModifiedDate":"2021-10-26"},{"lineNumber":283,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":284,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":285,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":286,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":287,"author":{"gitId":"Harry-Gao-H"},"content":"        public void addToHistory(Command command) {","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":289,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":291,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":292,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":293,"author":{"gitId":"Harry-Gao-H"},"content":"        public boolean hasHistory() {","lastModifiedDate":"2021-10-26"},{"lineNumber":294,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":295,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":297,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":298,"author":{"gitId":"Harry-Gao-H"},"content":"        public String recoverHistory() {","lastModifiedDate":"2021-10-26"},{"lineNumber":299,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":300,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":304,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":323,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Harry-Gao-H":81,"LMAOboxhack":12,"darren2pro":38,"-":194,"BenjaminTan99":20}},{"path":"src/test/java/seedu/address/logic/commands/AddPositionCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.testutil.TypicalPositions.getTypicalPositionBook;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.testutil.PositionBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":" * Contains integration tests (interaction with the Model) for {@code AddPositionCommand}.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"public class AddPositionCommandIntegrationTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"    private Model model;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"        model \u003d new ModelManager(getTypicalPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"    public void execute_newPosition_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"        Position validPosition \u003d new PositionBuilder().build();","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"        expectedModel.addPosition(validPosition);","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"        assertCommandSuccess(new AddPositionCommand(validPosition), model,","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"                String.format(AddPositionCommand.MESSAGE_SUCCESS, validPosition), expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"    public void execute_duplicatePosition_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"        Position positionInList \u003d model.getPositionBook().getPositionList().get(0);","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"        assertCommandFailure(new AddPositionCommand(positionInList), model,","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"                AddPositionCommand.MESSAGE_DUPLICATE_POSITION);","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Harry-Gao-H":46,"darren2pro":1}},{"path":"src/test/java/seedu/address/logic/commands/AddPositionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ReadOnlyApplicantBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.ReadOnlyPositionBook;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.ApplicantParticulars;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.testutil.PositionBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"public class AddPositionCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"    public void constructor_nullPosition_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPositionCommand(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"    public void execute_positionAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"        ModelStubAcceptingPositionAdded modelStub \u003d new ModelStubAcceptingPositionAdded();","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"        Position validPosition \u003d new PositionBuilder().build();","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"        CommandResult commandResult \u003d new AddPositionCommand(validPosition).execute(modelStub);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"        assertEquals(String.format(AddPositionCommand.MESSAGE_SUCCESS, validPosition),","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"        assertEquals(Arrays.asList(validPosition), modelStub.positionsAdded);","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"    public void execute_duplicatePosition_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"        Position validPosition \u003d new PositionBuilder().build();","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"        AddPositionCommand addPositionCommand \u003d new AddPositionCommand(validPosition);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"        ModelStub modelStub \u003d new ModelStubWithPosition(validPosition);","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"        assertThrows(CommandException.class, AddPositionCommand.MESSAGE_DUPLICATE_POSITION, ()","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"            -\u003e addPositionCommand.execute(modelStub));","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"    public void equals() {","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"        Position dataEngineer \u003d new PositionBuilder().withTitle(\"Data Engineer\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"Harry-Gao-H"},"content":"        Position dataScientist \u003d new PositionBuilder().withTitle(\"Data Scientist\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"        AddPositionCommand addDataEngineerCommand \u003d new AddPositionCommand(dataEngineer);","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"Harry-Gao-H"},"content":"        AddPositionCommand addDataScientistCommand \u003d new AddPositionCommand(dataScientist);","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"Harry-Gao-H"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(addDataEngineerCommand.equals(addDataEngineerCommand));","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"Harry-Gao-H"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"Harry-Gao-H"},"content":"        AddPositionCommand addDataEngineerCommandCopy \u003d new AddPositionCommand(dataEngineer);","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(addDataEngineerCommand.equals(addDataEngineerCommandCopy));","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"Harry-Gao-H"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(addDataEngineerCommand.equals(1));","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"Harry-Gao-H"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(addDataEngineerCommand.equals(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"Harry-Gao-H"},"content":"        // different position -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(addDataEngineerCommand.equals(addDataScientistCommand));","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"Harry-Gao-H"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"Harry-Gao-H"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"Harry-Gao-H"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"Harry-Gao-H"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"Harry-Gao-H"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"Harry-Gao-H"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"Harry-Gao-H"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"Harry-Gao-H"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"Harry-Gao-H"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"BenjaminTan99"},"content":"        public Applicant addApplicantWithParticulars(ApplicantParticulars particulars) {","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"BenjaminTan99"},"content":"        public boolean hasApplicantWithName(Name name) {","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"LMAOboxhack"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"LMAOboxhack"},"content":"        public Applicant getApplicantByNameIgnoreCase(Name applicantName) {","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"LMAOboxhack"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"Harry-Gao-H"},"content":"        public void addApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"Harry-Gao-H"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"Harry-Gao-H"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":156,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":157,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":158,"author":{"gitId":"Harry-Gao-H"},"content":"        public Path getApplicantBookFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":159,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-15"},{"lineNumber":160,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":161,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":162,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":163,"author":{"gitId":"Harry-Gao-H"},"content":"        public Path getPositionBookFilePath() {","lastModifiedDate":"2021-10-15"},{"lineNumber":164,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-15"},{"lineNumber":165,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":168,"author":{"gitId":"Harry-Gao-H"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":172,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"Harry-Gao-H"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":178,"author":{"gitId":"Harry-Gao-H"},"content":"        public void deleteApplicant(Applicant target) {","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"Harry-Gao-H"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-13"},{"lineNumber":184,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":185,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":186,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":187,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":188,"author":{"gitId":"Harry-Gao-H"},"content":"        public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2021-10-13"},{"lineNumber":189,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"Harry-Gao-H"},"content":"        public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":198,"author":{"gitId":"Harry-Gao-H"},"content":"        public void setPosition(Position target, Position editedPosition) {","lastModifiedDate":"2021-10-14"},{"lineNumber":199,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":200,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":201,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":202,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":203,"author":{"gitId":"Harry-Gao-H"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":204,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":205,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":206,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":207,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":208,"author":{"gitId":"Harry-Gao-H"},"content":"        public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":209,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":210,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":211,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":212,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":213,"author":{"gitId":"Harry-Gao-H"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":214,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":216,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":217,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":218,"author":{"gitId":"Harry-Gao-H"},"content":"        public void updateFilteredApplicantList(Predicate\u003cApplicant\u003e predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":219,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":220,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":221,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":222,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":223,"author":{"gitId":"Harry-Gao-H"},"content":"        public void setPositionBook(ReadOnlyPositionBook positionBook) {","lastModifiedDate":"2021-10-14"},{"lineNumber":224,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":225,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":226,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":227,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":228,"author":{"gitId":"Harry-Gao-H"},"content":"        public ReadOnlyPositionBook getPositionBook() {","lastModifiedDate":"2021-10-14"},{"lineNumber":229,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":230,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":231,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":232,"author":{"gitId":"BenjaminTan99"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"Harry-Gao-H"},"content":"        public boolean hasPosition(Position toAdd) {","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"BenjaminTan99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"BenjaminTan99"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"BenjaminTan99"},"content":"        public boolean hasPositionWithTitle(Title title) {","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"BenjaminTan99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":241,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":242,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":243,"author":{"gitId":"Harry-Gao-H"},"content":"        public Position getPositionByTitle(Title title) {","lastModifiedDate":"2021-10-23"},{"lineNumber":244,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":245,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":246,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":247,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":248,"author":{"gitId":"Harry-Gao-H"},"content":"        public void addPosition(Position toAdd) {","lastModifiedDate":"2021-10-13"},{"lineNumber":249,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":250,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":251,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":252,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":253,"author":{"gitId":"Harry-Gao-H"},"content":"        public void deletePosition(Position positionToDelete) {","lastModifiedDate":"2021-10-13"},{"lineNumber":254,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":255,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":256,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":257,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":258,"author":{"gitId":"Harry-Gao-H"},"content":"        public ObservableList\u003cPosition\u003e getFilteredPositionList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":259,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":260,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":261,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":262,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":263,"author":{"gitId":"Harry-Gao-H"},"content":"        public void updateFilteredPositionList(Predicate\u003cPosition\u003e predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":264,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":265,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":266,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"BenjaminTan99"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":268,"author":{"gitId":"BenjaminTan99"},"content":"        public float calculateRejectionRate(Title p) {","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"BenjaminTan99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":270,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":271,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":272,"author":{"gitId":"Harry-Gao-H"},"content":"        public void updateApplicantsWithPosition(Position positionToEdit, Position newPosition) {","lastModifiedDate":"2021-10-21"},{"lineNumber":273,"author":{"gitId":"BenjaminTan99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":274,"author":{"gitId":"BenjaminTan99"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":275,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":276,"author":{"gitId":"darren2pro"},"content":"        public void setApplicantBook(ReadOnlyApplicantBook applicantBook) {","lastModifiedDate":"2021-10-21"},{"lineNumber":277,"author":{"gitId":"darren2pro"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":279,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":281,"author":{"gitId":"darren2pro"},"content":"        public ReadOnlyApplicantBook getApplicantBook() {","lastModifiedDate":"2021-10-21"},{"lineNumber":282,"author":{"gitId":"darren2pro"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":283,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":284,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":285,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":286,"author":{"gitId":"Harry-Gao-H"},"content":"        public Model getCopiedModel() {","lastModifiedDate":"2021-10-26"},{"lineNumber":287,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":288,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":289,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":291,"author":{"gitId":"Harry-Gao-H"},"content":"        public void addToHistory(Command command) {","lastModifiedDate":"2021-10-28"},{"lineNumber":292,"author":{"gitId":"Harry-Gao-H"},"content":"            return;","lastModifiedDate":"2021-10-26"},{"lineNumber":293,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":294,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":295,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"Harry-Gao-H"},"content":"        public boolean hasHistory() {","lastModifiedDate":"2021-10-26"},{"lineNumber":297,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":298,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":299,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":300,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":301,"author":{"gitId":"Harry-Gao-H"},"content":"        public String recoverHistory() {","lastModifiedDate":"2021-10-26"},{"lineNumber":302,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":304,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":305,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":306,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":307,"author":{"gitId":"Harry-Gao-H"},"content":"     * A Model stub that contains a single position.","lastModifiedDate":"2021-10-13"},{"lineNumber":308,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":309,"author":{"gitId":"Harry-Gao-H"},"content":"    private class ModelStubWithPosition extends ModelStub {","lastModifiedDate":"2021-10-13"},{"lineNumber":310,"author":{"gitId":"Harry-Gao-H"},"content":"        private final Position position;","lastModifiedDate":"2021-10-13"},{"lineNumber":311,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":312,"author":{"gitId":"Harry-Gao-H"},"content":"        ModelStubWithPosition(Position position) {","lastModifiedDate":"2021-10-13"},{"lineNumber":313,"author":{"gitId":"Harry-Gao-H"},"content":"            requireNonNull(position);","lastModifiedDate":"2021-10-13"},{"lineNumber":314,"author":{"gitId":"Harry-Gao-H"},"content":"            this.position \u003d position;","lastModifiedDate":"2021-10-13"},{"lineNumber":315,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":316,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":317,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":318,"author":{"gitId":"Harry-Gao-H"},"content":"        public boolean hasPosition(Position position) {","lastModifiedDate":"2021-10-13"},{"lineNumber":319,"author":{"gitId":"Harry-Gao-H"},"content":"            requireNonNull(position);","lastModifiedDate":"2021-10-13"},{"lineNumber":320,"author":{"gitId":"Harry-Gao-H"},"content":"            return this.position.isSamePosition(position);","lastModifiedDate":"2021-10-13"},{"lineNumber":321,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":322,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":323,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":324,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":325,"author":{"gitId":"Harry-Gao-H"},"content":"     * A Model stub that always accept the position being added.","lastModifiedDate":"2021-10-13"},{"lineNumber":326,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":327,"author":{"gitId":"Harry-Gao-H"},"content":"    private class ModelStubAcceptingPositionAdded extends ModelStub {","lastModifiedDate":"2021-10-13"},{"lineNumber":328,"author":{"gitId":"Harry-Gao-H"},"content":"        final ArrayList\u003cPosition\u003e positionsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":329,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":330,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":331,"author":{"gitId":"Harry-Gao-H"},"content":"        public boolean hasPosition(Position position) {","lastModifiedDate":"2021-10-13"},{"lineNumber":332,"author":{"gitId":"Harry-Gao-H"},"content":"            requireNonNull(position);","lastModifiedDate":"2021-10-13"},{"lineNumber":333,"author":{"gitId":"Harry-Gao-H"},"content":"            return positionsAdded.stream().anyMatch(position::isSamePosition);","lastModifiedDate":"2021-10-13"},{"lineNumber":334,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":335,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":336,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":337,"author":{"gitId":"Harry-Gao-H"},"content":"        public void addPosition(Position position) {","lastModifiedDate":"2021-10-13"},{"lineNumber":338,"author":{"gitId":"Harry-Gao-H"},"content":"            requireNonNull(position);","lastModifiedDate":"2021-10-13"},{"lineNumber":339,"author":{"gitId":"Harry-Gao-H"},"content":"            positionsAdded.add(position);","lastModifiedDate":"2021-10-13"},{"lineNumber":340,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":341,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":342,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":343,"author":{"gitId":"Harry-Gao-H"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-13"},{"lineNumber":344,"author":{"gitId":"Harry-Gao-H"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-13"},{"lineNumber":345,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":346,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":347,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":348,"author":{"gitId":"Harry-Gao-H"},"content":"        public Model getCopiedModel() {","lastModifiedDate":"2021-10-26"},{"lineNumber":349,"author":{"gitId":"Harry-Gao-H"},"content":"            return this;","lastModifiedDate":"2021-10-26"},{"lineNumber":350,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":351,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":352,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":353,"author":{"gitId":"Harry-Gao-H"},"content":"        public void addToHistory(Command command) {","lastModifiedDate":"2021-10-28"},{"lineNumber":354,"author":{"gitId":"Harry-Gao-H"},"content":"            return;","lastModifiedDate":"2021-10-26"},{"lineNumber":355,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":356,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":357,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":358,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":359,"author":{"gitId":"Harry-Gao-H"},"content":"        public boolean hasHistory() {","lastModifiedDate":"2021-10-26"},{"lineNumber":360,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":361,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":362,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":363,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":364,"author":{"gitId":"Harry-Gao-H"},"content":"        public String recoverHistory() {","lastModifiedDate":"2021-10-26"},{"lineNumber":365,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":366,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":367,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":368,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Harry-Gao-H":333,"LMAOboxhack":6,"darren2pro":9,"BenjaminTan99":20}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.TypicalPositions.getTypicalPositionBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"darren2pro":3,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.model.applicant.Application.ApplicationStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.descriptors.EditPositionDescriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.descriptors.FilterApplicantDescriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.PositionBook;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.TitleContainsAllKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.testutil.EditPositionDescriptorBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.testutil.FilterApplicantDescriptorBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String VALID_TITLE_DATAENGINEER \u003d \"Data Engineer\";","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String VALID_TITLE_DATASCIENTIST \u003d \"Data Scientist\";","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String VALID_TITLE_SOFTWAREARCHITECT \u003d \"Software Architect\";","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String VALID_DESCRIPTION_DATAENGINEER \u003d \"Create data pipeline for service\";","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String VALID_DESCRIPTION_DATASCIENTIST \u003d \"Apply state-of-the-art machine learning models\";","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String VALID_DESCRIPTION_SOFTWAREARCHITECT \u003d \"Makes high-level design choices and \"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"try to enforce technical standards\";","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"LMAOboxhack"},"content":"    public static final String INVALID_FILTER_TITLE_DATAMINER \u003d \"Data Miner\";","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final EditPositionDescriptor DESC_DATA_ENGINEER;","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final EditPositionDescriptor DESC_DATA_SCIENTIST;","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"LMAOboxhack"},"content":"    public static final FilterApplicantDescriptor FILTER_DESC_FULL;","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"LMAOboxhack"},"content":"    public static final FilterApplicantDescriptor FILTER_DESC_PARTIAL;","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"Harry-Gao-H"},"content":"        DESC_DATA_ENGINEER \u003d new EditPositionDescriptorBuilder().withTitle(VALID_TITLE_DATAENGINEER)","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"Harry-Gao-H"},"content":"                .withDescription(VALID_DESCRIPTION_DATAENGINEER).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"Harry-Gao-H"},"content":"        DESC_DATA_SCIENTIST \u003d new EditPositionDescriptorBuilder().withTitle(VALID_TITLE_DATASCIENTIST)","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"Harry-Gao-H"},"content":"                .withDescription(VALID_DESCRIPTION_DATASCIENTIST).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"LMAOboxhack"},"content":"        FILTER_DESC_FULL \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"LMAOboxhack"},"content":"                .withPositionTitle(VALID_TITLE_DATASCIENTIST)","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"LMAOboxhack"},"content":"                .withApplicationStatus(ApplicationStatus.PENDING)","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"LMAOboxhack"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"LMAOboxhack"},"content":"        FILTER_DESC_PARTIAL \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"LMAOboxhack"},"content":"                .withPositionTitle(VALID_TITLE_DATASCIENTIST)","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"LMAOboxhack"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"Harry-Gao-H"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"Harry-Gao-H"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":154,"author":{"gitId":"Harry-Gao-H"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"Harry-Gao-H"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-14"},{"lineNumber":156,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":157,"author":{"gitId":"Harry-Gao-H"},"content":"    public static void assertPositionCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2021-10-14"},{"lineNumber":158,"author":{"gitId":"Harry-Gao-H"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2021-10-14"},{"lineNumber":159,"author":{"gitId":"Harry-Gao-H"},"content":"        // only do so by copying its components.","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"Harry-Gao-H"},"content":"        PositionBook expectedPositionBook \u003d new PositionBook(actualModel.getPositionBook());","lastModifiedDate":"2021-10-14"},{"lineNumber":161,"author":{"gitId":"Harry-Gao-H"},"content":"        List\u003cPosition\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPositionList());","lastModifiedDate":"2021-10-14"},{"lineNumber":162,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":163,"author":{"gitId":"Harry-Gao-H"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"Harry-Gao-H"},"content":"        assertEquals(expectedPositionBook, actualModel.getPositionBook());","lastModifiedDate":"2021-10-14"},{"lineNumber":165,"author":{"gitId":"Harry-Gao-H"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPositionList());","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":167,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"Harry-Gao-H"},"content":"     * Updates {@code model}\u0027s filtered list to show only the position at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-14"},{"lineNumber":184,"author":{"gitId":"Harry-Gao-H"},"content":"     * {@code model}\u0027s position book.","lastModifiedDate":"2021-10-14"},{"lineNumber":185,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":186,"author":{"gitId":"Harry-Gao-H"},"content":"    public static void showPositionAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-14"},{"lineNumber":187,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPositionList().size());","lastModifiedDate":"2021-10-14"},{"lineNumber":188,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":189,"author":{"gitId":"Harry-Gao-H"},"content":"        Position position \u003d model.getFilteredPositionList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-14"},{"lineNumber":190,"author":{"gitId":"Harry-Gao-H"},"content":"        final String[] splitName \u003d position.getTitle().fullTitle.split(\"\\\\s+\");","lastModifiedDate":"2021-10-14"},{"lineNumber":191,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":192,"author":{"gitId":"Harry-Gao-H"},"content":"        model.updateFilteredPositionList(new TitleContainsAllKeywordsPredicate(Arrays.asList(splitName)));","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"Harry-Gao-H"},"content":"        assertEquals(1, model.getFilteredPositionList().size());","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":196,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Harry-Gao-H":54,"LMAOboxhack":15,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.TypicalPositions.getTypicalPositionBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"darren2pro":4,"-":106}},{"path":"src/test/java/seedu/address/logic/commands/DeletePositionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_POSITION;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.testutil.TypicalPositions.getTypicalPositionBook;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":" * {@code DeletePositionCommand}.","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"public class DeletePositionCommandTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"    private Model model \u003d new ModelManager(getTypicalPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"        Position positionToDelete \u003d model.getFilteredPositionList().get(INDEX_FIRST_POSITION.getZeroBased());","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"        DeletePositionCommand deletePositionCommand \u003d new DeletePositionCommand(INDEX_FIRST_POSITION);","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"        String expectedMessage \u003d String.format(DeletePositionCommand.MESSAGE_DELETE_POSITION_SUCCESS, positionToDelete);","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"        expectedModel.deletePosition(positionToDelete);","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"        assertCommandSuccess(deletePositionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPositionList().size() + 1);","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"        DeletePositionCommand deletePositionCommand \u003d new DeletePositionCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"        assertCommandFailure(deletePositionCommand, model, Messages.MESSAGE_INVALID_POSITION_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"Harry-Gao-H":46}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.TypicalPositions.getTypicalPositionBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.PositionBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"                new PositionBook(model.getPositionBook()), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"                new PositionBook(model.getPositionBook()), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"                new PositionBook(model.getPositionBook()), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"darren2pro"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"darren2pro"},"content":"                new PositionBook(model.getPositionBook()), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"darren2pro":11,"-":168}},{"path":"src/test/java/seedu/address/logic/commands/EditPositionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_DATA_ENGINEER;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_DATA_SCIENTIST;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_DATASCIENTIST;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_DATASCIENTIST;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPositionAtIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_POSITION;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_POSITION;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.testutil.TypicalPositions.getTypicalPositionBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.descriptors.EditPositionDescriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.PositionBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.testutil.EditPositionDescriptorBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.testutil.PositionBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"public class EditPositionCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"        Position editedPosition \u003d new PositionBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionDescriptor descriptor \u003d new EditPositionDescriptorBuilder(editedPosition).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionCommand editPositionCommand \u003d new EditPositionCommand(INDEX_FIRST_POSITION, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"        String expectedMessage \u003d String.format(EditPositionCommand.MESSAGE_EDIT_POSITION_SUCCESS, editedPosition);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"                new PositionBook(model.getPositionBook()), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"        expectedModel.setPosition(model.getFilteredPositionList().get(0), editedPosition);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"        assertCommandSuccess(editPositionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"        Index indexLastPosition \u003d Index.fromOneBased(model.getFilteredPositionList().size());","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"        Position lastPosition \u003d model.getFilteredPositionList().get(indexLastPosition.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"        PositionBuilder positionInList \u003d new PositionBuilder(lastPosition);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"        Position editedPosition \u003d positionInList.withTitle(VALID_TITLE_DATASCIENTIST)","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"                .withDescription(VALID_DESCRIPTION_DATASCIENTIST).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionDescriptor descriptor \u003d new EditPositionDescriptorBuilder().withTitle(VALID_TITLE_DATASCIENTIST)","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"                .withDescription(VALID_DESCRIPTION_DATASCIENTIST).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionCommand editPositionCommand \u003d new EditPositionCommand(indexLastPosition, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"        String expectedMessage \u003d String.format(EditPositionCommand.MESSAGE_EDIT_POSITION_SUCCESS, editedPosition);","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"Harry-Gao-H"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"                new PositionBook(model.getPositionBook()), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"Harry-Gao-H"},"content":"        expectedModel.setPosition(lastPosition, editedPosition);","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"Harry-Gao-H"},"content":"        assertCommandSuccess(editPositionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"Harry-Gao-H"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionCommand editPositionCommand \u003d new EditPositionCommand(INDEX_FIRST_POSITION,","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"Harry-Gao-H"},"content":"                new EditPositionDescriptor());","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"Harry-Gao-H"},"content":"        Position editedPosition \u003d model.getFilteredPositionList().get(INDEX_FIRST_POSITION.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"Harry-Gao-H"},"content":"        String expectedMessage \u003d String.format(EditPositionCommand.MESSAGE_EDIT_POSITION_SUCCESS, editedPosition);","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"Harry-Gao-H"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"Harry-Gao-H"},"content":"                new PositionBook(model.getPositionBook()), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"Harry-Gao-H"},"content":"        assertCommandSuccess(editPositionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"Harry-Gao-H"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"Harry-Gao-H"},"content":"        showPositionAtIndex(model, INDEX_FIRST_POSITION);","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"Harry-Gao-H"},"content":"        Position positionInFilteredList \u003d model.getFilteredPositionList().get(INDEX_FIRST_POSITION.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"Harry-Gao-H"},"content":"        Position editedPosition \u003d new PositionBuilder(positionInFilteredList)","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"Harry-Gao-H"},"content":"                .withDescription(VALID_TITLE_DATASCIENTIST).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionCommand editPositionCommand \u003d new EditPositionCommand(INDEX_FIRST_POSITION,","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"Harry-Gao-H"},"content":"                new EditPositionDescriptorBuilder().withDescription(VALID_TITLE_DATASCIENTIST).build());","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"Harry-Gao-H"},"content":"        String expectedMessage \u003d String.format(EditPositionCommand.MESSAGE_EDIT_POSITION_SUCCESS, editedPosition);","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"Harry-Gao-H"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"Harry-Gao-H"},"content":"                new PositionBook(model.getPositionBook()), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"Harry-Gao-H"},"content":"        expectedModel.setPosition(model.getFilteredPositionList().get(0), editedPosition);","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"Harry-Gao-H"},"content":"        assertCommandSuccess(editPositionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"Harry-Gao-H"},"content":"    public void execute_duplicatePositionUnfilteredList_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"Harry-Gao-H"},"content":"        Position firstPosition \u003d model.getFilteredPositionList().get(INDEX_FIRST_POSITION.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionDescriptor descriptor \u003d new EditPositionDescriptorBuilder(firstPosition).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionCommand editPositionCommand \u003d new EditPositionCommand(INDEX_SECOND_POSITION, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"Harry-Gao-H"},"content":"        assertCommandFailure(editPositionCommand, model, EditPositionCommand.MESSAGE_DUPLICATE_POSITION);","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"Harry-Gao-H"},"content":"    public void execute_duplicatePositionFilteredList_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"Harry-Gao-H"},"content":"        showPositionAtIndex(model, INDEX_FIRST_POSITION);","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"Harry-Gao-H"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"Harry-Gao-H"},"content":"        Position positionInList \u003d model.getPositionBook().getPositionList().get(INDEX_SECOND_POSITION.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionCommand editPositionCommand \u003d new EditPositionCommand(INDEX_FIRST_POSITION,","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"Harry-Gao-H"},"content":"                new EditPositionDescriptorBuilder(positionInList).build());","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"Harry-Gao-H"},"content":"        assertCommandFailure(editPositionCommand, model, EditPositionCommand.MESSAGE_DUPLICATE_POSITION);","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"Harry-Gao-H"},"content":"    public void execute_invalidPositionIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"Harry-Gao-H"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPositionList().size() + 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionDescriptor descriptor \u003d new EditPositionDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"Harry-Gao-H"},"content":"                .withTitle(VALID_TITLE_DATASCIENTIST).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionCommand editPositionCommand \u003d new EditPositionCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"Harry-Gao-H"},"content":"        assertCommandFailure(editPositionCommand, model, Messages.MESSAGE_INVALID_POSITION_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"Harry-Gao-H"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"Harry-Gao-H"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"Harry-Gao-H"},"content":"    public void execute_invalidPositionIndexFilteredList_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"Harry-Gao-H"},"content":"        showPositionAtIndex(model, INDEX_FIRST_POSITION);","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"Harry-Gao-H"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_POSITION;","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"Harry-Gao-H"},"content":"        // ensures that outOfBoundIndex is still in bounds of position book list","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPositionBook().getPositionList().size());","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionCommand editPositionCommand \u003d new EditPositionCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"Harry-Gao-H"},"content":"                new EditPositionDescriptorBuilder().withTitle(VALID_TITLE_DATASCIENTIST).build());","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"Harry-Gao-H"},"content":"        assertCommandFailure(editPositionCommand, model, Messages.MESSAGE_INVALID_POSITION_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"Harry-Gao-H"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"Harry-Gao-H"},"content":"        final EditPositionCommand standardCommand \u003d new EditPositionCommand(INDEX_FIRST_POSITION, DESC_DATA_ENGINEER);","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"Harry-Gao-H"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionDescriptor copyDescriptor \u003d new EditPositionDescriptor(DESC_DATA_ENGINEER);","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionCommand commandWithSameValues \u003d new EditPositionCommand(INDEX_FIRST_POSITION, copyDescriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"Harry-Gao-H"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"Harry-Gao-H"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"Harry-Gao-H"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"Harry-Gao-H"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(standardCommand.equals(new EditPositionCommand(INDEX_SECOND_POSITION, DESC_DATA_ENGINEER)));","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"Harry-Gao-H"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(standardCommand.equals(new EditPositionCommand(INDEX_FIRST_POSITION, DESC_DATA_SCIENTIST)));","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Harry-Gao-H":179}},{"path":"src/test/java/seedu/address/logic/commands/FilterApplicantCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FILTER_DESC_FULL;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FILTER_DESC_PARTIAL;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FILTER_TITLE_DATAMINER;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_DATAENGINEER;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_DATASCIENTIST;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPLICANTS;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.model.applicant.Application.ApplicationStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.testutil.TypicalApplicants.getTypicalApplicantBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.testutil.TypicalPositions.DATAENGINEER;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.testutil.TypicalPositions.DATASCIENTIST;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.testutil.TypicalPositions.getTypicalPositionBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.descriptors.FilterApplicantDescriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.PositionBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.testutil.FilterApplicantDescriptorBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":" * Contains integration tests (interaction with the Model) and unit tests for FilterApplicantCommand.","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"public class FilterApplicantCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"    private Model model \u003d new ModelManager(","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"            getTypicalAddressBook(), getTypicalApplicantBook(), getTypicalPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"    public void execute_allFiltersSpecified_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"        FilterApplicantDescriptor descriptor \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"                .withPositionTitle(VALID_TITLE_DATASCIENTIST)","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"                .withApplicationStatus(ApplicationStatus.PENDING)","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"        FilterApplicantCommand filterApplicantCommand \u003d new FilterApplicantCommand(descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"        String expectedMessage \u003d String.format(FilterApplicantCommand.MESSAGE_SUCCESS, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"                new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"LMAOboxhack"},"content":"                new PositionBook(model.getPositionBook()),","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"LMAOboxhack"},"content":"                new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"LMAOboxhack"},"content":"        expectedModel.updateFilteredApplicantList(applicant -\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"LMAOboxhack"},"content":"                applicant.getApplication().getStatus().equals(ApplicationStatus.PENDING)","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 applicant.getApplication().getPosition().equals(DATASCIENTIST));","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"LMAOboxhack"},"content":"        assertCommandSuccess(filterApplicantCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"LMAOboxhack"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"LMAOboxhack"},"content":"    public void execute_someFiltersSpecified_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"LMAOboxhack"},"content":"        FilterApplicantDescriptor descriptor \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"LMAOboxhack"},"content":"                .withPositionTitle(VALID_TITLE_DATAENGINEER)","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"LMAOboxhack"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"LMAOboxhack"},"content":"        FilterApplicantCommand filterApplicantCommand \u003d new FilterApplicantCommand(descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"LMAOboxhack"},"content":"        String expectedMessage \u003d String.format(FilterApplicantCommand.MESSAGE_SUCCESS, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"LMAOboxhack"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"LMAOboxhack"},"content":"                new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"LMAOboxhack"},"content":"                new PositionBook(model.getPositionBook()),","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"LMAOboxhack"},"content":"                new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"LMAOboxhack"},"content":"        expectedModel.updateFilteredApplicantList(applicant -\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"LMAOboxhack"},"content":"                applicant.getApplication().getPosition().equals(DATAENGINEER));","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"LMAOboxhack"},"content":"        assertCommandSuccess(filterApplicantCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"LMAOboxhack"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"LMAOboxhack"},"content":"    public void execute_noFiltersSpecified_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"LMAOboxhack"},"content":"        FilterApplicantDescriptor descriptor \u003d new FilterApplicantDescriptorBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"LMAOboxhack"},"content":"        FilterApplicantCommand filterApplicantCommand \u003d new FilterApplicantCommand(descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"LMAOboxhack"},"content":"        String expectedMessage \u003d String.format(FilterApplicantCommand.MESSAGE_SUCCESS, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"LMAOboxhack"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"LMAOboxhack"},"content":"                new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"LMAOboxhack"},"content":"                new PositionBook(model.getPositionBook()),","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"LMAOboxhack"},"content":"                new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"LMAOboxhack"},"content":"        expectedModel.updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"LMAOboxhack"},"content":"        assertCommandSuccess(filterApplicantCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"LMAOboxhack"},"content":"     * Invalid filters are those which do not exist in MrTechRecruiter.","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"LMAOboxhack"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"LMAOboxhack"},"content":"    public void execute_invalidFiltersSpecified_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"LMAOboxhack"},"content":"        FilterApplicantDescriptor descriptor \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"LMAOboxhack"},"content":"                .withPositionTitle(INVALID_FILTER_TITLE_DATAMINER)","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"LMAOboxhack"},"content":"                .withApplicationStatus(ApplicationStatus.PENDING)","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"LMAOboxhack"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"LMAOboxhack"},"content":"        FilterApplicantDescriptor invalidFilterDescriptor \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"LMAOboxhack"},"content":"                .withPositionTitle(INVALID_FILTER_TITLE_DATAMINER)","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"LMAOboxhack"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"LMAOboxhack"},"content":"        FilterApplicantCommand filterApplicantCommand \u003d new FilterApplicantCommand(descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"LMAOboxhack"},"content":"        String expectedMessage \u003d String.format(FilterApplicantCommand.MESSAGE_INVALID_FILTER, invalidFilterDescriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"LMAOboxhack"},"content":"        assertCommandFailure(filterApplicantCommand, model, expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"LMAOboxhack"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"LMAOboxhack"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"LMAOboxhack"},"content":"        final FilterApplicantCommand standardCommand \u003d new FilterApplicantCommand(FILTER_DESC_FULL);","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"LMAOboxhack"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"LMAOboxhack"},"content":"        FilterApplicantDescriptor descriptor \u003d new FilterApplicantDescriptor(FILTER_DESC_FULL);","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"LMAOboxhack"},"content":"        FilterApplicantCommand commandWithSameValues \u003d new FilterApplicantCommand(descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"LMAOboxhack"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"LMAOboxhack"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"LMAOboxhack"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"LMAOboxhack"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"LMAOboxhack"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"LMAOboxhack"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"LMAOboxhack"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"LMAOboxhack"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"LMAOboxhack"},"content":"        assertNotEquals(standardCommand, new FilterApplicantCommand(FILTER_DESC_PARTIAL));","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"LMAOboxhack":135}},{"path":"src/test/java/seedu/address/logic/commands/FilterApplicantDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FILTER_DESC_FULL;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FILTER_DESC_PARTIAL;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_DATAENGINEER;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.model.applicant.Application.ApplicationStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.descriptors.FilterApplicantDescriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.testutil.FilterApplicantDescriptorBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"public class FilterApplicantDescriptorTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"        FilterApplicantDescriptor descriptorWithSameValues \u003d new FilterApplicantDescriptor(FILTER_DESC_FULL);","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"        assertEquals(FILTER_DESC_FULL, descriptorWithSameValues);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"        assertEquals(FILTER_DESC_FULL, FILTER_DESC_FULL);","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"        assertNotEquals(null, FILTER_DESC_FULL);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"        assertNotEquals(9, FILTER_DESC_FULL);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"        assertNotEquals(FILTER_DESC_FULL, FILTER_DESC_PARTIAL);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"        // different position title -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"        FilterApplicantDescriptor editedDescriptor \u003d new FilterApplicantDescriptorBuilder(FILTER_DESC_FULL)","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"                .withPositionTitle(VALID_TITLE_DATAENGINEER)","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"        assertNotEquals(FILTER_DESC_FULL, editedDescriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"        // different application status -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"        editedDescriptor \u003d new FilterApplicantDescriptorBuilder(FILTER_DESC_FULL)","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"                .withApplicationStatus(ApplicationStatus.ACCEPTED)","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"        assertNotEquals(FILTER_DESC_FULL, editedDescriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"LMAOboxhack":48}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.TypicalPositions.getTypicalPositionBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"darren2pro":3,"-":81}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.TypicalPositions.getTypicalPositionBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), getTypicalPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"darren2pro":3,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/ListPositionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPositionAtIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_POSITION;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.testutil.TypicalPositions.getTypicalPositionBook;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListPositionCommand.","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"public class ListPositionCommandTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"    private Model model;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"        model \u003d new ModelManager(getTypicalPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"        expectedModel \u003d new ModelManager(model.getPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"        assertCommandSuccess(new ListPositionCommand(), model, ListPositionCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"        showPositionAtIndex(model, INDEX_FIRST_POSITION);","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"Harry-Gao-H":42}},{"path":"src/test/java/seedu/address/logic/commands/RejectionRateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"import static seedu.address.logic.commands.RejectionRateCommand.MESSAGE_NO_CURRENT_APPLICANTS;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"import static seedu.address.logic.commands.RejectionRateCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"import static seedu.address.model.applicant.Application.ApplicationStatus.REJECTED;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"import static seedu.address.testutil.TypicalApplicants.getTypicalApplicantBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"import static seedu.address.testutil.TypicalPositions.DATASCIENTIST;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"import static seedu.address.testutil.TypicalPositions.getTypicalPositionBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"import seedu.address.testutil.PositionBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code RejectionRateCommand}.","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"BenjaminTan99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"public class RejectionRateCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"    private final ModelManager model \u003d new ModelManager(getTypicalAddressBook(), getTypicalApplicantBook(),","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"BenjaminTan99"},"content":"            getTypicalPositionBook(), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"    private final Position position \u003d new PositionBuilder().build();","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"BenjaminTan99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"BenjaminTan99"},"content":"    public void constructor_nullPosition_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new RejectionRateCommand(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"BenjaminTan99"},"content":"    public void execute_nonExistingPosition_throwsCommandException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"BenjaminTan99"},"content":"        assertThrows(CommandException.class, () -\u003e new RejectionRateCommand(new Title(\"Impossible\")).execute(model));","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"BenjaminTan99"},"content":"    public void execute_existingPositionWithoutApplicant_successful() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"BenjaminTan99"},"content":"        model.addPosition(position);","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"BenjaminTan99"},"content":"        assertEquals(new CommandResult(MESSAGE_NO_CURRENT_APPLICANTS),","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"BenjaminTan99"},"content":"                new RejectionRateCommand(position.getTitle()).execute(model));","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"BenjaminTan99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"    public void execute_existingPositionWithExistingApplicant_successful() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"        Applicant applicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"        model.addPosition(position);","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"BenjaminTan99"},"content":"        model.addApplicant(applicant);","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"BenjaminTan99"},"content":"        CommandResult commandResult \u003d new RejectionRateCommand(position.getTitle()).execute(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"BenjaminTan99"},"content":"        float rejectionRate \u003d model.calculateRejectionRate(position.getTitle()); // 0%","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"BenjaminTan99"},"content":"        assertEquals(String.format(MESSAGE_SUCCESS, position.getTitle(), rejectionRate),","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"BenjaminTan99"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"BenjaminTan99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"BenjaminTan99"},"content":"    public void execute_changeRejectionRateAfterUpdatingApplicant_successful() {","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"BenjaminTan99"},"content":"        Applicant applicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"        model.addApplicant(applicant);","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"BenjaminTan99"},"content":"        model.addPosition(position);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"BenjaminTan99"},"content":"        float initialRejectionRate \u003d model.calculateRejectionRate(position.getTitle()); // currently 0.0%","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"BenjaminTan99"},"content":"        Applicant newApplicant \u003d applicant.markAs(REJECTED);","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"BenjaminTan99"},"content":"        model.setApplicant(applicant, newApplicant);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"BenjaminTan99"},"content":"        float newRejectionRate \u003d model.calculateRejectionRate(position.getTitle()); // now 12.5%","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"BenjaminTan99"},"content":"        assertNotEquals(initialRejectionRate, newRejectionRate);","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"BenjaminTan99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"BenjaminTan99"},"content":"    public void execute_changeRejectionRateAfterAddingMoreApplicants_successful() {","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"BenjaminTan99"},"content":"        // Create Amy and set status to REJECTED","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"BenjaminTan99"},"content":"        Applicant applicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"BenjaminTan99"},"content":"        model.addApplicant(applicant);","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"BenjaminTan99"},"content":"        model.addPosition(position);","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"BenjaminTan99"},"content":"        Applicant newApplicant \u003d applicant.markAs(REJECTED);","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"BenjaminTan99"},"content":"        model.setApplicant(applicant, newApplicant);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"BenjaminTan99"},"content":"        float initialRejectionRate \u003d model.calculateRejectionRate(position.getTitle()); // 12.5","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"BenjaminTan99"},"content":"        // Create Alice","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"BenjaminTan99"},"content":"        Applicant otherApplicant \u003d new ApplicantBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"BenjaminTan99"},"content":"        model.addApplicant(otherApplicant);","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"BenjaminTan99"},"content":"        float newRejectionRate \u003d model.calculateRejectionRate(position.getTitle()); // 11.1%","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"BenjaminTan99"},"content":"        assertNotEquals(initialRejectionRate, newRejectionRate);","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"BenjaminTan99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"BenjaminTan99"},"content":"    public void execute_changeRejectionRateAfterDeletingApplicants_successful() {","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"BenjaminTan99"},"content":"        // Create Amy and set status to REJECTED","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"BenjaminTan99"},"content":"        model.addPosition(position);","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"BenjaminTan99"},"content":"        Applicant applicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"BenjaminTan99"},"content":"        model.addApplicant(applicant);","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"BenjaminTan99"},"content":"        Applicant newApplicant \u003d applicant.markAs(REJECTED);","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"BenjaminTan99"},"content":"        // Create Alice","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"BenjaminTan99"},"content":"        Applicant otherApplicant \u003d new ApplicantBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"BenjaminTan99"},"content":"        model.setApplicant(applicant, newApplicant);","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"BenjaminTan99"},"content":"        model.addApplicant(otherApplicant);","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"BenjaminTan99"},"content":"        float initialRejectionRate \u003d model.calculateRejectionRate(position.getTitle()); // 11.1%","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"BenjaminTan99"},"content":"        model.deleteApplicant(newApplicant);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"BenjaminTan99"},"content":"        float newRejectionRate \u003d model.calculateRejectionRate(position.getTitle()); // 0%","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"BenjaminTan99"},"content":"        assertNotEquals(initialRejectionRate, newRejectionRate);","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"BenjaminTan99"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"BenjaminTan99"},"content":"    public void equals() {","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"BenjaminTan99"},"content":"        final RejectionRateCommand standardCommand \u003d new RejectionRateCommand(position.getTitle());","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"BenjaminTan99"},"content":"        Position otherPosition \u003d DATASCIENTIST;","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"BenjaminTan99"},"content":"        RejectionRateCommand sameCommand \u003d new RejectionRateCommand(position.getTitle());","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"BenjaminTan99"},"content":"        RejectionRateCommand otherCommand \u003d new RejectionRateCommand(DATASCIENTIST.getTitle());","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"BenjaminTan99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"BenjaminTan99"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"BenjaminTan99"},"content":"        // duplicate command -\u003e returns True","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"BenjaminTan99"},"content":"        assertEquals(standardCommand, sameCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"BenjaminTan99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"BenjaminTan99"},"content":"        assertFalse(standardCommand.equals(1));","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"BenjaminTan99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"BenjaminTan99"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"BenjaminTan99"},"content":"        // different position -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"BenjaminTan99"},"content":"        assertFalse(standardCommand.equals(otherCommand));","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"BenjaminTan99"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"BenjaminTan99":159}},{"path":"src/test/java/seedu/address/logic/descriptors/EditPositionDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.descriptors;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_DATA_ENGINEER;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_DATA_SCIENTIST;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_DATASCIENTIST;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_DATASCIENTIST;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.testutil.EditPositionDescriptorBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"public class EditPositionDescriptorTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionDescriptor descriptorWithSameValues \u003d new EditPositionDescriptor(DESC_DATA_ENGINEER);","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(DESC_DATA_ENGINEER.equals(descriptorWithSameValues));","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(DESC_DATA_ENGINEER.equals(DESC_DATA_ENGINEER));","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(DESC_DATA_ENGINEER.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(DESC_DATA_ENGINEER.equals(5));","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(DESC_DATA_ENGINEER.equals(DESC_DATA_SCIENTIST));","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"        // different title -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"        EditPositionDescriptor editedDataEngineer \u003d new EditPositionDescriptorBuilder(DESC_DATA_ENGINEER)","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"                .withTitle(VALID_TITLE_DATASCIENTIST).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(DESC_DATA_ENGINEER.equals(editedDataEngineer));","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"        // different title -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"        editedDataEngineer \u003d new EditPositionDescriptorBuilder(DESC_DATA_ENGINEER)","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"                .withDescription(VALID_DESCRIPTION_DATASCIENTIST).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(DESC_DATA_ENGINEER.equals(editedDataEngineer));","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Harry-Gao-H":46}},{"path":"src/test/java/seedu/address/logic/parser/MrTechRecruiterParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"public class MrTechRecruiterParserTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"    private final MrTechRecruiterParser parser \u003d new MrTechRecruiterParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"LMAOboxhack":2,"-":99}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.TypicalPositions.DATAENGINEER;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.TypicalPositions.DATASCIENTIST;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"import seedu.address.testutil.PositionBookBuilder;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"        PositionBook positionBook \u003d new PositionBookBuilder().withPosition(DATAENGINEER)","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"                .withPosition(DATASCIENTIST).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"        modelManager \u003d new ModelManager(addressBook, positionBook, userPrefs);","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, positionBook, userPrefs);","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"darren2pro":7,"-":130}},{"path":"src/test/java/seedu/address/model/applicant/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"public class AddressTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e new seedu.address.model.applicant.Address(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new seedu.address.model.applicant.Address(invalidAddress));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    public void isValidAddress() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"        // null address","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e seedu.address.model.applicant.Address.isValidAddress(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        // invalid addresses","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        // valid addresses","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San \"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"                + \"Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":37}},{"path":"src/test/java/seedu/address/model/applicant/ApplicantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.TypicalApplicants.BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"public class ApplicantTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    public void isSameApplicant() {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"        assertTrue(ALICE.isSameApplicant(ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.isSameApplicant(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        assertTrue(ALICE.isSameApplicant(editedAlice));","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.isSameApplicant(editedAlice));","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        Applicant editedBob \u003d new ApplicantBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        assertFalse(BOB.isSameApplicant(editedBob));","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"        editedBob \u003d new ApplicantBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        assertFalse(BOB.isSameApplicant(editedBob));","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"    public void equals() {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"        Applicant aliceCopy \u003d new ApplicantBuilder(ALICE).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":81}},{"path":"src/test/java/seedu/address/model/applicant/ApplicationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.model.applicant.Application.ApplicationStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.testutil.TypicalApplications.DATAENGINEER_APPLICATION;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.testutil.TypicalApplications.DATASCIENTIST_APPLICATION;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.testutil.TypicalPositions.DATAENGINEER;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.testutil.ApplicationBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.testutil.PositionBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"public class ApplicationTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"    public void constructor_onlyPositionNull_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Application(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"    public void constructor_positionNull_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"                new Application(null, ApplicationStatus.PENDING));","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"    public void constructor_statusNull_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"                new Application(new PositionBuilder().build(), null));","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"    public void constructor_positionAndStatusNull_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Application(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"        Application dataScientistApplicationCopy \u003d new ApplicationBuilder(DATASCIENTIST_APPLICATION).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"        assertEquals(DATASCIENTIST_APPLICATION, dataScientistApplicationCopy);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"        assertEquals(DATASCIENTIST_APPLICATION, DATASCIENTIST_APPLICATION);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"        assertNotEquals(null, DATASCIENTIST_APPLICATION);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"LMAOboxhack"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"LMAOboxhack"},"content":"        assertNotEquals(7, DATASCIENTIST_APPLICATION);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"LMAOboxhack"},"content":"        // different application -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"LMAOboxhack"},"content":"        assertNotEquals(DATASCIENTIST_APPLICATION, DATAENGINEER_APPLICATION);","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"LMAOboxhack"},"content":"        // different position -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"LMAOboxhack"},"content":"        Application editedDataScientistApplication \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"LMAOboxhack"},"content":"                new ApplicationBuilder(DATASCIENTIST_APPLICATION).withPosition(DATAENGINEER).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"LMAOboxhack"},"content":"        assertNotEquals(DATASCIENTIST_APPLICATION, editedDataScientistApplication);","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"LMAOboxhack"},"content":"        // different application status -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"LMAOboxhack"},"content":"        editedDataScientistApplication \u003d new ApplicationBuilder(DATASCIENTIST_APPLICATION)","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"LMAOboxhack"},"content":"                .withApplicationStatus(ApplicationStatus.ACCEPTED)","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"LMAOboxhack"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"LMAOboxhack"},"content":"        assertNotEquals(DATASCIENTIST_APPLICATION, editedDataScientistApplication);","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"LMAOboxhack":69}},{"path":"src/test/java/seedu/address/model/applicant/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"public class EmailTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e new seedu.address.model.applicant.Email(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new seedu.address.model.applicant.Email(invalidEmail));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    public void isValidEmail() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"        // null email","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e seedu.address.model.applicant.Email.isValidEmail(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        // blank email","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        // missing parts","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"                \"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        // invalid parts","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@-\")); // invalid domain name","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"                \"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"                \" peterjack@example.com\")); // leading space","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@example.com \")); // trailing space","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"                \"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"                \"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"                \"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"                \"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"        // valid email","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"                \"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"                \"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"                \"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"                \"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"                \"a@bc\")); // minimal","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"                \"test@localhost\")); // alphabets only","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"                \"123@145\")); // numeric local part and domain name","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"                \"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"                \"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"                \"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":97}},{"path":"src/test/java/seedu/address/model/applicant/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"public class NameTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    public void isValidName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"        // null name","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"        // invalid name","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        // valid name","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":40}},{"path":"src/test/java/seedu/address/model/applicant/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"public class PhoneTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e new seedu.address.model.applicant.Phone(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new seedu.address.model.applicant.Phone(invalidPhone));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    public void isValidPhone() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"        // null phone number","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e seedu.address.model.applicant.Phone.isValidPhone(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        // invalid phone numbers","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"        // valid phone numbers","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":41}},{"path":"src/test/java/seedu/address/model/applicant/UniqueApplicantListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.TypicalApplicants.BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.exceptions.ApplicantNotFoundException;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.exceptions.DuplicateApplicantException;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"public class UniqueApplicantListTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    private final UniqueApplicantList uniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    public void contains_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.contains(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    public void contains_applicantNotInList_returnsFalse() {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        assertFalse(uniqueApplicantList.contains(ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    public void contains_applicantInList_returnsTrue() {","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        assertTrue(uniqueApplicantList.contains(ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"    public void contains_applicantWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"        assertTrue(uniqueApplicantList.contains(editedAlice));","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"    public void add_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.add(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"    public void add_duplicateApplicant_throwsDuplicateApplicantException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"        assertThrows(DuplicateApplicantException.class, () -\u003e uniqueApplicantList.add(ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant_nullTargetApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicant(null, ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant_nullEditedApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicant(ALICE, null));","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant_targetApplicantNotInList_throwsApplicantNotFoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"        assertThrows(ApplicantNotFoundException.class, () -\u003e uniqueApplicantList.setApplicant(ALICE, ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant_editedApplicantIsSameApplicant_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.setApplicant(ALICE, ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"        expectedUniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant_editedApplicantHasSameIdentity_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.setApplicant(ALICE, editedAlice);","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"        expectedUniqueApplicantList.add(editedAlice);","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant_editedApplicantHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.setApplicant(ALICE, BOB);","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"darren2pro"},"content":"        expectedUniqueApplicantList.add(BOB);","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"darren2pro"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant_editedApplicantHasNonUniqueIdentity_throwsDuplicateApplicantException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(BOB);","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"        assertThrows(DuplicateApplicantException.class, () -\u003e uniqueApplicantList.setApplicant(ALICE, BOB));","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"    public void remove_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.remove(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"darren2pro"},"content":"    public void remove_applicantDoesNotExist_throwsApplicantNotFoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"darren2pro"},"content":"        assertThrows(ApplicantNotFoundException.class, () -\u003e uniqueApplicantList.remove(ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"darren2pro"},"content":"    public void remove_existingApplicant_removesApplicant() {","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.remove(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"darren2pro"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"darren2pro"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"darren2pro"},"content":"    public void setApplicants_nullUniqueApplicantList_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicants((UniqueApplicantList) null));","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"darren2pro"},"content":"    public void setApplicants_uniqueApplicantList_replacesOwnListWithProvidedUniqueApplicantList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"darren2pro"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"darren2pro"},"content":"        expectedUniqueApplicantList.add(BOB);","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.setApplicants(expectedUniqueApplicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"darren2pro"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"darren2pro"},"content":"    public void setApplicants_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicants((List\u003cApplicant\u003e) null));","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"darren2pro"},"content":"    public void setApplicants_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"darren2pro"},"content":"        List\u003cApplicant\u003e applicantList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.setApplicants(applicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"darren2pro"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"darren2pro"},"content":"        expectedUniqueApplicantList.add(BOB);","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"darren2pro"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"darren2pro"},"content":"    public void setApplicants_listWithDuplicateApplicants_throwsDuplicateApplicantException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"darren2pro"},"content":"        List\u003cApplicant\u003e listWithDuplicateApplicants \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"darren2pro"},"content":"        assertThrows(DuplicateApplicantException.class, () -\u003e uniqueApplicantList","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"darren2pro"},"content":"                .setApplicants(listWithDuplicateApplicants));","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"darren2pro"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"darren2pro"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"darren2pro"},"content":"            -\u003e uniqueApplicantList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":168,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":169}},{"path":"src/test/java/seedu/address/model/position/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.model.position;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"public class DescriptionTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"    public void isValidDescription() {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"        // null address","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"        // invalid addresses","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"        // valid addresses","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(Description.isValidDescription(\"Install and upgrade antivirus software Travel to client sites\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(Description.isValidDescription(\"-\")); // one character","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(Description.isValidDescription(\"Perform tests on new hardware and software.\"","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"                + \"Troubleshoot hardware and software issues\")); // long address","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Harry-Gao-H":38}},{"path":"src/test/java/seedu/address/model/position/PositionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.model.position;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"public class PositionTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"    public void isSamePosition() {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Harry-Gao-H":47}},{"path":"src/test/java/seedu/address/model/position/TitleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.model.position;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"public class TitleTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Title(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Title(invalidName));","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"    public void isValidTitle() {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"        // null name","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"        assertThrows(NullPointerException.class, () -\u003e Title.isValidTitle(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"        // invalid name","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(Title.isValidTitle(\"\")); // empty string","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(Title.isValidTitle(\" \")); // spaces only","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(Title.isValidTitle(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"        assertFalse(Title.isValidTitle(\"soft*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"        // valid name","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(Title.isValidTitle(\"software engineering\")); // alphabets only","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(Title.isValidTitle(\"12345\")); // numbers only","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(Title.isValidTitle(\"gamer\")); // alphanumeric characters","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(Title.isValidTitle(\"product Manager\")); // with capital letters","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"        assertTrue(Title.isValidTitle(\"product manager for data team\")); // long title","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Harry-Gao-H":42}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":105,"BenjaminTan99":9}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"import seedu.address.storage.applicant.JsonApplicantBookStorage;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"import seedu.address.storage.position.JsonPositionBookStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        JsonPositionBookStorage positionBookStorage \u003d new JsonPositionBookStorage(","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"                getTempFilePath(\"pb\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"        JsonApplicantBookStorage applicantBookStorage \u003d new JsonApplicantBookStorage(","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"                getTempFilePath(\"applicantb\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, applicantBookStorage,","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"                positionBookStorage);","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"darren2pro":8,"-":67}},{"path":"src/test/java/seedu/address/testutil/ApplicantBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"public class ApplicantBuilder {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final Position DEFAULT_POSITION \u003d new PositionBuilder().build();","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    private Name name;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    private Phone phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    private Email email;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    private Address address;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"    private Position position;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"     * Creates a {@code ApplicantBuilder} with the default details.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"    public ApplicantBuilder() {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"BenjaminTan99"},"content":"        position \u003d DEFAULT_POSITION;","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"     * Initializes the ApplicantBuilder with the data of {@code applicantToCopy}.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"    public ApplicantBuilder(Applicant applicantToCopy) {","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"        name \u003d applicantToCopy.getName();","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"        phone \u003d applicantToCopy.getPhone();","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"        email \u003d applicantToCopy.getEmail();","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        address \u003d applicantToCopy.getAddress();","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"        position \u003d applicantToCopy.getApplication().getPosition();","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"     * Sets the {@code Name} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"    public ApplicantBuilder withName(String name) {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"     * Sets the {@code Address} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"    public ApplicantBuilder withAddress(String address) {","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"     * Sets the {@code Phone} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"    public ApplicantBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"     * Sets the {@code Email} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"    public ApplicantBuilder withEmail(String email) {","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"Harry-Gao-H"},"content":"     * Sets the {@code Position} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"Harry-Gao-H"},"content":"    public ApplicantBuilder withPosition(Position position) {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"Harry-Gao-H"},"content":"        this.position \u003d position;","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"Harry-Gao-H"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"    public Applicant build() {","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"        return new Applicant(name, phone, email, address, position);","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Harry-Gao-H":12,"darren2pro":76,"BenjaminTan99":1}},{"path":"src/test/java/seedu/address/testutil/ApplicationBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Application;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Application.ApplicationStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"public class ApplicationBuilder {","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"    private Position position;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"    private ApplicationStatus applicationStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"     * Creates a {@code ApplicationBuilder} with the default details.","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"    public ApplicationBuilder() {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"        position \u003d new PositionBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"        applicationStatus \u003d ApplicationStatus.PENDING;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"     * Initializes the ApplicationBuilder with the data of {@code applicationToCopy}.","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"    public ApplicationBuilder(Application applicationToCopy) {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"        position \u003d applicationToCopy.getPosition();","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"        applicationStatus \u003d applicationToCopy.getStatus();","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"     * Sets the {@code position} of the {@code Application} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"    public ApplicationBuilder withPosition(Position position) {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"        this.position \u003d position;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"     * Sets the {@code ApplicationStatus} of the {@code Application} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"    public ApplicationBuilder withApplicationStatus(ApplicationStatus applicationStatus) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"        this.applicationStatus \u003d applicationStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"    public Application build() {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"        return new Application(position, applicationStatus);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"LMAOboxhack":47}},{"path":"src/test/java/seedu/address/testutil/EditPositionDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.descriptors.EditPositionDescriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Description;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"public class EditPositionDescriptorBuilder {","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"    private EditPositionDescriptor descriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"    public EditPositionDescriptorBuilder() {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"        descriptor \u003d new EditPositionDescriptor();","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    public EditPositionDescriptorBuilder(EditPositionDescriptor descriptor) {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"        this.descriptor \u003d new EditPositionDescriptor(descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns an {@code EditPositionDescriptor} with fields containing {@code position}\u0027s details","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"    public EditPositionDescriptorBuilder(Position position) {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"        descriptor \u003d new EditPositionDescriptor();","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"        descriptor.setTitle(position.getTitle());","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"        descriptor.setDescription(position.getDescription());","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"     * Sets the {@code Title} of the {@code EditPositionDescriptor} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"    public EditPositionDescriptorBuilder withTitle(String title) {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"        descriptor.setTitle(new Title(title));","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"     * Sets the {@code Description} of the {@code EditPositionDescriptor} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"    public EditPositionDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"    public EditPositionDescriptor build() {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"        return descriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Harry-Gao-H":49}},{"path":"src/test/java/seedu/address/testutil/FilterApplicantDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.model.applicant.Application.ApplicationStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.descriptors.FilterApplicantDescriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":" * A utility class to help with building FilterApplicantDescriptor objects.","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"public class FilterApplicantDescriptorBuilder {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"    private FilterApplicantDescriptor descriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"    public FilterApplicantDescriptorBuilder() {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"        descriptor \u003d new FilterApplicantDescriptor();","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"    public FilterApplicantDescriptorBuilder(FilterApplicantDescriptor descriptor) {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"        this.descriptor \u003d new FilterApplicantDescriptor(descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"     * Sets the position {@code Title} of the {@code FilterApplicantDescriptor} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"    public FilterApplicantDescriptorBuilder withPositionTitle(String title) {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"        descriptor.setPositionTitle(new Title(title));","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"     * Sets the {@code ApplicationStatus} of the {@code FilterApplicantDescriptor} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"    public FilterApplicantDescriptorBuilder withApplicationStatus(ApplicationStatus applicationStatus) {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"        descriptor.setApplicationStatus(applicationStatus);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"    public FilterApplicantDescriptor build() {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"        return descriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"LMAOboxhack":42}},{"path":"src/test/java/seedu/address/testutil/PositionBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.PositionBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":" * A utility class to help with building PositionBook objects.","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":" *     {@code PositionBook pb \u003d new PositionBookBuilder().withPosition(DATAENGINEER).build();}","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"public class PositionBookBuilder {","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    private PositionBook positionBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    public PositionBookBuilder() {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"        positionBook \u003d new PositionBook();","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    public PositionBookBuilder(PositionBook positionBook) {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"        this.positionBook \u003d positionBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"     * Adds a new {@code Position} to the {@code PositionBook} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    public PositionBookBuilder withPosition(Position position) {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        positionBook.addPosition(position);","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    public PositionBook build() {","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        return positionBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"darren2pro":35}},{"path":"src/test/java/seedu/address/testutil/PositionBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Description;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":" * A utility class to help with building Position objects.","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"public class PositionBuilder {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"    public static final String DEFAULT_TITLE \u003d \"Software Engineer\";","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"code every day\";","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    private Title title;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"    private Description description;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"    public PositionBuilder() {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"        title \u003d new Title(DEFAULT_TITLE);","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"     * Initializes the PositionBuilder with the data of {@code positionToCopy}.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"    public PositionBuilder(Position positionToCopy) {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"        title \u003d positionToCopy.getTitle();","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"        description \u003d positionToCopy.getDescription();","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"     * Sets the {@code Title} of the {@code Position} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"    public PositionBuilder withTitle(String title) {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"        this.title \u003d new Title(title);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"     * Sets the {@code Description} of the {@code Position} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"    public PositionBuilder withDescription(String description) {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"    public Position build() {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"        return new Position(title, description);","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"BenjaminTan99"},"content":"    public Title getTitle() {","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"BenjaminTan99"},"content":"        return title;","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"BenjaminTan99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Harry-Gao-H":52,"BenjaminTan99":4}},{"path":"src/test/java/seedu/address/testutil/TypicalApplicants.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.testutil.TypicalPositions.DATAENGINEER;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.testutil.TypicalPositions.DATASCIENTIST;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.testutil.TypicalPositions.SOFTWAREARCHITECT;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ApplicantBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"public class TypicalApplicants {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant ALICE \u003d new ApplicantBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"            .withPhone(\"94351253\").withPosition(DATASCIENTIST).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant BENSON \u003d new ApplicantBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withPosition(SOFTWAREARCHITECT)","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"            .build();","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant CARL \u003d new ApplicantBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withPosition(DATASCIENTIST).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant DANIEL \u003d new ApplicantBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withPosition(DATAENGINEER).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant ELLE \u003d new ApplicantBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withPosition(SOFTWAREARCHITECT).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant FIONA \u003d new ApplicantBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withPosition(DATASCIENTIST).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant GEORGE \u003d new ApplicantBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withPosition(DATAENGINEER).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"    // Manually added","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant HOON \u003d new ApplicantBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withPosition(DATAENGINEER).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant IDA \u003d new ApplicantBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withPosition(DATAENGINEER).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"    // Manually added - Applicant\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant AMY \u003d new ApplicantBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withPosition(DATASCIENTIST).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant BOB \u003d new ApplicantBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withPosition(SOFTWAREARCHITECT)","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"            .build();","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"    private TypicalApplicants() {} // prevents instantiation","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"    public static ApplicantBook getTypicalApplicantBook() {","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"        ApplicantBook ab \u003d new ApplicantBook();","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"        for (Applicant applicant : getTypicalApplicants()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"            ab.addApplicant(applicant);","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"        return ab;","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"    public static List\u003cApplicant\u003e getTypicalApplicants() {","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Harry-Gao-H":14,"darren2pro":59}},{"path":"src/test/java/seedu/address/testutil/TypicalApplications.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.testutil.TypicalPositions.DATAENGINEER;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.testutil.TypicalPositions.DATASCIENTIST;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Application;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"public class TypicalApplications {","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"    public static final Application DATAENGINEER_APPLICATION \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"            new ApplicationBuilder().withPosition(DATAENGINEER).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"    public static final Application DATASCIENTIST_APPLICATION \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"            new ApplicationBuilder().withPosition(DATASCIENTIST).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"    private TypicalApplications() {} // prevents instantiation","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"LMAOboxhack":19}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final Index INDEX_FIRST_POSITION \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final Index INDEX_SECOND_POSITION \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final Index INDEX_THIRD_POSITION \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Harry-Gao-H":4,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPositions.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_DATAENGINEER;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_DATASCIENTIST;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_SOFTWAREARCHITECT;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_DATAENGINEER;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_DATASCIENTIST;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_SOFTWAREARCHITECT;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.PositionBook;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"public class TypicalPositions {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final Position DATAENGINEER \u003d new PositionBuilder().withTitle(VALID_TITLE_DATAENGINEER)","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"            .withDescription(VALID_DESCRIPTION_DATAENGINEER).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final Position DATASCIENTIST \u003d new PositionBuilder().withTitle(VALID_TITLE_DATASCIENTIST)","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"            .withDescription(VALID_DESCRIPTION_DATASCIENTIST).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final Position SOFTWAREARCHITECT \u003d new PositionBuilder().withTitle(VALID_TITLE_SOFTWAREARCHITECT)","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"            .withDescription(VALID_DESCRIPTION_SOFTWAREARCHITECT).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"    private TypicalPositions() {} // prevents instantiation","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"    public static PositionBook getTypicalPositionBook() {","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"        PositionBook pb \u003d new PositionBook();","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"        for (Position position : getTypicalPositions()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"            pb.addPosition(position);","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"        return pb;","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"    public static List\u003cPosition\u003e getTypicalPositions() {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(DATAENGINEER, DATASCIENTIST));","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Harry-Gao-H":47}}]
